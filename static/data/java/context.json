[{"word":"0F","context":[["GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);",7012],["GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);",7012],["GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);",7012],["GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);",7012],["GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);",2487],["GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);",2487],["GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);",2487],["GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);",2487],["return 0.0F;",2304],["return 1.0F;",1441]],"useCount":374475},{"word":"0f","context":[["return 0.0f;",5890],["return 1.0f;",3322],["return 0f;",3037],["0.0f,",1505],["1.0f,  0.6523f, 0.0f, 1.0f,",1008],["1.0f,  0.6523f, 0.0f, 1.0f,",1008],["1.0f,  0.6523f, 0.0f, 1.0f,",1008],["return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,",814],["return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,",814],["g.transform(new AffineTransform(1.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f));",789]],"useCount":400699},{"word":"0x00","context":[["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",5456],["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",5456],["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",5456],["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",5456],["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",5456],["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",5456],["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",5456],["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",5456],["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",5456],["0x00 ,",6817]],"useCount":357482},{"word":"1L","context":[["long l2 = 1L << (curChar & 077);",2379],["long l = 1L << curChar;",2402],["assertHitCount(searchResponse, 1L);",2626],["return -1L;",3248],["static final long serialVersionUID = 1L;",3286],["private static final long serialVersionUID = -1L;",3599],["1L,",5094],["private static final long serialVersionUID = 1L;",566114],["long l = 1L << (curChar & 077);",2380],["private final static long serialVersionUID = 1L;",2244]],"useCount":723254},{"word":"A","context":[["*            A key string.",6082],["*   Codenvy, S.A. - initial API and implementation",17145],["* @return A string representation of this object.",20641],["A. FernÃ¡ndez (alberto.fernandez@ujaen.es)",9607],["* @return A boolean.",9299],["* @param key   A key string.",8077],["put(\"A\", \"B\");",7990],["case 'A':",6900],["* @return A reference to this updated object so that method calls can be chained",33793],["* @return A Java Future object containing the response from the",21364]],"useCount":1850387},{"word":"API","context":[["*   Codenvy, S.A. - initial API and implementation",17145],["Theme customizations available in newer API levels can go in",5506],["Base application theme, dependent on API level. This theme is replaced",5064],["API 14 theme customizations can go here.",5014],["*     Oracle - initial API and implementation from Oracle TopLink",19029],["All customizations that are NOT specific to a particular API-level can go here.",4961],["API 11 theme customizations can go here.",4882],["Base application theme for API 11+. This theme completely replaces",4654],["AppBaseTheme from res/values/styles.xml on API 11+ devices.",4653],["*     IBM Corporation - initial API and implementation",31115]],"useCount":528407},{"word":"ActionEvent","context":[["public void actionPerformed(ActionEvent e) {",187882],["import javafx.event.ActionEvent;",9021],["public void actionPerformed(ActionEvent ae) {",10162],["public void actionPerformed(final ActionEvent e) {",10303],["public void actionPerformed(ActionEvent evt) {",12259],["public void actionPerformed(ActionEvent event) {",13022],["public void actionPerformed(ActionEvent arg0) {",21059],["public void actionPerformed(ActionEvent e)",23385],["public void actionPerformed(java.awt.event.ActionEvent evt) {",112800],["import java.awt.event.ActionEvent;",118625]],"useCount":675079},{"word":"Activity","context":[["import android.app.Activity;",217133],["public void onAttach(Activity activity) {",14423],["public class MainActivity extends Activity {",13554],["if (resultCode == Activity.RESULT_OK) {",5198],["private Activity activity;",5196],["private Activity mActivity;",3401],["Activity activity = getActivity();",3210],["final Activity activity = getActivity();",2248],["private final Activity activity;",2138],["public Activity getActivity() {",1293]],"useCount":483242},{"word":"Add","context":[["/** Add a value to property popularityScore. */",1791],["// TODO: Add your conditions here.",6913],["* Add order-by as descend. <br>",3133],["* Add order-by as ascend. <br>",3128],["// Add listeners",2980],["/** Add a value to property mainEntityOfPage. */",2388],["/** Add a value to property image. */",2388],["* Add a value to property.",1791],["/** Add a value to property detailedDescription. */",1791],["/** Add a value to property potentialAction. */",1791]],"useCount":324407},{"word":"An","context":[["* An Extensible Java CBIR Library. In proceedings of the 16th ACM International",1560],["module.  An independent module is a module which is not derived from",20690],["JPC: An x86 PC Hardware Emulator for a pure Java Virtual Machine",12134],["* <p>An ObjectFactory allows you to programatically",4026],["fail(\"An exception must be raised\");",3106],["* @return An object which is the value.",1732],["* This file is part of SeedStack, An enterprise-oriented full development stack.",2071],["// An unexpected exception was thrown in user code while executing this test:",2185],["*  An active Oracle commercial licensing agreement for this product",2566],["* module.  An independent module is a module which is not derived from",3060]],"useCount":351466},{"word":"Application","context":[["SourceModel.Expr.Application.make(",5310],["/**  Application theme.",4909],["public class Application {",4680],["//Application-internal dependencies",4229],["import javafx.application.Application;",8601],["XOWA: the XOWA Offline Wiki Application",8974],["public class ApplicationTest extends ApplicationTestCase<Application> {",30350],["super(Application.class);",31024],["* This file is part of the Open Web Application Security Project (OWASP)",31744],["import android.app.Application;",50804]],"useCount":350706},{"word":"ArrayList","context":[["childrenElements.add(new DOMElement(\"#text\", \"\", new ArrayList<String>(Arrays.asList(\"\"))));",26221],["java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();",16151],["domainObjectList = new java.util.ArrayList();",7273],["return new ArrayList<>();",8453],["import java.util.ArrayList;",1724117],["java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();",16151],["protected ArrayList getTypedCollection()",11626],["List<String> list = new ArrayList<String>();",11526],["List list = new ArrayList();",11035],["List<String> result = new ArrayList<String>();",8547]],"useCount":3974554},{"word":"Arrays","context":[["Arrays.sort(array);",1778],["childrenElements.add(new DOMElement(\"#text\", \"\", new ArrayList<String>(Arrays.asList(\"\"))));",26221],["import static java.util.Arrays.asList;",17294],["Arrays.asList(",11690],["return Arrays.asList(",4744],["childrenElements.add(new DOMElement(\"DIV\", \"\", new ArrayList<String>(Arrays.asList(\"\"))));",4162],["return Arrays.asList(new Object[][]{",2671],["return Arrays.asList(new Object[][] {",2055],["import java.util.Arrays;",511452],["parentElement = new DOMElement(\"HEAD\", \"\", new ArrayList<String>(Arrays.asList(\"\")));",2028]],"useCount":1114927},{"word":"Assert","context":[["import static org.junit.Assert.assertEquals;",235826],["import static org.junit.Assert.*;",159718],["import static org.junit.Assert.assertFalse;",68429],["import static org.junit.Assert.assertThat;",63342],["import static org.junit.Assert.assertNull;",40228],["import junit.framework.Assert;",40480],["import static org.junit.Assert.fail;",59374],["import static org.junit.Assert.assertNotNull;",71184],["import static org.junit.Assert.assertTrue;",145713],["import org.junit.Assert;",153924]],"useCount":2447337},{"word":"Auto","context":[["* Auto generated getter method",11694],["//\t\t\t// TODO Auto-generated catch block",1951],["// Auto-generated method stub",1481],["* Auto generated method signature",1362],["//\t\t// TODO Auto-generated method stub",2367],["// TODO: Auto-generated Javadoc",10500],["* Auto generated setter method",11693],["// TODO Auto-generated constructor stub",46663],["// TODO Auto-generated catch block",167039],["// TODO Auto-generated method stub",476306]],"useCount":764331},{"word":"Autowired","context":[["// @Autowired",331],["@Autowired(required=true)",733],["//@Autowired",386],["@Autowired(required=false)",722],["import org.springframework.beans.factory.annotation.Autowired;",196694],["@Autowired(required = false)",4662],["@Autowired(required = true)",3259],["//\t@Autowired",957],["//    @Autowired",766],["@Autowired",370768]],"useCount":588276},{"word":"B","context":[["case 'B':",8712],["(byte)'A', (byte)'B', (byte)'C', (byte)'D', (byte)'E', (byte)'F', (byte)'G',",1212],["return B;",1313],["char switchTarget = guess.charAt(1); // condition 'B', which is safe",1426],["* <P><B>Note:</B> This stream object can either be a standard",1597],["* <P><B>Note:</B> This stream object can either be a standard",1597],["* <P><B>Note:</B> Consult your JDBC driver documentation to determine if",1799],["* <P><B>Note:</B> Consult your JDBC driver documentation to determine if",1799],["put(\"A\", \"B\");",7990],["return (B) this;",8631]],"useCount":391690},{"word":"Before","context":[["//\t@Before",424],["import cucumber.api.java.Before;",473],["@Before",319000],["@Before public void setUp() {",2471],["@Before public void setUp() throws Exception {",1161],["@Before public void setup() {",926],["import org.aspectj.lang.annotation.Before;",855],["//    @Before",604],["//import org.junit.Before;",576],["import org.junit.Before;",315191]],"useCount":665807},{"word":"BigDecimal","context":[["*     {@link BigDecimal }",9852],["public BigDecimal getAmount() {",2268],["return BigDecimal.ZERO;",1815],["public BigDecimal getPrice() {",1720],["private BigDecimal amount;",1478],["public BigDecimal getValue() {",1405],["BigDecimal accessLevel = BigDecimal.valueOf(3);",1197],["BigDecimal accessLevel = BigDecimal.valueOf(3);",1197],["public void setAmount(BigDecimal amount) {",1170],["import java.math.BigDecimal;",108053]],"useCount":376722},{"word":"BigInteger","context":[["assertEquals(BigInteger.ZERO, BigInteger.valueOf(interpreter.getMemorySize()));",845],["return BigInteger.ZERO;",800],["import java.math.BigInteger;",75077],["*     {@link BigInteger }",18162],["BigInteger aNumber = new BigInteger(aSign, aBytes);",1503],["BigInteger aNumber = new BigInteger(aSign, aBytes);",1503],["BigInteger.ONE,",1409],["assertEquals(BigInteger.ZERO, wallet.getBalance());",880],["BigDecimal aNumber = new BigDecimal(new BigInteger(a), aScale);",854],["assertEquals(BigInteger.ZERO, BigInteger.valueOf(interpreter.getMemorySize()));",845]],"useCount":346048},{"word":"Boolean","context":[["setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));",3899],["a=0;//     #v0=(Boolean);",6544],["return ((Boolean)oo).booleanValue();",6666],["if (oo instanceof Boolean)",6672],["public Boolean call() throws Exception {",6811],["_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);",9733],["_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);",9733],["return Boolean.TRUE;",15365],["return Boolean.FALSE;",18556],["*     {@link Boolean }",32458]],"useCount":1032780},{"word":"BufferedReader","context":[["import java.io.BufferedReader;",161838],["BufferedReader reader = new BufferedReader(new InputStreamReader(in));",2619],["BufferedReader br = new BufferedReader(isr);",2935],["BufferedReader reader = null;",10487],["BufferedReader br = new BufferedReader(isr);",2935],["BufferedReader br = new BufferedReader(new InputStreamReader(System.in));",3088],["BufferedReader br = new BufferedReader(new InputStreamReader(System.in));",3088],["BufferedReader in = null;",4639],["BufferedReader reader = new BufferedReader(new InputStreamReader(in));",2619],["BufferedReader br = null;",8421]],"useCount":473434},{"word":"Build","context":[["if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {",6180],["import android.os.Build.VERSION;",4130],["if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {",5327],["if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {",5327],["if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {",6180],["* To work on unit tests, switch the Test Artifact in the Build Variants view.",13652],["@TargetApi(Build.VERSION_CODES.LOLLIPOP)",7207],["@TargetApi(Build.VERSION_CODES.HONEYCOMB)",10337],["import android.os.Build;",71291],["@TargetApi(Build.VERSION_CODES.JELLY_BEAN)",3810]],"useCount":349019},{"word":"Builder","context":[["return new Builder();",24187],["private Builder() {",23637],["public Builder clear() {",18544],["public static final class Builder extends",18489],["public Builder mergeFrom(",18373],["public Builder newBuilderForType() { return newBuilder(); }",17685],["public Builder mergeFrom(com.google.protobuf.Message other) {",17434],["public Builder clone() {",16847],["Builder builder = new Builder(parent);",16243],["Builder builder = new Builder(parent);",16243]],"useCount":1383022},{"word":"Bundle","context":[["Bundle savedInstanceState) {",37542],["protected void onCreate(Bundle savedInstanceState) {",174571],["import android.os.Bundle;",413597],["public void onActivityCreated(Bundle savedInstanceState) {",15432],["Bundle bundle = new Bundle();",18590],["Bundle bundle = new Bundle();",18590],["Bundle args = new Bundle();",24400],["Bundle args = new Bundle();",24400],["public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {",26617],["public void onCreate(Bundle savedInstanceState) {",83187]],"useCount":1248283},{"word":"Button","context":[["import android.widget.Button;",91748],["import org.eclipse.swt.widgets.Button;",15152],["import javafx.scene.control.Button;",9666],["import com.vaadin.ui.Button;",6843],["import com.google.gwt.user.client.ui.Button;",5829],["import com.vaadin.ui.Button.ClickEvent;",4654],["// Button Controls",3726],["public Button btnCancel()",2486],["import com.vaadin.ui.Button.ClickListener;",2338],["public Button btnSave()",1948]],"useCount":362618},{"word":"ByteArrayOutputStream","context":[["ByteArrayOutputStream buffer = new ByteArrayOutputStream();",4203],["ByteArrayOutputStream out = new ByteArrayOutputStream();",16314],["ByteArrayOutputStream os = new ByteArrayOutputStream();",5347],["ByteArrayOutputStream baos = new ByteArrayOutputStream();",29392],["ByteArrayOutputStream os = new ByteArrayOutputStream();",5347],["ByteArrayOutputStream bos = new ByteArrayOutputStream();",10910],["ByteArrayOutputStream bos = new ByteArrayOutputStream();",10910],["ByteArrayOutputStream out = new ByteArrayOutputStream();",16314],["ByteArrayOutputStream baos = new ByteArrayOutputStream();",29392],["import java.io.ByteArrayOutputStream;",114846]],"useCount":425594},{"word":"ByteBuffer","context":[["private final ByteBuffer buffer;",885],["import java.nio.ByteBuffer;",138628],["public int read(ByteBuffer dst) throws IOException {",665],["public int write(ByteBuffer src) throws IOException {",672],["* @see java.nio.ByteBuffer",678],["ByteBuffer buffer;",745],["bb = ByteBuffer.wrap(response, 8, response.length - 8);",859],["@Override public boolean writeTo(ByteBuffer buf, MessageWriter writer) {",938],["@Override public boolean readFrom(ByteBuffer buf, MessageReader reader) {",938],["private ByteBuffer buffer;",1012]],"useCount":474523},{"word":"C","context":[["// Simple case statement that assigns param to bar on conditions 'A' or 'C'",1890],["* (C) 2007-2012 Alibaba Group Holding Limited.",1261],["*    (C) 2000-2014, PlanetMayo Ltd",2463],["case 'C':",9645],["* (C) 2005-2006,",2849],["Iterator<Tuple> iter = pigServer.openIterator(\"C\");",1444],["* (C) HydroloGIS - www.hydrologis.com",1452],["* <p>// C++ code:</p>",1624],["return C;",1880],["* @param <C>",2152]],"useCount":452457},{"word":"Calendar","context":[["Calendar now = Calendar.getInstance();",3227],["cal.set(Calendar.SECOND, 0);",3548],["cal.set(Calendar.MILLISECOND, 0);",3982],["Calendar c = Calendar.getInstance();",10591],["import java.util.Calendar;",109374],["Calendar c = Calendar.getInstance();",10591],["Calendar calendar = Calendar.getInstance();",18559],["Calendar calendar = Calendar.getInstance();",18559],["Calendar cal = Calendar.getInstance();",24233],["Calendar cal = Calendar.getInstance();",24233]],"useCount":676979},{"word":"Class","context":[["public Class getDutyClass() {",3702],["java.lang.Class cls;",3649],["public Class getRealDomainClass()",3793],["Class clz = Class.forName(className);",3812],["Class clz = Class.forName(className);",3812],["public final Class getDomainInterface() throws ClassNotFoundException",3899],["Class.forName(\"com.mysql.jdbc.Driver\");",4757],["* Java Class Version: 6 (50.0)",6474],["//- Class/Member Variables -/",7524],["java.lang.Class _javaType,",67541]],"useCount":1328877},{"word":"Collection","context":[["protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {",6735],["if (value instanceof Collection) {",2036],["public static Collection<Object[]> data() {",5070],["public boolean removeAll(Collection<?> c) {",3969],["protected Collection<Class<? extends Plugin>> nodePlugins() {",1881],["public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {",2709],["public boolean containsAll(Collection<?> c) {",3205],["public Collection<V> values() {",3739],["public boolean retainAll(Collection<?> c) {",3766],["import java.util.Collection;",504870]],"useCount":1168604},{"word":"Collections","context":[["return Collections.emptySet();",18282],["import java.util.Collections;",472955],["return Collections.emptyList();",71225],["metaDataMap = Collections.unmodifiableMap(tmpMap);",14703],["Collections.sort(list, new Comparator<Object>() {",10322],["return Collections.emptyMap();",10107],["Collections.sort(col, comparator);",8064],["return Collections.EMPTY_LIST;",7296],["Collections.sort(list);",6854],["java.util.Collections.emptyList();",5783]],"useCount":1052792},{"word":"Color","context":[["import org.eclipse.swt.graphics.Color;",8939],["public Color getColor() {",5292],["g.setColor(Color.white);",5623],["g.setColor(Color.BLACK);",7099],["import com.badlogic.gdx.graphics.Color;",8022],["import javafx.scene.paint.Color;",8944],["import java.awt.Color;",112744],["import android.graphics.Color;",59822],["ims.framework.utils.Color color = null;",9130],["g.setColor(Color.black);",10501]],"useCount":738259},{"word":"Column","context":[["/** Column name AD_Org_ID */",3352],["/** Column name AD_Client_ID */",3354],["@Column(name = \"id\")",5519],["@Column(nullable = false)",9873],["/** Column name UpdatedBy */",3343],["* <br>Virtual Column: false",13276],["/** Column name Updated */",3343],["/** Column name CreatedBy */",3339],["@Column",25477],["import javax.persistence.Column;",70719]],"useCount":478248},{"word":"Component","context":[["public Component getComponent() {",2496],["import dagger.Component;",2845],["public void paintIcon(Component c, Graphics g, int x, int y) {",2865],["@Component(immediate = true)",3089],["import com.vaadin.ui.Component;",4795],["import org.apache.wicket.Component;",6392],["import org.apache.felix.scr.annotations.Component;",6998],["import java.awt.Component;",52776],["@Component",64703],["import org.springframework.stereotype.Component;",68777]],"useCount":548285},{"word":"Configuration","context":[["else if (Configuration.doAutoCreate())",21771],["private Configuration conf;",6305],["public void onConfigurationChanged(Configuration newConfig) {",9461],["Configuration conf = new Configuration();",19039],["Configuration conf = new Configuration();",19039],["import android.content.res.Configuration;",21328],["if (Configuration.errorOnAutoCreate())",21771],["import org.springframework.context.annotation.Configuration;",37145],["@Configuration",49237],["import org.apache.hadoop.conf.Configuration;",69808]],"useCount":726143},{"word":"Connection","context":[["Connection conn = getConnection();",3638],["Connection conn = null;",24643],["Connection connection = null;",17679],["Connection con = null;",14201],["import java.sql.Connection;",93012],["private Connection connection;",6114],["import javax.jms.Connection;",5815],["Connection conn = DriverManager.getConnection(getUrl(), props);",4593],["ims.dto.Result reLoginResult = Connection.reLogin();",4158],["Connection conn;",3989]],"useCount":555122},{"word":"Constants","context":[["// Constants",15196],["public class Constants {",8353],["import org.osgi.framework.Constants;",4278],["import org.kuali.kra.infrastructure.Constants;",3481],["return mapping.findForward(Constants.MAPPING_BASIC);",3394],["import org.eclipse.jgit.lib.Constants;",2532],["public final class Constants {",2306],["public interface Constants {",1965],["// -- Constants --",2005],["if (Constants.DEBUG) {",2020]],"useCount":427747},{"word":"Constructor","context":[["import java.lang.reflect.Constructor;",36549],["/** Load Constructor */",4087],["// Constructor",25101],["/** Constructor. */",9602],["/** Constructor */",4143],["//                                                                         Constructor",4126],["* Default Constructor",3339],["/** Standard Constructor */",4090],["* Constructor",76931],["* Constructor.",91657]],"useCount":411268},{"word":"Context","context":[["public void onReceive(Context context, Intent intent) {",33729],["import android.content.Context;",497060],["private Context context;",31914],["private Context mContext;",29797],["import javax.ws.rs.core.Context;",14214],["private final Context context;",12116],["private final Context mContext;",11878],["@Context",9906],["import javax.naming.Context;",9466],["Context context;",8199]],"useCount":1575020},{"word":"Create","context":[["* Create the dialog.",1816],["* Create the application.",1928],["* Create the frame.",2618],["* Create an instance of {@link JAXBElement }{@code <}{@link StringItemType }{@code >}}",3030],["* Create the test case",5820],["/* Create and display the form */",6607],["* Create the domain object from the value object.",7273],["* Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}",22244],["* Create the ValueObject collection to hold the list of DomainObjects.",14546],["* Create the ValueObject collection to hold the set of DomainObjects.",14546]],"useCount":559265},{"word":"Creates","context":[["* Creates figure for this edit part.",1654],["* Creates a new instance.",16033],["* Creates an instance.",3704],["* Creates a new instance",1842],["* Creates an instance of the factory.",1545],["* Creates an instance of the model <b>Package</b>, registered with",1525],["* Creates the default factory implementation.",1512],["* Creates an instance of the switch.",1502],["* Creates a new instance of",3065],["* Creates a new scanner",1488]],"useCount":375424},{"word":"Criteria","context":[["oredCriteria = new ArrayList<Criteria>();",2034],["return (Criteria) this;",263514],["public void or(Criteria criteria) {",2036],["protected Criteria createCriteriaInternal() {",2036],["protected Criteria() {",2043],["public Criteria createCriteria() {",2067],["Criteria criteria = createCriteriaInternal();",4058],["Criteria criteria = new Criteria();",6309],["Criteria criteria = new Criteria();",6309],["import org.hibernate.Criteria;",7973]],"useCount":476306},{"word":"Date","context":[["import java.util.Date;",430980],["import java.sql.Date;",18734],["* @version $Revision$ $Date$",12506],["Date date = new Date();",12314],["Date date = new Date();",12314],["Date now = new Date();",12303],["Date now = new Date();",12303],["public Date getDate() {",9321],["* @version  $Revision$, $Date$",7571],["private Date date;",6948]],"useCount":1625079},{"word":"Deprecated","context":[["@Override @Deprecated",377],["//\t@Deprecated",457],["@java.lang.Deprecated",713],["@Deprecated",334053],["//    @Deprecated",867],["assertEquals( 1, map.get( TypeSystem.get( gw.lang.Deprecated.class) ).size() );",1012],["//@Deprecated",416],["@Deprecated // to be removed before 2.0",413],["} else if (\"Deprecated\".equals(attrName)) {",324],["@Deprecated()",412]],"useCount":361361},{"word":"Description","context":[["public void describeTo(Description description) {",7430],["* Description:",12372],["@Description(\"\")",36404],["<tr><th>Constant</th><th>Value</th><th>Description</th></tr>",42374],["<tr><th>Attribute</th><th>Description</th></tr>",54638],["* \t\tDescription manquante !",4817],["import org.hamcrest.Description;",7008],["import org.junit.runner.Description;",6478],["* <p>Description: </p>",5819],["* Description:<br>",5797]],"useCount":387185},{"word":"Document","context":[["Document doc = null;",4794],["import org.jdom.Document;",5431],["import org.w3c.dom.Document;",58229],["Document doc = new Document();",13236],["Document doc = new Document();",13236],["import org.apache.lucene.document.Document;",11358],["import org.jsoup.nodes.Document;",9334],["import com.intellij.openapi.editor.Document;",9075],["Document doc;",5827],["import org.dom4j.Document;",5687]],"useCount":431965},{"word":"Double","context":[["case Double:",1802],["return Double.NaN;",10826],["*     {@link Double }",7296],["double p = Double.NaN;",3961],["return Double.POSITIVE_INFINITY;",2794],["return Double.class;",2728],["return Double.NEGATIVE_INFINITY;",2263],["} else if (value instanceof Double) {",2208],["Double.NaN,",2022],["public Double getValue() {",1967]],"useCount":607779},{"word":"E","context":[["case E:",1788],["public boolean add(E e) {",2095],["public E get(int index) {",1953],["ICompilationUnit cu= pack1.createCompilationUnit(\"E.java\", buf.toString(), false, null);",2603],["case 'E':",3669],["public E next() {",4373],["/* Location:           E:\\Progs\\Dev\\Android\\Decompile\\apktool\\zssq\\zssq-dex2jar.jar",6352],["buf.append(\"public class E {\\n\");",7110],["public Iterator<E> iterator() {",5260],["* @param <E>",8236]],"useCount":583649},{"word":"Element","context":[["import org.jsoup.nodes.Element;",8039],["@Element",4488],["import org.jdom2.Element;",5482],["import javax.lang.model.element.Element;",5827],["import com.google.gwt.dom.client.Element;",7498],["org.dom4j.Element itemEl = (org.dom4j.Element)cl.get(i);",7586],["org.dom4j.Element itemEl = (org.dom4j.Element)cl.get(i);",7586],["import org.dom4j.Element;",9030],["import org.jdom.Element;",15758],["import org.w3c.dom.Element;",65613]],"useCount":583451},{"word":"Entity","context":[["*       \"Legal Entity\" shall mean the union of the acting entity and all",2735],["*       \"Contributor\" shall mean Licensor and any individual or Legal Entity",2735],["import org.bukkit.entity.Entity;",6508],["import javax.ws.rs.client.Entity;",3549],["*       or by an individual or Legal Entity authorized to submit on behalf of",2735],["import net.minecraft.entity.Entity;",29474],["import javax.persistence.Entity;",94783],["*       \"You\" (or \"Your\") shall mean an individual or Legal Entity",2735],["throw new DaoException(\"Entity is detached from DAO context\");",2586],["@Entity",114405]],"useCount":504878},{"word":"Entry","context":[["for (Entry entry : entries) {",1292],["import java.util.Map.Entry;",114888],["Entry entry;",2234],["Map.Entry entry = (Map.Entry) it.next();",1792],["Map.Entry entry = (Map.Entry) it.next();",1792],["if (!(o instanceof Map.Entry))",1571],["Map.Entry entry = (Map.Entry) iter.next();",1444],["Map.Entry entry = (Map.Entry) iter.next();",1444],["if (!(o instanceof Map.Entry)) return false;",1422],["Map.Entry<String, Object> entry = iterator.next();",1382]],"useCount":658563},{"word":"Error","context":[["\"Error: could not match input\",",1714],["throw new Error(message);",1798],["/* Error */",1989],["\"Error\",",2013],["* @exception   java.io.IOException  if any I/O-Error occurs",2853],["throw new Error();",4493],["} catch (Error e) {",5660],["{if (true) throw (Error)jjte000;}",5674],["throw new Error(e);",7147],["throw new Error(\"Missing return statement in function\");",20076]],"useCount":483257},{"word":"Exception","context":[["catch (Exception e) {",164195],["throws Exception {",183095],["throws Exception",159902],["} catch(Exception e) {",56011],["catch (Exception e)",150266],["public void setUp() throws Exception {",117044],["public static void main(String[] args) throws Exception {",77841],["} catch (Exception ex) {",245128],["* @throws Exception",257752],["} catch (Exception e) {",1461875]],"useCount":6431665},{"word":"Field","context":[["awsRequestMetrics.startEvent(Field.ClientExecuteTime);",13706],["if (fields == null) throw new IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");",14842],["import java.lang.reflect.Field;",72663],["awsRequestMetrics.endEvent(Field.RequestMarshallTime);",13651],["awsRequestMetrics.startEvent(Field.RequestMarshallTime);",13651],["import org.apache.lucene.document.Field;",9237],["* Field _identity.",3422],["@Field",5849],["for (Field field : fields) {",7635],["/** Field description */",7740]],"useCount":526862},{"word":"File","context":[["for (File file : files) {",12874],["import java.io.File;",732150],["* To change this template use File | Settings | File Templates.",27048],["* To change this template use File | Settings | File Templates.",27048],["File file = new File(path);",9126],["File file = new File(path);",9126],["private File file;",8591],["//To change body of implemented methods use File | Settings | File Templates.",7552],["public boolean accept(File dir, String name) {",9700],["//To change body of implemented methods use File | Settings | File Templates.",7552]],"useCount":2424604},{"word":"FileNotFoundException","context":[["catch (FileNotFoundException e) {",4353],["throws FileNotFoundException, IOException {",2800],["} catch (FileNotFoundException ex) {",9715],["* @throws FileNotFoundException",12162],["} catch (FileNotFoundException e) {",68483],["throws FileNotFoundException {",3617],["import java.io.FileNotFoundException;",129574],["} catch (FileNotFoundException fnfe) {",3792],["catch (FileNotFoundException e)",4510],["} catch (FileNotFoundException e1) {",3207]],"useCount":328290},{"word":"For","context":[["* For example, to add a new item, do as follows:",88109],["* For more information contact:",27227],["* Benchmark Project. For details, please see",31139],["* For further information about OpenCms, please see the",9501],["* For example:",9306],["* For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html",7513],["* For more information, contact:",4850],["/** For serialization. */",4764],["*  * For more information: http://www.orientechnologies.com",4337],["*             attempting to make the request or handle the response.  For example",35090]],"useCount":732155},{"word":"GET","context":[["import retrofit.http.GET;",3309],["method = RequestMethod.GET,",3446],["* Handles the HTTP <code>GET</code> method.",3661],["connection.setRequestMethod(\"GET\");",4234],["@RequestMapping(method = RequestMethod.GET)",6198],["import javax.ws.rs.GET;",33046],["@GET",107723],["import retrofit2.http.GET;",2787],["conn.setRequestMethod(\"GET\");",2686],["case GET:",2548]],"useCount":319843},{"word":"Generated","context":[["@Generated(value = \"com.sun.tools.xjc.Driver\", date = \"2015-10-25T05:29:34+06:00\", comments = \"JAXB RI v2.2.11\")",12626],["// Generated by the protocol buffer compiler.  DO NOT EDIT!",5110],["@Generated(value = \"com.sun.tools.xjc.Driver\", date = \"2014-09-19T03:10:02-06:00\", comment = \"JAXB RI v2.2.6\")",11865],["import javax.annotation.Generated;",19031],["// Generated from form domain interface definition",19346],["// <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents",29857],["@javax.annotation.Generated(\"lombok\")",4477],["/** Generated Model - DO NOT CHANGE */",4080],["@Generated(value = \"com.sun.tools.xjc.Driver\", date = \"2014-09-19T03:09:21-06:00\", comment = \"JAXB RI v2.2.6\")",4065],["// Generated from form domain impl",3928]],"useCount":317702},{"word":"Get","context":[["/** Get Organization.",2936],["/** Get Updated By.",2881],["/** Get Updated.",2883],["/** Get Client.",2884],["/** Get Name.",3354],["import org.apache.hadoop.hbase.client.Get;",3455],["/** Get Description.",3946],["* Get Custom Deserializer",25283],["* Get Custom Serializer",25237],["* Get - optional<br>",4179]],"useCount":688369},{"word":"Gets","context":[["* Gets the value of the name property.",10324],["* Gets the value of the value property.",10840],["* Gets the value of the id property.",12545],["* Gets the value of the type property.",5219],["* Gets the value of the rval property.",4848],["* Gets the value of the description property.",4645],["* Gets the value of the status property.",4006],["* Gets the value of the reason property.",3919],["* Gets the value of the return property.",3890],["* Gets the value of the content property.",3779]],"useCount":765264},{"word":"GridBagConstraints","context":[["gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;",6183],["c.fill = GridBagConstraints.HORIZONTAL;",6436],["GridBagConstraints c = new GridBagConstraints();",7281],["GridBagConstraints c = new GridBagConstraints();",7281],["gbc = new GridBagConstraints();",8030],["gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;",9453],["gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;",9965],["gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;",15472],["import java.awt.GridBagConstraints;",20938],["gridBagConstraints = new java.awt.GridBagConstraints();",48712]],"useCount":398078},{"word":"GroupLayout","context":[[".addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))",13750],["layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)",42154],[".addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)",28627],[".addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)",23703],["javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());",15125],["javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());",15125],[".addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()",11186],["jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)",11098],[".addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)",8565],[".addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)",7788]],"useCount":453391},{"word":"HashMap","context":[["import java.util.HashMap;",857091],["private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();",15136],["Map<String, Object> params = new HashMap<String, Object>();",14318],["private static java.util.HashMap _table_ = new java.util.HashMap();",9020],["private static java.util.HashMap _table_ = new java.util.HashMap();",9020],["Map<String, Object> map = new HashMap<String, Object>();",8967],["Map<String, String> params = new HashMap<String, String>();",8533],["Map<String, String> map = new HashMap<String, String>();",8508],["Map map = new HashMap();",5082],["private Map<QName, String> otherAttributes = new HashMap<QName, String>();",3903]],"useCount":1808107},{"word":"HashSet","context":[["Set<String> result = new HashSet<String>();",1933],["Set<String> set = new HashSet<String>();",2138],["ports = new java.util.HashSet();",2166],["private java.util.HashSet ports = null;",2176],["import com.intellij.util.containers.HashSet;",2325],["set = new java.util.HashSet();",3812],["domainObjectSet = new java.util.HashSet();",7273],["java.util.Set newSet = new java.util.HashSet();",11066],["java.util.Set removedSet = new java.util.HashSet();",11066],["import java.util.HashSet;",353492]],"useCount":710240},{"word":"HttpServletRequest","context":[["protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",7040],["import javax.servlet.http.HttpServletRequest;",226484],["public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",32278],["public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",32240],["HttpServletRequest request,",10289],["HttpServletRequest request, HttpServletResponse response)",8427],["protected void doGet(HttpServletRequest request, HttpServletResponse response)",6541],["protected void doPost(HttpServletRequest request, HttpServletResponse response)",6220],["protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",5891],["HttpServletRequest request, HttpServletResponse response) {",4174]],"useCount":576454},{"word":"HttpServletResponse","context":[["import javax.servlet.http.HttpServletResponse;",180588],["public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",32278],["public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",32240],["HttpServletResponse response) throws Exception {",11690],["HttpServletResponse response) {",8939],["HttpServletRequest request, HttpServletResponse response)",8427],["protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",7040],["protected void doGet(HttpServletRequest request, HttpServletResponse response)",6541],["protected void doPost(HttpServletRequest request, HttpServletResponse response)",6220],["protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",5891]],"useCount":527105},{"word":"I","context":[["* @throws IOException I/O exception",3594],["* @throws IOException Signals that an I/O exception has occurred.",5630],["case 'I':",4938],["* @throws IOException if an I/O error occurs.",4002],["* @throws IOException if an I/O error occurs",22012],["* @exception  IOException  if an I/O error occurs.",3514],["* @throws IOException  if there is an I/O error.",3310],["* @throws IOException Signals that an I/O exception of some sort has",3283],["* failed or interrupted I/O operations.",3282],["* @throws IOException Signals an I/O error.",3023]],"useCount":432731},{"word":"ID","context":[["* @param groupId the group ID",11144],["case ID:",4546],["* @param beanIdentifier the Spring bean ID for this bean",4557],["* Returns the Spring bean ID for this bean.",4563],["* @return the Spring bean ID for this bean",4563],["* Sets the Spring bean ID for this bean.",4563],["@XmlSchemaType(name = \"ID\")",4730],["public static final String ID = \"id\";",5997],["* @param companyId the company ID",8107],["return ID;",9315]],"useCount":674518},{"word":"IOException","context":[["import java.io.IOException;",1626247],["} catch (IOException e) {",808769],["* @throws IOException",358011],["throws IOException {",275767],["throws java.io.IOException {",156112],["throws IOException",137817],["} catch (IOException ex) {",112234],["} catch (IOException ioe) {",70064],["catch (IOException e) {",63424],["catch (IOException e)",62732]],"useCount":7044719},{"word":"Id","context":[["// $Id$",7572],["*  $Id$",5452],["import javax.persistence.Id;",69782],["@Id",93777],["* $Id$",62349],["* @version $Id$",61301],["/** RegularExpression Id. */",29494],["* $Id:$",10960],["* @version $Id: $",10936],["/* $Id$ */",8347]],"useCount":524546},{"word":"If","context":[["// If this is a recordedInError record, and the domainObject",7273],["// If this is not a recordedInError record, and the domainObject",7273],["/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.",7452],["*             If an error response is returned by AmazonEC2 indicating",9141],["// If it gets here its bad",17190],["obligated to do so.  If you do not wish to do so, delete this",20629],["* @throws NullPointerException If given argument is {@code null}",21071],["* along with OpenNMS(R).  If not, see:",27188],["*             If any internal errors are encountered inside the client while",35112],["* @throws Exception If failed.",27998]],"useCount":2018648},{"word":"IllegalArgumentException","context":[["} catch (IllegalArgumentException e) {",106816],["throw new IllegalArgumentException(",102541],["throw new IllegalArgumentException();",92146],["* @throws IllegalArgumentException",60779],["@Test(expected = IllegalArgumentException.class)",58087],["} catch (IllegalArgumentException ex) {",19600],["throws java.lang.IllegalArgumentException {",18253],["throws IllegalArgumentException {",15852],["if (fields == null) throw new IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");",14842],["} catch (IllegalArgumentException iae) {",12810]],"useCount":1508662},{"word":"IllegalStateException","context":[["throw new IllegalStateException();",75008],["throw new IllegalStateException(",54806],["} catch (IllegalStateException e) {",29688],["throw new IllegalStateException(e);",19274],["* @throws IllegalStateException",16148],["@Test(expected = IllegalStateException.class)",15839],["throw new IllegalStateException(ex.toString());",14015],["throws IllegalStateException",13742],["throws IllegalStateException, IllegalArgumentException",12529],["throw new IllegalStateException(\"SwiftMessage was not initialized\");",4993]],"useCount":578704},{"word":"ImmutableList","context":[["ImmutableList.Builder<String> builder = ImmutableList.builder();",1025],["ImmutableList.of(",9845],["return ImmutableList.of();",9563],["return ImmutableList.of(",2228],["ImmutableList.of(),",1941],["ImmutableList.<String>of(),",1786],["public ImmutableList<Step> getBuildSteps(",1496],["ImmutableList.<String>of());",1256],["ImmutableList.Builder<String> builder = ImmutableList.builder();",1025],["import com.google.common.collect.ImmutableList;",90682]],"useCount":342983},{"word":"Inc","context":[["* [Java is a trademark or registered trademark of Sun Microsystems, Inc.",7815],["// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",8534],["* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307",9294],["* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.",9513],["* ComPiere, Inc., 2620 Augustine Dr. #245, Santa Clara, CA 95054, USA        *",10742],["Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",17427],["* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.",23396],["* OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.",27337],["* Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,",29459],["* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",39521]],"useCount":383444},{"word":"Inject","context":[["@Inject",322079],["import javax.inject.Inject;",122720],["import com.google.inject.Inject;",57368],["import org.elasticsearch.common.inject.Inject;",14889],["@javax.inject.Inject",2279],["@Inject(optional = true)",1799],["import org.apache.tapestry5.ioc.annotations.Inject;",1534],["import org.unidal.lookup.annotation.Inject;",1435],["\"import javax.inject.Inject;\",",1324],["import org.spongepowered.asm.mixin.injection.Inject;",1191]],"useCount":552335},{"word":"InputStream","context":[["public InputStream getInputStream() {",3490],["java.io.InputStream input,",36814],["InputStream is = null;",17896],["InputStream in = null;",12844],["InputStream inputStream = null;",6994],["public InputStream getInputStream() throws IOException {",4944],["InputStream stream = null;",4141],["InputStream is;",3820],["InputStream input = null;",3531],["import java.io.InputStream;",382690]],"useCount":888228},{"word":"Integer","context":[["return Integer.parseInt(value);",4668],["a=0;//     #v1=(Integer);",4806],["public void setId(Integer value)",7297],["a=0;//     #v0=(Integer);",7434],["public Integer getId()",8507],["return Integer.MAX_VALUE;",8838],["public void setId(Integer id) {",20647],["*     {@link Integer }",23560],["public Integer getId() {",25412],["private Integer id;",30472]],"useCount":2691232},{"word":"Intent","context":[["Intent intent = new Intent(Intent.ACTION_VIEW);",5461],["public int onStartCommand(Intent intent, int flags, int startId) {",8443],["public void onActivityResult(int requestCode, int resultCode, Intent data) {",9514],["public IBinder onBind(Intent intent) {",12452],["Intent intent = getIntent();",14576],["protected void onActivityResult(int requestCode, int resultCode, Intent data) {",16430],["Intent intent = new Intent();",22909],["Intent intent = new Intent();",22909],["import android.content.Intent;",282932],["public void onReceive(Context context, Intent intent) {",33729]],"useCount":1064999},{"word":"InterruptedException","context":[["* @throws InterruptedException",34862],["} catch (InterruptedException e) {",210672],["} catch (InterruptedException ex) {",24386],["} catch (InterruptedException ie) {",21456],["throws IOException, InterruptedException {",20517],["catch (InterruptedException e) {",14987],["catch (InterruptedException e)",14556],["throws InterruptedException {",14440],["InterruptedException {",13220],["throw new InterruptedException();",6832]],"useCount":707258},{"word":"It","context":[["* It is equivalent to yytext().charAt(pos), but faster",1713],["* It contains accessors for the meta objects to represent",1450],["* aapt tool from the resource data it found.  It",16709],["* It test the number of wanted objet returned by the methods, and if any object really exist in the original list.",7363],["* It is intended to be used when one called to an Assembler is made.",7273],["// DO NOT modify this class. It was generated from LeafRegionEntry.cpp",6912],["*   for this attribute. It will be used to determine whether to include this field",4991],["// This file was generated by RobotBuilder. It contains sections of",4004],["// this method is not needed. It is here for compatibility purpose only.",3562],["* It provides a create method for each non-abstract class of the model.",1457]],"useCount":428968},{"word":"Item","context":[["public class Item {",1989],["import net.minecraft.item.Item;",44298],["import org.openhab.core.items.Item;",2999],["for (Item item : items) {",2086],["Item item = new Item();",2006],["Item item = new Item();",2006],["public Item getTabIconItem() {",1922],["import com.vaadin.data.Item;",1885],["private Item item;",1674],["import org.apache.wicket.markup.repeater.Item;",1583]],"useCount":349939},{"word":"ItemStack","context":[["import net.minecraft.item.ItemStack;",92788],["import org.bukkit.inventory.ItemStack;",17160],["ItemStack itemstack = null;",2050],["import org.spongepowered.api.item.inventory.ItemStack;",1352],["ItemStack itemstack;",1278],["ItemStack itemstack1 = slot.getStack();",1211],["public String getUnlocalizedName(ItemStack itemStack)",1119],["ItemStack mainhandItem, ItemStack offhandItem) {",1020],["ItemStack mainhandItem, ItemStack offhandItem) {",1020],["public boolean handleRenderType(ItemStack item, ItemRenderType type) {",998]],"useCount":368932},{"word":"Iterator","context":[["public java.util.Iterator getPorts() {",2173],["java.util.Iterator iter = beans.iterator();",11403],["public Iterator<String> iterator() {",3187],["public Iterator iterator() {",3709],["java.util.Iterator iter = set.iterator();",3793],["public Iterator<E> iterator() {",5260],["public Iterator<T> iterator() {",7036],["java.util.Iterator iter = domainObjectSet.iterator();",7273],["java.util.Iterator iterator = domainObjectSet.iterator();",7273],["import java.util.Iterator;",468926]],"useCount":1030358},{"word":"JLabel","context":[["private javax.swing.JLabel jLabel4;",6700],["import javax.swing.JLabel;",68024],["jLabel1 = new javax.swing.JLabel();",14414],["private javax.swing.JLabel jLabel1;",14269],["jLabel2 = new javax.swing.JLabel();",10943],["private javax.swing.JLabel jLabel2;",10842],["jLabel3 = new javax.swing.JLabel();",8444],["private javax.swing.JLabel jLabel3;",8377],["jLabel4 = new javax.swing.JLabel();",6768],["jLabel5 = new javax.swing.JLabel();",5477]],"useCount":362888},{"word":"JPanel","context":[["jPanel3 = new javax.swing.JPanel();",3513],["import javax.swing.JPanel;",93720],["private JPanel contentPane;",3902],["* @return javax.swing.JPanel",4585],["private javax.swing.JPanel jPanel2;",5431],["jPanel2 = new javax.swing.JPanel();",5474],["private javax.swing.JPanel jPanel1;",9234],["jPanel1 = new javax.swing.JPanel();",9254],["JPanel panel = new JPanel();",10013],["JPanel panel = new JPanel();",10013]],"useCount":472625},{"word":"JSONException","context":[["} catch (JSONException e) {",94311],["import org.json.JSONException;",75304],["* @throws JSONException",29992],["throws JSONException {",7174],["} catch (JSONException ex) {",5004],["import org.codehaus.jettison.json.JSONException;",2994],["throw new JSONException(e);",2790],["catch (JSONException e) {",2785],["} catch (JSONException e1) {",2091],["catch (JSONException e)",2720]],"useCount":368024},{"word":"JSONObject","context":[["JSONObject json = new JSONObject();",8920],["import org.json.JSONObject;",99361],["JSONObject obj = new JSONObject();",5423],["JSONObject obj = new JSONObject();",5423],["JSONObject jsonObject = new JSONObject();",5197],["JSONObject jsonObject = new JSONObject();",5197],["import com.alibaba.fastjson.JSONObject;",3807],["JSONObject json = new JSONObject();",8920],["import net.sf.json.JSONObject;",10229],["import org.json.simple.JSONObject;",14789]],"useCount":634759},{"word":"Java","context":[["* <p>Java class for anonymous complex type.",51085],["* @return A Java Future object containing the response from the",21364],["JPC: An x86 PC Hardware Emulator for a pure Java Virtual Machine",12134],["* JFreeChart : a free chart library for the Java(tm) platform",11727],["* JasperReports - Free Java Reporting Library.",11536],["* Hibernate, Relational Persistence for Idiomatic Java",9937],["* ProActive Parallel Suite(TM): The Java(TM) library for",8767],["* Jitsi, the OpenSource Java VoIP and Instant Messaging client.",8173],["* [Java is a trademark or registered trademark of Sun Microsystems, Inc.",7815],["/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.",7452]],"useCount":679217},{"word":"Javadoc","context":[["*(non-Javadoc)",639],["/* (é Javadoc)",574],["/** (non-Javadoc)",761],["//\t/* (non-Javadoc)",677],["* Javadoc for this public method is generated via",1240],["/* (non-Javadoc)",348786],["* (non-Javadoc)",289104],["// TODO: Auto-generated Javadoc",10500],["// For information as to what this class does, see the Javadoc, below.       //",3761],["*  (non-Javadoc)",1872]],"useCount":678555},{"word":"K","context":[["public Set<K> keySet() {",3989],["* @param <K>",4585],["public K getKey() {",4022],["public V put(K key, V value) {",3345],["* @author Christopher K. Allen",2677],["public K next() {",1695],["private final K key;",1632],["public V get(K key) {",1484],["public void putAll(Map<? extends K, ? extends V> m) {",1452],["case 'K':",1452]],"useCount":681130},{"word":"KeyEvent","context":[["import android.view.KeyEvent;",31161],["import java.awt.event.KeyEvent;",34894],["public void keyPressed(KeyEvent e) {",11191],["public boolean onKeyDown(int keyCode, KeyEvent event) {",9201],["public void keyReleased(KeyEvent e) {",9023],["public void keyTyped(KeyEvent e) {",6071],["public void keyReleased(java.awt.event.KeyEvent evt) {",3928],["if (keyCode == KeyEvent.KEYCODE_BACK) {",3460],["public boolean onKeyUp(int keyCode, KeyEvent event) {",3384],["public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {",3144]],"useCount":352347},{"word":"L","context":[["break L;",1901],["* #%L",124135],["grammarBuilder.append(\"lexer grammar L;\\n\");",825],["* #L%",123605],["/*L",21139],["L. SÃ¡nchez (luciano@uniovi.es)",9607],["case 'L':",4215],["return L;",1426],["(byte)'H', (byte)'I', (byte)'J', (byte)'K', (byte)'L', (byte)'M', (byte)'N',",1212],["* @author Ben L. Titzer",973]],"useCount":444504},{"word":"LOG","context":[["if (LOG.isInfoEnabled()) {",6678],["LOG.error(e.getMessage());",3029],["if (LOG.isDebugEnabled()) {",68006],["LOG.error(e);",19227],["if (LOG.isTraceEnabled()) {",12854],["if (LOG.isDebugEnabled())",8897],["LOG.error(e.getMessage(), e);",7637],["LOG.info(e);",5382],["if(LOG.isDebugEnabled()) {",5018],["LOG.debug(",3193]],"useCount":794892},{"word":"LayoutInflater","context":[["public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {",26617],["private LayoutInflater mInflater;",5435],["private LayoutInflater inflater;",4535],["public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {",3942],["mInflater = LayoutInflater.from(context);",2948],["inflater = LayoutInflater.from(context);",2099],["LayoutInflater inflater = (LayoutInflater) context",2070],["LayoutInflater inflater = (LayoutInflater) context",2070],["import android.view.LayoutInflater;",169164],["public View onCreateView(LayoutInflater inflater, ViewGroup container,",36439]],"useCount":367748},{"word":"Level","context":[["import org.apache.logging.log4j.Level;",5964],["import java.util.logging.Level;",134119],["@LogMessage(level = Logger.Level.WARN)",4918],["log.log(Level.FINE, e.toString(), e);",3445],["if (logger.isLoggable(Level.FINE)) {",3279],["if (logger.isLoggable( Level.WARNING )) {",3276],["if (LOGGER.isLoggable(Level.INFO)) {",2656],["if (log.isLoggable(Level.FINE)) {",2654],["if (log.isLoggable(Level.FINEST)) {",6246],["import org.apache.log4j.Level;",13425]],"useCount":577628},{"word":"LinkedList","context":[["import java.util.LinkedList;",186029],["LinkedList<IElementType> types = new LinkedList<IElementType>();",1145],["LinkedList<IElementType> types = new LinkedList<IElementType>();",1145],["return new LinkedList<>();",977],["LinkedList<EsbAbstractNavigatorItem> result = new LinkedList<EsbAbstractNavigatorItem>();",954],["LinkedList<EsbAbstractNavigatorItem> result = new LinkedList<EsbAbstractNavigatorItem>();",954],["* @param diffs LinkedList of Diff objects.",931],["LinkedList<EsbLinkDescriptor> result = new LinkedList<EsbLinkDescriptor>();",872],["LinkedList<EsbLinkDescriptor> result = new LinkedList<EsbLinkDescriptor>();",872],["List list = new LinkedList();",831]],"useCount":361203},{"word":"List","context":[["protected void listChildren(List<Property> childrenList) {",4488],["List<String> list = new ArrayList<>();",4502],["public java.util.List dynamicQuery(",6066],["List<Object> list = new ArrayList<Object>();",6849],["public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {",7193],["java.util.List cl = el.elements(\"class\");",7586],["List<String> result = new ArrayList<String>();",8547],["List list = new ArrayList();",11035],["List<String> list = new ArrayList<String>();",11526],["import java.util.List;",2715539]],"useCount":6601584},{"word":"Locale","context":[["Locale.setDefault(Locale.US);",1677],["private final Locale locale;",1582],["import java.util.Locale;",163832],["Locale locale = Locale.getDefault();",1605],["Locale locale = Locale.getDefault();",1605],["public Locale getLocale() {",6536],["private Locale locale;",3762],["public void setLocale(Locale locale) {",2389],["locale = Locale.getDefault();",2286],["Locale.setDefault(Locale.US);",1677]],"useCount":447157},{"word":"Log","context":[["import com.liferay.portal.kernel.log.Log;",2668],["import android.util.Log;",270270],["import org.apache.commons.logging.Log;",153397],["Log.e(TAG, e.getMessage());",3746],["Log.w(TAG, e);",3488],["import org.eclipse.jetty.util.log.Log;",3175],["Log.e(TAG, e.toString());",3001],["import org.apache.maven.plugin.logging.Log;",2924],["Log.error(e);",2885],["protected final Log logger = LogFactory.getLog(getClass());",2963]],"useCount":1136546},{"word":"Logger","context":[["import java.util.logging.Logger;",172222],["private static final Logger logger =",4635],["private final Logger log = LoggerFactory.getLogger(getClass());",4827],["@LogMessage(level = Logger.Level.WARN)",4918],["private Logger logger;",7017],["import org.jboss.logging.Logger;",7365],["import org.apache.logging.log4j.Logger;",29182],["import com.intellij.openapi.diagnostic.Logger;",29704],["import org.slf4j.Logger;",456484],["import org.apache.log4j.Logger;",173138]],"useCount":1511568},{"word":"LoggerFactory","context":[["import static org.slf4j.LoggerFactory.getLogger;",5457],["private final Logger logger = LoggerFactory.getLogger(this.getClass());",3932],["private final Logger log = LoggerFactory.getLogger(getClass());",4827],["private static final Logger logger = LoggerFactory",4594],["private static final Logger log = LoggerFactory",2384],["import org.slf4j.LoggerFactory;",442983],["private static final Logger LOGGER = LoggerFactory",3554],["private static final Logger LOG = LoggerFactory",2971],["private static Logger logger = LoggerFactory",2147],["private final Logger logger = LoggerFactory.getLogger(getClass());",3674]],"useCount":567301},{"word":"Long","context":[["} else if (value instanceof Long) {",2326],["public Long getId() {",42836],["private Long id;",40326],["public void setId(Long id) {",31923],["*     {@link Long }",23310],["java.lang.Long id,",3615],["protected Long id;",3523],["return Long.MAX_VALUE;",3286],["*     {@link JAXBElement }{@code <}{@link Long }{@code >}",2766],["public Long id;",2330]],"useCount":1180069},{"word":"MA","context":[["* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",39521],["* Boston, MA  02110-1301  USA",25189],["*   Boston, MA 02111-1307  USA",25811],["* MA  02110-1301, USA.",7966],["// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",8534],["* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307",9294],["* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.",9513],["* 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.                     *",12992],["Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",17427],["* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.",23396]],"useCount":340600},{"word":"MAX_VALUE","context":[[".addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)",3597],[".addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))",13750],["return Integer.MAX_VALUE;",8838],[".addGap(0, 0, Short.MAX_VALUE)",4674],[".addGap(0, 0, Short.MAX_VALUE))",4241],[".addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)",3760],["return Long.MAX_VALUE;",3286],["Integer.MAX_VALUE);",2625],[".addGap(0, 0, Short.MAX_VALUE)))",2261],["int min = Integer.MAX_VALUE;",2132]],"useCount":320892},{"word":"Map","context":[["protected boolean validate(EObject objectToTest, BasicDiagnostic diagnostician, Map<Object, Object> map) {",5356],["Map response = c.dispatch(method_call, method_params);",5415],["Map<String, String> map = new HashMap<String, String>();",8508],["Map<String, String> params = new HashMap<String, String>();",8533],["Map<String, Object> map = new HashMap<String, Object>();",8967],["public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;",12658],["Map<String, Object> params = new HashMap<String, Object>();",14318],["private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();",15136],["import java.util.Map.Entry;",114888],["import java.util.Map;",1349189]],"useCount":3457005},{"word":"Math","context":[["import smile.math.Math;",767],["import static java.lang.Math.abs;",1381],["import static java.lang.Math.sqrt;",721],["howmany = (int)(Math.random()*10);",7512],["import java.lang.Math;",3288],["import static java.lang.Math.min;",1979],["import static java.lang.Math.*;",1968],["import static java.lang.Math.max;",1654],["result = Math.min(result, specSize);",995],["Math.max(",690]],"useCount":677973},{"word":"Message","context":[["import javax.jms.Message;",8022],["Message msg = new Message();",7560],["Message msg = new Message();",7560],["import android.os.Message;",35348],["import javax.mail.Message;",5248],["Message message = new Message();",4480],["Message message = new Message();",4480],["/** Message constant for key in the resource bundle. */",22405],["public void handleMessage(Message msg) {",21890],["public Builder mergeFrom(com.google.protobuf.Message other) {",17434]],"useCount":560198},{"word":"Method","context":[["import java.lang.reflect.Method;",126565],["* Method getNameSpacePrefix.",3439],["* Method getNameSpaceURI.",3439],["public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {",3801],["* Wrapper for calling the ActiveX-Method with input-parameter(s).",3961],["}//End Method",4176],["* Method description",16544],["* Method declaration",6777],["for (Method method : methods) {",5140],["throw new IllegalStateException(\"Method call not finished!\");",4246]],"useCount":555739},{"word":"Mockito","context":[["import static org.mockito.Mockito.verifyNoMoreInteractions;",4670],["import static org.mockito.Mockito.spy;",7134],["import static org.mockito.Mockito.doReturn;",6208],["import static org.mockito.Mockito.when;",55981],["import static org.mockito.Mockito.mock;",55724],["import static org.mockito.Mockito.verify;",42729],["import org.mockito.Mockito;",28181],["import static org.mockito.Mockito.*;",24873],["import static org.mockito.Mockito.times;",12468],["import static org.mockito.Mockito.never;",8400]],"useCount":372106},{"word":"Must","context":[["<p>Must be one of the following constant values.</p>",15389],["<p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",252522],["/** <p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",117936],["<p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",87204],["/** <p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",42975],["<p>Must be a string value, using '\\\\;' to escape characters such as '\\\\n' or '\\\\uxxxx' for a unicode character.",31095],["/** <p>Must be a color value, in the form of \"<code>#<i>rgb</i></code>\", \"<code>#<i>argb</i></code>\",",15187],["<p>Must be a color value, in the form of \"<code>#<i>rgb</i></code>\", \"<code>#<i>argb</i></code>\",",21810],["<p>Must be a boolean value, either \"<code>true</code>\" or \"<code>false</code>\".",41343],["/** <p>Must be a boolean value, either \"<code>true</code>\" or \"<code>false</code>\".",28004]],"useCount":768963},{"word":"NOT","context":[["// DO NOT modify this class. It was generated from LeafRegionEntry.cpp",6912],["// WARNING: DO NOT MODIFY the content of this file",73630],["* @generated NOT",19681],["/* AUTO-GENERATED FILE.  DO NOT MODIFY.",17681],["* WARNING: Do NOT modify this code. The content of this method is always",17199],["* WARNING: DO NOT MODIFY the content of this file",11164],["* WARNING: Do NOT modify this code. The content of this method is",10949],["* DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING",8764],["/** Automatically generated file. DO NOT MODIFY */",7355],["// Generated by the protocol buffer compiler.  DO NOT EDIT!",5110]],"useCount":411776},{"word":"Name","context":[["* @return the meta object for the attribute '<em>Name</em>'.",2516],["* @return the value of the '<em>Name</em>' attribute.",2570],["// Name",2764],["* The cached value of the '{@link #getName() <em>Name</em>}' attribute.",3003],["* The default value of the '{@link #getName() <em>Name</em>}' attribute.",3042],["import org.jboss.seam.annotations.Name;",3250],["/** Get Name.",3354],["/** Set Name.",3354],["* @return the XML Name for the Class being described.",3422],["* The feature id for the '<em><b>Name</b></em>' attribute.",7210]],"useCount":368783},{"word":"No","context":[["// No-op.",10525],["//now represent the ones removed from the VO collection. No longer referenced.",11973],["; //No enum values for this FieldType.",1241],["fail(\"No exception were thrown.\");",1326],["\"No operations allowed after statement closed\",",1479],["/** No missing signatures from interface */",1526],["// No-op",2014],["private Factory() { } // No instance of this class allowed",2026],["// No negative instances found",3850],["// No methods yet.",3901]],"useCount":331427},{"word":"Node","context":[["for (Node node : nodes) {",3588],["public void process(Node externs, Node root) {",3869],["public void process(Node externs, Node root) {",3869],["public void visit(NodeTraversal t, Node n, Node parent) {",4021],["public void visit(NodeTraversal t, Node n, Node parent) {",4021],["import org.neo4j.graphdb.Node;",4193],["import javax.jcr.Node;",5944],["import com.google.javascript.rhino.Node;",7493],["import javafx.scene.Node;",10305],["import org.w3c.dom.Node;",54054]],"useCount":1121252},{"word":"NotNull","context":[["@NotNull",418905],["public void run(@NotNull ProgressIndicator indicator) {",1925],["* @return The array of updated count. (NotNull, EmptyAllowed)",1995],["* @return The object to set up a function. (NotNull)",3432],["public void accept(@NotNull PsiElementVisitor visitor) {",5069],["* @return The information object of specified column. (NotNull)",8042],["* @return this. (NotNull)",9654],["import javax.validation.constraints.NotNull;",34577],["import org.jetbrains.annotations.NotNull;",137417],["* @param opLambda The callback for option of like-search. (NotNull)",1914]],"useCount":1152046},{"word":"Note","context":[["// Note all attributes that were handled. Used to differ normal attributes",6239],["<strong>Note:</strong> Clients would like to set this drawable",2726],["*     <span>Note:</span>",2448],["*     <p>Note that this",2097],["*     <i>Note: Technically, this makes your encoding non-compliant.</i>",1841],["* <P><B>Note:</B> Consult your JDBC driver documentation to determine if",1799],["* Note:",1714],["* <P><B>Note:</B> This stream object can either be a standard",1597],["* <p>Note: the correct way to create the package is via the static",1445],["* inprogress, or has failed. Note that this status is distinct from the",1394]],"useCount":376561},{"word":"NullPointerException","context":[["throw new NullPointerException();",113045],["throw new NullPointerException(",4480],["} catch (NullPointerException expected) {",5306],["catch (NullPointerException e) { }",6375],["} catch (NullPointerException npe) {",7305],["} catch (NullPointerException ex) {",8796],["@Test(expected = NullPointerException.class)",20779],["* @throws NullPointerException If given argument is {@code null}",21071],["* @throws NullPointerException",23795],["} catch (NullPointerException e) {",42221]],"useCount":560427},{"word":"Nullable","context":[["@Nullable",328946],["import org.jetbrains.annotations.Nullable;",88447],["import javax.annotation.Nullable;",76657],["import android.support.annotation.Nullable;",38390],["import org.elasticsearch.common.Nullable;",9597],["public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {",3942],["public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {",3942],["import javax.annotation.Nullable; // NOSONAR",3690],["public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {",3038],["import org.eclipse.jdt.annotation.Nullable;",3603]],"useCount":792835},{"word":"OR","context":[["* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING",4309],["* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",42485],["* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",42485],["* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",42485],["* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN",6408],["* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN",6408],["// UPDATES, ENHANCEMENTS, OR MODIFICATIONS.",5548],["* WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN",5275],["* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION",4737],["* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION",4737]],"useCount":392175},{"word":"Object","context":[["public boolean equals(Object o) {",105625],["public synchronized boolean equals(java.lang.Object obj) {",25141],["private java.lang.Object __equalsCalc = null;",25216],["public Object clone() {",23139],["public boolean equals(Object other) {",27197],["public boolean equals(Object obj)",28876],["public Object clone()",38172],["* @see java.lang.Object#toString()",44272],["public boolean equals(Object obj) {",181284],["public boolean equals(Object object) {",22070]],"useCount":6794909},{"word":"Objects","context":[["* Objects of the following type(s) are allowed in the list",85689],["Objects.requireNonNull(before3);",4340],["return Objects.toStringHelper(this)",5279],["Objects.requireNonNull(before1);",7240],["Objects.requireNonNull(before2);",7240],["Objects.requireNonNull(after);",8075],["* Network Engine for Objects in Lund AB [http://neotechnology.com]",11664],["import static java.util.Objects.requireNonNull;",13233],["import com.google.common.base.Objects;",23295],["import java.util.Objects;",61816]],"useCount":345362},{"word":"Optional","context":[["Optional short description of the record",2209],["@return Optional short description of the record",2209],["import java.util.Optional;",62770],["import com.google.common.base.Optional;",42847],["return Optional.empty();",19033],["return Optional.absent();",14115],["Optional.empty(),",5037],["@Optional",3823],["* Optional short description of the record",3566],["Optional.of(",2359]],"useCount":383741},{"word":"Oracle","context":[["* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA",139265],["* Oracle designates this particular file as subject to the \"Classpath\"",2806],["*  - Neither the name of Oracle Corporation nor the names of its",3284],["* [Oracle and Java are registered trademarks of Oracle and/or its affiliates.",6966],["* [Oracle and Java are registered trademarks of Oracle and/or its affiliates.",6966],["//This is to overcome a bug in both Sybase and Oracle which prevents them from storing an empty string correctly",7191],["//Sybase stores it as a single space, Oracle stores it as NULL. This fix will make them consistent at least.",7191],["*     Oracle - initial API and implementation from Oracle TopLink",19029],["*     Oracle - initial API and implementation from Oracle TopLink",19029],["* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA",139265]],"useCount":378696},{"word":"OutputStream","context":[["OutputStream out;",1622],["OutputStream output = null;",1717],["import java.io.OutputStream;",160613],["OutputStream out = null;",6554],["OutputStream os = null;",4141],["public OutputStream getOutputStream() throws IOException {",2297],["org.omg.CORBA.portable.OutputStream out = null;",2266],["OutputStream outputStream = null;",2105],["public OutputStream getOutputStream() {",2034],["private OutputStream out;",1970]],"useCount":377231},{"word":"Override","context":[["@Override",25783363],["@java.lang.Override",72427],["@Override()",28891],["//    @Override",23133],["@Override public String toString() {",21719],["//\t@Override",16523],["// @Override",16347],["@Override public void run() {",14438],["//@Override",12547],["//            @Override",10241]],"useCount":26626591},{"word":"P","context":[["*<P>",1599],["* <P>",84845],["* </P>",9822],["<P>",3424],["* <P>Type: TEXT</P>",3239],["* <P>Type: INTEGER</P>",2135],["* <P>Type: INTEGER</P>",2135],["case 'P':",2005],["* <P><B>Note:</B> Consult your JDBC driver documentation to determine if",1799],["* <P>Type: TEXT</P>",3239]],"useCount":320603},{"word":"ParseException","context":[["import org.json.simple.parser.ParseException;",4269],["{if (true) throw (ParseException)jjte000;}",5700],["import org.apache.commons.cli.ParseException;",6051],["if (jjte000 instanceof ParseException) {",6564],["} catch (ParseException ex) {",7082],["throws ParseException {",7366],["* @throws ParseException",16331],["throw new ParseException();",20942],["} catch (ParseException e) {",46911],["import java.text.ParseException;",62650]],"useCount":351462},{"word":"Path","context":[["public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {",2420],["import com.google.devtools.build.lib.vfs.Path;",2720],["import java.nio.file.Path;",60410],["import org.apache.hadoop.fs.Path;",46356],["import javax.ws.rs.Path;",38740],["import org.eclipse.core.runtime.Path;",7384],["@Path(\"/\")",6555],["import android.graphics.Path;",6548],["@Path(\"{id}\")",5425],["@Path(\"/{id}\")",4151]],"useCount":886155},{"word":"Pattern","context":[["Pattern pattern;",1539],["import java.util.regex.Pattern;          //NOSONAR",1282],["* <b>Pattern: </b>[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*<br/>",1328],["Pattern pattern = Pattern.compile(regex);",1428],["Pattern pattern = Pattern.compile(regex);",1428],["private final Pattern pattern;",1767],["private Pattern pattern;",2154],["Pattern.CASE_INSENSITIVE);",2261],["import javax.validation.constraints.Pattern;",3341],["import java.util.regex.Pattern;",148259]],"useCount":342513},{"word":"Project","context":[["* OWASP Benchmark Project v1.2beta",7248],["* jPOS Project [http://jpos.org]",4754],["public Project getProject() {",5543],["* @author <a href=\"mailto:dev@directory.apache.org\">Apache Directory Project</a>",5695],["private final Project myProject;",10749],["* Project Info:  http://www.jfree.org/jfreechart/index.html",11756],["* Benchmark Project. For details, please see",31139],["* This file is part of the Open Web Application Security Project (OWASP)",31744],["import com.intellij.openapi.project.Project;",61816],["* OWASP Benchmark Project v1.1",21041]],"useCount":518322},{"word":"Properties","context":[["Properties properties = new Properties();",19465],["import java.util.Properties;",165712],["Properties props = new Properties();",34056],["Properties props = new Properties();",34056],["Properties properties = new Properties();",19465],["Properties p = new Properties();",8690],["Properties p = new Properties();",8690],["Properties prop = new Properties();",6126],["Properties prop = new Properties();",6126],["// Properties",5588]],"useCount":612606},{"word":"QName","context":[["private void writeQName(javax.xml.namespace.QName qname,",6242],["public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)",5842],["elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"int\"));",6204],["private void writeQNames(javax.xml.namespace.QName[] qnames,",6242],["final javax.xml.namespace.QName parentQName,",6374],["public void serialize(final javax.xml.namespace.QName parentQName,",12202],["elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));",19876],["import javax.xml.namespace.QName;",45809],["javax.xml.namespace.QName _xmlType) {",67909],["elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"long\"));",8875]],"useCount":525129},{"word":"Query","context":[["Query parsedQuery = queryParser.parse(query).query();",7217],["import javax.persistence.Query;",13384],["import org.apache.lucene.search.Query;",12493],["import org.hibernate.Query;",10926],["Query q = session.createQuery(sql);",5249],["import org.springframework.data.jpa.repository.Query;",4117],["Query query = new Query();",3226],["Query query = new Query();",3226],["Query q;",2830],["Query query = null;",2699]],"useCount":315967},{"word":"R","context":[["getMenuInflater().inflate(R.menu.main, menu);",12327],["getMenuInflater().inflate(R.menu.menu_main, menu);",9898],["case android.R.id.home:",15135],["public final class R {",17064],["if (id == R.id.action_settings) {",21671],["* This file is part of Resin(R) Open Source",22244],["* along with OpenNMS(R).  If not, see:",27188],["* This file is part of OpenNMS(R).",27316],["* OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.",27337],["setContentView(R.layout.activity_main);",41876]],"useCount":2233569},{"word":"Random","context":[["Random rnd = new Random();",4688],["Random random = new Random();",15601],["import java.util.Random;",160511],["Random random = new Random();",15601],["Random rand = new Random();",11460],["Random rand = new Random();",11460],["Random r = new Random();",11091],["Random r = new Random();",11091],["import com.watabou.utils.Random;",5198],["Random rnd = new Random();",4688]],"useCount":508152},{"word":"Resource","context":[["@Resource",40094],["import javax.annotation.Resource;",31640],["import org.springframework.core.io.Resource;",10609],["import org.eclipse.emf.ecore.resource.Resource;",6327],["if (!stmt.getObject().canAs(com.hp.hpl.jena.rdf.model.Resource.class))",4417],["if (true) { // don't check resource type if the property range is Resource",4417],["import com.hp.hpl.jena.rdf.model.Resource;",3998],["import org.apache.hadoop.yarn.api.records.Resource;",3741],["* @return   String Resource Url",2975],["import org.apache.sling.api.resource.Resource;",2803]],"useCount":348967},{"word":"Response","context":[["}, new Response.ErrorListener() {",3113],["import javax.ws.rs.core.Response;",45379],["return Response.noContent().build();",3133],["import okhttp3.Response;",3170],["import retrofit2.Response;",3173],["import retrofit.client.Response;",3664],["public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {",5036],["import com.android.volley.Response;",5924],["return Response.ok().build();",6709],["import javax.ws.rs.core.Response.Status;",8565]],"useCount":476444},{"word":"Result","context":[["import hudson.model.Result;",2006],["Result result = new Result();",2203],["Result result = new Result();",2203],["import com.intellij.openapi.application.Result;",2317],["import com.google.zxing.Result;",2699],["import javax.xml.transform.Result;",3729],["import play.mvc.Result;",3882],["ims.dto.Result reLoginResult = Connection.reLogin();",4158],["import org.apache.hadoop.hbase.client.Result;",6468],["import org.junit.runner.Result;",1974]],"useCount":321868},{"word":"ResultSet","context":[["import java.sql.ResultSet;",94878],["* @see java.sql.ResultSet",1866],["ResultSet rs = null;",39082],["ResultSet rs = ps.executeQuery();",8092],["ResultSet resultSet = null;",7774],["ResultSet rs;",6945],["ResultSet rs = statement.executeQuery();",5646],["ResultSet rs = stmt.executeQuery();",5138],["ResultSet rs = pstmt.executeQuery();",4371],["ResultSet result = null;",2430]],"useCount":404793},{"word":"Returns","context":[["* @return Returns a reference to this object so that method calls can be",49924],["* @return Returns the value of the attribute, or null, if it hasn't been set by the JSF file.",3600],["* Returns the tip text for this property",4010],["Returns:",4209],["* Returns a short description of the servlet.",4488],["* Returns the Spring bean ID for this bean.",4563],["* Returns the number of rows that match the dynamic query.",4584],["/** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */",13392],["* Returns a string representation of this object; useful for testing and",20478],["* Returns a reference to this object so that method calls can be chained together.",33913]],"useCount":1578744},{"word":"RunWith","context":[["import org.junit.runner.RunWith;",162969],["@RunWith(SpringJUnit4ClassRunner.class)",32541],["@RunWith(MockitoJUnitRunner.class)",21640],["@RunWith(JUnit4.class)",15853],["@RunWith(Parameterized.class)",14323],["@RunWith(Arquillian.class)",10637],["@RunWith(Suite.class)",9438],["@RunWith(PowerMockRunner.class)",6233],["@RunWith(RobolectricTestRunner.class)",4508],["@RunWith(AndroidJUnit4.class)",4408]],"useCount":326919},{"word":"Runnable","context":[["runOnUiThread(new Runnable() {",25115],["new Thread(new Runnable() {",27655],["new Handler().postDelayed(new Runnable() {",5783],["mHandler.post(new Runnable() {",7020],["handler.post(new Runnable() {",7554],["AndroidUtilities.runOnUIThread(new Runnable() {",9663],["EventQueue.invokeLater(new Runnable() {",10642],["new Runnable() {",11048],["java.awt.EventQueue.invokeLater(new Runnable() {",11443],["SwingUtilities.invokeLater(new Runnable() {",26972]],"useCount":673111},{"word":"RuntimeException","context":[["} catch (RuntimeException ex) {",10308],["throw new RuntimeException(e);",221750],["} catch (RuntimeException e) {",56883],["} catch (RuntimeException re) {",14178],["throw (RuntimeException)t;",14502],["throw new RuntimeException(t.getClass().getName() +",18854],["if (t instanceof RuntimeException) {",19578],["throw new RuntimeException(ex);",26882],["throw new RuntimeException(",31597],["throw new RuntimeException();",23065]],"useCount":963013},{"word":"SQLException","context":[["} catch (SQLException e) {",175450],["} catch (SQLException sqle) {",9713],["import java.sql.SQLException;",162466],["throws SQLException {",67702],["* @throws SQLException",65249],["throws SQLException",50794],["} catch (SQLException ex) {",40652],["catch (SQLException e) {",14628],["* @exception SQLException if a database access error occurs",14384],["catch (SQLException e)",11610]],"useCount":1383801},{"word":"See","context":[["* agreements. See the NOTICE file distributed with this work for additional information regarding",2731],["* See the notice.md file distributed with this work for additional",2643],["Corporation at a fee.  See",2682],["* agreements. See the NOTICE file distributed with this work for",3530],["* \"ads.properties\" file. See README for more info.",4759],["* See the NOTICE file distributed with this work for additional information",5998],["* agreements. See the NOTICE file distributed with this work",15998],["* See the NOTICE file distributed with this work for additional",19893],["// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a>",64734],["* @return See above.",33954]],"useCount":408110},{"word":"Serializable","context":[["import java.io.Serializable;",421145],["implements Serializable",6403],["implements Serializable {",3555],["public class BaseAccessLogic extends FormAccessLogic implements Serializable",3899],["public final class GlobalContext extends ims.framework.FormContext implements Serializable",3899],["public final class AccessLogic extends BaseAccessLogic implements Serializable",3899],["public static final class CurrentForms implements Serializable",3899],["public final static class CurrentForm implements Serializable",3899],["Serializable {",4146],["public final static class CurrentEngine implements Serializable",3899]],"useCount":656269},{"word":"ServletException","context":[["throws IOException, ServletException {",10630],["* @throws ServletException",8001],["public String doSomething(String param) throws ServletException, IOException {",10182],["import javax.servlet.ServletException;",116530],["throws ServletException, IOException {",34362],["public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",32278],["public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",32240],["throw new ServletException(e);",28749],["* @throws ServletException if a servlet-specific error occurs",12178],["private static String doSomething(String param) throws ServletException, IOException {",10282]],"useCount":421853},{"word":"Session","context":[["import org.hibernate.Session;",24768],["Session session = null;",21439],["import javax.jms.Session;",8353],["private Session session;",6206],["import javax.jcr.Session;",5949],["import javax.mail.Session;",5335],["Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);",4163],["Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);",4163],["public Object doInHibernate(Session session) throws HibernateException, SQLException {",3380],["Session session = getSession();",3368]],"useCount":346331},{"word":"Set","context":[["java.util.Set removedSet = new java.util.HashSet();",11066],["/** Set Organization.",2936],["import java.util.Set;",648198],["* Set - optional<br>",3050],["/** Set Name.",3354],["/** Set Description.",3946],["public Set<K> keySet() {",3989],["* Set the endpoint address for the specified port name.",4346],["/* Set the Nimbus look and feel */",7437],["java.util.Set newSet = new java.util.HashSet();",11066]],"useCount":1965388},{"word":"Sets","context":[["* Sets the value of the lang property.",3403],["* Sets the value of the value property.",10460],["* Sets the value of the name property.",9919],["* Sets the value of the type property.",5090],["* Sets the Spring bean ID for this bean.",4563],["* Sets the value of the description property.",4245],["* Sets the value of the status property.",3974],["* Sets the value of the reason property.",3877],["* Sets the value of the id property.",11915],["import com.google.common.collect.Sets;",47513]],"useCount":989684},{"word":"Source","context":[["* This Source Code Form is subject to the terms of the Mozilla Public",27937],["* JBoss, Home of Professional Open Source",33074],["* This file is part of Resin(R) Open Source",22244],["* along with Resin Open Source; if not, write to the",22227],["* JBoss, Home of Professional Open Source.",16360],["* the Open Source Content Management System",9044],["import javax.xml.transform.Source;",8899],["/* This Source Code Form is subject to the terms of the Mozilla Public",4151],["*  eXist Open Source Native XML Database",7052],["* Credits goes to all Open Source Core Developer Groups listed below",5172]],"useCount":351542},{"word":"State","context":[["private enum State {",2398],["ASTNode$State state = state();",4392],["@State(",1936],["public State getState() {",4266],["* $State: Exp $",3990],["private State state;",3624],["if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {",3441],["public enum State {",3174],["import org.openhab.core.types.State;",2694],["import org.openjdk.jmh.annotations.State;",2208]],"useCount":324804},{"word":"Status","context":[["import org.restlet.data.Status;",2524],["import javax.ws.rs.core.Response.Status;",8565],["import org.eclipse.core.runtime.Status;",9729],["return Response.status(Status.NOT_FOUND).build();",2523],["return Status.CANCEL_STATUS;",2646],["private Status status;",2965],["public enum Status {",3569],[".statusCode(Status.OK.getStatusCode())",4122],["public Status getStatus() {",5129],["return Status.OK_STATUS;",6357]],"useCount":364783},{"word":"String","context":[["public static void main(String[] args) {",291153],["*     {@link String }",494747],["public static void main(String[] args) throws Exception {",77841],["public String toString() {",851120],["public String getId() {",89209],["public String getDescription() {",106961],["public void setName(String name) {",119986],["public String toString()",152120],["private String name;",176139],["public String getName() {",368813]],"useCount":38064156},{"word":"StringBuffer","context":[["StringBuffer sb = new StringBuffer();",70651],["StringBuffer result = new StringBuffer();",9814],["StringBuffer result = new StringBuffer();",9814],["StringBuffer result = new StringBuffer(super.toString());",11912],["StringBuffer result = new StringBuffer(super.toString());",11912],["StringBuffer buf = new StringBuffer();",22114],["StringBuffer buf = new StringBuffer();",22114],["StringBuffer buffer = new StringBuffer();",22340],["StringBuffer buffer = new StringBuffer();",22340],["StringBuffer sb = new StringBuffer();",70651]],"useCount":721369},{"word":"StringBuilder","context":[["StringBuilder sb = new StringBuilder();",204542],["StringBuilder sb = new StringBuilder();",204542],["StringBuilder builder = new StringBuilder();",51222],["StringBuilder builder = new StringBuilder();",51222],["final StringBuilder sb = new StringBuilder();",21237],["final StringBuilder sb = new StringBuilder();",21237],["StringBuilder buf = new StringBuilder();",20862],["StringBuilder buf = new StringBuilder();",20862],["StringBuilder result = new StringBuilder();",18629],["StringBuilder result = new StringBuilder();",18629]],"useCount":1492202},{"word":"StringUtils","context":[["import com.amazonaws.util.StringUtils;",13089],["import org.apache.commons.lang3.StringUtils;",62686],["import org.springframework.util.StringUtils;",14873],["import org.apache.hadoop.util.StringUtils;",7686],["import static com.amazonaws.util.StringUtils.UTF8;",5674],["import static com.amazonaws.util.StringUtils.COMMA_SEPARATOR;",3472],["public class StringUtils {",2887],["return StringUtils.EMPTY;",2506],["import org.codehaus.plexus.util.StringUtils;",2187],["import org.apache.commons.lang.StringUtils;",92138]],"useCount":567761},{"word":"SuppressWarnings","context":[["@SuppressWarnings(\"unchecked\")",636994],["@SuppressWarnings(\"UnusedDeclaration\")",14378],["@SuppressWarnings({ \"rawtypes\", \"unchecked\" })",17498],["@SuppressWarnings({ \"unchecked\", \"rawtypes\" })",19636],["@SuppressWarnings(\"all\")",34656],["@SuppressWarnings(\"deprecation\")",76947],["@SuppressWarnings(\"rawtypes\")",89896],["@SuppressWarnings(\"serial\")",91254],["@SuppressWarnings(\"unused\")",179855],["@SuppressWarnings(\"nls\")",12152]],"useCount":1516424},{"word":"System","context":[["System.gc();",27611],["System.out.println();",116349],["System.exit(1);",93587],["System.exit(0);",80006],["System.exit(-1);",38792],["long start = System.currentTimeMillis();",38402],["System.out.println(\"\");",27324],["System.out",26208],["long now = System.currentTimeMillis();",23624],["long startTime = System.currentTimeMillis();",21279]],"useCount":3520357},{"word":"SystemException","context":[["throws com.liferay.portal.kernel.exception.SystemException {",44413],["throws com.liferay.portal.kernel.exception.SystemException;",24632],["com.liferay.portal.kernel.exception.SystemException {",16280],["throws SystemException {",15971],["if (t instanceof com.liferay.portal.kernel.exception.SystemException) {",14558],["throw (com.liferay.portal.kernel.exception.SystemException)t;",11032],["import com.liferay.portal.kernel.exception.SystemException;",8491],["throws com.liferay.portal.kernel.exception.SystemException,",6759],["* @throws SystemException if a system exception occurred",102486],["com.liferay.portal.kernel.exception.SystemException;",6669]],"useCount":322518},{"word":"T","context":[["public <T> T accept(ParseTreeVisitor<? extends T> visitor) {",11895],["* @param <T>",46493],["public <T> T accept(ParseTreeVisitor<? extends T> visitor) {",11895],["public <T> T accept(ParseTreeVisitor<? extends T> visitor) {",11895],["return (T) this;",11269],["\" * @template T\",",7326],["public Iterator<T> iterator() {",7036],["public T next() {",6878],["grammarBuilder.append(\"grammar T;\\n\");",5117],["public T get() {",4232]],"useCount":1791832},{"word":"TAG","context":[["Log.e(TAG, e.getMessage());",3746],["Log.e(TAG, e.toString());",3001],["Log.e(TAG, e.getMessage(), e);",2286],["if (Log.isLoggable(TAG, Log.DEBUG)) {",2234],["Log.d(TAG,",2196],["if (Log.isLoggable(TAG, Log.VERBOSE)) {",1856],["Log.e(TAG,",1672],["return TAG;",1660],["private static final String TAG = \"MainActivity\";",1476],["Log.w(TAG, e);",3488]],"useCount":373004},{"word":"TODO","context":[["* TODO",7555],["// TODO Auto-generated method stub",476306],["// TODO Auto-generated catch block",167039],["// TODO Auto-generated constructor stub",46663],["// TODO",31587],["// TODO add your handling code here:",29680],["/*TODO*///",14018],["//TODO",12375],["// TODO: Auto-generated Javadoc",10500],["// TODO: handle exception",8210]],"useCount":1311582},{"word":"Test","context":[["@Test(expected = IllegalStateException.class)",15839],["* Test method for",19502],["@Test(expected = NullPointerException.class)",20779],["public static Test suite() {",25373],["import junit.framework.Test;",36169],["@org.junit.Test",55496],["@Test(expected = IllegalArgumentException.class)",58087],["import org.testng.annotations.Test;",93954],["import org.junit.Test;",907784],["@Test",5135593]],"useCount":7361724},{"word":"TextView","context":[["import android.widget.TextView.OnEditorActionListener;",1563],["private TextView mTextView;",1668],["TextView textView;",1693],["private TextView titleText;",1697],["TextView name;",1838],["private TextView textView;",2122],["TextView title;",2215],["spinnerMode=\"dropdown\". This layout must contain a TextView with the id",2466],["public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {",3144],["import android.widget.TextView;",217026]],"useCount":509955},{"word":"The","context":[["The commenting leaves much to be desired. Please approach this source code with the spirit of helping out.",22515],["* <p>The following schema fragment specifies the expected content contained within this class.",169528],["* <p>The default implementation does nothing.</p>",43308],["* OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.",27337],["// Handle action bar item clicks here. The action bar will",26835],["* The following features are implemented:",19662],["* The following features are supported:",19074],["* WARNING: Do NOT modify this code. The content of this method is always",17199],["The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to",17007],["/** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */",14769]],"useCount":6514505},{"word":"This","context":[["<p>This is a private symbol.",118752],["* This implementation returns null;",28167],["// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)",29771],["* This file is part of the Open Web Application Security Project (OWASP)",31744],["// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)",43888],["* This file was auto-generated from WSDL",49423],["<p>This corresponds to the global attribute",50212],["* This program and the accompanying materials are made available under the",56649],["* This method was generated by MyBatis Generator.",58319],["* This accessor method returns a reference to the live list,",84346]],"useCount":4287089},{"word":"Thread","context":[["Thread.yield();",11122],["Thread.sleep(1000);",55142],["Thread.sleep(100);",38426],["Thread.currentThread().interrupt();",34783],["new Thread(new Runnable() {",27655],["Thread.sleep(500);",22332],["Thread.sleep(2000);",17746],["new Thread() {",14916],["Thread.sleep(5000);",13741],["Thread.sleep(10);",13328]],"useCount":904790},{"word":"Throwable","context":[["catch (Throwable t)",11187],["} catch (Throwable t) {",142048],["} catch (Throwable e) {",110422],["} catch(final Throwable trw) {",44024],["throws Throwable {",36516],["catch (Throwable t) {",26264],["} catch (Throwable ex) {",20369],["catch (Throwable e) {",15213],["throws java.lang.Throwable {",13103],["protected void finalize() throws Throwable {",12906]],"useCount":1171651},{"word":"TimeUnit","context":[["TimeUnit.SECONDS.sleep(5);",1188],["TimeUnit.SECONDS,",1198],["driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);",1255],["TimeUnit.SECONDS.sleep(1);",1900],["TimeUnit.MILLISECONDS,",2354],["TimeUnit.SECONDS);",2697],["import static java.util.concurrent.TimeUnit.MILLISECONDS;",3786],["TimeUnit.MILLISECONDS);",3986],["import static java.util.concurrent.TimeUnit.SECONDS;",4851],["import java.util.concurrent.TimeUnit;",153905]],"useCount":368384},{"word":"To","context":[["* To change this template, choose Tools | Templates",79042],["* TODO To change the template for this generated type comment go to",2749],["* To change this template, choose Tools | Template Manager",3554],["* TODO To change the template for this generated file go to",3559],["e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.",4508],["return null;  //To change body of implemented methods use File | Settings | File Templates.",6712],["//To change body of implemented methods use File | Settings | File Templates.",7552],["* To work on unit tests, switch the Test Artifact in the Build Variants view.",13652],["* To change this template use File | Settings | File Templates.",27048],["* To change this template file, choose Tools | Templates",96536]],"useCount":417923},{"word":"Token","context":[["import org.apache.hadoop.security.token.Token;",4270],["XContentParser.Token token;",3854],["if ( _createToken && _token==null && _ttype!=Token.SKIP ) {",3928],["Token xsp;",22523],["token = new Token();",5943],["if (token == XContentParser.Token.FIELD_NAME) {",5805],["while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {",5728],["import com.google.javascript.rhino.Token;",4231],["int _ttype; Token _token=null; int _begin=text.length();",3928],["match(input, Token.DOWN, null); if (state.failed) return retval;",3356]],"useCount":591983},{"word":"Type","context":[["private final Type type;",4788],["import java.lang.reflect.Type;",39754],["// Type metadata",34136],["public Type getType() {",12359],["@Headers(\"Content-Type: application/json; charset=utf-8\")",9647],["public enum Type {",8146],["import com.facebook.presto.spi.type.Type;",5928],["private Type type;",5074],["import org.objectweb.asm.Type;",4667],["* <b>Type:</b> NX_FLOAT",4353]],"useCount":1052324},{"word":"URI","context":[["import java.net.URI;",113277],["private final URI uri;",1521],["public URI getUri() {",2162],["throw new IllegalArgumentException(\"Unknown URI \" + uri);",2312],["URI uri = null;",2098],["private URI uri;",2354],["URI uri;",2488],["* @return the namespace URI used when marshaling and",3422],["import org.openrdf.model.URI;",4256],["import org.eclipse.emf.common.util.URI;",6473]],"useCount":434392},{"word":"URL","context":[["URL url = null;",9253],["* $URL$",7112],["URL url;",6050],["// Agreement, available at the following URL:",4254],["private URL url;",2949],["java.net.URL endpoint;",2222],["import com.alibaba.dubbo.common.URL;",2211],["URL url = new URL(urlString);",2184],["URL url = new URL(urlString);",2184],["import java.net.URL;",219147]],"useCount":735043},{"word":"USA","context":[["Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",17427],["* USA.",22595],["* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.",23396],["* 02110-1301 USA, or see the FSF site: http://www.fsf.org.",23819],["* Boston, MA  02110-1301  USA",25189],["*   Boston, MA 02111-1307  USA",25811],["02110-1301 USA.",13183],["* CA 95054 USA or visit www.sun.com if you need additional information or",29458],["* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",39521],["* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA",139265]],"useCount":649464},{"word":"UUID","context":[["case UUID:",1133],["import java.util.UUID;",114725],["private UUID uuid;",1244],["String id = UUID.randomUUID().toString();",1376],["private UUID id;",1621],["String uuid = UUID.randomUUID().toString();",1873],["public UUID getId() {",2029],["UUID uuid = UUID.randomUUID();",2244],["UUID uuid = UUID.randomUUID();",2244],["return UUID.randomUUID().toString();",2381]],"useCount":325800},{"word":"UnsupportedOperationException","context":[["} catch (UnsupportedOperationException e) {",13424],["throw new UnsupportedOperationException(\"Not implemented\");",4461],["throw new UnsupportedOperationException();",258167],["throw new UnsupportedOperationException(\"Not supported yet.\");",46350],["throw new UnsupportedOperationException(",21286],["throw new java.lang.UnsupportedOperationException();",14669],["* @throws UnsupportedOperationException always",3471],["* @throws UnsupportedOperationException",9301],["@Test(expected = UnsupportedOperationException.class)",6907],["throw new UnsupportedOperationException(e);",5343]],"useCount":618759},{"word":"User","context":[["User user = new User();",10889],["User user = new User();",10889],["public User getUser() {",8706],["public class User {",7830],["public void setUser(User user) {",5937],["User user = null;",4905],["* User: anna",4609],["public User() {",3978],["* in the <i>Amazon Elastic Compute Cloud User Guide</i> .",3150],["private User user;",10498]],"useCount":694424},{"word":"V","context":[["V",6622],["* @param <V>",6805],["* modified versions of the Program under the name \"HELIUM V\" or \"HELIUM 5\",",5714],["* HELIUM V IT-Solutions GmbH. The licensing of the program under the",5714],["* \"HELIUM V\" and \"HELIUM 5\" are registered trademarks of",5714],["public V getValue() {",4058],["public Collection<V> values() {",3739],["public V put(K key, V value) {",3345],["public V put(K key, V value) {",3345],["public V get(Object key) {",3181]],"useCount":909370},{"word":"Value","context":[["import org.openrdf.model.Value;",2864],["import org.apache.accumulo.core.data.Value;",2848],["<tr><th>Constant</th><th>Value</th><th>Description</th></tr>",42374],["import org.springframework.beans.factory.annotation.Value;",17280],["* Value range (decimal notation) :<br>",5216],["Object result = response.get(\"Value\");",4096],["@Value.Immutable",3849],["import org.immutables.value.Value;",3517],["@Value",3049],["* @param val Value.",2938]],"useCount":409831},{"word":"Vector","context":[["private java.util.Vector cachedSerClasses = new java.util.Vector();",2377],["private java.util.Vector cachedDeserFactories = new java.util.Vector();",2377],["throw new RuntimeException(String.format(\"wrong Vector magic, got %x\", magic));",2925],["public boolean invoke(MOB mob, Vector commands, Physical givenTarget, boolean auto, int asLevel)",3501],["import org.bukkit.util.Vector;",4383],["Vector v = new Vector();",4941],["Vector v = new Vector();",4941],["java.util.Vector handledAttributes = new java.util.Vector();",6258],["java.util.Vector handledAttributes = new java.util.Vector();",6258],["import java.util.Vector;",102353]],"useCount":389260},{"word":"Version","context":[["import org.elasticsearch.Version;",10339],["* JD-Core Version:    0.6.2",9315],["* JD-Core Version:    0.6.0",7483],["* Java Class Version: 6 (50.0)",6474],["* JD-Core Version:    0.7.1",6444],["@Version",5856],["import org.apache.lucene.util.Version;",5228],["import javax.persistence.Version;",4768],["// Version 1.0, which has been approved by the Open Source Initiative.",2763],["* JD-Core Version:    0.7.0.1",16487]],"useCount":360002},{"word":"View","context":[["import android.view.View;",440678],["public void onClick(View v) {",215214],["import android.view.View.OnClickListener;",54694],["public void onClick(View view) {",48237],["public View onCreateView(LayoutInflater inflater, ViewGroup container,",36439],["public View getView(int position, View convertView, ViewGroup parent) {",33349],["public View getView(int position, View convertView, ViewGroup parent) {",33349],["public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {",26617],["public void onItemClick(AdapterView<?> parent, View view, int position, long id) {",17575],["public boolean onTouch(View v, MotionEvent event) {",13125]],"useCount":2224523},{"word":"ViewGroup","context":[["import android.view.ViewGroup.LayoutParams;",8260],["import android.view.ViewGroup;",195672],["public View onCreateView(LayoutInflater inflater, ViewGroup container,",36439],["public View getView(int position, View convertView, ViewGroup parent) {",33349],["public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {",26617],["public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {",3942],["public View getView(final int position, View convertView, ViewGroup parent) {",3243],["public void destroyItem(ViewGroup container, int position, Object object) {",3015],["public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {",2868],["public Object instantiateItem(ViewGroup container, int position) {",2763]],"useCount":472741},{"word":"Void","context":[["public Void call() throws Exception {",14192],["public Void run() {",3128],["public Void run() throws Exception {",3290],["public Void execute() throws Throwable",3381],["new AsyncTask<Void, Void, Void>() {",3396],["new AsyncTask<Void, Void, Void>() {",3396],["new AsyncTask<Void, Void, Void>() {",3396],["protected void onPostExecute(Void result) {",4701],["protected Void doInBackground(Void... params) {",7876],["protected Void doInBackground(Void... params) {",7876]],"useCount":332845},{"word":"We","context":[["// We're done, just return.",17189],["// We expect this exception.",851],["* We make no guarantees that this code is fit for any purpose.",801],["// This is good.  We were expecting an exception.",17187],["//We can safely assume an element has only one type associated with it",2721],["*       comment syntax for the file format. We also recommend that a",2703],["comment syntax for the file format. We also recommend that a",2199],["* successors. We intend this dedication to be an overt act of",1581],["* We kindly ask you to refer the any or one of the following publications in",1395],["// We have to shift left 24 in order to flush out the 1's that appear",1059]],"useCount":399222},{"word":"X","context":[["\"public class X {\\n\" +",9731],["\"X.java\",",5759],["return X;",2886],["// Detect X or ALT-F4 or something that kills this window...",2516],["* @param <X> The type of the throwable to be thrown by this function",2386],["case 'X':",2178],["request.addHeader(\"X-Amz-Target\",",2101],["\"  public X() {\\n\" +",2011],["* @param x X coordinate of the area to paint to",1768],["CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");",1674]],"useCount":366666},{"word":"XML","context":[["* @return the XML Name for the Class being described.",3422],["// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2",20257],["*  eXist Open Source Native XML Database",7052],["* databinding method to get an XML representation of this object",6389],["* against an XML schema provided by Kaltura.",5245],["*   in the serialized XML",4991],["* <a href=\"http://www.castor.org\">Castor 1.3.1</a>, using an XML",4084],["* for XML content. The Java representation of XML",4052],["* for XML content. The Java representation of XML",4052],["* unmarshaling as XML.",3422]],"useCount":334400},{"word":"XMLSchema","context":[["*     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",105617],["elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));",19876],["*               &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",19435],["*   &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}string\">",14114],["*                         &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",10936],["*       &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",9972],["writeAttribute(\"xsi\",\"http://www.w3.org/2001/XMLSchema-instance\",\"type\",",9678],["elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"long\"));",8875],["*                                   &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",7744],["*     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\"&gt;",6736]],"useCount":389726},{"word":"XmlAccessType","context":[["@XmlAccessorType(value = XmlAccessType.FIELD)",376],["@XmlAccessorType(value = XmlAccessType.NONE)",105],["@XmlAccessorType(XmlAccessType.FIELD)",195301],["import javax.xml.bind.annotation.XmlAccessType;",176699],["@XmlAccessorType(XmlAccessType.NONE)",8343],["@XmlAccessorType(XmlAccessType.PROPERTY)",998],["@XmlAccessorType(XmlAccessType.PUBLIC_MEMBER)",322],["@XmlAccessorType( XmlAccessType.FIELD )",277],["import com.wb.nextgenlibrary.parser.XmlAccessType;",163],["@XmlAccessorType (XmlAccessType.FIELD)",146]],"useCount":383696},{"word":"XmlAccessorType","context":[["@XmlAccessorType(value = XmlAccessType.NONE)",105],["@XmlAccessorType (XmlAccessType.FIELD)",146],["import com.wb.nextgenlibrary.parser.XmlAccessorType;",163],["@XmlAccessorType( XmlAccessType.FIELD )",277],["@XmlAccessorType(XmlAccessType.PUBLIC_MEMBER)",322],["@XmlAccessorType(value = XmlAccessType.FIELD)",376],["@XmlAccessorType(XmlAccessType.PROPERTY)",998],["@XmlAccessorType(XmlAccessType.NONE)",8343],["import javax.xml.bind.annotation.XmlAccessorType;",176902],["@XmlAccessorType(XmlAccessType.FIELD)",195301]],"useCount":383811},{"word":"XmlElement","context":[["import javax.xml.bind.annotation.XmlElement;",101222],["@XmlElement(required = true)",43698],["@XmlElement",26123],["@XmlElement(nillable = true)",4355],["@XmlElement(name = \"return\")",3963],["@XmlElement(required = true, nillable = true)",2995],["@XmlElement(required = false)",2614],["@XmlElement(type = Long.class)",1381],["@XmlElement(required=true)",1220],["@XmlElement(defaultValue = \"\")",1199]],"useCount":313134},{"word":"_","context":[["//                          |_|\\_\\__,_|_|\\__|\\_,_|_| \\__,_|",5339],["_##",8364],["//                          |_|\\_\\__,_|_|\\__|\\_,_|_| \\__,_|",5339],["//                          |_|\\_\\__,_|_|\\__|\\_,_|_| \\__,_|",5339],["//                          |_|\\_\\__,_|_|\\__|\\_,_|_| \\__,_|",5339],["//                          | |/ /__ _| | |_ _  _ _ _ __ _",5339],["//                          | ' </ _` | |  _| || | '_/ _` |",5339],["//                          | |/ /__ _| | |_ _  _ _ _ __ _",5339],["//                          |_|\\_\\__,_|_|\\__|\\_,_|_| \\__,_|",5339],["//                          |_|\\_\\__,_|_|\\__|\\_,_|_| \\__,_|",5339]],"useCount":499651},{"word":"a","context":[["* For example, to add a new item, do as follows:",88109],["* @throws SystemException if a system exception occurred",102486],["/** <p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",117936],["<p>This is a private symbol.",118752],["<p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",87204],["<p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",252522],["containing a value of this type.",317212],["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167],["a=0;//",413196],["<p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",87204]],"useCount":19262883},{"word":"abstract","context":[["abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;",2428],["* (abstract) Protected helper method to read subclass entity data from NBT.",1921],["protected abstract static class GeneratedCriteria {",1976],["* @model abstract=\"true\"",2152],["abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;",2375],["public abstract String toString();",3124],["public abstract class BaseLogic extends Handlers",3400],["abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode",3455],["public abstract String getName();",5586],["* (abstract) Protected helper method to write subclass entity data to NBT.",1915]],"useCount":598703},{"word":"accept","context":[["public boolean accept(File file) {",4820],[".accept(MediaType.APPLICATION_JSON)",2177],["public void accept(Visitor visitor) {",2307],["else super.accept(visitor);",3989],["public boolean accept(File pathname) {",4079],["public boolean accept(File f) {",4697],["public void accept(@NotNull PsiElementVisitor visitor) {",5069],["v.accept(this);",8479],["public boolean accept(File dir, String name) {",9700],["public <T> T accept(ParseTreeVisitor<? extends T> visitor) {",11895]],"useCount":391129},{"word":"access","context":[["this.access = access;",2382],["this.access = access;",2382],["*                if a database access error occurs",2494],["* @exception SQLException if a database access error occurs or",3198],["* @return the access mode specified for this class.",3422],["import org.springframework.security.access.prepost.PreAuthorize;",3731],["@SuppressWarnings(\"synthetic-access\")",4882],["* @throws SQLException if a database access error occurs",4945],["@SuppressWarnings(\"static-access\")",6071],["* @exception SQLException if a database access error occurs",14384]],"useCount":468255},{"word":"account","context":[["* account.",1423],["// and can be used in place of a service account.",1843],["for (Account account : accounts) {",1414],["private Account account;",2093],["if (account != null) {",2747],["* @param account",3620],["if (account == null) {",3801],["this.account = account;",5221],["this.account = account;",5221],["return account;",7040]],"useCount":385247},{"word":"action","context":[["import org.apache.struts.action.ActionForward;",13444],["import org.apache.struts.action.ActionForm;",15223],["return action;",15290],["import org.apache.struts.action.ActionMapping;",15546],["// Handle action bar item clicks here. The action bar will",26835],["// Handle action bar item clicks here. The action bar will",26835],["this.action = action;",13006],["this.action = action;",13006],["switch (action) {",12996],["// Inflate the menu; this adds items to the action bar if it is present.",38110]],"useCount":1584690},{"word":"actionPerformed","context":[["public void actionPerformed(java.awt.event.ActionEvent e) {",5973],["public void actionPerformed(AnActionEvent e) {",8893],["public void actionPerformed(ActionEvent ae) {",10162],["public void actionPerformed(final ActionEvent e) {",10303],["public void actionPerformed(ActionEvent evt) {",12259],["public void actionPerformed(ActionEvent event) {",13022],["public void actionPerformed(ActionEvent arg0) {",21059],["public void actionPerformed(ActionEvent e)",23385],["public void actionPerformed(java.awt.event.ActionEvent evt) {",112800],["public void actionPerformed(ActionEvent e) {",187882]],"useCount":501298},{"word":"activity","context":[["mActivity = activity;",5929],["* @param activity",7398],["private Activity activity;",5196],["activity.finish();",5176],["/** Called when the activity is first created. */",7726],["this.activity = activity;",11312],["this.activity = activity;",11312],["public void onAttach(Activity activity) {",14423],["super.onAttach(activity);",15986],["// as you specify a parent activity in AndroidManifest.xml.",26880]],"useCount":585163},{"word":"actual","context":[["this.actual = actual;",2209],["MaterializedResult actual = computeActual(\"\" +",2228],["* @param actual the actual value.",2451],["assertEquals(expected, actual);",16385],["Assert.assertEquals(expected, actual);",7530],["*                 The value returned if the actual value is not exposed by the requested API version.",3155],["assertEquals(actual, expected);",3026],["\"actual parameter 1 of f does not match formal parameter\\n\" +",2806],["assertNotNull(actual);",2634],["* @param actual the actual value.",2451]],"useCount":410319},{"word":"adapter","context":[["* @return the new adapter.",28789],["adapter.notifyDataSetChanged();",20744],["listView.setAdapter(adapter);",7292],["return adapter;",4620],["setListAdapter(adapter);",4135],["if (adapter != null) {",3657],["this.adapter = adapter;",3224],["this.adapter = adapter;",3224],["adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);",2956],["if (adapter == null) {",3179]],"useCount":381391},{"word":"add","context":[["* For example, to add a new item, do as follows:",88109],["types.add(EsbElementTypes.EsbLink_4001);",32239],["cachedSerQNames.add(qName);",189676],["cachedSerClasses.add(cls);",189676],["cachedDeserFactories.add(beandf);",124894],["cachedSerFactories.add(beansf);",124894],["llapi.getSubterm().add(",275424],["cachedSerFactories.add(enumsf);",61869],["cachedDeserFactories.add(enumdf);",61869],["newChildDescriptors.add",40954]],"useCount":7037095},{"word":"added","context":[["* added.",1274],["* @return The added child.",1339],["* Contributor(s): all the names of the contributors are added in the source code",1814],["if (!added) {",2090],["if (added) {",2383],["* has been added to the <code>java.beans</code> package.",3039],["* added to help the parsers",3109],["return added;",4103],["added = true;",4916],["boolean added = false;",4193]],"useCount":346873},{"word":"additional","context":[["* additional information or have any questions.",5845],["* See the NOTICE file distributed with this work for additional information",5998],["* distributed with this work for additional information        *",7161],["distributed with this work for additional information",9914],["// distributed with this work for additional information",18526],["* See the NOTICE file distributed with this work for additional",19893],["* CA 95054 USA or visit www.sun.com if you need additional information or",29458],["*  distributed with this work for additional information",30628],["* or visit www.oracle.com if you need additional information or have any",139265],["* distributed with this work for additional information",436355]],"useCount":848003},{"word":"address","context":[["* Any questions about this component can be directed to it's project Web address",3271],["this.address = address;",20546],["this.address = address;",20546],["return address;",19977],["private String address;",8181],["public void setAddress(String address) {",6872],["* @param address",6293],["* Set the endpoint address for the specified port name.",4346],["if (address == null) {",3287],["HttpUtil.sendHttpRequest(address, new HttpCallbackListener() {",3279]],"useCount":601719},{"word":"admin","context":[["client().admin().indices().prepareCreate(\"test\")",2110],["assertAcked(client.admin().cluster().preparePutRepository(\"test-repo\")",2907],["client().admin().indices().prepareRefresh().execute().actionGet();",2449],["this.admin = admin;",1464],["import org.elasticsearch.action.admin.cluster.state.ClusterStateResponse;",1493],["import org.elasticsearch.action.admin.cluster.health.ClusterHealthResponse;",2263],["admin.close();",1588],["return admin;",1614],["database.open(\"admin\", \"admin\");",2017],["database.open(\"admin\", \"admin\");",2017]],"useCount":433381},{"word":"ads","context":[["import com.google.api.ads.common.lib.auth.OfflineCredentials;",4945],["package com.google.api.ads.dfp.jaxws.v201508;",2652],["package com.google.api.ads.dfp.jaxws.v201511;",2624],["package com.google.api.ads.dfp.jaxws.v201602;",2600],["package com.google.api.ads.dfp.axis.v201508;",2176],["package com.google.api.ads.dfp.axis.v201511;",2118],["import com.google.api.ads.dfp.axis.factory.DfpServices;",3687],["import com.google.api.ads.dfp.lib.client.DfpSession;",3804],["* \"ads.properties\" file. See README for more info.",4759],["import com.google.api.ads.common.lib.auth.OfflineCredentials.Api;",4935]],"useCount":424413},{"word":"after","context":[["// namespace data after writing the charactor data",6347],["public void beforeTextChanged(CharSequence s, int start, int count, int after) {",6812],["Objects.requireNonNull(after);",8075],["* applies the {@code after} function to the result.",2891],["// Called once after isFinished returns true",6328],["public void after() {",5868],["* @param after The function to apply after this function is applied",4806],["* @param after The function to apply after this function is applied",4806],["int after) {",2205],["public void after() throws Exception {",2445]],"useCount":599782},{"word":"align","context":[["*  <tr valign=\"top\"  align=\"left\">",451],["*   <tr valign=\"top\"> <td> &nbsp <th scope=\"row\" align=\"right\">",528],["aligned, it can specify which of its children to baseline align to",546],["* @param align",565],["align();",665],["this.align = align;",1117],["this.align = align;",1117],["* <td align=\"left\">&nbsp;</th>",1133],["return align;",1246],["<colgroup align=\"left\" />",236448]],"useCount":312614},{"word":"all","context":[["//Remove all ones in domList where index > voCollection.size() as these should",11973],["* it's useful to ignore a case when inheritance will catch all the cases anyway.",26089],["* {@link RendererChangeEvent} to all registered listeners.",3536],["@java.lang.SuppressWarnings({ \"all\", \"unchecked\", \"rawtypes\" })",3567],["return all;",4858],["* Credits goes to all Open Source Core Developer Groups listed below",5172],["// Note all attributes that were handled. Used to differ normal attributes",6239],["@java.lang.SuppressWarnings(\"all\")",7120],["* Then add one of all possible objet in the list.",7363],["@SuppressWarnings(\"all\")",34656]],"useCount":1629410},{"word":"allowed","context":[["return allowed;",1227],["*            allowed object is {@link String }",9446],["* @param value allowed object is",4046],["* @param value allowed object is {@link String }",2845],["private Factory() { } // No instance of this class allowed",2026],["* Objects of the following type(s) are allowed in the list",85689],["*     allowed object is",507505],["throw new IllegalArgumentException(\"Recursive containment not allowed for \" + toString());",1667],["\"No operations allowed after statement closed\",",1479],["allowed to take focus.  This value does not impact the behavior of",1167]],"useCount":790039},{"word":"already","context":[["// check if the domainObject already has a valueObject created for it",7273],["* @throws EntityAlreadyDeletedException When the entity has already been deleted. (not found)",4547],["* @throws EntityAlreadyExistsException When the entity already exists. (unique constraint violation)",3256],["// Return eq fs instance if already created",2179],["* If this collection has already been initialized with",1606],["* if one already exists.",1486],["\"build() has already been called on this Builder.\");",1358],["/** denotes if the user-EOF-code has already been executed */",899],["* @param fieldName  the field name, typically not used as already appended",863],["* @param map DomainObjectMap of DomainObjects to already created ValueObjects.",14546]],"useCount":439220},{"word":"also","context":[["*       comment syntax for the file format. We also recommend that a",2703],["comment syntax for the file format. We also recommend that a",2199],["* choice, provided that you also meet, for each linked independent module,",2125],["* text describing the FLOSS exception, and it is also available here:",2003],["* or any subpackage (subdirectory) of this package must must also be be released",1580],["* factory method {@link #init init()}, which also performs",1451],["@ also",1417],["* terms of your choice, provided that you also meet, for each linked",3400],["* the FLOSS exception, and it is also available here:",14510],["terms of your choice, provided that you also meet, for each linked",20904]],"useCount":341985},{"word":"amazonaws","context":[["import com.amazonaws.AmazonServiceException;",7568],["import com.amazonaws.transform.*;",7438],["import com.amazonaws.AmazonWebServiceRequest;",8683],["import com.amazonaws.util.BinaryUtils;",8687],["import com.amazonaws.util.StringInputStream;",9086],["import com.amazonaws.DefaultRequest;",9665],["import com.amazonaws.Request;",10637],["import com.amazonaws.transform.Marshaller;",12994],["import com.amazonaws.util.StringUtils;",13089],["import com.amazonaws.AmazonClientException;",14663]],"useCount":381943},{"word":"an","context":[["// This is good.  We were expecting an exception.",17187],["* @throws IOException if an I/O error occurs",22012],["* Find the _Fields constant that matches fieldId, throwing an exception",14940],["* It is intended to be used when one called to an Assembler is made.",7273],["* This constructs an instance from a factory and a notifier.",7334],["an action bar/action mode. This will be used to determine how many",7657],["*             If an error response is returned by AmazonEC2 indicating",9141],["* object is an invalid instance according to the schema",10468],["* Util method to write an attribute without the ns prefix",12639],["* Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}",22244]],"useCount":3668083},{"word":"and","context":[["* which accompanies this distribution, and is available at",205415],["* and open the template in the editor.",179345],["* Redistribution and use in source and binary forms, with or without",168359],["* Redistribution and use in source and binary forms, with or without",168359],["* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",145292],["* This program and the accompanying materials are made available under the",56649],["*     IBM Corporation - initial API and implementation",31115],["and/or other materials provided with the distribution.",27946],["Redistribution and use in source and binary forms, with or without modification,",25923],["Redistribution and use in source and binary forms, with or without modification,",25923]],"useCount":8324707},{"word":"android","context":[["import android.content.Context;",497060],["import android.view.View;",440678],["import android.os.Bundle;",413597],["import android.content.Intent;",282932],["import android.util.Log;",270270],["import android.app.Activity;",217133],["import android.view.ViewGroup;",195672],["import android.view.LayoutInflater;",169164],["import android.widget.Toast;",115638],["import android.widget.TextView;",217026]],"useCount":9875963},{"word":"annotation","context":[["import java.lang.annotation.Retention;",82802],["import javax.xml.bind.annotation.XmlAccessType;",176699],["import javax.xml.bind.annotation.XmlElement;",101222],["import javax.xml.bind.annotation.XmlRootElement;",97132],["import javax.annotation.Nullable;",76657],["import java.lang.annotation.Target;",73626],["import java.lang.annotation.RetentionPolicy;",68362],["import javax.xml.bind.annotation.XmlAccessorType;",176902],["import javax.xml.bind.annotation.XmlType;",182690],["import org.springframework.beans.factory.annotation.Autowired;",196694]],"useCount":3293391},{"word":"annotations","context":[["import org.jetbrains.annotations.NotNull;",137417],["import com.google.gson.annotations.Expose;",9066],["import org.jetbrains.annotations.*;",10589],["import org.testng.annotations.BeforeClass;",14795],["import org.testng.annotations.BeforeMethod;",19294],["import com.google.gson.annotations.SerializedName;",20244],["import com.google.common.annotations.VisibleForTesting;",27583],["import org.jetbrains.annotations.Nullable;",88447],["import org.testng.annotations.Test;",93954],["import org.jetbrains.annotations.NonNls;",26484]],"useCount":1173645},{"word":"another","context":[["<p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",252522],["/** <p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",117936],["* Copy one ValueObject to another",7273],["// Called when another command which requires one or more of the same",6339],["*            wrapping another exception.",1968],["* cursor moves to another row.",1528],["// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies",1387],["* cannot be serialized or there is another error,",941],["* CVS:   If this change has been taken from another system,",819],["* are changing in another thread, we pass a 0-length Array of",662]],"useCount":574973},{"word":"any","context":[["/* This file and method are generated by TestGenerator, any edits will be overwritten by the next generation. */",6556],["* It test the number of wanted objet returned by the methods, and if any object really exist in the original list.",7363],["* null or if any SAXException is thrown during marshaling",7495],["// we have to store this data until last moment since it is not possible to write any",6150],["* This handles model notifications by calling {@link #updateChildren} to update any cached",7502],["import static org.mockito.Matchers.any;",24060],["* have any questions.",30263],["*             If any internal errors are encountered inside the client while",35112],["* not a snapshot. Therefore any modification you make to the",84353],["* or visit www.oracle.com if you need additional information or have any",139265]],"useCount":1612091},{"word":"apache","context":[["elemField = new org.apache.axis.description.ElementDesc();",52777],["import org.apache.hadoop.fs.Path;",46356],["import org.apache.commons.io.IOUtils;",40887],["import org.apache.log4j.Logger;",173138],["import org.apache.commons.logging.Log;",153397],["import org.apache.commons.logging.LogFactory;",148935],["import org.apache.commons.lang.StringUtils;",92138],["import org.apache.hadoop.conf.Configuration;",69808],["import org.apache.commons.lang3.StringUtils;",62686],["org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);",37065]],"useCount":9790796},{"word":"api","context":[["import com.google.api.ads.common.lib.auth.OfflineCredentials.Api;",4935],["import static org.assertj.core.api.Assertions.assertThat;",39280],["* @module.api",10552],["import org.jboss.arquillian.container.test.api.Deployment;",9691],["import org.jboss.shrinkwrap.api.ShrinkWrap;",7823],["import static org.fest.assertions.api.Assertions.assertThat;",6689],["import com.google.api.client.auth.oauth2.Credential;",6182],["import com.google.android.gms.common.api.GoogleApiClient;",5651],["import org.jboss.shrinkwrap.api.spec.WebArchive;",5208],["import com.google.api.ads.common.lib.auth.OfflineCredentials;",4945]],"useCount":3274240},{"word":"app","context":[["import android.app.Fragment;",22895],["import android.app.Activity;",217133],["import android.support.v4.app.Fragment;",66832],["import android.app.AlertDialog;",53283],["import android.support.v7.app.AppCompatActivity;",51760],["import android.support.v7.app.ActionBarActivity;",24660],["import android.app.Application;",50804],["import android.app.Dialog;",30758],["import android.app.ProgressDialog;",25185],["import android.app.PendingIntent;",26329]],"useCount":1533780},{"word":"append","context":[["auditStr.append(\"; \");",27451],["sb.append(\")\");",26599],["sb.append(\"{\");",23984],["if (!first) sb.append(\", \");",23089],["sb.append(\", \");",20024],["sb.append(c);",19026],["sb.append(",17654],["sb.append(\"\\n\");",27757],["sb.append(\"null\");",30392],["sb.append(\"}\");",32239]],"useCount":4497131},{"word":"application","context":[["import javafx.application.Application;",8601],["import javafx.application.Platform;",7501],["import javax.faces.application.FacesMessage;",7320],["throw new RuntimeException(\"Invalid application form\");",7113],["Base application theme, dependent on API level. This theme is replaced",5064],["@Produces(\"application/json\")",10133],["Base application theme for API 11+. This theme completely replaces",4654],["import com.intellij.openapi.application.ApplicationManager;",23743],["@Headers(\"Content-Type: application/json; charset=utf-8\")",9647],["Base application theme for API 14+. This theme completely replaces",4633]],"useCount":791055},{"word":"apply","context":[[".apply();",4167],["editor.apply();",10332],["rm.apply();",5807],["* @param before1 The first function to apply before this function is applied",5056],["* @param after The function to apply after this function is applied",4806],["* @param projection the projection to apply to the query",1972],["* @param before2 The second function to apply before this function is applied",4544],["* @param before3 The third function to apply before this function is applied",2592],["public void apply() {",3202],["public void apply(Switch sw)",3828]],"useCount":395692},{"word":"are","context":[["* Objects of the following type(s) are allowed in the list",85689],["this exception to your version of the library, but you are not",20635],["* The following features are implemented:",19662],["* The following features are supported:",19074],["* Do not make changes to this file unless you know what you are doing--modify",10675],["Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),",151497],["This source code and its compiled class files are free and modifiable under the terms of",22574],["*             If any internal errors are encountered inside the client while",35112],["* are met:",41427],["* This program and the accompanying materials are made available under the",56649]],"useCount":2918177},{"word":"arg","context":[["if (arg != null) {",1631],["public void update(Observable o, Object arg) {",3326],["v.visit(this, arg);",1687],["return v.visit(this, arg);",1831],["return arg;",4908],["for (String arg : args) {",4796],["String arg = rc.getArg();",1892],["if (arg == null) {",2033],["String arg = args[i];",2124],["* @param arg",3907]],"useCount":332937},{"word":"args","context":[["public static void main(String[] args) {",291153],["* @param args the command line arguments",20803],["public static void main(String[] args){",17970],["fragment.setArguments(args);",12246],["public static void main(String[] args) throws Exception {",77841],["Bundle args = new Bundle();",24400],["* @param args",60228],["public static void main(String[] args) throws IOException {",25412],["public static void main(String[] args)",40781],["public static void main(String args[]) {",30386]],"useCount":2116534},{"word":"argument","context":[["* @implNote The input argument of this method is a able to return primitive values. In this case this is {@code",6656],["// TODO: Update argument type and name",1397],["\"Invalid argument passed to marshall(...)\");",9478],["* @throws NullPointerException If given argument is {@code null}",21071],["throw new AmazonClientException(\"Invalid argument passed to marshall(...)\");",3125],["* @implNote The input argument of this method is a able to handle primitive values. In this case this is {@code",7680],["* @param <T> The type of the first argument to the function",2768],["* The fragment argument representing the section number for this",1461],["return argument;",1728],["* argument.",2372]],"useCount":403524},{"word":"arguments","context":[["this.arguments = arguments;",3722],["* @param args the command line arguments",20803],["public boolean startJob(String arguments, Object condition, boolean hiredByName) {",6746],["public Object doCommand(String commandName, String arguments, CommandChecker checker) {",5216],["return arguments;",4823],["return  super.doCommand(commandName, arguments, checker);",4649],["java.lang.String[] parameterTypes, java.lang.Object[] arguments)",4474],["* @param arguments",3866],["this.arguments = arguments;",3722],["arguments.clear();",2655]],"useCount":495302},{"word":"array","context":[["attribute's value can be found in the {@link #SearchView} array.",13730],["for (int i = 0; i < array.length; i++) {",13032],["if (array == null) {",13020],["attribute's value can be found in the {@link #MenuItem} array.",14382],["attribute's value can be found in the {@link #AppCompatTheme} array.",18227],["attribute's value can be found in the {@link #Toolbar} array.",21741],["attribute's value can be found in the {@link #ActionBar} array.",22588],["return array;",29816],["* @param array",12849],["attribute's value can be found in the {@link #Theme} array.",68134]],"useCount":2099037},{"word":"as","context":[["* as indicated by the @author tags.",12199],["/** <p>Must be a string value, using '\\\\;' to escape characters such as '\\\\n' or '\\\\uxxxx' for a unicode character.",12372],["* and other contributors as indicated by the @author tags.",15121],["// as you specify a parent activity in AndroidManifest.xml.",26880],["<p>Must be a string value, using '\\\\;' to escape characters such as '\\\\n' or '\\\\uxxxx' for a unicode character.",31095],["/** <p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",42975],["<p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",87204],["* For example, to add a new item, do as follows:",88109],["* particular file as subject to the \"Classpath\" exception as provided",100648],["* particular file as subject to the \"Classpath\" exception as provided",100648]],"useCount":3173245},{"word":"asList","context":[[".postAggregators(Arrays.<PostAggregator>asList(QueryRunnerTestHelper.addRowsIndexConstant))",1257],["childrenElements.add(new DOMElement(\"#text\", \"\", new ArrayList<String>(Arrays.asList(\"\"))));",26221],["import static java.util.Arrays.asList;",17294],["Arrays.asList(",11690],["return Arrays.asList(",4744],["childrenElements.add(new DOMElement(\"DIV\", \"\", new ArrayList<String>(Arrays.asList(\"\"))));",4162],["return Arrays.asList(new Object[][]{",2671],["return Arrays.asList(new Object[][] {",2055],["parentElement = new DOMElement(\"HEAD\", \"\", new ArrayList<String>(Arrays.asList(\"\")));",2028],["List<Row> expectedResults = Arrays.asList(",1270]],"useCount":396112},{"word":"assert","context":[["assert(value != null);",3795],["assert false;",15284],["assert(false);",3657],["assert totest.size() == howmany + 1 - 56;",3136],["//assert",2511],["assert (false);",2424],["assert name != null;",1804],["assert key != null;",1792],["// assert",7129],["assert llapi.getSubterm().contains(unit.getContainedItem()) : \"missing element\";",5822]],"useCount":572192},{"word":"assertEquals","context":[["import static junit.framework.Assert.assertEquals;",9694],["assertEquals(",98215],["Assert.assertEquals(",26035],["import static org.testng.Assert.assertEquals;",21434],["assertEquals(expResult, result);",16590],["assertEquals( 2,",8367],["assertEquals(expected, actual);",16385],["assertEquals(4, 2 + 2);",14595],["assertEquals( 1,",14481],["import static org.junit.Assert.assertEquals;",235826]],"useCount":4354079},{"word":"assertFalse","context":[["assertFalse(rs.next());",16135],["assertFalse(",4815],["import static org.testng.Assert.assertFalse;",4665],["assertFalse(listener.isInvoked());",4319],["assertFalse(iter.hasNext());",3912],["assertFalse(iterator.hasNext());",3900],["assertFalse(result);",3659],["assertFalse(it.hasNext());",3177],["assertFalse(r1.equals(r2));",2777],["import static org.junit.Assert.assertFalse;",68429]],"useCount":617542},{"word":"assertNotNull","context":[["assertNotNull(task);",3000],["assertNotNull(parser);",3093],["assertNotNull(e);",4158],["import static org.testng.Assert.assertNotNull;",4893],["Assert.assertNotNull(result);",5439],["assertNotNull(results);",6113],["assertNotNull(response);",6464],["assertNotNull(result);",27364],["import static junit.framework.Assert.assertNotNull;",2808],["import static org.junit.Assert.assertNotNull;",71184]],"useCount":814388},{"word":"assertThat","context":[["import static org.hamcrest.MatcherAssert.assertThat;",27923],["import static org.junit.Assert.assertThat;",63342],["import static org.assertj.core.api.Assertions.assertThat;",39280],["assertThat(e)",4351],["MatcherAssert.assertThat(",4711],["import static org.fest.assertions.api.Assertions.assertThat;",6689],["import static com.google.common.truth.Truth.assertThat;",7204],["import static org.fest.assertions.Assertions.assertThat;",9051],["assertThat(bucket, notNullValue());",11846],["assertThat(",36160]],"useCount":1564385},{"word":"assertTrue","context":[["Assert.assertTrue(",8237],["assertTrue(ParamFailure2, checkResult_ParamFailure2(src, dest, result));",7595],["assertTrue (rs.next());",9944],["import static org.testng.Assert.assertTrue;",10881],["assertTrue(true);",13518],["assertTrue(false);",14280],["assertTrue(",22544],["assertTrue(rs.next());",29284],["assertTrue( true );",40453],["import static org.junit.Assert.assertTrue;",145713]],"useCount":1811707},{"word":"associated","context":[["*            <code>null</code> will use the default request options from the associated service client (",996],["* @param value value to be associated with the specified key",1065],["* (Mapping set in associated BeanInfo class.)",2346],["* @param key key with which the specified value is to be associated",1643],["* associated BeanInfo class.)",1548],["The title associated with the item.",1363],["The condensed title associated with the item.  This is used in situations where the",1363],["The icon associated with this item.  This icon will not always be shown, so",1363],["//We can safely assume an element has only one type associated with it",2721],["<tr><td><code>{@link #MenuItem_android_icon android:icon}</code></td><td> The icon associated with this item.</td></tr>",1083]],"useCount":321772},{"word":"ast","context":[["super(ast);",815],["* @ast method",11372],["return ast;",876],["import com.alibaba.cobar.parser.ast.expression.Expression;",906],["import com.alibaba.druid.sql.ast.SQLStatement;",934],["import org.codehaus.groovy.ast.expr.Expression;",961],["public void visitToken(DetailAST ast) {",1035],["\"diet ast\");",1048],["import org.codehaus.groovy.ast.ClassNode;",1668],["import org.codehaus.groovy.ast.ClassHelper;",808]],"useCount":312470},{"word":"at","context":[["* and is available at http://www.eclipse.org/legal/epl-v10.html",23608],["Details (including contact information) can be found at:",12534],["*  Complete list of developers available at our web site:",11027],["*  which accompanies this distribution, and is available at",7406],["* at:",7298],["//Sybase stores it as a single space, Oracle stores it as NULL. This fix will make them consistent at least.",7191],["* Complete list of developers available at our web site:",7071],["* Postcondition: If this object is an element, the reader is positioned at its end element",6055],["*                If this object is a complex type, the reader is positioned at the end element of its outer element",5977],["* which accompanies this distribution, and is available at",205415]],"useCount":1748360},{"word":"attr","context":[["return attr;",3733],["@attr name android:visible",4339],["@attr name android:enabled",4358],["@attr name android:id",5410],["@attr name android:menuCategory",4330],["@attr name android:orderInCategory",4330],["if (attr != null) {",7040],["public static final class attr {",15776],["@attr description",171143],["@attr name android:gravity",3877]],"useCount":774405},{"word":"attribute","context":[["theme attribute (in the form",317212],["attribute's value can be found in the {@link #Theme} array.",68134],["<p>This corresponds to the global attribute",50212],["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167],["attribute's value can be found in the {@link #ActionBar} array.",22588],["attribute's value can be found in the {@link #Toolbar} array.",21741],["attribute's value can be found in the {@link #AppCompatTheme} array.",18227],["attribute's value can be found in the {@link #MenuItem} array.",14382],["attribute's value can be found in the {@link #SearchView} array.",13730],["* Util method to write an attribute without the ns prefix",12639]],"useCount":2116276},{"word":"attributes","context":[["return attributes;",14844],["<p>Includes the following attributes:</p>",54642],["this.attributes = attributes;",6543],["this.attributes = attributes;",6543],["// Note all attributes that were handled. Used to differ normal attributes",6239],["// Note all attributes that were handled. Used to differ normal attributes",6239],["* @param attributes",4657],["if (attributes != null) {",4023],["if (attributes == null) {",3930],["* Gets a map that contains attributes that aren't bound to any typed property on this class.",3631]],"useCount":642189},{"word":"attrs","context":[["public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {",2420],["super(context, attrs);",56657],["super(context, attrs, defStyle);",28361],["super(context, attrs, defStyleAttr);",13122],["this(context, attrs, 0);",10929],["* @param attrs",4339],["return attrs;",4211],["if (attrs != null) {",4194],["super(context, attrs, defStyleAttr, defStyleRes);",4117],["init(context, attrs);",3639]],"useCount":362805},{"word":"author","context":[["* @author Dave Wichers <a href=\"https://www.aspectsecurity.com\">Aspect Security</a>",10784],["* @author Scott Ferguson",21696],["* @author Nick Sanidas <a href=\"https://www.aspectsecurity.com\">Aspect Security</a>",20478],["* and other contributors as indicated by the @author tags.",15121],["* @author Juergen Hoeller",14805],["* @author Kuali Rice Team (rice.collab@kuali.org)",14685],["* @author Kohsuke Kawaguchi",13245],["* @author",12348],["* as indicated by the @author tags.",12199],["* @author Steve Jin (http://www.doublecloud.org)",12021]],"useCount":4547511},{"word":"available","context":[["*  which accompanies this distribution, and is available at",7406],["* which accompanies this distribution, and is available at",205415],["*  Complete list of developers available at our web site:",11027],["* the FLOSS exception, and it is also available here:",14510],["* and is available at http://www.eclipse.org/legal/epl-v10.html",23608],["*             if a network connection is not available.",35112],["/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.",7452],["Theme customizations available in newer API levels can go in",5506],["* Complete list of developers available at our web site:",7071],["* This program and the accompanying materials are made available under the",56649]],"useCount":819148},{"word":"awt","context":[["import java.awt.BorderLayout;",53776],["import java.awt.*;",145594],["gridBagConstraints = new java.awt.GridBagConstraints();",48712],["import java.awt.Component;",52776],["import java.awt.image.BufferedImage;",57937],["import java.awt.Dimension;",71014],["import java.awt.event.ActionListener;",89368],["import java.awt.Color;",112744],["public void actionPerformed(java.awt.event.ActionEvent evt) {",112800],["import java.awt.event.ActionEvent;",118625]],"useCount":2365649},{"word":"axis","context":[["private static org.apache.axis.description.TypeDesc typeDesc =",33871],["org.apache.axis.description.ElementDesc elemField = new org.apache.axis.description.ElementDesc();",20958],["org.apache.axis.description.ElementDesc elemField = new org.apache.axis.description.ElementDesc();",20958],["new  org.apache.axis.encoding.ser.BeanDeserializer(",24551],["new  org.apache.axis.encoding.ser.BeanSerializer(",24773],["throw new org.apache.axis.NoEndPointException();",13657],["public static org.apache.axis.encoding.Deserializer getDeserializer(",33959],["public static org.apache.axis.encoding.Serializer getSerializer(",33959],["public static org.apache.axis.description.TypeDesc getTypeDesc() {",34032],["elemField = new org.apache.axis.description.ElementDesc();",52777]],"useCount":939989},{"word":"b","context":[["StringBuilder b = new StringBuilder();",10641],["*  <dt><b>Scheduler:</b></dt>",12357],["b.append(\", \");",9094],["*  <dt><b>Scheduler:</b></dt>",12357],["return b.toString();",17696],["* @param b",20858],["com.google.protobuf.ByteString b =",22061],["* <b>Constraints:</b><br/>",34248],["* <b>Constraints:</b><br/>",34248],["return b;",64331]],"useCount":3502889},{"word":"bar","context":[["String bar;",8674],["String bar = new Test().doSomething(param);",10182],["String bar = doSomething(param);",10282],["return bar;",22121],["// Handle action bar item clicks here. The action bar will",26835],["// Handle action bar item clicks here. The action bar will",26835],["// Inflate the menu; this adds items to the action bar if it is present.",38110],["an action bar/action mode. This will be used to determine how many",7657],["bar = param;",7132],["Default height of an action bar.",5297]],"useCount":723667},{"word":"base","context":[["import com.google.common.base.Joiner;",26917],["*     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",105617],["import static com.google.common.base.Preconditions.checkArgument;",21055],["import com.google.common.base.Strings;",22102],["import com.google.common.base.Objects;",23295],["import com.google.common.base.Predicate;",25437],["import com.google.common.base.Function;",38442],["import static com.google.common.base.Preconditions.checkNotNull;",39011],["import com.google.common.base.Optional;",42847],["import com.google.common.base.Preconditions;",70500]],"useCount":1431894},{"word":"based","context":[["* a combined work based on this library. Thus, the terms and conditions of",1857],["Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),",151497],["* @param series  the series index (zero-based).",4463],["*       form, that is based on (or derived from) the Work and for which the",2735],["* @param series  the series (zero-based index).",2497],["form, that is based on (or derived from) the Work and for which the",2208],["* @param item  the item index (zero-based).",2119],["* making a combined work based on this library.  Thus, the terms and",1929],["* module is a module which is not derived from or based on this library. If",1857],["making a combined work based on this library.  Thus, the terms and",20656]],"useCount":511780},{"word":"be","context":[["attribute's value can be found in the {@link #Theme} array.",68134],["* returned list will be present inside the JAXB object.",84324],["<p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",87204],["// Any modifications to this file will be lost upon recompilation of the source schema.",64071],["* there really should be more of a description here...",62720],["* @return Returns a reference to this object so that method calls can be",49924],["/** <p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",42975],["<p>Must be a boolean value, either \"<code>true</code>\" or \"<code>false</code>\".",41343],["/** <p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",117936],["<p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",252522]],"useCount":6872202},{"word":"bean","context":[["* Sets the Spring bean ID for this bean.",4563],["* Sets the Spring bean ID for this bean.",4563],["* Returns the Spring bean ID for this bean.",4563],["map.addValueObjectBean(this, bean);",8064],["bean.populate(map, this);",8064],["if (bean == null)",8488],["import javax.faces.bean.ManagedBean;",9248],["this.version = bean.getVersion();",14552],["this.id = bean.getId();",14583],["return bean;",21185]],"useCount":567662},{"word":"beans","context":[["import java.beans.PropertyChangeListener;",24161],["import org.springframework.beans.factory.annotation.Autowired;",196694],["if(beans == null)",22813],["import java.beans.PropertyChangeEvent;",20147],["import org.springframework.beans.factory.annotation.Value;",17280],["import org.springframework.beans.factory.annotation.Qualifier;",15256],["import org.springframework.beans.factory.InitializingBean;",11668],["for(int x = 0; x < beans.length; x++)",11403],["java.util.Iterator iter = beans.iterator();",11403],["import org.springframework.beans.BeansException;",8819]],"useCount":746984},{"word":"because","context":[["* based on the propagated JAAS credentials because this service can only be",518],["* because it inherits calls before. (Don't call SetupSelect after here)",1142],["*         The request processing has failed because of an unknown error,",906],["*         The request was rejected because it referenced an entity that",796],["// cannot cache because it uses related DB meta instance while booting",747],["*       not final because of Externalization",662],["* because it informs the driver that the parameter value should be sent to",649],["*         An exception occurred because an invalid gateway request was",595],["* Do not make give this method the name canInteractWith because it clashes with Container",559],["* will be thrown, because in that case no valid index can be specified.</p>",531]],"useCount":313578},{"word":"been","context":[["/** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */",13392],["// Version 1.0, which has been approved by the Open Source Initiative.",2763],["* Work on LensKit has been funded by the National Science Foundation under",2997],["* has been added to the <code>java.beans</code> package.",3039],["* @return Returns the value of the attribute, or null, if it hasn't been set by the JSF file.",3600],["* @throws EntityAlreadyDeletedException When the entity has already been deleted. (not found)",4547],["* @throws EntityDuplicatedException When the entity has been duplicated.",5782],["*    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>",6447],["// value isIncludeRecord has been set, then we return null and",7273],["// value isIncludeRecord has not been set, then we return null and",7273]],"useCount":683174},{"word":"before","context":[["public void before() {",13393],["*   GZIP: gzip-compresses object before encoding it.",1981],["// must set encoding style before registering serializers",2331],["* @param before3 The third function to apply before this function is applied",2592],["* @param before2 The second function to apply before this function is applied",4544],["* @param before1 The first function to apply before this function is applied",5056],["public void before() throws Exception {",5521],["// Called just before this Command runs the first time",6345],["public void onTextChanged(CharSequence s, int start, int before, int count) {",8130],["// do for sure before leaving",28071]],"useCount":616880},{"word":"begin","context":[["* <!-- begin-user-doc --> <!--",2333],["* <!-- begin-user-doc -->",1454217],["* <!-- begin-user-doc --> <!-- end-user-doc -->",30191],["entityManager.getTransaction().begin();",2609],["batch.begin();",3390],["begin();",3391],["* begin-user-doc --> <!-- end-user-doc -->",6875],["em.getTransaction().begin();",11517],["tx.begin();",11619],["* <!-- begin-model-doc -->",18295]],"useCount":1742342},{"word":"being","context":[["//Trying to avoid the hibernate collection being marked as dirty via its public interface methods. (like add)",11574],["* @return the suite of tests being tested",5862],["// it from being updated in the future.",3509],["* @param value The value validation is being performed on.",829],["* without being obliged to provide the source code for any proprietary components.",885],["* @param node           the node being exited",908],["* @return the XML Name for the Class being described.",3422],["* The object is not GZip-compressed before being encoded.",1026],["/** passes which object is being disposed (from MesquiteListener interface)*/",1637],["*      of the client being idle or some other reason causing the server",1654]],"useCount":357172},{"word":"binary","context":[["* Redistribution and use in source and binary forms, with or without",168359],["Redistribution and use in source and binary forms, with or without modification,",25923],["Redistribution and use in source and binary forms, with or without",18917],["* Redistribution and use in source and binary forms, with or",3238],["* Redistribution and use in source and binary forms, with or without modification,",13261],["import org.apache.commons.codec.binary.Base64;",11793],["// Redistribution and use in source and binary forms, with or without",8716],["*  Redistribution and use in source and binary forms, with or without",5517],["* Redistribution and use in source and binary forms, with or without modification, are",4388],["import org.apache.commons.codec.binary.Hex;",3258]],"useCount":409242},{"word":"bind","context":[["import javax.xml.bind.annotation.XmlElement;",101222],["import javax.xml.bind.annotation.XmlSchemaType;",27895],["import org.springframework.web.bind.annotation.RequestMethod;",39313],["import javax.xml.bind.annotation.XmlAttribute;",53087],["import org.springframework.web.bind.annotation.RequestMapping;",63771],["import javax.xml.bind.annotation.XmlRootElement;",97132],["import javax.xml.bind.annotation.XmlType;",182690],["import javax.xml.bind.annotation.XmlAccessorType;",176902],["import javax.xml.bind.annotation.XmlAccessType;",176699],["import org.springframework.web.bind.annotation.RequestParam;",21947]],"useCount":1484371},{"word":"bitField0_","context":[["bitField0_ = (bitField0_ & ~0x00000002);",25065],["bitField0_ |= 0x00000001;",37967],["bitField0_ = (bitField0_ & ~0x00000001);",33290],["bitField0_ = (bitField0_ & ~0x00000001);",33290],["if (((bitField0_ & 0x00000001) == 0x00000001)) {",28702],["private int bitField0_;",27854],["bitField0_ |= 0x00000002;",27499],["bitField0_ = (bitField0_ & ~0x00000002);",25065],["return ((bitField0_ & 0x00000001) == 0x00000001);",24835],["if (((bitField0_ & 0x00000002) == 0x00000002)) {",21480]],"useCount":650828},{"word":"block","context":[["import net.minecraft.block.Block;",48391],["import net.minecraft.block.material.Material;",29273],["// TODO Auto-generated catch block",167039],["* Enabled aggressive block sorting",3851],["this.block = block;",4005],["this.block = block;",4005],["* reserved comment block",4043],["return block;",6985],["import net.minecraft.block.state.IBlockState;",15236],["import org.bukkit.block.Block;",10330]],"useCount":1241350},{"word":"body","context":[["if (body != null) {",5621],["return body;",13069],["this.body = body;",10786],["e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.",4508],["private String body;",3424],["if (body == null) {",3649],["* @param body",4282],["this.body = body;",10786],["//To change body of implemented methods use File | Settings | File Templates.",7552],["return null;  //To change body of implemented methods use File | Settings | File Templates.",6712]],"useCount":565135},{"word":"boolean","context":[["boolean first = true;",49764],["boolean found = false;",43463],["public boolean isEmpty() {",56569],["public boolean hasNext() {",57351],["public boolean onCreateOptionsMenu(Menu menu) {",68037],["public boolean onOptionsItemSelected(MenuItem item) {",77426],["public boolean equals(Object o) {",105625],["<p>Must be a boolean value, either \"<code>true</code>\" or \"<code>false</code>\".",41343],["public boolean equals(Object obj) {",181284],["public final boolean isInitialized() {",35552]],"useCount":11311216},{"word":"br","context":[["* <br>",125499],["* OLAT - Online Learning and Training<br>",10946],["* <br>Virtual Column: false",13276],["while ((line = br.readLine()) != null) {",13967],["* <br />",14718],["* <br><br>",14839],["* <br><br>",14839],["br.close();",27062],["* <br/>",32812],["* <b>Constraints:</b><br/>",34248]],"useCount":1200045},{"word":"break","context":[["break;",6151074],["} break;",10339],["break outer;",4650],["break ;",5229],["//                break;",6003],["default : break;",6026],["//\t\t\tbreak;",6065],["break loop;",6103],["else break;",6284],["// break;",8156]],"useCount":6656167},{"word":"buf","context":[["buf.append(\", \");",7644],["buf.setLength(0);",7961],["StringBuffer buf = new StringBuffer();",22114],["StringBuilder buf = new StringBuilder();",20862],["return buf;",14151],["buf.append(\"}\\n\");",13602],["buf.append(\"    }\\n\");",12339],["buf.append(\"\\n\");",10664],["buf.append(\"package test1;\\n\");",9422],["return buf.toString();",54416]],"useCount":1204670},{"word":"buffer","context":[["StringBuilder buffer = new StringBuilder();",11114],["return buffer.toString();",35313],["import io.netty.buffer.ByteBuf;",31652],["StringBuffer buffer = new StringBuffer();",22340],["return buffer;",22076],["byte[] buffer = new byte[1024];",11202],["import org.jboss.netty.buffer.ChannelBuffer;",11051],["* @param buffer",9390],["buffer.flip();",9266],["import io.netty.buffer.Unpooled;",7788]],"useCount":1629997},{"word":"build","context":[[".build());",44580],[".build(),",13271],[".build();",325934],["// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)",43888],["return builder.build();",41080],[".build()",30558],["// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)",29771],[".build())",26962],["this.unknownFields = unknownFields.build();",11218],["this.setUnknownFields(unknownFields.build());",8954]],"useCount":1656576},{"word":"builder","context":[["return builder.build();",41080],["StringBuilder builder = new StringBuilder();",51222],["return builder.toString();",51095],["return builder;",50152],["super(builder);",20381],["import org.apache.camel.builder.RouteBuilder;",18264],["builder.endObject();",16599],["Builder builder = new Builder(parent);",16243],["import org.apache.commons.lang.builder.ToStringBuilder;",11920],["* @return the builder",11689]],"useCount":2189682},{"word":"bukkit","context":[["import org.bukkit.entity.Player;",48936],["import org.bukkit.Bukkit;",25740],["import org.bukkit.ChatColor;",22565],["import org.bukkit.command.CommandSender;",21969],["import org.bukkit.Material;",19979],["import org.bukkit.Location;",19407],["import org.bukkit.inventory.ItemStack;",17160],["import org.bukkit.event.EventHandler;",14882],["import org.bukkit.event.Listener;",14504],["import org.bukkit.command.Command;",11343]],"useCount":529563},{"word":"but","context":[["this exception to your version of the library, but you are not",20635],["Licensor for the purpose of discussing and improving the Work, but",2208],["transformation or translation of a Source form, including but",2208],["to the Licensor or its representatives, including but not limited to",2256],["this will be a reference to the current theme, but when",2630],["*       Licensor for the purpose of discussing and improving the Work, but",2735],["*       to the Licensor or its representatives, including but not limited to",2735],["*       transformation or translation of a Source form, including but",2735],["* this exception to your version of the library, but you are not",3265],["* Various Contributors including, but not limited to:",4832]],"useCount":715432},{"word":"button","context":[["return button;",8208],["button.addActionListener(new ActionListener() {",3891],["button.setOnClickListener(new View.OnClickListener() {",3247],["Minimum width for an action button in the menu area of an action bar",2214],["button.addActionListener(this);",2079],["// Show the Up button in the action bar.",1792],["button.setEnabled(false);",1566],["button.setOnClickListener(new OnClickListener() {",1528],["this.button = button;",1445],["// automatically handle clicks on the Home/Up button, so long",26831]],"useCount":367814},{"word":"by","context":[["// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)",43888],["* This method was generated by MyBatis Generator.",58319],["* by the Apache Axis 1.4 Mar 02, 2009 (07:08:06 PST) WSDL2Java emitter.",30701],["* This class was automatically generated by the",17601],["* This field was generated by MyBatis Generator.",18406],["* @param orderByComparator the comparator to order the set by (optionally <code>null</code>)",18628],["// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2",20257],["* Created by IntelliJ IDEA.",23901],["// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)",29771],["* regenerated by the Form Editor.",17241]],"useCount":3668197},{"word":"byte","context":[["byte isInitialized = memoizedIsInitialized;",16990],["byte[] buffer = new byte[1024];",11202],["byte[] buffer = new byte[1024];",11202],["return new byte[0];",7595],["byte[] buf = new byte[1024];",6591],["byte[] buf = new byte[1024];",6591],["byte[] states = _states;",5573],["public byte[] getData() {",5090],["private byte memoizedIsInitialized = -1;",17101],["byte[] data,",19070]],"useCount":3725867},{"word":"bytes","context":[["this.bytes = bytes;",4295],["for (int i = 0; i < bytes.length; i++) {",3942],["if (bytes == null) {",3782],["this.bytes = bytes;",4295],["byte[] bytes;",4549],[".bytes());",4716],["import org.elasticsearch.common.bytes.BytesReference;",6141],["* @param bytes",7312],["return bytes;",21039],["import org.elasticsearch.common.bytes.BytesArray;",3365]],"useCount":985370},{"word":"c","context":[["int c;",12427],["if (c == null) {",12663],["c.gridx = 0;",12849],["sb.append(c);",19026],["switch (c) {",21366],["if (c != null) {",21371],["* @param c",22768],["c.close();",27374],["return c;",73019],["char c;",11901]],"useCount":3371263},{"word":"cache","context":[["import com.google.common.cache.CacheLoader;",4919],["import com.gemstone.gemfire.cache.Region;",3609],["if (cache == null) {",4511],["import com.google.common.cache.LoadingCache;",4998],["if (cache != null) {",5546],["cache.clear();",5859],["this.cache = cache;",5993],["this.cache = cache;",5993],["import com.google.common.cache.CacheBuilder;",7265],["return cache;",7916]],"useCount":922425},{"word":"call","context":[["* This instance is immutable and unaffected by this method call.",4858],["public Void call() throws Exception {",14192],["public Object call() throws Exception {",11388],["* @throws ErrorException exception thrown from REST call",10560],["public Boolean call() throws Exception {",6811],["public void call() {",6481],["// TODO review the generated test code and remove the default call to fail.",6118],["* @throws CloudException exception thrown from REST call",5189],["public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {",5036],["return call;",4364]],"useCount":999367},{"word":"callback","context":[["if (callback != null)",4037],["* @param callback",11109],["*        Asynchronous callback handler for events in the lifecycle of the",7010],["*        request. Users can provide an implementation of the callback",7010],["* @throws IllegalArgumentException thrown if callback is null",7598],["this.callback = callback;",10374],["this.callback = callback;",10374],["*           the four callback methods in this interface to process the operation",10739],["* @param asyncHandler Asynchronous callback handler for events in the",10739],["if (callback != null) {",10853]],"useCount":488462},{"word":"called","context":[["* called.",2846],["* This method is called from within the constructor to initialize the form.",17286],["/** This method is called from within the constructor to",10485],["* It is intended to be used when one called to an Assembler is made.",7273],["*    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>",6706],["/*  This tracker boolean wil be used to detect whether the user called the set method",4991],["* Usually this method is called internally by the JSF engine.",3975],["* this method is called on a closed <code>CallableStatement</code>",3925],["* <code>insertRow</code> methods are called to update the database.",3840],["* or this method is called on a closed result set",3511]],"useCount":587478},{"word":"camel","context":[["import org.apache.camel.Message;",4090],["import org.apache.camel.Endpoint;",4780],["import org.apache.camel.util.ObjectHelper;",5483],["import org.apache.camel.test.junit4.CamelTestSupport;",5726],["import org.apache.camel.ContextTestSupport;",5860],["import org.apache.camel.component.mock.MockEndpoint;",9954],["import org.apache.camel.CamelContext;",12053],["import org.apache.camel.Processor;",12391],["import org.apache.camel.builder.RouteBuilder;",18264],["import org.apache.camel.Exchange;",20254]],"useCount":328691},{"word":"can","context":[["attribute's value can be found in the {@link #MenuItem} array.",14382],["attribute's value can be found in the {@link #Toolbar} array.",21741],["attribute's value can be found in the {@link #AppCompatTheme} array.",18227],["attribute's value can be found in the {@link #Theme} array.",68134],["* @return Returns a reference to this object so that method calls can be",49924],["* Returns a reference to this object so that method calls can be chained together.",33913],["* @return A reference to this updated object so that method calls can be chained",33793],["* This default implementation returns null so that we can easily ignore cases;",26089],["attribute's value can be found in the {@link #ActionBar} array.",22588],["Perhaps with your help we can be more than a few, and make Mesquite better.",22515]],"useCount":2135361},{"word":"cannot","context":[["throw new IllegalArgumentException(\"Value cannot be null or empty!\");",2090],["// we cannot intantiate the class - throw the original Axis fault",3439],["*           that such additional attribution notices cannot be construed",2735],["that such additional attribution notices cannot be construed",2208],["throw new IllegalArgumentException(\"Parameter this.client.subscriptionId() is required and cannot be null.\");",1486],["throw new UnsupportedOperationException(\"Property cannot be written: \" + propertyName);",1551],["throw new RuntimeException(\"Value for condition cannot be null\");",2002],["throw new RuntimeException(\"Value for \" + property + \" cannot be null\");",2065],["throw new RuntimeException(\"Between values for \" + property + \" cannot be null\");",2068],["*                 and cannot be selected. Specify xsi:type instead.",2148]],"useCount":407867},{"word":"case","context":[["case 8:",29229],["case 1:",182733],["case 0:",154538],["case 2:",149928],["case 3:",109039],["case 4:",74418],["case 1 :",59287],["case 5:",53942],["case 7:",33672],["case 6:",41175]],"useCount":7875486},{"word":"cassandra","context":[["import org.apache.cassandra.config.CFMetaData;",5490],["import org.apache.cassandra.utils.ByteBufferUtil;",7109],["import org.apache.cassandra.db.marshal.AbstractType;",3081],["import org.apache.cassandra.config.DatabaseDescriptor;",6166],["import org.apache.cassandra.utils.Pair;",3202],["import org.apache.cassandra.service.StorageService;",3398],["package org.apache.cassandra.db;",3755],["import org.apache.cassandra.exceptions.ConfigurationException;",4039],["import org.apache.cassandra.db.*;",4606],["import org.apache.cassandra.utils.FBUtilities;",6012]],"useCount":315816},{"word":"catch","context":[["} catch (IOException e) {",808769],["} catch (Exception e) {",1461875],["} catch (Exception ex) {",245128],["} catch (InterruptedException e) {",210672],["} catch (SQLException e) {",175450],["// TODO Auto-generated catch block",167039],["catch (Exception e) {",164195],["catch (Exception e)",150266],["} catch (Throwable t) {",142048],["} catch (IOException ex) {",112234]],"useCount":10960096},{"word":"cause","context":[["super(cause);",45290],["if (cause != null) {",3762],["return cause;",3883],["this.cause = cause;",4442],["this.cause = cause;",4442],["Throwable cause = e.getCause();",4969],["super(message, cause, enableSuppression, writableStackTrace);",5124],["super(msg, cause);",6627],["* @param cause",15972],["super(message, cause);",51255]],"useCount":486000},{"word":"ch","context":[["return ch;",4829],["switch (ch) {",7201],["* @param ch",2090],["buf.append(ch);",2230],["import ch.qos.logback.classic.spi.ILoggingEvent;",2367],["import ch.qos.logback.classic.LoggerContext;",2551],["import ch.qos.logback.classic.Level;",2600],["int ch;",4747],["sb.append(ch);",4782],["char ch;",5854]],"useCount":591783},{"word":"change","context":[["* Please do not change here something, ragarding the developer credits, except the \"developed by XXXX\".",5172],["* To change this template, choose Tools | Template Manager",3554],["* TODO To change the template for this generated file go to",3559],["// Java from RobotBuilder. Do not put any code or make any change in",4004],["e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.",4508],["return null;  //To change body of implemented methods use File | Settings | File Templates.",6712],["//To change body of implemented methods use File | Settings | File Templates.",7552],["* To change this template use File | Settings | File Templates.",27048],["* To change this template, choose Tools | Templates",79042],["* To change this template file, choose Tools | Templates",96536]],"useCount":663017},{"word":"changed","context":[["changed = false;",3124],["changed = true;",28463],["boolean changed = false;",17566],["return changed;",15768],["if (changed) {",8075],["protected void onLayout(boolean changed, int l, int t, int r, int b) {",4867],["protected void onLayout(boolean changed, int left, int top, int right, int bottom) {",4199],["super.onLayout(changed, left, top, right, bottom);",3743],["changed();",2793],["*           stating that You changed the files; and",2735]],"useCount":339077},{"word":"channel","context":[["* @param channel",5398],["import org.jboss.netty.channel.Channel;",5793],["import io.netty.channel.ChannelHandlerContext;",14349],["this.channel = channel;",10483],["this.channel = channel;",10483],["return channel;",9165],["channel.close();",8254],["import io.netty.channel.Channel;",7902],["import io.netty.channel.ChannelFuture;",5930],["state.channel = _channel;",54605]],"useCount":687287},{"word":"char","context":[["throw new NoViableAltForCharException((char)LA(1), getFilename(), getLine(), getColumn());",1795],["char c;",11901],["char c = s.charAt(i);",6580],["char ch;",5854],["* Data type : unsigned char<br>",3002],["char c = text.charAt(i);",2204],["public void characters(char[] ch, int start, int length) throws SAXException {",2074],["char[] source = sourceUnit.getSource().toCharArray();",2029],["char c = str.charAt(i);",2004],["char c = string.charAt(i);",1796]],"useCount":851374},{"word":"charAt","context":[["if (url.charAt(0) == '/') {",1751],["if (baseUrl.charAt(baseUrl.length() - 1) == '/') {",1728],["char ch = s.charAt(i);",1767],["char c = string.charAt(i);",1796],["char c = str.charAt(i);",2004],["char c = text.charAt(i);",2204],["int value = packed.charAt(i++);",4778],["int count = packed.charAt(i++);",4925],["char c = s.charAt(i);",6580],["c = s.charAt(i);",2249]],"useCount":326299},{"word":"character","context":[["* Material design icon font character code see",1782],["* @param pos the position of the character to fetch.",1643],["* Unpacks the compressed character translation table.",1671],["* @return the character at position pos",1716],["// Trim '/' character from the end of baseUrl and beginning of url.",1722],["yyC = character(yyIndex);",1747],["* character.",2032],["* Translates characters to character classes",3371],["/** <p>Must be a string value, using '\\\\;' to escape characters such as '\\\\n' or '\\\\uxxxx' for a unicode character.",12372],["<p>Must be a string value, using '\\\\;' to escape characters such as '\\\\n' or '\\\\uxxxx' for a unicode character.",31095]],"useCount":449172},{"word":"characters","context":[["<p>Must be a string value, using '\\\\;' to escape characters such as '\\\\n' or '\\\\uxxxx' for a unicode character.",31095],["/** <p>Must be a string value, using '\\\\;' to escape characters such as '\\\\n' or '\\\\uxxxx' for a unicode character.",12372],["import mesquite.lib.characters.*;",9481],["* Translates characters to character classes",3371],["* characters.",2105],["public void characters(char[] ch, int start, int length) throws SAXException {",2074],["* Pushes the specified amount of characters back into the input stream.",1733],["*   DO_BREAK_LINES: break lines at 76 characters",1728],["* @param number  the number of characters to be read again.",1610],["public void characters(char[] ch, int start, int length)",1383]],"useCount":331705},{"word":"check","context":[["// check number of elements in the page",3743],["// check test result",4310],["if (true) { // don't check resource type if the property range is Resource",4417],["// check number of evidence elements and their value",5263],["check(",5344],["check();",7017],["// check if the domainObject already has a valueObject created for it",7273],["// check for sub-struct validity",10580],["// check for required fields of primitive type, which can't be checked in the validate method",12733],["// check for required fields",15602]],"useCount":869937},{"word":"child","context":[["throw new RuntimeException(\"Not a child.\");",3785],["children.add(child);",3487],["while (child != null) {",3803],["View child = getChildAt(i);",3967],["* @param child",4333],["// don't need explicit deletion of cnode as parent's view deletion would clean child views as well",4996],["if (child == null) {",5578],["final View child = getChildAt(i);",6408],["if (child != null) {",6836],["return child;",11101]],"useCount":827967},{"word":"children","context":[["children.add(child);",3487],["for (int i = 0; i < children.length; i++) {",4053],["for (int i = 0; i < children.size(); i++)",3597],["return children;",13042],["if (children == null) {",3987],["* children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.",7493],["* This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children",7298],["if (children != null) {",6322],["this.children = children;",4941],["this.children = children;",4941]],"useCount":413560},{"word":"class","context":[["* <p>The following schema fragment specifies the expected content contained within this class.",169528],["@Test(expected = IllegalArgumentException.class)",58087],["* <p>Java class for anonymous complex type.",51085],["@RunWith(SpringJUnit4ClassRunner.class)",32541],["super(Application.class);",31024],["public class ApplicationTest extends ApplicationTestCase<Application> {",30350],["public class Main {",28902],["This source code and its compiled class files are free and modifiable under the terms of",22574],["@XmlJavaTypeAdapter(CollapsedStringAdapter.class)",21759],["@RunWith(MockitoJUnitRunner.class)",21640]],"useCount":10295475},{"word":"classes","context":[["/* Location:           F:\\apktool\\apktool\\com.google.android.apps.plus\\classes-dex2jar.jar",11311],["return classes;",7298],["* The JTS Topology Suite is a collection of Java classes that",2076],["@SpringApplicationConfiguration(classes = Application.class)",2193],["/* Location:           /Users/vikas/Documents/Mhacks_Real_app/classes-dex2jar.jar",3125],["/* Location:           F:\\apktool\\apktool\\Google_Play_Store6.0.5\\classes-dex2jar.jar",3148],["* Translates characters to character classes",3371],["//- Imported classes and packages -/",5845],["* and classes representing the binding of schema",4050],["* Could not load the following classes:",3755]],"useCount":322248},{"word":"clazz","context":[["clazz = clazz.getSuperclass();",2804],["* Gets the value of the clazz property.",3213],["if (clazz != null) {",3570],["* @param clazz",15954],["return clazz;",12773],["this.clazz = clazz;",9029],["this.clazz = clazz;",9029],["if (clazz == null) {",7880],["protected String clazz;",2480],["clazz = clazz.getSuperclass();",2804]],"useCount":382953},{"word":"clear","context":[["public void clear() {",96552],["clear();",24404],["childrenElements.clear();",26109],["map.clear();",9236],["super.clear();",23838],["public Builder clear() {",18544],["this.col.clear();",11626],["list.clear();",10587],["buffer.clear();",7443],["public void clear()",25942]],"useCount":1105719},{"word":"client","context":[["*             If any internal errors are encountered inside the client while",35112],["import net.minecraft.client.Minecraft;",23526],["import com.google.gwt.user.client.ui.Widget;",20217],["import org.apache.http.client.methods.HttpGet;",19942],["import org.apache.http.client.HttpClient;",18364],["import com.google.gwt.core.client.GWT;",24387],["import org.apache.http.impl.client.DefaultHttpClient;",17426],["return client;",15101],["client.close();",16391],["import org.apache.http.client.methods.HttpPost;",16212]],"useCount":3618965},{"word":"clone","context":[["public Object clone() {",23139],["return clone;",40682],["public Builder clone() {",16847],["clone.col.add(null);",11626],["\"Got a CloneNotSupportedException from Object.clone() \"",10455],["public Object clone() throws CloneNotSupportedException {",8099],["clone.isValidated = this.isValidated;",8078],["return super.clone();",7798],["* @return A clone.",2691],["public Object clone()",38172]],"useCount":463375},{"word":"close","context":[["conn.close();",47183],["public void close() throws IOException {",52948],["cursor.close();",53480],["rs.close();",57047],["reader.close();",63772],["writer.close();",68479],["public void close() {",76363],["in.close();",82049],["out.close();",101632],["query.close();",45342]],"useCount":2883025},{"word":"cls","context":[["this.cls = cls;",1373],["cachedSerClasses.add(cls);",189676],["_call.registerTypeMapping(cls, qName, sf, df, false);",4651],["java.lang.Class cls;",3649],["* @param cls",3218],["return cls;",3006],["if (cls == null) {",2545],["java.lang.Class cls = (java.lang.Class) cachedSerClasses.get(i);",2300],["if (cls != null) {",2128],["this.cls = cls;",1373]],"useCount":433910},{"word":"cluster","context":[["if (cluster != null) {",4893],["import org.elasticsearch.cluster.metadata.MetaData;",4424],["import org.elasticsearch.cluster.ClusterService;",5459],["MiniDFSCluster cluster = null;",4546],["import org.elasticsearch.cluster.node.DiscoveryNode;",6952],["import org.elasticsearch.cluster.ClusterState;",8542],["import org.elasticsearch.cluster.metadata.IndexMetaData;",9094],["cluster.waitActive();",9185],["import org.elasticsearch.cluster.routing.ShardRouting;",4110],["cluster.shutdown();",13578]],"useCount":624413},{"word":"code","context":[["/** <p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",117936],["* accompanied this code).",174705],["<p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",252522],["<p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",252522],["\"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>\") or",317212],["\"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\")",317212],["\"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\")",317212],["\"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>\") or",317212],["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167],["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167]],"useCount":15314632},{"word":"col","context":[["return col.iterator();",11655],["if(this.col.indexOf(value) < 0)",23253],["for(int x = 0; x < this.col.size(); x++)",18899],["for(int x = 0; x < col.size(); x++)",16135],["return col;",15378],["col.toArray(arr);",12291],["if(this.col.get(x) != null)",11626],["return this.col.add(value);",11626],["return this.col.get(index);",11626],["this.col.clear();",11626]],"useCount":525791},{"word":"collect","context":[["import com.google.common.collect.Lists;",111282],["import com.google.common.collect.ImmutableSet;",48307],["import com.google.common.collect.Multimap;",14515],["import com.google.common.collect.ImmutableList;",90682],["import com.google.common.collect.Maps;",57544],["import com.google.common.collect.ImmutableMap;",56003],["import com.google.common.collect.Sets;",47513],["import com.google.common.collect.Iterables;",37155],[".collect(Collectors.toList());",19963],["import com.google.common.collect.FluentIterable;",7668]],"useCount":770198},{"word":"collection","context":[["* Create the ValueObject collection to hold the list of DomainObjects.",14546],["super(collection);",4024],["* @param collection",4706],["* given is outside the bounds of the collection",5688],["return collection;",9225],["//Trying to avoid the hibernate collection being marked as dirty via its public interface methods. (like add)",11574],["//now represent the ones removed from the VO collection. No longer referenced.",11973],["* collection",3146],["* @param voCollection - the collection of value objects",14546],["* Create the ValueObject collection to hold the set of DomainObjects.",14546]],"useCount":563986},{"word":"color","context":[["<p>Must be a color value, in the form of \"<code>#<i>rgb</i></code>\", \"<code>#<i>argb</i></code>\",",21810],["if (color != null)",19109],["color.getValue();",18252],["this.color = color;",16573],["this.color = color;",16573],["return color;",15307],["* @param color",8134],["public static final class color {",8423],["/** <p>Must be a color value, in the form of \"<code>#<i>rgb</i></code>\", \"<code>#<i>argb</i></code>\",",15187],["ims.framework.utils.Color color = null;",9130]],"useCount":812554},{"word":"column","context":[["this.column = column;",6218],["* @param columnIndex the first column is 1, the second is 2, ...",4013],["this.column = column;",6218],["* @param x the new column value",4452],["public String getColumnName(int column) {",3940],["sb.append(\"]]></column-value></column>\");",14962],["return column;",7744],["* @return The information object of specified column. (NotNull)",8042],["sb.append(\"]]></column-value></column>\");",14962],["* @param column",6927]],"useCount":1028381},{"word":"columns","context":[["columns,",1532],["return columns;",8245],["for (int i = 0; i < columns.size(); i++) {",1328],["for (int c = 0; c < columns; c++) {",1595],["* <span style=\"color: #3F7E5E\">// you don't need to set values of common columns</span>",1957],["for (int i = 0; i < columns.length; i++) {",2300],["columns.add(column);",2319],["* @param columns",3174],["this.columns = columns;",5405],["this.columns = columns;",5405]],"useCount":349240},{"word":"com","context":[["com.google.protobuf.CodedInputStream input,",63638],["*  http://aws.amazon.com/apache2.0",62247],["// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a>",64734],["// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a>",64734],["* or visit www.oracle.com if you need additional information or have any",139265],["com.google.protobuf.ExtensionRegistryLite extensionRegistry)",136082],["import com.google.common.collect.Lists;",111282],["throws com.google.protobuf.InvalidProtocolBufferException {",104994],["import com.google.common.collect.ImmutableList;",90682],["import com.google.common.base.Preconditions;",70500]],"useCount":22674668},{"word":"command","context":[["* @param args the command line arguments",20803],["import org.bukkit.command.CommandSender;",21969],["return command;",11408],["import org.bukkit.command.Command;",11343],["this.command = command;",8651],["this.command = command;",8651],["* @param command",7604],["* This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children",7298],["// Called when another command which requires one or more of the same",6339],["import edu.wpi.first.wpilibj.command.Command;",6027]],"useCount":912818},{"word":"commit","context":[["connection.commit();",9088],["session.getTransaction().commit();",7965],["editor.commit();",34235],["tx.commit();",30955],[".commit();",21014],["conn.commit();",16828],["transaction.commit();",12713],["commit();",11823],["session.commit();",11781],["em.getTransaction().commit();",11552]],"useCount":505522},{"word":"common","context":[["import com.google.common.base.Preconditions;",70500],["import com.google.common.base.Function;",38442],["import static com.google.common.base.Preconditions.checkNotNull;",39011],["import com.google.common.base.Optional;",42847],["import com.google.common.collect.Sets;",47513],["import com.google.common.collect.ImmutableSet;",48307],["import com.google.common.collect.ImmutableMap;",56003],["import com.google.common.collect.Lists;",111282],["import com.google.common.collect.Maps;",57544],["import com.google.common.collect.ImmutableList;",90682]],"useCount":3810568},{"word":"commons","context":[["import org.apache.commons.lang.StringUtils;",92138],["import org.apache.commons.lang3.builder.ToStringBuilder;",10399],["import org.apache.commons.collections.CollectionUtils;",9860],["import org.apache.commons.codec.binary.Base64;",11793],["import org.apache.commons.lang.builder.ToStringBuilder;",11920],["import org.apache.commons.io.FileUtils;",36716],["import org.apache.commons.io.IOUtils;",40887],["import org.apache.commons.lang3.StringUtils;",62686],["import org.apache.commons.logging.LogFactory;",148935],["import org.apache.commons.logging.Log;",153397]],"useCount":1381577},{"word":"compiler","context":[["this.compiler = compiler;",4763],["compiler.reportCodeChange();",4974],["this.compiler = compiler;",4763],["* Generated by the IDL-to-Java compiler (portable), version \"3.2\"",3436],["protected CompilerPass create(AbstractCompiler compiler) {",3362],["Compiler compiler = new Compiler();",1934],["private final AbstractCompiler compiler;",3179],["// Generated by xsd compiler for android/java",3100],["compiler.report(",2651],["// Generated by the protocol buffer compiler.  DO NOT EDIT!",5110]],"useCount":403921},{"word":"complexContent","context":[["*     &lt;complexContent>",10030],["*   &lt;complexContent&gt;",7969],["*   &lt;/complexContent&gt;",7969],["*     &lt;/complexContent>",10030],["*                       &lt;complexContent>",11098],["*                       &lt;/complexContent>",11098],["*             &lt;/complexContent>",20064],["*             &lt;complexContent>",20064],["*   &lt;/complexContent>",142497],["*   &lt;complexContent>",142498]],"useCount":421576},{"word":"complexType","context":[["* &lt;/complexType>",148879],["* &lt;complexType>",51868],["*           &lt;complexType>",21849],["*           &lt;/complexType>",21849],["*                     &lt;/complexType>",11466],["*                     &lt;complexType>",11466],["*   &lt;complexType>",10060],["*   &lt;/complexType>",10060],["*                               &lt;complexType>",7936],["* &lt;/complexType&gt;",9286]],"useCount":362135},{"word":"component","context":[["import org.osgi.service.component.ComponentContext;",4292],["return component;",15866],["sb.append(\" component=\\\"\" + this.getIsComponentClass() + \"\\\" >\");",3793],["if (component != null) {",4145],["this.component = component;",4983],["this.component = component;",4983],["getComponent(component);",5005],["* @param component",6604],["import javax.faces.component.UIComponent;",9892],["import org.apache.camel.component.mock.MockEndpoint;",9954]],"useCount":850527},{"word":"components","context":[["import org.olat.core.gui.components.Component;",2113],["return components;",3755],["import com.intellij.openapi.components.PersistentStateComponent;",1448],["import org.olat.core.gui.components.velocity.VelocityContainer;",1452],["import com.intellij.openapi.components.*;",1471],["import com.intellij.ui.components.JBList;",1688],["* components.",1701],["* @exception InvalidValue if this DynAny has components but has a current position of -1",1998],["* @exception TypeMismatch if called on a DynAny whose current component itself has components",1998],["import com.intellij.openapi.components.ServiceManager;",3991]],"useCount":364401},{"word":"concurrent","context":[["import java.util.concurrent.ExecutorService;",54814],["import java.util.concurrent.ConcurrentHashMap;",66963],["import java.util.concurrent.atomic.AtomicInteger;",55603],["import java.util.concurrent.Executors;",55546],["import java.util.concurrent.Callable;",50012],["import java.util.concurrent.atomic.AtomicBoolean;",41646],["import java.util.concurrent.ExecutionException;",40822],["import java.util.concurrent.Future;",38083],["import java.util.concurrent.CountDownLatch;",36246],["import java.util.concurrent.TimeUnit;",153905]],"useCount":1204991},{"word":"condition","context":[["* @param condition",3373],["* @throws SelectEntityConditionNotFoundException When the condition for selecting an entity is not found.",2270],["private String condition;",2641],["import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;",3128],["import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;",3255],["if (condition == null) {",3354],["public boolean startJob(String arguments, Object condition, boolean hiredByName) {",6746],["return condition;",6767],["this.condition = condition;",10541],["this.condition = condition;",10541]],"useCount":336139},{"word":"conditions","context":[["furnished to do so, subject to the following conditions:",18665],["* conditions:",5104],["* so, subject to the following conditions:",5174],["* furnished to do so, subject to the following conditions:",149001],["* subject to the following conditions:",6165],["* modify, copy, or redistribute it subject to the terms and conditions",6499],["// TODO: Add your conditions here.",6913],["* conditions are met:",6996],["* As a special exception to the terms and conditions of version 3.0 of",13882],["* the following conditions:",16032]],"useCount":384099},{"word":"conf","context":[["Configuration conf = new HdfsConfiguration();",4485],["import org.apache.hadoop.yarn.conf.YarnConfiguration;",5084],["import org.apache.hadoop.conf.Configuration;",69808],["Configuration conf = new Configuration();",19039],["this.conf = conf;",11672],["this.conf = conf;",11672],["* @param conf",8715],["return conf;",8457],["private Configuration conf;",6305],["import org.apache.hadoop.conf.Configured;",5357]],"useCount":900184},{"word":"config","context":[["return config;",23767],["import org.apache.cassandra.config.CFMetaData;",5490],["import net.minecraftforge.common.config.Configuration;",5593],["import org.apache.cassandra.config.DatabaseDescriptor;",6166],["if (config != null) {",6348],["if (config == null) {",6658],["super(config);",8481],["* @param config",10956],["this.config = config;",23065],["this.config = config;",23065]],"useCount":1442623},{"word":"configuration","context":[["import org.apache.commons.configuration.Configuration;",5383],["impObj = new ims.configuration.ImportedObject();",7340],["import org.bukkit.configuration.file.YamlConfiguration;",4849],["import org.apache.commons.configuration.ConfigurationException;",4422],["import org.bukkit.configuration.file.FileConfiguration;",4236],["* @param configuration",4112],["sb.append(\" source=\\\"\" + ims.configuration.EnvironmentConfig.getImportExportSourceName() + \"\\\" \");",3793],["return configuration;",10785],["this.configuration = configuration;",12944],["this.configuration = configuration;",12944]],"useCount":788059},{"word":"conn","context":[["conn.close();",47183],["if (conn != null) {",12855],["stmt = conn.createStatement();",6473],["conn.disconnect();",6113],["Statement stmt = conn.createStatement();",7045],["* @param conn",7583],["conn.setAutoCommit(false);",7610],["return conn;",8793],["conn.commit();",16828],["Connection conn = null;",24643]],"useCount":693592},{"word":"connection","context":[["connection.connect();",8008],["connection.commit();",9088],["Connection connection = null;",17679],["connection.disconnect();",9463],["this.connection = connection;",9726],["if (connection != null) {",14534],["connection.close();",33539],["*             if a network connection is not available.",35112],["this.connection = connection;",9726],["return connection;",14291]],"useCount":1135349},{"word":"constructor","context":[["// Required empty public constructor",7066],["// TODO Auto-generated constructor stub",46663],["* constructor",5965],["* The constructor.",8354],["/** This method is called from within the constructor to",10485],["\"/** @constructor */\",",11643],["* This method is called from within the constructor to initialize the form.",17286],["* Default constructor.",26229],["stream.writeInt32(constructor);",25790],["* Default constructor",18515]],"useCount":759110},{"word":"contact","context":[["* Contact: proactive@ow2.org or contact@activeeon.com",8767],["* Please contact Openflexo (openflexo-contacts@openflexo.org)",2673],["* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA",139265],["* mailto:contact AT sonarsource DOT com",32322],["* Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,",29459],["* For more information contact:",27227],["Details (including contact information) can be found at:",12534],["* Please contact Eucalyptus Systems, Inc., 6755 Hollister Ave., Goleta",6198],["* For more information, contact:",4850],["return contact;",2965]],"useCount":439487},{"word":"container","context":[["public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {",3942],["public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {",26617],["some parent container.",17007],["return container;",11924],["import org.jboss.arquillian.container.test.api.Deployment;",9691],["* @param container",6231],["this.container = container;",6230],["this.container = container;",6230],["if (container != null) {",3196],["public View onCreateView(LayoutInflater inflater, ViewGroup container,",36439]],"useCount":703061},{"word":"containing","context":[["* A placeholder fragment containing a simple view.",4580],["containing a value of this type.",317212],["* @return A Java Future object containing the response from the",21364],["* @return a String containing servlet description",4369],["* @return A Java Future containing the result of the",2908],["* panels containing any Swing-Component the developer likes to add.",1669],["*  (that library), containing parts covered by the terms of that JAR, the",1623],["* Asynchronous methods are delegated to a fixed-size thread pool containing",1175],["/** String containing the CVS revision. Read out via reflection!*/",1117],["* @param drawerLayout The DrawerLayout containing this fragment's UI.",967]],"useCount":635364},{"word":"contains","context":[["if ((o == null || o.getIsRIE() == null || !o.getIsRIE().booleanValue()) && !newSet.contains(o))",11066],["import static org.hamcrest.Matchers.contains;",2951],["* Gets a map that contains attributes that aren't bound to any typed property on this class.",3631],["if (!set.contains(domainObject))",3793],["// This file was generated by RobotBuilder. It contains sections of",4004],["* This object contains factory methods for each",4057],["assert llapi.getSubterm().contains(unit.getContainedItem()) : \"missing element\";",5822],["if (!domainObjectSet.contains(domainObject)) domainObjectSet.add(domainObject);",7273],["public boolean contains(Object o) {",8726],["/** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */",14769]],"useCount":1012376},{"word":"content","context":[["import android.content.pm.PackageManager;",31034],["import android.content.ContentValues;",35765],["import android.content.BroadcastReceiver;",36314],["import android.content.DialogInterface;",62403],["* <p>The following schema fragment specifies the expected content contained within this class.",169528],["import android.content.Intent;",282932],["import android.content.SharedPreferences;",82442],["import android.content.Context;",497060],["// WARNING: DO NOT MODIFY the content of this file",73630],["import android.content.res.Resources;",38792]],"useCount":2699583},{"word":"context","context":[["mContext = context;",34976],["import org.springframework.context.annotation.Configuration;",37145],["public void onReceive(Context context, Intent intent) {",33729],["import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;",33282],["import org.springframework.test.context.ContextConfiguration;",32178],["this.context = context;",87571],["super(context);",90171],["super(context, attrs);",56657],["* @param context",78135],["this.context = context;",87571]],"useCount":4558286},{"word":"continue","context":[["//\t\t\t\tcontinue;",1278],["continue;",1138264],["continue outer;",6518],["// continue",3595],["continue Loop;",3039],["// continue;",2307],["continue ;",1844],["continue loop;",1609],["* @return the builder to continue processing the DSL",1346],["//                continue;",1313]],"useCount":1341492},{"word":"control","context":[["import javafx.scene.control.Label;",9800],["import javafx.scene.control.Button;",9666],["control.replay();",8009],["super.control.setValue(value);",7371],["if(control == null); // this is to avoid eclipse warning only.",7113],["super.control.newRow(value, text);",7078],["super.control.newRow(value, text, textColor);",7078],["super.control.newRow(value, text, image, textColor);",7078],["super.control.newRow(value, text, image);",7078],["return super.control.removeRow(value);",6814]],"useCount":464823},{"word":"controller","context":[["import org.olat.core.gui.control.controller.BasicController;",1203],["private Controller controller;",1461],["if (controller != null) {",1766],["* @param controller",2358],["controller,",3007],["package controller;",3245],["return controller;",3536],["this.controller = controller;",8024],["this.controller = controller;",8024],["com.google.protobuf.RpcController controller,",8972]],"useCount":394525},{"word":"copy","context":[["modules, and to copy and distribute the resulting executable under",20699],["* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",145292],["return copy;",20601],["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",18250],["* Performs a deep copy on <i>other</i>.",15588],["* FLOSS exception.  You should have received a copy of the text describing",8696],["* @param valueObjectSrc to copy values from",7273],["* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies",5072],["* modify, copy, or redistribute it subject to the terms and conditions",6499],["* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of",5539]],"useCount":791883},{"word":"core","context":[["import org.eclipse.core.runtime.CoreException;",21986],["import org.eclipse.core.runtime.IProgressMonitor;",19957],["import com.planet_ink.coffee_mud.core.*;",16015],["import com.planet_ink.coffee_mud.core.interfaces.*;",16054],["import com.google.gwt.core.client.GWT;",24387],["import static org.assertj.core.api.Assertions.assertThat;",39280],["import javax.ws.rs.core.MediaType;",42437],["import javax.ws.rs.core.Response;",45379],["import javax.ws.rs.core.Context;",14214],["import org.eclipse.core.resources.IProject;",14876]],"useCount":5017816},{"word":"count","context":[["for (int a = 0; a < count; a++) {",13222],["count++;",172864],["int count = 0;",126838],["return count;",76237],["for (int i = 0; i < count; i++) {",40426],["count = 0;",26262],["int count;",16726],["this.count = count;",15394],["this.count = count;",15394],["if (count > 0) {",12028]],"useCount":1761478},{"word":"create","context":[[".create();",23991],["* @param domainFactory - used to create existing (persistent) domain objects.",21819],["private static Builder create() {",16053],["public static Builder newBuilder() { return Builder.create(); }",15342],["return create().mergeFrom(buildPartial());",14674],["// create LookupInstance from vo LookupType",8674],["return create(map, domainObject);",7273],["return builder.create();",6768],["public void create() {",6227],["* static method to create the object",6077]],"useCount":1389328},{"word":"created","context":[["* @param map - maps DomainObjects to created ValueObjects",14546],["this.created = created;",6105],["this.created = created;",6105],["*    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>",6706],["// check if the domainObject already has a valueObject created for it",7273],["* that can be created under this object.",7333],["return created;",7385],["/** Called when the activity is first created. */",7726],["* @param map DomainObjectMap of DomainObjects to already created ValueObjects.",14546],["* @created 2015",31267]],"useCount":593520},{"word":"ctx","context":[["super (ctx, rs, trxName);",4324],["* @param ctx The security context.",6213],["* @param ctx the parse tree",58366],["ctx);",45003],["* @param ctx",11240],["* {@link #visitChildren} on {@code ctx}.</p>",10717],["this.ctx = ctx;",8401],["this.ctx = ctx;",8401],["ctx.close();",6891],["return ctx;",6764]],"useCount":752700},{"word":"current","context":[["if (current != null) {",4340],["return current;",25642],["// Regression assertion (captures the current behavior of the code)",19521],["// Binds the request metrics to the current request.",13734],["if (current==null) {",12930],["current,",10133],["EObject current = null;",9584],["if (state.failed) return current;",8259],["if (current == null) {",6184],["current = null;",5242]],"useCount":1309153},{"word":"currentTimeMillis","context":[["long now = System.currentTimeMillis();",23624],["long start = System.currentTimeMillis();",38402],["end = System.currentTimeMillis();",5637],["long endTime = System.currentTimeMillis();",6489],["long currentTime = System.currentTimeMillis();",7565],["startTime = System.currentTimeMillis();",9046],["long time = System.currentTimeMillis();",10271],["start = System.currentTimeMillis();",11813],["long end = System.currentTimeMillis();",12603],["long startTime = System.currentTimeMillis();",21279]],"useCount":529424},{"word":"cursor","context":[["cursor.moveToNext();",6318],["bra = cursor;",6477],["return cursor;",7535],["while (cursor.moveToNext()) {",8235],["Cursor cursor = null;",8866],["} while (cursor.moveToNext());",9307],["if (cursor.moveToFirst()) {",12811],["if (cursor != null) {",14330],["cursor.moveToFirst();",15550],["cursor.close();",53480]],"useCount":720279},{"word":"d","context":[["* <a href=\"http://d.android.com/tools/testing/testing_android.html\">Testing Fundamentals</a>",30848],["return d;",25650],["* @param d",7578],["case 'd':",5598],["if (d != null) {",5399],["if (d == null) {",3505],["this.d = d;",2547],["int d = 0;",2888],["*       (d) If the Work includes a \"NOTICE\" text file as part of its",2735],["writer.addDocument(d);",2709]],"useCount":1318253},{"word":"dao","context":[["import org.springframework.dao.EmptyResultDataAccessException;",1981],["import com.j256.ormlite.dao.Dao;",2155],["\"com.liferay.portal.kernel.dao.orm.DynamicQuery\"",2676],["return dao;",2916],["package dao;",3008],["this.dao = dao;",4271],["this.dao = dao;",4271],["com.liferay.portal.kernel.dao.orm.DynamicQuery dynamicQuery)",5368],["com.liferay.portal.kernel.dao.orm.DynamicQuery dynamicQuery, int start,",5484],["import org.springframework.dao.DataAccessException;",6208]],"useCount":410569},{"word":"data","context":[["com.google.protobuf.ByteString data,",18433],["return data;",84739],["this.data = data;",43509],["this.data = data;",43509],["* @param data",37776],["*             either a problem with the data in the request, or a server side issue.",35135],["return PARSER.parseFrom(data);",27546],["return PARSER.parseFrom(data, extensionRegistry);",27538],["if (data != null) {",19718],["byte[] data,",19070]],"useCount":4695389},{"word":"database","context":[["import android.database.sqlite.SQLiteDatabase;",38243],["import android.database.Cursor;",71888],["import android.database.sqlite.SQLiteOpenHelper;",15303],["* @exception SQLException if a database access error occurs",14384],["database.close();",7673],["import android.database.SQLException;",5239],["/* This file is part of the db4o object database http://www.db4o.com",5147],["* @throws SQLException if a database access error occurs",4945],["this.database = database;",4840],["import org.pentaho.di.core.database.DatabaseMeta;",5252]],"useCount":913856},{"word":"date","context":[["if (date == null) {",6610],["public void setDate(Date date) {",5333],["private Date date;",6948],["@Generated(value = \"com.sun.tools.xjc.Driver\", date = \"2014-09-19T03:10:02-06:00\", comment = \"JAXB RI v2.2.6\")",11865],["Date date = new Date();",12314],["@Generated(value = \"com.sun.tools.xjc.Driver\", date = \"2015-10-25T05:29:34+06:00\", comments = \"JAXB RI v2.2.11\")",12626],["* @param date",14860],["this.date = date;",18830],["this.date = date;",18830],["return date;",23503]],"useCount":798300},{"word":"db","context":[["package adila.db;",12874],["this.db = db;",5632],["this.db = db;",5632],["SQLiteDatabase db = this.getWritableDatabase();",5830],["db.setTransactionSuccessful();",7548],["db.endTransaction();",7735],["db.beginTransaction();",7791],["public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {",10209],["public void onCreate(SQLiteDatabase db) {",10726],["db.close();",27804]],"useCount":926413},{"word":"de","context":[["Matthias Butz <matze@odinms.de>",2362],["import de.greenrobot.event.EventBus;",5341],["/* gvSIG. Sistema de InformaciÃ³n GeogrÃ¡fica de la Generalitat Valenciana",2522],["/* gvSIG. Sistema de InformaciÃ³n GeogrÃ¡fica de la Generalitat Valenciana",2522],["* AELITIS, SAS au capital de 46,603.30 euros",2376],["Jan Christian Meyer <vimes@odinms.de>",2364],["* Email: trust@f4-i.fh-hannover.de",2314],["*                         Desenvolvemento TecnolÃ³xico de Galicia",2312],["* Website: http://trust.f4.hs-hannover.de/",2208],["* virtualcitySYSTEMS GmbH, Berlin <http://www.virtualcitysystems.de/>",2029]],"useCount":946409},{"word":"debug","context":[["this.debug = debug;",3093],["this.debug = debug;",3093],["log.debug(",3147],["LOG.debug(",3193],["if (log.isDebugEnabled()) log.debug(funcName + \": enter\");",3810],["logger.debug(",5097],["if (debug != null) {",6163],["if (debug)",15095],["if (debug) {",24129],["log.debug(msg);",3055]],"useCount":794929},{"word":"default","context":[["* <p>The default implementation returns the result of calling",10702],["default:",885533],["default :",58996],["* <p>The default implementation does nothing.</p>",43308],["default: {",40145],["* This default implementation returns null so that we can easily ignore cases;",26089],["default: return null;",17905],["default: return \"?\";",13441],["* @param responseFields Use this field to include those fields which are not included by default.",8595],["/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.",7452]],"useCount":2274605},{"word":"delete","context":[["tempFile.delete();",2743],["* obligated to do so.  If you do not wish to do so, delete this",2903],["@Override protected synchronized void delete() {",3194],["public synchronized void delete() {",4044],["super.delete();",5613],["delete();",7360],["public void delete() {",8671],["f.delete();",11962],["obligated to do so.  If you do not wish to do so, delete this",20629],["file.delete();",24056]],"useCount":719153},{"word":"desc","context":[["// <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents",29857],["desc.setValidator(fieldValidator);",12593],["addFieldDescriptor(desc);",12589],["desc.setHandler(handler);",12556],["desc.setMultivalued(false);",10600],["return desc;",9480],["//<editor-fold defaultstate=\"collapsed\" desc=\" Look and feel setting code (optional) \">",7875],["addSequenceElement(desc);",7209],["desc.setImmutable(true);",6689],["this.desc = desc;",6625]],"useCount":440394},{"word":"description","context":[["private static org.apache.axis.description.TypeDesc typeDesc =",33871],["this.description = description;",74973],["this.description = description;",74973],["return description;",67494],["* there really should be more of a description here...",62720],["elemField = new org.apache.axis.description.ElementDesc();",52777],["private String description;",47431],["public void setDescription(String description) {",39019],["public static org.apache.axis.description.TypeDesc getTypeDesc() {",34032],["@attr description",171143]],"useCount":1555198},{"word":"dest","context":[["assertTrue(Success, checkResult_Success(src, dest, result));",2530],["result = TRVD_TLVD_Action(src, dest);",17330],["return dest;",12202],["super.writeToParcel(dest, flags);",2840],["* @return dest",3868],["assertTrue(Failure2, checkResult_Failure2(src, dest, result));",3955],["//\t\t\tresult = TRVD_TLVD_Action(src, dest);",4365],["public void writeToParcel(Parcel dest, int flags) {",14412],["* @param dest",7870],["assertTrue(ParamFailure2, checkResult_ParamFailure2(src, dest, result));",7595]],"useCount":321324},{"word":"details","context":[["for more details.",7314],["* details.",98438],["this.details = details;",3200],["this.details = details;",3200],["return details;",4578],["*  for more details.",4591],["* For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html",7513],["* more details.",21809],["* for more details.",28425],["* Benchmark Project. For details, please see",31139]],"useCount":400847},{"word":"dialog","context":[["public void onClick(DialogInterface dialog,",6127],["return dialog;",9419],["public void onCancel(DialogInterface dialog) {",5729],["public void onClick(DialogInterface dialog, int whichButton) {",8659],["public void onClick(DialogInterface dialog, int which) {",61196],["dialog.dismiss();",35974],["dialog.show();",23236],["public void onClick(DialogInterface dialog, int id) {",15009],["dialog.setVisible(true);",13955],["dialog.cancel();",11526]],"useCount":599306},{"word":"dir","context":[["dir.close();",10483],["Directory dir = newDirectory();",7134],["dir.mkdirs();",6995],["* @param dir",5433],["if (!dir.exists()) {",4487],["this.dir = dir;",4081],["this.dir = dir;",4081],["File[] files = dir.listFiles();",3860],["public boolean accept(File dir, String name) {",9700],["return dir;",10205]],"useCount":456116},{"word":"directory","context":[["import javax.naming.directory.DirContext;",2318],["* @author <a href=\"mailto:dev@directory.apache.org\">Apache Directory Project</a>",5695],["this.directory = directory;",4008],["this.directory = directory;",4008],["return directory;",4003],["* directory.",3690],["* @param directory",3491],["* application directory.",2675],["// The path to the documents directory.",2553],["directory.close();",2366]],"useCount":527494},{"word":"display","context":[["/* Create and display the form */",6607],["return display;",2879],["Display display = parent.getDisplay();",2796],["*    must display the following acknowledgement:",3483],["this.display = display;",2773],["this.display = display;",2773],["*           within a display generated by the Derivative Works, if and",2735],["*       publicly display, publicly perform, sublicense, and distribute the",2735],["* of this program must display Appropriate Legal Notices, as required under",4215],["display.sleep();",3892]],"useCount":339888},{"word":"dispose","context":[["dispose();",39305],["dialog.dispose();",5363],["public void dispose() {",52319],["cursor.dispose();",4094],["frame.dispose();",4825],["g2.dispose();",4840],["super.dispose();",14818],["this.dispose();",11855],["g.dispose();",11496],["public void dispose()",7830]],"useCount":334828},{"word":"distributed","context":[["* distributed with this work for additional information",436355],["* agreements. See the NOTICE file distributed with this work",15998],["* be distributed with the code.  If you do not have a copy,",4694],["* See the NOTICE file distributed with this work for additional information",5998],["* distributed with this work for additional information        *",7161],["distributed with this work for additional information",9914],["// distributed with this work for additional information",18526],["* See the NOTICE file distributed with this work for additional",19893],["*  distributed with this work for additional information",30628],["* v. 2.0. If a copy of the MPL was not distributed with this file, You can",4610]],"useCount":675469},{"word":"distribution","context":[["* along with this distribution; if not, write to:",15523],["* which accompanies this distribution, and is available at",205415],["* which accompanies this distribution.",34541],["and/or other materials provided with the distribution.",27946],["* and/or other materials provided with the distribution.",24823],["*    and/or other materials provided with the distribution.",24613],["*    documentation and/or other materials provided with the distribution.",21240],["* documentation and/or other materials provided with the distribution.",12548],["*       documentation and/or other materials provided with the distribution.",15298],["* distribution for a full listing of individual contributors.",13172]],"useCount":671457},{"word":"do","context":[["obligated to do so.  If you do not wish to do so, delete this",20629],["do {",229232],["* furnished to do so, subject to the following conditions:",149001],["* For example, to add a new item, do as follows:",88109],["// do nothing",48957],["// Variables declaration - do not modify//GEN-BEGIN:variables",32271],["do",38228],["obligated to do so.  If you do not wish to do so, delete this",20629],["// do for sure before leaving",28071],["obligated to do so.  If you do not wish to do so, delete this",20629]],"useCount":1435748},{"word":"doc","context":[["* begin-user-doc --> <!-- end-user-doc -->",6875],["* <!-- end-user-doc -->",1457031],["* <!-- begin-user-doc -->",1454217],["* <!-- begin-user-doc --> <!-- end-user-doc -->",30191],["* <!-- begin-user-doc --> <!-- end-user-doc -->",30191],["* <!-- begin-model-doc -->",18295],["return doc;",15413],["Document doc = new Document();",13236],["* <!-- end-model-doc -->",18434],["writer.addDocument(doc);",7922]],"useCount":3676601},{"word":"document","context":[["this.document = document;",3873],["this.document = document;",3873],["if (document != null) {",4239],["* @param document",7477],["import org.apache.lucene.document.Field;",9237],["Document document = new Document();",3254],["import org.kuali.rice.krad.document.Document;",3137],["if (document == null) {",3130],["import org.apache.lucene.document.Document;",11358],["return document;",9935]],"useCount":697225},{"word":"does","context":[["* <p>The default implementation does nothing.</p>",43308],["* @throws SQLFeatureNotSupportedException  if the JDBC driver does not support this method",1656],["* @exception SQLFeatureNotSupportedException if the JDBC driver does not support",9032],["\"actual parameter 1 of f does not match formal parameter\\n\" +",2806],["* normal use of the program, and does *not* fall under the heading of",3001],["// Buffer does not have all data yet",3521],["// For information as to what this class does, see the Javadoc, below.       //",3761],["/** returns an explanation of what the module does.*/",5092],["// does not warrant that the operation of the program will be",5542],["* The default implementation does nothing.",6937]],"useCount":696677},{"word":"dom","context":[["import com.google.gwt.dom.client.Element;",7498],["import org.w3c.dom.NodeList;",35180],["import org.w3c.dom.Node;",54054],["import com.google.gwt.event.dom.client.ClickEvent;",14243],["import com.google.gwt.event.dom.client.ClickHandler;",11767],["import javax.xml.transform.dom.DOMSource;",10863],["import org.w3c.dom.Document;",58229],["import org.w3c.dom.Element;",65613],["import org.w3c.dom.NamedNodeMap;",8722],["import org.w3c.dom.*;",7056]],"useCount":573897},{"word":"domain","context":[["* @param domainFactory - used to create existing (persistent) domain objects.",21819],["this.domain = domain;",9793],["import org.springframework.data.domain.Page;",8658],["import org.springframework.data.domain.Pageable;",7344],["* @param valueObject - extract the domain object fields from this.",7273],["import ims.vo.domain.DomainObjectMap;",7280],["// Generated from form domain interface definition",19346],["ims.domain.DomainObject o = (ims.domain.DomainObject)iter.next();",11066],["ims.domain.DomainObject o = (ims.domain.DomainObject)iter.next();",11066],["this.domain = domain;",9793]],"useCount":1007090},{"word":"domainObject","context":[["valueObject = insert(map, valueObject, domainObject);",7273],["return create(map, domainObject);",7273],["if (domainObject == null)",29476],["if (null == domainObject)",29092],["if (domainObject != null)",14546],["if (domainObject.getIsRIE() != null && domainObject.getIsRIE().booleanValue() == true)",14546],["if (domainObject.getIsRIE() != null && domainObject.getIsRIE().booleanValue() == true)",14546],["newSet.add(domainObject);",11066],["return domainObject;",7474],["* @param domainObject",7421]],"useCount":317261},{"word":"don","context":[["// don't need explicit deletion of cnode as parent's view deletion would clean child views as well",4996],["if (true) { // don't check resource type if the property range is Resource",4417],["* You don't need to call SetupSelect in union-query,",1142],["* <span style=\"color: #3F7E5E\">// you don't need to set values of common columns</span>",1957],["* <span style=\"color: #3F7E5E\">// you don't need to set PK value</span>",1532],["*   DONT_BREAK_LINES: don't break lines at 76 characters",1138],["* <span style=\"color: #3F7E5E\">// if auto-increment, you don't need to set the PK value</span>",1050],["// now, so don't let this thread continue.",903],["* <span style=\"color: #3F7E5E\">// you don't need to set a value of concurrency column</span>",1850],["// don't need explicit deletion of node as parent's view deletion would clean child views as well",879]],"useCount":320585},{"word":"done","context":[["done = true;",53346],["boolean done = false;",26801],["while (!done) {",19779],["// We're done, just return.",17189],["monitor.done();",6352],["if (done) {",5413],["protected void done() {",4541],["public void done() {",4292],["return done;",4203],["done = false;",3936]],"useCount":446996},{"word":"double","context":[["double sum = 0.0;",6303],["public double getX() {",4498],["double sum = 0;",13121],["public double getY() {",4463],["public double getValue() {",4286],["double p = Double.NaN;",3961],["* @return double",3787],["double total = 0;",3343],["double result = 0;",3301],["final double ix = it.aDouble;",3285]],"useCount":2607430},{"word":"drawable","context":[["import android.graphics.drawable.Drawable;",50563],["public static final class drawable {",15453],["import android.graphics.drawable.BitmapDrawable;",13468],["import android.graphics.drawable.ColorDrawable;",8686],["return drawable;",3325],["<strong>Note:</strong> Clients would like to set this drawable",2726],["example, if share activity is to be chosen the drawable should",2726],["drawable.draw(canvas);",2526],["if (drawable != null) {",2443],["import android.graphics.drawable.GradientDrawable;",2440]],"useCount":370947},{"word":"driver","context":[["* @exception SQLFeatureNotSupportedException if the JDBC driver does not support",9032],["driver.quit();",4468],["this.driver = driver;",4047],["driver.get(pages.javascriptPage);",3750],["return driver;",3709],["private WebDriver driver;",2829],["driver.get(pages.formPage);",2519],["import com.datastax.driver.core.Session;",2272],["driver.get(pages.xhtmlTestPage);",2059],["this.driver = driver;",4047]],"useCount":341422},{"word":"e","context":[["} catch (Exception e) {",1461875],["e.printStackTrace();",1367378],["} catch (IOException e) {",808769],["throw new RuntimeException(e);",221750],["throw e;",249494],["} catch (InterruptedException e) {",210672],["public void actionPerformed(ActionEvent e) {",187882],["} catch (SQLException e) {",175450],["catch (Exception e) {",164195],["catch (Exception e)",150266]],"useCount":15637774},{"word":"each","context":[["*   <li>and each data type</li>",2813],["terms of your choice, provided that you also meet, for each linked",20904],["* This object contains factory methods for each",4057],["* groups.  Factory methods for each of these are",4048],["* terms of your choice, provided that you also meet, for each linked",3400],["*   <li>each enum,</li>",2814],["*   <li>each feature of each class,</li>",2814],["*   <li>each feature of each class,</li>",2814],["*   <li>each class,</li>",2814],["*       agreed to in writing, Licensor provides the Work (and each",2735]],"useCount":577578},{"word":"eclipse","context":[["import org.eclipse.core.runtime.CoreException;",21986],["* and is available at http://www.eclipse.org/legal/epl-v10.html",23608],["import org.eclipse.emf.common.notify.Notification;",27387],["* @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)",27933],["import org.eclipse.emf.ecore.EObject;",30405],["import org.eclipse.emf.ecore.EClass;",33327],["import org.eclipse.swt.widgets.Composite;",35105],["* http://www.eclipse.org/org/documents/edl-v10.php.",40289],["import org.eclipse.swt.SWT;",42019],["* http://www.eclipse.org/legal/epl-v10.html",189338]],"useCount":3365580},{"word":"edit","context":[["* This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children",7298],["import org.eclipse.emf.edit.provider.IItemLabelProvider;",6749],["import org.eclipse.emf.edit.provider.IItemPropertySource;",6667],["import org.eclipse.emf.edit.provider.ITreeItemContentProvider;",6589],["import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;",6586],["import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;",6577],["import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;",5308],["import org.eclipse.emf.edit.provider.ViewerNotification;",5267],["SharedPreferences.Editor editor = preferences.edit();",4990],["import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;",7730]],"useCount":399624},{"word":"editor","context":[["import com.intellij.openapi.editor.Editor;",15865],["GraphicalEditor editor = getActiveEditor();",17702],["validateOrGenerateResults(editor, generateResults);",17705],["if (editor != null) {",22777],["// <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents",29857],["}// </editor-fold>//GEN-END:initComponents",30240],["//</editor-fold>",30705],["editor.commit();",34235],["* and open the template in the editor.",179345],["// </editor-fold>",15420]],"useCount":998365},{"word":"edu","context":[["import edu.stanford.nlp.ling.CoreAnnotations;",2046],["import edu.stanford.nlp.util.Generics;",1946],["import edu.stanford.nlp.trees.Tree;",2070],["import edu.wpi.first.wpilibj.command.CommandGroup;",2074],["import edu.wpi.first.wpilibj.Timer;",2287],["import edu.wpi.first.wpilibj.command.Subsystem;",2691],["import edu.stanford.nlp.ling.CoreLabel;",2737],["import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;",3301],["import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;",3467],["import edu.wpi.first.wpilibj.command.Command;",6027]],"useCount":812193},{"word":"either","context":[["* <P><B>Note:</B> This stream object can either be a standard",1597],["* policies, either expressed or implied, of any organization.",1642],["* either",1789],["/**  Size of padding on either end of a divider.",2315],["that is, when in landscape. Can be either an absolute dimension",3516],["that is, when in portrait. Can be either an absolute dimension",3516],["/** <p>Must be a boolean value, either \"<code>true</code>\" or \"<code>false</code>\".",28004],["*             either a problem with the data in the request, or a server side issue.",35135],["* Sets the designated column in either the current row or the insert",1528],["<p>Must be a boolean value, either \"<code>true</code>\" or \"<code>false</code>\".",41343]],"useCount":345632},{"word":"elasticsearch","context":[["import org.elasticsearch.common.unit.TimeValue;",9557],["import org.elasticsearch.common.settings.Settings;",33961],["import org.elasticsearch.common.xcontent.XContentBuilder;",15515],["import org.elasticsearch.common.inject.Inject;",14889],["import org.elasticsearch.common.io.stream.StreamInput;",12860],["import org.elasticsearch.common.io.stream.StreamOutput;",11059],["import org.elasticsearch.Version;",10339],["import org.elasticsearch.common.Nullable;",9597],["import org.elasticsearch.threadpool.ThreadPool;",9389],["import org.elasticsearch.cluster.metadata.IndexMetaData;",9094]],"useCount":1193303},{"word":"elemField","context":[["elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));",19876],["elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"int\"));",6204],["elemField.setNillable(true);",7761],["elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"long\"));",8875],["elemField.setMaxOccursUnbounded(true);",9031],["elemField = new org.apache.axis.description.ElementDesc();",52777],["elemField.setMinOccurs(0);",60239],["elemField.setNillable(false);",65337],["typeDesc.addFieldDesc(elemField);",73772],["org.apache.axis.description.ElementDesc elemField = new org.apache.axis.description.ElementDesc();",20958]],"useCount":408947},{"word":"element","context":[["return element;",18387],["if (element != null) {",10140],["* &lt;/element>",10065],["*         &lt;/element>",27453],["if (element == null) {",8171],["fldEl = fldEl.element(\"class\");",6385],["}  // End of if for expected property start element",10746],["*                   &lt;/element>",12665],["* @param element",14604],["*                             &lt;/element>",8612]],"useCount":1874783},{"word":"elements","context":[["elements.add(element);",1959],["this.elements = elements;",3465],["for (int i = 0; i < elements.length; i++) {",2558],["* @param elements",2607],["this.elements = elements;",3465],["// check number of elements in the page",3743],["* elements.",3918],["// check number of evidence elements and their value",5263],["java.util.List cl = el.elements(\"class\");",7586],["return elements;",7660]],"useCount":690310},{"word":"else","context":[["} else{",21357],["} else {",8285794],["} else",215166],["else if (Configuration.doAutoCreate())",21771],["}else{",367132],["}else",26393],["}else {",64648],["else {",1427533],["else",2483172],["else{",158919]],"useCount":16007152},{"word":"em","context":[["em.flush();",11465],["em.getTransaction().commit();",11552],["em.close();",22460],["em.getTransaction().begin();",11517],["private EntityManager em;",10012],["beginTransaction(em);",8885],["closeEntityManager(em);",8628],["* The feature id for the '<em><b>Name</b></em>' attribute.",7210],["* The feature id for the '<em><b>Name</b></em>' attribute.",7210],["EntityManager em = createEntityManager();",6501]],"useCount":1157468},{"word":"email","context":[["return this.email;",1905],["* To contact the author please send an email to: support@sql-workbench.net",1951],["public String email;",2136],["Any questions should be directed to the author via email at: products@puttysoftware.com",4142],["* @param email",5344],["public void setEmail(String email) {",16595],["private String email;",18881],["return email;",21763],["this.email = email;",26588],["this.email = email;",26588]],"useCount":332296},{"word":"emf","context":[["import org.eclipse.emf.common.util.EList;",19988],["import org.eclipse.emf.common.notify.Notification;",27387],["import org.eclipse.emf.ecore.EObject;",30405],["import org.eclipse.emf.ecore.EPackage;",8023],["import org.eclipse.emf.common.notify.AdapterFactory;",8657],["import org.eclipse.emf.common.notify.NotificationChain;",11862],["import org.eclipse.emf.ecore.InternalEObject;",14064],["import org.eclipse.emf.ecore.impl.ENotificationImpl;",16668],["import org.eclipse.emf.ecore.EClass;",33327],["* @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)",27933]],"useCount":509384},{"word":"empty","context":[["//This is to overcome a bug in both Sybase and Oracle which prevents them from storing an empty string correctly",7191],["return Optional.empty();",19033],["// empty",8552],["// Required empty public constructor",7066],["Optional.empty(),",5037],["empty = false;",2645],["return empty;",2534],["if (empty) {",2497],["/* empty */",2156],["throw new IllegalArgumentException(\"Value cannot be null or empty!\");",2090]],"useCount":644441},{"word":"enabled","context":[["this.enabled = enabled;",12334],["if (enabled) {",8285],["* @param enabled",5057],["private boolean enabled;",4609],["@attr name android:enabled",4358],["if (!enabled) {",3750],["@Test(enabled = false)",3675],["this.enabled = enabled;",12334],["public void setEnabled(boolean enabled) {",11795],["return enabled;",12244]],"useCount":416067},{"word":"encoding","context":[["new  org.apache.axis.encoding.ser.BeanDeserializer(",24551],["new org.apache.axis.encoding.ser.EnumSerializer(",8862],["new org.apache.axis.encoding.ser.EnumDeserializer(",8862],["this.encoding = encoding;",6417],["this.encoding = encoding;",6417],["return encoding;",6347],["* @param encoding",4197],["new  org.apache.axis.encoding.ser.BeanSerializer(",24773],["public static org.apache.axis.encoding.Deserializer getDeserializer(",33959],["public static org.apache.axis.encoding.Serializer getSerializer(",33959]],"useCount":563379},{"word":"end","context":[["\"end\\n\" +",15373],["* <!-- begin-user-doc --> <!-- end-user-doc -->",30191],["* <!-- end-user-doc -->",1457031],["a=0;// .end method",25726],["}  // end doPost",20464],["* <!-- end-model-doc -->",18434],["// CraftBukkit end",15146],["long end = System.currentTimeMillis();",12603],["this.end = end;",11767],["this.end = end;",11767]],"useCount":3114876},{"word":"engine","context":[["* Usually this method is called internally by the JSF engine.",3975],["package org.ovirt.engine.core.bll;",4214],["import net.sf.jasperreports.engine.JRException;",4346],["import org.ovirt.engine.core.common.action.VdcActionType;",4646],["this.engine = engine;",8055],["this.engine = engine;",8055],["import org.ovirt.engine.core.compat.Guid;",13306],["this.engine = null;",3989],["engine = new CurrentEngine(formName);",3899],["public CurrentEngine engine;",3899]],"useCount":1133270},{"word":"entity","context":[["HttpEntity entity = response.getEntity();",7970],["import net.minecraft.entity.player.InventoryPlayer;",8501],["import net.minecraft.entity.player.EntityPlayer;",67118],["if (entity != null) {",8940],["import org.bukkit.entity.Player;",48936],["import net.minecraft.entity.Entity;",29474],["return entity;",22608],["import net.minecraft.entity.EntityLivingBase;",18182],["* @param entity",11286],["import net.minecraft.entity.player.EntityPlayerMP;",9182]],"useCount":1569652},{"word":"entries","context":[["this.entries = entries;",4329],["this.entries = new MIBEntry<?>[] {",23414],["this.entries = entries;",4329],["while (entries.hasMoreElements()) {",4031],["entries.add(entry);",3299],["if (entries == null) {",2358],["if (entries != null) {",1567],["* entries.",1562],["return entries;",10268],["while (entries.hasNext()) {",1507]],"useCount":372722},{"word":"entry","context":[["* @param entry",4816],["// Main entry point",3724],["this.entry = entry;",3890],["this.entry = entry;",3890],["String name = entry.getKey();",4181],["Object value = entry.getValue();",6124],["String key = entry.getKey();",9668],["if (entry != null) {",10024],["if (entry == null) {",10860],["return entry;",16977]],"useCount":1348363},{"word":"env","context":[["* @param env",3098],["import org.springframework.core.env.Environment;",7237],["this.env = env;",4667],["this.env = env;",4667],["return env;",4579],["updateQuestStatus(env);",4195],["private Environment env;",3844],["import org.elasticsearch.env.Environment;",3546],["Player player = env.getPlayer();",2662],["env.close();",2421]],"useCount":430652},{"word":"equalTo","context":[["import static org.hamcrest.CoreMatchers.equalTo;",12603],["import static org.hamcrest.Matchers.equalTo;",24370],["assertThat(terms.getName(), equalTo(\"terms\"));",4187],["assertThat(subject, is(equalTo(expected)));",2644],["assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));",2167],["assertThat(searchResponse.getHits().totalHits(), equalTo(1l));",3383],["import static org.hamcrest.core.IsEqual.equalTo;",2720],["assertThat(bucket.getDocCount(), equalTo(1l));",3187],["assertThat(histo.getName(), equalTo(\"histo\"));",3032],["assertThat(terms.getBuckets().size(), equalTo(5));",1945]],"useCount":638396},{"word":"equals","context":[["public boolean equals(final Object obj) {",14416],["public boolean equals(Object obj) {",181284],["public boolean equals(Object o) {",105625],["public boolean equals(Object obj)",28876],["public boolean equals(Object other) {",27197],["public synchronized boolean equals(java.lang.Object obj) {",25141],["public boolean equals(Object object) {",22070],["public boolean equals(Object that) {",19564],["if (!getClass().equals(other.getClass())) {",15095],["return super.equals(obj);",14885]],"useCount":3406300},{"word":"err","context":[["System.err.println(",6641],["System.err.println(e);",8058],["System.err",8471],["System.err.println();",9493],["e.printStackTrace(System.err);",11286],["System.err.println(\"impossible: \"+re);",4260],["throw err;",4245],["err.printStackTrace();",3871],["System.err.println(msg);",3303],["System.err.println(e.getMessage());",12684]],"useCount":452278},{"word":"error","context":[["* @throws IOException if an I/O error occurs",22012],["LOG.error(e);",19227],["return error;",12502],["* @throws ServletException if a servlet-specific error occurs",12178],["error = true;",12160],["log.error(e);",11872],["logger.error(e);",10923],["* @exception SQLException if a database access error occurs",14384],["log.error(e.getMessage(), e);",16796],["logger.error(e.getMessage(), e);",18303]],"useCount":2443709},{"word":"errors","context":[["return errors;",12855],["errors++;",3744],["this.errors = errors;",3052],["this.errors = errors;",3052],["if (!errors.isEmpty()) {",2853],["import org.ovirt.engine.core.common.errors.EngineMessage;",2586],["*             If any internal errors are encountered inside the client while",35112],["errors = true;",2515],["ActionErrors errors = new ActionErrors();",2142],["import org.orekit.errors.OrekitException;",2507]],"useCount":409753},{"word":"event","context":[["import java.awt.event.ActionEvent;",118625],["public void actionPerformed(java.awt.event.ActionEvent evt) {",112800],["import java.awt.event.ActionListener;",89368],["import java.awt.event.MouseEvent;",42037],["import java.awt.event.*;",40136],["import java.awt.event.KeyEvent;",34894],["* @param event",21223],["event.setCancelled(true);",21203],["public void onClick(ClickEvent event) {",19349],["import java.awt.event.MouseAdapter;",18616]],"useCount":3356790},{"word":"events","context":[["import org.eclipse.swt.events.SelectionEvent;",16438],["import org.eclipse.swt.events.SelectionAdapter;",13298],["* @param asyncHandler Asynchronous callback handler for events in the",10739],["import javax.xml.stream.events.XMLEvent;",7955],["import org.eclipse.swt.events.ModifyListener;",7533],["import org.eclipse.swt.events.ModifyEvent;",7384],["*        Asynchronous callback handler for events in the lifecycle of the",7010],["return events;",6527],["events.add(event);",3355],["import org.eclipse.swt.events.SelectionListener;",4718]],"useCount":548861},{"word":"evt","context":[["public void stateChanged(javax.swing.event.ChangeEvent evt) {",3856],["public void keyReleased(java.awt.event.KeyEvent evt) {",3928],["private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed",4155],["public void actionPerformed(java.awt.event.ActionEvent evt)",4212],["jButton1ActionPerformed(evt);",4593],["* @param evt",4888],["public void mouseClicked(java.awt.event.MouseEvent evt) {",8706],["public void propertyChange(PropertyChangeEvent evt) {",10773],["public void actionPerformed(ActionEvent evt) {",12259],["public void actionPerformed(java.awt.event.ActionEvent evt) {",112800]],"useCount":436227},{"word":"ex","context":[["} catch (Exception ex) {",245128],["ex.printStackTrace();",122764],["} catch (IOException ex) {",112234],["throw ex;",73440],["} catch (SQLException ex) {",40652],["catch (Exception ex)",27993],["catch (Exception ex) {",27548],["throw new RuntimeException(ex);",26882],["} catch (InterruptedException ex) {",24386],["} catch (Throwable ex) {",20369]],"useCount":2190056},{"word":"example","context":[["*             attempting to make the request or handle the response.  For example",35090],["* For example, to add a new item, do as follows:",88109],["* For example:",9306],["@ApiModelProperty(example = \"null\", value = \"\")",6238],["import com.rapidminer.example.ExampleSet;",4109],["import com.rapidminer.example.Attribute;",3613],["package example;",3021],["package com.example.android.sunshine.app;",2740],["*       (an example is provided in the Appendix below).",2735],["example, if share activity is to be chosen the drawable should",2726]],"useCount":680010},{"word":"exception","context":[["throws com.liferay.portal.kernel.exception.PortalException,",18138],["* @throws SystemException if a system exception occurred",102486],["* particular file as subject to the \"Classpath\" exception as provided",100648],["exception statement from your version. */",18839],["\" is not a valid exception\");",18854],["this exception to your version of the library, but you are not",20635],["_localctx.exception = re;",24409],["throws com.liferay.portal.kernel.exception.SystemException;",24632],["throws com.liferay.portal.kernel.exception.SystemException {",44413],["* @throws Exception the exception",17456]],"useCount":2657101},{"word":"exceptions","context":[["throw new ims.framework.exceptions.CodingRuntimeException(\"Invalid field name\");",10835],["public void handle() throws ims.framework.exceptions.PresentationLogicException",20815],["import org.projectfloodlight.openflow.exceptions.*;",8282],["public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException",10666],["* @throws TorqueException Any exceptions caught during processing will be",8858],["* occurred. This class is the general class of exceptions produced by",3283],["import org.apache.hyracks.api.exceptions.HyracksDataException;",3693],["public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException",3714],["import ims.domain.exceptions.StaleObjectException;",3951],["import org.apache.cassandra.exceptions.ConfigurationException;",4039]],"useCount":484495},{"word":"execute","context":[["public void execute() {",37420],[".execute();",18372],["}.execute();",13907],["public Branch execute(Processor cpu)",11674],["protected void execute() {",11332],["stmt.execute();",10656],["statement.execute();",7887],["public void execute()",6475],["// Make this return true when this Command no longer needs to run execute()",6340],[".execute().actionGet();",42916]],"useCount":1158788},{"word":"exist","context":[["*  http://exist-db.org",5500],["import org.exist.xquery.FunctionSignature;",2076],["import org.exist.storage.DBBroker;",2420],["if (fields == null) throw new IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");",14842],["* It test the number of wanted objet returned by the methods, and if any object really exist in the original list.",7363],["import org.exist.xquery.XPathException;",3568],["import org.exist.dom.QName;",3416],["import org.exist.xquery.value.Sequence;",3347],["import org.exist.xquery.value.Type;",2722],["import org.exist.xquery.XQueryContext;",2720]],"useCount":383127},{"word":"exists","context":[["if (file.exists()) {",18972],["if (!file.exists()) {",18908],["if (f.exists()) {",7869],["if (!f.exists()) {",5894],["if (!dir.exists()) {",4487],["public boolean exists() {",4407],["if (!file.exists())",4144],["boolean exists = false;",3870],["exists = true;",3800],["return exists;",3357]],"useCount":664515},{"word":"exit","context":[["System.exit(1);",93587],["System.exit(0);",80006],["System.exit(-1);",38792],["System.exit(2);",5143],["exit();",3199],["public void exit() {",2673],["System.exit(res);",2604],["CloudTracing.exit(invocationId, result);",2232],["Context.exit();",2128],["log.debug(funcName + \": exit\");",2089]],"useCount":367614},{"word":"expected","context":[["* <p>The following schema fragment specifies the expected content contained within this class.",169528],["@Test(expected = IllegalArgumentException.class)",58087],["// expected",65663],["final String[] expected = {",9186],["@Test(expected=IllegalArgumentException.class)",10308],["}  // End of if for expected property start element",10746],["} catch (IllegalArgumentException expected) {",10995],["@Test(expected = IllegalStateException.class)",15839],["assertEquals(expected, actual);",16385],["@Test(expected = NullPointerException.class)",20779]],"useCount":1386729},{"word":"expression","context":[["* @return the expression value.",1808],["return expression;",9670],["this.expression = expression;",6460],["this.expression = expression;",6460],["* @param expression",3952],["expression();",2527],["if (expression != null) {",2329],["if (expression == null) {",2246],["public ExpressionContext expression() {",2088],["if (!expression) {",1860]],"useCount":573141},{"word":"extends","context":[["public <T> T accept(ParseTreeVisitor<? extends T> visitor) {",11895],["public class MainActivity extends ActionBarActivity {",5168],["public class ApplicationTest extends ApplicationTestCase<Application> {",30350],["public static final class Builder extends",18489],["public class MainActivity extends Activity {",13554],["extends",12170],["public class MainActivity extends AppCompatActivity {",10150],["extends com.google.protobuf.MessageOrBuilder {",9775],["extends TestCase",8881],["protected final class LocalFormName extends FormName",5691]],"useCount":1998425},{"word":"f","context":[["f.setAccessible(true);",9728],["f.delete();",11962],["return f;",31135],["case '\\f':",5640],["if (!f.exists()) {",5894],["if (f.isDirectory()) {",6470],["case 'f':",6659],["if (f.exists()) {",7869],["if (f != null) {",8158],["* @param f",9037]],"useCount":1438077},{"word":"facebook","context":[["import com.facebook.buck.rules.TargetGraph;",2916],["import com.facebook.buck.model.BuildTarget;",7220],["import com.facebook.presto.spi.type.Type;",5928],["import com.facebook.buck.rules.SourcePathResolver;",5231],["import com.facebook.buck.rules.BuildRule;",4667],["import com.facebook.buck.io.ProjectFilesystem;",4623],["import com.facebook.buck.rules.SourcePath;",4609],["import com.facebook.buck.rules.BuildRuleResolver;",4088],["import com.facebook.buck.rules.BuildRuleParams;",3836],["import com.facebook.buck.util.HumanReadableException;",3089]],"useCount":577582},{"word":"factory","context":[["* This constructs an instance from a factory and a notifier.",7334],["import org.springframework.beans.factory.annotation.Autowired;",196694],["import org.springframework.beans.factory.annotation.Value;",17280],["import org.springframework.beans.factory.annotation.Qualifier;",15256],["import org.springframework.beans.factory.InitializingBean;",11668],["return factory;",10878],["DomainFactory factory = getDomainFactory();",10519],["* @param factory",10354],["this.factory = factory;",9690],["this.factory = factory;",9690]],"useCount":990967},{"word":"fail","context":[["Assert.fail(e.getMessage());",6762],["fail(\"Not yet implemented\");",8824],["fail( e.getClass().getSimpleName() + \"\\n\" + e.getMessage() );",17190],["fail( \"Should not have got here\" );",17190],["//fail(\"Not yet implemented\");",26213],["Assert.fail();",27613],["fail(e.getMessage());",28722],["import static org.junit.Assert.fail;",59374],["fail();",194402],["// TODO review the generated test code and remove the default call to fail.",6118]],"useCount":1128297},{"word":"failed","context":[["if (state.failed) return;",5598],["* @throws Exception If failed.",27998],["* @param serviceCallback the async ServiceCallback to handle successful and failed responses.",22729],["if (state.failed) return retval;",20274],["if (state.failed) return ;",17280],["failed = true;",8882],["if (state.failed) return current;",8259],["state.failed=false;",7611],["* @throws IgniteCheckedException If failed.",7040],["if (state.backtracking>0) {state.failed=true; return retval;}",6896]],"useCount":560448},{"word":"false","context":[["this.isValidated = false;",54316],["if (obj == null) return false;",37973],["<p>Must be a boolean value, either \"<code>true</code>\" or \"<code>false</code>\".",41343],["boolean found = false;",43463],["this.isBusy = false;",49035],["false);",57643],["elemField.setNillable(false);",65337],["first = false;",81634],["false,",87517],["return false;",4886646]],"useCount":12745131},{"word":"fasterxml","context":[["import com.fasterxml.jackson.databind.ObjectMapper;",41209],["import com.fasterxml.jackson.annotation.JsonProperty;",45810],["import com.fasterxml.jackson.databind.JsonNode;",17000],["import com.fasterxml.jackson.annotation.JsonIgnore;",15935],["import com.fasterxml.jackson.annotation.JsonIgnoreProperties;",14756],["import com.fasterxml.jackson.annotation.JsonCreator;",14680],["import com.fasterxml.jackson.core.JsonProcessingException;",13309],["import com.fasterxml.jackson.annotation.JsonInclude;",11499],["import com.fasterxml.jackson.core.JsonToken;",9479],["import com.fasterxml.jackson.databind.node.ObjectNode;",8585]],"useCount":359938},{"word":"feature","context":[["import net.minecraft.world.gen.feature.WorldGenerator;",2202],["// Check the type of the specified child object and return the proper feature to use for",2984],["* This specifies how to implement {@link #getChildren} and is used to deduce an appropriate feature for an",2959],["*   <li>each feature of each class,</li>",2814],["import org.opengis.feature.simple.SimpleFeature;",2490],["* The meta object literal for the '<em><b>Name</b></em>' attribute feature.",2251],["return feature;",2233],["import org.opengis.feature.simple.SimpleFeatureType;",2206],["* The feature id for the '<em><b>Id</b></em>' attribute.",2129],["* The feature id for the '<em><b>Name</b></em>' attribute.",7210]],"useCount":322971},{"word":"field","context":[["byName.put(field.getFieldName(), field);",15139],["public Object getFieldValue(_Fields field) {",14996],["for (_Fields field : EnumSet.allOf(_Fields.class)) {",15115],["byName.put(field.getFieldName(), field);",15139],["return field;",16125],["* This field was generated by MyBatis Generator.",18406],["if (field == null) {",20710],["field.setAccessible(true);",22574],["return isSetField(field);",41651],["switch (field) {",46672]],"useCount":2358690},{"word":"fields","context":[["return fields;",30717],["// check for required fields",15602],["_Fields fields = findByThriftId(fieldId);",15119],["if (fields == null) throw new IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");",14842],["/** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */",14769],["// OF message fields",12800],["// check for required fields of primitive type, which can't be checked in the validate method",12733],["* @param responseFields Use this field to include those fields which are not included by default.",8595],["for (Field field : fields) {",7635],["* @param valueObject - extract the domain object fields from this.",7273]],"useCount":831637},{"word":"file","context":[["return file;",31576],["* particular file as subject to the \"Classpath\" exception as provided",100648],["* To change this template file, choose Tools | Templates",96536],["// WARNING: DO NOT MODIFY the content of this file",73630],["// Any modifications to this file will be lost upon recompilation of the source schema.",64071],["import java.nio.file.Path;",60410],["* This file was auto-generated from WSDL",49423],["import java.nio.file.Files;",43707],["import java.nio.file.Paths;",37540],["* This file is part of the Open Web Application Security Project (OWASP)",31744]],"useCount":4708774},{"word":"fileName","context":[["return fileName;",11753],["* @param fileName",13434],["this.fileName = fileName;",11321],["this.fileName = fileName;",11321],["private String fileName;",7447],["String fileName;",2637],["if (fileName == null) {",2793],["String fileName = null;",3336],["public void setFileName(String fileName) {",3622],["File file = new File(fileName);",5155]],"useCount":313769},{"word":"filename","context":[["if (filename != null) {",2491],["File file = new File(filename);",4775],["String filename;",2567],["private String filename;",4984],["this.filename = filename;",7982],["this.filename = filename;",7982],["return filename;",8814],["if (filename == null) {",3376],["* @param filename",11432],["public void setFilename(String filename) {",1951]],"useCount":321425},{"word":"files","context":[["return files;",11944],["for (File file : files) {",12874],["for (String file : files) {",3353],["for (int i = 0; i < files.length; i++) {",8488],["if (files != null) {",8094],["if (files == null) {",4413],["for (File f : files) {",4115],["File[] files = dir.listFiles();",3860],["import com.badlogic.gdx.files.FileHandle;",3779],["This source code and its compiled class files are free and modifiable under the terms of",22574]],"useCount":665181},{"word":"filter","context":[["filter,",2414],["option.set_filter(filter);",3020],["* This method is used for creating a subtree filter.",3247],["IntentFilter filter = new IntentFilter();",4221],["if (filter == null) {",4518],["if (filter != null) {",5533],["* @param filter",9292],["this.filter = filter;",10803],["this.filter = filter;",10803],["return filter;",12185]],"useCount":843998},{"word":"final","context":[["} catch (final IOException e) {",27223],["private static final long serialVersionUID = 0L;",31068],["public static final com.google.protobuf.Descriptors.Descriptor",33263],["public final boolean isInitialized() {",35552],["final XQuery query = new XQuery(",44024],["} catch(final Throwable trw) {",44024],["} catch (final Exception e) {",48358],["private final String name;",58747],["final int prime = 31;",87389],["private static final long serialVersionUID = 1L;",566114]],"useCount":21794956},{"word":"finally","context":[["}finally{",32594],["//        } finally {",2252],["}   // end finally",4358],["finally {",352302],["} finally {",1375868],["} finally",5846],["}finally {",10546],["finally",160144],["} finally{",5318],["finally{",7936]],"useCount":2034547},{"word":"find","context":[["if (m.find())",1407],["m.find();",1697],["if (!matcher.find()) {",1717],["if (matcher.find())",1884],["matcher.find();",2107],["//find namespace for the prefix",4241],["while (m.find()) {",7826],["if (m.find()) {",8218],["if (matcher.find()) {",11858],["while (matcher.find()) {",10433]],"useCount":403259},{"word":"first","context":[["import edu.wpi.first.wpilibj.command.Command;",6027],["first = false;",81634],["boolean first = true;",49764],["if (!first) sb.append(\", \");",23089],["if (first) {",17742],["if (!first) {",9763],["return first;",8172],["/** Called when the activity is first created. */",7726],["// Called just before this Command runs the first time",6345],["this.first = first;",5701]],"useCount":1369045},{"word":"flag","context":[["this.flag = flag;",2784],["return flag;",11335],["flag = true;",15794],["flag = false;",11911],["if (flag) {",11226],["boolean flag = false;",11207],["boolean flag = true;",6566],["if (flag)",5628],["* @param flag",3639],["if (!flag) {",2917]],"useCount":423949},{"word":"flags","context":[["public void writeToParcel(Parcel dest, int flags) {",14412],["public int onStartCommand(Intent intent, int flags, int startId) {",8443],["return flags;",7820],["this.flags = flags;",7249],["this.flags = flags;",7249],["public void writeToParcel(Parcel out, int flags) {",3392],["return super.onStartCommand(intent, flags, startId);",3389],["* @param flags",3347],["int flags = 0;",3170],["flags,",3061]],"useCount":440242},{"word":"float","context":[["public void clicked(InputEvent event, float x, float y) {",2154],["public float x;",2137],["public void clicked(InputEvent event, float x, float y) {",2154],["public float getHeight() {",2180],["public float floatValue() {",2446],["public void update(float delta) {",2534],["public void render(float delta) {",2770],["public float getY() {",3375],["public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {",4567],["public float getX() {",3446]],"useCount":2075049},{"word":"flush","context":[["System.out.flush();",9295],["output.flush();",9382],["out.flush();",57544],["writer.flush();",29240],["flush();",18773],["em.flush();",11465],["os.flush();",11033],["public void flush() {",10489],["public void flush() throws IOException {",9830],["pw.flush();",9720]],"useCount":486527},{"word":"following","context":[["* <p>The following schema fragment specifies the expected content contained within this class.",169528],["<p>Must be one or more (separated by '|') of the following constant values.</p>",11719],["<p>Must be one of the following constant values.</p>",15389],["* the following conditions:",16032],["furnished to do so, subject to the following conditions:",18665],["* The following features are supported:",19074],["* The following features are implemented:",19662],["<p>Includes the following attributes:</p>",54642],["* furnished to do so, subject to the following conditions:",149001],["* Objects of the following type(s) are allowed in the list",85689]],"useCount":940603},{"word":"font","context":[["this.font = font;",3469],["import java.awt.font.FontRenderContext;",2829],["public void setFont(Font font) {",1768],["* Material design icon font character code see",1782],["if (font == null) {",1916],["private Font font;",1961],["Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),",151497],["return font;",4914],["this.font = font;",3469],["g.setFont(font);",2675]],"useCount":392361},{"word":"foo","context":[["void foo(){}",10273],["buf.append(\"    public void foo() {\\n\");",3381],["public void foo() {",2547],["\"foo\",",2368],["\"  void foo() {\\n\" +",2197],["java.util.Enumeration<String> headers = request.getHeaders(\"foo\");",1979],["param = map.get(\"foo\")[0];",1933],["String param = scr.getTheValue(\"foo\");",1930],["Foo foo = new Foo();",1917],["String param = request.getHeader(\"foo\");",1916]],"useCount":673822},{"word":"for","context":[["* <p>Java class for anonymous complex type.",51085],["* distributed with this work for additional information",436355],["for (int i = 0; i < n; i++) {",34776],["for (int i = 0; i < 10; i++) {",32144],["for (int i = 0; i < length; i++) {",31491],["<p>Must be a string value, using '\\\\;' to escape characters such as '\\\\n' or '\\\\uxxxx' for a unicode character.",31095],["for (;;) {",41901],["for (int i = 0; i < size; i++) {",46512],["for (int i = 0; i < count; i++) {",40426],["*  distributed with this work for additional information",30628]],"useCount":16833679},{"word":"form","context":[["* This method is called from within the constructor to initialize the form.",17286],["<p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",252522],["/** <p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",117936],["<p>Must be a color value, in the form of \"<code>#<i>rgb</i></code>\", \"<code>#<i>argb</i></code>\",",21810],["// Generated from form domain interface definition",19346],["/** <p>Must be a color value, in the form of \"<code>#<i>rgb</i></code>\", \"<code>#<i>argb</i></code>\",",15187],["* initialize the form.",10967],["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167],["theme attribute (in the form",317212],["* @param form",9835]],"useCount":1960841},{"word":"format","context":[["import org.joda.time.format.DateTimeFormatter;",7116],["return String.format(",5041],["import java.time.format.DateTimeFormatter;",5083],["String.format(",16434],["import org.joda.time.format.DateTimeFormat;",6247],["* @param format",8018],["this.format = format;",9272],["this.format = format;",9272],["return format;",10223],["import static java.lang.String.format;",15468]],"useCount":1124754},{"word":"forms","context":[["this.forms = forms;",4016],["* Redistribution and use in source and binary forms, with or without modification, are",4388],["*  Redistribution and use in source and binary forms, with or without",5517],["// Redistribution and use in source and binary forms, with or without",8716],["return forms;",4278],["* Redistribution and use in source and binary forms, with or without modification,",13261],["Redistribution and use in source and binary forms, with or without",18917],["Redistribution and use in source and binary forms, with or without modification,",25923],["* Redistribution and use in source and binary forms, with or without",168359],["this.forms = forms;",4016]],"useCount":370106},{"word":"found","context":[["attribute's value can be found in the {@link #Theme} array.",68134],["* Find the _Fields constant that matches fieldId, or null if its not found.",14952],["found = true;",49833],["* Find the _Fields constant that matches name, or null if its not found.",14946],["boolean found = false;",43463],["attribute's value can be found in the {@link #ActionBar} array.",22588],["attribute's value can be found in the {@link #Toolbar} array.",21741],["attribute's value can be found in the {@link #AppCompatTheme} array.",18227],["* aapt tool from the resource data it found.  It",16709],["* if it is not found.",14962]],"useCount":1209707},{"word":"fr","context":[["import fr.lip6.move.pnml.framework.utils.exception.InnerBuildException;",1310],["import fr.javatronic.blog.processor.Annotation_001;",10999],["package fr.javatronic.blog.massive.annotation1.sub1;",9999],["*                        http://proactive.inria.fr/team_members.htm",7637],["fr.close();",3416],["BufferedReader br = new BufferedReader(fr);",1828],["*    Lom Messan Hillah - <lom-messan.hillah@lip6.fr>",1687],["*    lom-messan.hillah@lip6.fr",1687],["import fr.lip6.move.pnml.framework.utils.exception.InvalidIDException;",1358],["import fr.lip6.move.pnml.framework.utils.exception.VoidRepositoryException;",1355]],"useCount":350200},{"word":"fragment","context":[["* <p>The following schema fragment specifies the expected content contained within this class.",169528],["* A placeholder fragment containing a simple view.",4580],["return fragment;",20485],["fragment.setArguments(args);",12246],["this.fragment = fragment;",2115],["if (fragment == null) {",2601],["fragment.setArguments(bundle);",2675],["* The following schema fragment specifies the expected content contained within",2836],["if (fragment != null) {",3542],["// Inflate the layout for this fragment",6514]],"useCount":463225},{"word":"frame","context":[["frame.setVisible(true);",25423],["private JFrame frame;",3607],["frame.pack();",12386],["frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);",9610],["return frame;",6271],["frame.setLocationRelativeTo(null);",5307],["this.frame = frame;",5126],["this.frame = frame;",5126],["frame.dispose();",4825],["JFrame frame = new JFrame();",3729]],"useCount":502014},{"word":"framework","context":[["import junit.framework.Test;",36169],["import junit.framework.TestSuite;",36205],["import junit.framework.Assert;",40480],["import junit.framework.TestCase;",134531],["public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException",10666],["public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException",10666],["throw new ims.framework.exceptions.CodingRuntimeException(\"Invalid field name\");",10835],["import ims.framework.enumerations.SortOrder;",12391],["public void handle() throws ims.framework.exceptions.PresentationLogicException",20815],["import org.osgi.framework.BundleContext;",23505]],"useCount":1293577},{"word":"from","context":[["* @return A Java Future object containing the response from the",21364],["module.  An independent module is a module which is not derived from",20690],["// Generated from form domain interface definition",19346],["*     Oracle - initial API and implementation from Oracle TopLink",19029],["exception statement from your version. */",18839],["* This method is called from within the constructor to initialize the form.",17286],["* @throws IOException exception thrown from serialization/deserialization",17173],["* aapt tool from the resource data it found.  It",16709],["//now represent the ones removed from the VO collection. No longer referenced.",11973],["* This file was auto-generated from WSDL",49423]],"useCount":3493753},{"word":"fs","context":[["import org.apache.hadoop.fs.Path;",46356],["import org.apache.hadoop.fs.FileUtil;",3394],["import org.apache.hadoop.fs.FileSystem;",32906],["FileSystem fs = FileSystem.get(conf);",4378],["import org.apache.hadoop.fs.FileStatus;",10866],["FileSystem fs = cluster.getFileSystem();",3375],["fs.close();",5620],["import org.apache.hadoop.fs.FSDataInputStream;",6142],["import org.apache.hadoop.fs.FSDataOutputStream;",7283],["return fs;",7940]],"useCount":503398},{"word":"function","context":[["import java.util.function.Function;",25504],["throw new Error(\"Missing return statement in function\");",20076],["import java.util.function.Predicate;",11621],["return function;",6493],["\"function Foo() {}\",",5965],["* @param before1 The first function to apply before this function is applied",5056],["* @param before1 The first function to apply before this function is applied",5056],["import java.util.function.BiFunction;",4942],["import java.util.function.Consumer;",16838],["import java.util.function.Supplier;",12251]],"useCount":1324574},{"word":"g","context":[["g.setColor(Color.BLACK);",7099],["super.paintComponent(g);",12265],["public void paint(Graphics g) {",11616],["g.dispose();",11496],["g.setColor(Color.black);",10501],["return g;",8024],["protected void paintComponent(Graphics g) {",6186],["super.paint(g);",6305],["public void paintComponent(Graphics g) {",6984],["* @param g",7034]],"useCount":1103919},{"word":"generated","context":[["// TODO Auto-generated constructor stub",46663],["// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)",43888],["// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2",20257],["* This file was auto-generated from WSDL",49423],["// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)",29771],["* This method was generated by MyBatis Generator.",58319],["// TODO Auto-generated catch block",167039],["// TODO Auto-generated method stub",476306],["* @generated",1713838],["* @generated NOT",19681]],"useCount":3398010},{"word":"get","context":[["result[x] = (String)listOfErrors.get(x);",16154],["_table_.get(value);",9003],[".get();",32839],["return byName.get(name);",15749],["return this.col.get(index);",11626],["if(this.col.get(x) != null)",11626],["schemes.get(iprot.getScheme()).getScheme().read(iprot, this);",11239],["schemes.get(oprot.getScheme()).getScheme().write(oprot, this);",11239],["if(!this.col.get(x).isValidated())",8064],["if (incoming.get(0)) {",8532]],"useCount":5548408},{"word":"getClass","context":[["throw new RuntimeException(t.getClass().getName() +",18854],["if (getClass() != obj.getClass())",41869],["if (getClass() != obj.getClass())",41869],["if (o == null || getClass() != o.getClass()) return false;",33253],["if (o == null || getClass() != o.getClass()) return false;",33253],["if (getClass() != obj.getClass()) {",23805],["if (o == null || getClass() != o.getClass()) {",15897],["if (o == null || getClass() != o.getClass()) {",15897],["if (getClass() != obj.getClass()) {",23805],["fail( e.getClass().getSimpleName() + \"\\n\" + e.getMessage() );",17190]],"useCount":1060936},{"word":"getId","context":[["String getId();",5712],["public String getId()",8111],["public Integer getId()",8507],["this.id = bean.getId();",14583],["switch (v.getId()) {",14693],["public long getId() {",23865],["public String getId() {",89209],["public Integer getId() {",25412],["public Long getId() {",42836],["public int getId() {",52252]],"useCount":1075875},{"word":"getInstance","context":[["MessageDigest md = MessageDigest.getInstance(\"MD5\");",2920],["Calendar now = Calendar.getInstance();",3227],["super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));",3290],["con = L2DatabaseFactory.getInstance().getConnection();",3685],["QueryPos qPos = QueryPos.getInstance(q);",5162],[".getInstance()",8096],["Calendar cal = Calendar.getInstance();",24233],["Calendar c = Calendar.getInstance();",10591],[".getInstance().unmarshall(context));",14820],["Calendar calendar = Calendar.getInstance();",18559]],"useCount":1224351},{"word":"getKey","context":[["String name = entry.getKey();",4181],["String key = entry.getKey();",9668],["public K getKey() {",4022],["return entry.getKey();",3511],["public Object getKey() {",2224],["String key = (String) entry.getKey();",1442],["assertThat(((DateTime) bucket.getKey()), equalTo(key));",1907],["Object key = entry.getKey();",1966],["public String getKey()",2069],["public String getKey() {",20966]],"useCount":432770},{"word":"getMessage","context":[["public String getMessage() {",35270],["fail(e.getMessage());",28722],["logger.error(e.getMessage(), e);",18303],["fail( e.getClass().getSimpleName() + \"\\n\" + e.getMessage() );",17190],["log.error(e.getMessage(), e);",16796],["System.out.println(e.getMessage());",16318],["+ e.getMessage());",15932],["System.err.println(e.getMessage());",12684],["e.getMessage());",12055],["e.getMessage()).setUnfinishedMessage(this);",11620]],"useCount":1113094},{"word":"getName","context":[["public String getName();",15051],[".getName());",12018],["return this.getClass().getName();",13845],["return getClass().getName().compareTo(other.getClass().getName());",14998],["public String getName() {",368813],["public String getName()",47531],["String getName();",21426],["return getName();",19243],["throw new RuntimeException(t.getClass().getName() +",18854],["return getClass().getName().compareTo(other.getClass().getName());",14998]],"useCount":2110205},{"word":"getProperty","context":[["sb.append(System.getProperty(\"line.separator\"));",7732],["String osName = System.getProperty(\"os.name\");",4443],["public Base[] getProperty(int hash, String name, boolean checkValid) throws FHIRException {",1424],["default: return super.getProperty(hash, name, checkValid);",1418],["public Object getProperty(String name) {",1274],["String os = System.getProperty(\"os.name\");",1239],["import static java.lang.System.getProperty;",8809],["@Kroll.getProperty @Kroll.method",1503],["public String getProperty() {",1956],["public String getProperty(String key) {",2361]],"useCount":375674},{"word":"getString","context":[["builder.setTitle(LocaleController.getString(\"AppName\", R.string.AppName));",2412],["throw new KettleException( BaseMessages.getString(",2490],[".getString(",2228],["builder.setNegativeButton(LocaleController.getString(\"Cancel\", R.string.Cancel), null);",2012],["public String getString() {",6037],["public static String getString(String key) {",1588],["getResourceConverter().getString(",1916],["public String getString(String key) {",1850],["String weatherCode = prefs.getString(\"weather_code\", \"\");",1562],["builder.setPositiveButton(LocaleController.getString(\"OK\", R.string.OK), new DialogInterface.OnClickListener() {",1515]],"useCount":889725},{"word":"getText","context":[["public String getText(Object object) {",7528],["public String getText()",3700],["return getText();",5911],["public String getText(Object element) {",4374],["String alertText = alert.getText();",1277],["public String getText() {",30331],["String getText();",1452],["if(getText() != null)",3345],["stepname = wStepname.getText(); // return value",1527],[".getText());",1896]],"useCount":336591},{"word":"getType","context":[["PyType self_type=getType();",14601],["public String getType() {",49550],["public int getType() {",18906],["public Type getType() {",12359],["public String getType()",12950],["switch ( _t.getType()) {",3685],["}.getType());",3772],["}.getType();",3865],["switch (n.getType()) {",4001],["public OFType getType() {",6183]],"useCount":683646},{"word":"getValue","context":[[".getValue());",4981],["return getValue();",4953],["color.getValue();",18252],["public int getValue() {",17353],["public Object getValue() {",15639],["public java.lang.Object getValue( java.lang.Object object )",12451],["public java.lang.String getValue() { return _value_;}",8835],["public String getValue()",7760],["Object value = entry.getValue();",6124],["public String getValue() {",43604]],"useCount":1165657},{"word":"github","context":[["import com.github.smeny.jpc.emulator.execution.decoder.*;",5702],["import com.github.smeny.jpc.emulator.processor.*;",5701],["import com.github.smeny.jpc.emulator.execution.*;",5699],["import static com.github.smeny.jpc.emulator.processor.Processor.*;",5699],["import com.github.smeny.jpc.emulator.processor.fpu64.*;",5699],["* https://github.com/encog/encog-java-core",3376],["* Latest version available online at https://github.com/zach-m/jonix",2341],["package com.github.smeny.jpc.emulator.execution.opcodes.pm;",1972],["package com.github.smeny.jpc.emulator.execution.opcodes.rm;",1966],["package com.github.smeny.jpc.emulator.execution.opcodes.vm;",1892]],"useCount":542083},{"word":"given","context":[["//given (+ some assertions)",2626],["given()",10063],["//given",9564],["// given",51625],["* @throws NullPointerException If given argument is {@code null}",21071],["* For the given interface, get the stub implementation.",4295],["import static org.mockito.BDDMockito.given;",3623],["given().",2999],["* given is outside the bounds of the collection",5688],["* If this service has no port for the given interface,",4297]],"useCount":1302303},{"word":"google","context":[["import com.google.inject.Inject;",57368],["import com.google.common.collect.ImmutableMap;",56003],["import com.google.common.collect.Maps;",57544],["size += com.google.protobuf.CodedOutputStream",58563],["com.google.protobuf.CodedInputStream input,",63638],["import com.google.common.base.Preconditions;",70500],["import com.google.common.collect.ImmutableList;",90682],["throws com.google.protobuf.InvalidProtocolBufferException {",104994],["import com.google.common.collect.Lists;",111282],["com.google.protobuf.ExtensionRegistryLite extensionRegistry)",136082]],"useCount":5170629},{"word":"gov","context":[["import gov.hhs.fha.nhinc.nhinclib.NhincConstants;",2179],["import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;",3839],["elementList.add(new javax.xml.namespace.QName(\"http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_gene\",",1657],["import gov.nih.nci.cagrid.common.Utils;",1511],["package gov.nih.nlm.ncbi.www.soap.eutils.efetch_gene;",1335],["if(namespace.equals(\"http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_gene\")){",1334],["java.lang.String namespacePrefix = registerPrefix(xmlWriter,\"http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_gene\");",1169],["import gov.hhs.fha.nhinc.common.nhinccommon.NhinTargetSystemType;",1067],["import gov.hhs.fha.nhinc.nhinclib.NullChecker;",1062],["Namespace URI = http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_gene",1056]],"useCount":315267},{"word":"graph","context":[["import com.microsoft.graph.http.*;",6303],["import com.microsoft.graph.options.*;",6303],["import com.microsoft.graph.concurrency.*;",6303],["import com.microsoft.graph.core.*;",6303],["this.graph = graph;",5134],["this.graph = graph;",5134],["import com.microsoft.graph.generated.*;",6303],["import com.microsoft.graph.extensions.*;",6303],["return graph;",6591],["import com.microsoft.graph.serializer.*;",6303]],"useCount":466684},{"word":"graphics","context":[["import android.graphics.Paint;",37238],["import android.graphics.BitmapFactory;",33028],["import android.graphics.Rect;",31287],["import android.graphics.drawable.Drawable;",50563],["import android.graphics.Canvas;",51821],["import android.graphics.Color;",59822],["import android.graphics.Bitmap;",83450],["import android.graphics.RectF;",14591],["import org.eclipse.swt.graphics.Image;",14571],["import android.graphics.Typeface;",18952]],"useCount":787133},{"word":"group","context":[["this.group = group;",8736],["* @param groupId the group ID",11144],["return group;",14387],["private String group;",2103],["groups.add(group);",2156],["ButtonGroup group = new ButtonGroup();",2566],["this.group = group;",8736],["* @param group",7129],["if (group == null) {",5757],["if (group != null) {",5325]],"useCount":746039},{"word":"gt","context":[["*   &lt;/complexContent&gt;",7969],["*   &lt;complexContent&gt;",7969],["* Window&gt;Preferences&gt;Java&gt;Code Generation&gt;Code and Comments",1570],["*     &lt;/extension&gt;",1904],["* &lt;/complexType&gt;",9286],["*     &lt;/restriction&gt;",6936],["*     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\"&gt;",6736],["*       &lt;/sequence&gt;",6632],["*       &lt;sequence&gt;",6569],["* &lt;complexType&gt;",3403]],"useCount":322293},{"word":"gui","context":[["import net.minecraft.client.gui.GuiScreen;",6689],["import org.olat.core.gui.control.Event;",2706],["import org.olat.core.gui.control.Controller;",2931],["* displaying in the explorer/experimenter gui",2994],["import net.minecraft.client.gui.FontRenderer;",3016],["import org.olat.core.gui.control.WindowControl;",3648],["import net.minecraft.client.gui.inventory.GuiContainer;",4054],["import org.olat.core.gui.UserRequest;",4127],["import net.minecraft.client.gui.GuiButton;",4531],["package gui;",4686]],"useCount":394890},{"word":"gwt","context":[["import com.google.gwt.user.client.ui.Label;",8375],["import com.google.gwt.core.client.JavaScriptObject;",11040],["import com.google.gwt.event.dom.client.ClickHandler;",11767],["import com.google.gwt.event.dom.client.ClickEvent;",14243],["import com.google.gwt.user.client.ui.Widget;",20217],["import com.google.gwt.core.client.GWT;",24387],["import com.google.gwt.uibinder.client.UiBinder;",10524],["import com.google.gwt.user.client.ui.Composite;",10089],["import com.google.gwt.uibinder.client.UiField;",9994],["import com.google.gwt.user.client.rpc.AsyncCallback;",9247]],"useCount":583838},{"word":"h","context":[["super.onSizeChanged(w, h, oldw, oldh);",6008],["return h;",13724],["protected void onSizeChanged(int w, int h, int oldw, int oldh) {",6355],["height = h;",2016],["int w, int h) {",2361],["* @param h",3776],["int h = 0;",3763],["this.h = h;",2780],["this.h = h;",2780],["case 'h':",2545]],"useCount":569598},{"word":"hadoop","context":[["import org.apache.hadoop.io.LongWritable;",9645],["import org.apache.hadoop.conf.Configuration;",69808],["import org.apache.hadoop.mapreduce.Job;",9587],["import org.apache.hadoop.fs.Path;",46356],["import org.apache.hadoop.fs.FileSystem;",32906],["import org.apache.hadoop.hbase.util.Bytes;",17534],["import org.apache.hadoop.classification.InterfaceAudience;",15215],["import org.apache.hadoop.io.Writable;",10553],["import org.apache.hadoop.fs.FileStatus;",10866],["import org.apache.hadoop.io.Text;",24293]],"useCount":1600168},{"word":"hamcrest","context":[["import org.hamcrest.Matchers;",11095],["import static org.hamcrest.Matchers.containsString;",7886],["import org.hamcrest.Matcher;",8728],["import static org.hamcrest.CoreMatchers.equalTo;",12603],["import static org.hamcrest.core.Is.is;",13680],["import static org.hamcrest.Matchers.*;",14336],["import static org.hamcrest.Matchers.equalTo;",24370],["import static org.hamcrest.CoreMatchers.is;",24837],["import static org.hamcrest.Matchers.is;",25871],["import static org.hamcrest.MatcherAssert.assertThat;",27923]],"useCount":325983},{"word":"handle","context":[["*  method to handle Qnames",5973],["*             attempting to make the request or handle the response.  For example",35090],["// automatically handle clicks on the Home/Up button, so long",26831],["* @param serviceCallback the async ServiceCallback to handle successful and failed responses.",22729],["public void handle() throws ims.framework.exceptions.PresentationLogicException",20815],["*           result or handle the exception.",10739],["public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException",10666],["// TODO: handle exception",8210],["* @implNote The input argument of this method is a able to handle primitive values. In this case this is {@code",7680],["cusparseHandle handle,",4846]],"useCount":615656},{"word":"handler","context":[["*        Asynchronous callback handler for events in the lifecycle of the",7010],["desc.setHandler(handler);",12556],["handler = new org.exolab.castor.xml.XMLFieldHandler() {",11921],["* @param handler",11295],["handler.post(new Runnable() {",7554],["this.handler = handler;",11124],["this.handler = handler;",11124],["if (handler != null) {",9238],["* @param asyncHandler Asynchronous callback handler for events in the",10739],["return handler;",10151]],"useCount":792519},{"word":"has","context":[["*    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>",6447],["* recipient has the option to distribute your version of this file under",4658],["* If this service has no port for the given interface,",4297],["* @throws EntityDuplicatedException When the entity has been duplicated.",5782],["* @throws IOException Signals that an I/O exception has occurred.",5630],["* @throws EntityAlreadyDeletedException When the entity has already been deleted. (not found)",4547],["// value isIncludeRecord has not been set, then we return null and",7273],["// value isIncludeRecord has been set, then we return null and",7273],["// check if the domainObject already has a valueObject created for it",7273],["/** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */",13392]],"useCount":1280676},{"word":"hasNext","context":[["while (iterator.hasNext()) {",52027],["while (itr.hasNext()) {",12317],["while (it.hasNext())",11979],["while (i.hasNext()) {",37659],["while(it.hasNext()){",9839],["while (it.hasNext()) {",98158],["while(it.hasNext()) {",13499],["while (iter.hasNext()) {",60853],["public boolean hasNext() {",57351],["while (iter.hasNext())",41897]],"useCount":1091521},{"word":"hash","context":[["return hash;",49107],["this.hash = hash;",4698],["import com.google.common.hash.Funnel;",4753],["import com.google.common.hash.PrimitiveSink;",5521],["int hash = 7;",8434],["int hash = 0;",12170],["this.hash = hash;",4698],["int hash = 41;",4570],["hash = (19 * hash) + getDescriptorForType().hashCode();",4558],["hash = (19 * hash) + getDescriptorForType().hashCode();",4558]],"useCount":574246},{"word":"hashCode","context":[["hashCode = prime",19992],["public int hashCode()",44400],["int result = super.hashCode();",14103],["hashCode = prime * hashCode",20435],["* hashCode",20079],["hashCode = prime * hashCode",20435],["int hashCode = 1;",21203],["return hashCode;",29759],["public synchronized int hashCode() {",25772],["public int hashCode() {",375581]],"useCount":1329819},{"word":"have","context":[["fail(\"Should have thrown exception\");",4387],["fail( \"Should not have got here\" );",17190],["* additional information or have any questions.",5845],["* or visit www.oracle.com if you need additional information or have any",139265],["* have any questions.",30263],["// This should not have happened",17191],["// we have to store this data until last moment since it is not possible to write any",6150],["* FLOSS exception.  You should have received a copy of the text describing",8696],["* be distributed with the code.  If you do not have a copy,",4694],["* information or have any questions.",4066]],"useCount":1286795},{"word":"hbase","context":[["import org.apache.hadoop.hbase.HRegionInfo;",5659],["import org.apache.hadoop.hbase.classification.InterfaceAudience;",5798],["import org.apache.hadoop.hbase.TableName;",5818],["import org.apache.hadoop.hbase.client.Put;",6208],["import org.apache.hadoop.hbase.client.Scan;",6247],["import org.apache.hadoop.hbase.HTableDescriptor;",6288],["import org.apache.hadoop.hbase.KeyValue;",6332],["import org.apache.hadoop.hbase.client.Result;",6468],["import org.apache.hadoop.hbase.HConstants;",8276],["import org.apache.hadoop.hbase.util.Bytes;",17534]],"useCount":464678},{"word":"header","context":[["this.header = header;",6009],["End of licence header",12125],["if (header != null) {",3661],["* Any modifications to this file must keep this entire header intact.",9260],["return header;",8370],["this.header = header;",6009],["* @param header",3308],["if (header == null) {",2275],[".header(\"accept\", MediaType.APPLICATION_JSON)",1909],["// header",1498]],"useCount":584992},{"word":"height","context":[["int height;",4371],["public void resize(int width, int height) {",3842],["int height = 0;",3975],["this.height = height;",23827],["this.height = height;",23827],["return height;",19146],["* @param height",12115],["private int height;",8270],["for (int y = 0; y < height; y++) {",6548],["Default height of an action bar.",5297]],"useCount":972793},{"word":"here","context":[["fail( \"Should not have got here\" );",17190],["* there really should be more of a description here...",62720],["// TODO add your handling code here:",29680],["API 14 theme customizations can go here.",5014],["* Please do not change here something, ragarding the developer credits, except the \"developed by XXXX\".",5172],["backward-compatibility can go here.",5506],["// Handle action bar item clicks here. The action bar will",26835],["// TODO: Add your conditions here.",6913],["* the FLOSS exception, and it is also available here:",14510],["// If it gets here its bad",17190]],"useCount":629922},{"word":"hibernate","context":[["import org.hibernate.Query;",10926],["import org.hibernate.validator.constraints.NotEmpty;",6281],["import org.hibernate.Transaction;",7462],["import org.hibernate.Criteria;",7973],["import org.hibernate.proxy.HibernateProxy;",8079],["import org.hibernate.criterion.Restrictions;",9340],["import org.hibernate.HibernateException;",11072],["//Trying to avoid the hibernate collection being marked as dirty via its public interface methods. (like add)",11574],["import org.hibernate.SessionFactory;",15641],["import org.hibernate.Session;",24768]],"useCount":403075},{"word":"host","context":[["private String host;",8001],["* @param host",7206],["public void setHost(String host) {",4863],["if (host == null) {",4121],["Host host = Host.getHost(0);",3784],["if (host != null) {",3358],["private final String host;",3154],["this.host = host;",16684],["this.host = host;",16684],["return host;",12383]],"useCount":496271},{"word":"href","context":[["// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a>",64734],["return href;",5432],["* <a href=\"https://www.owasp.org/index.php/Benchmark\">https://www.owasp.org/index.php/Benchmark</a>.",31273],["* <a href=\"http://d.android.com/tools/testing/testing_android.html\">Testing Fundamentals</a>",30848],["* @author Nick Sanidas <a href=\"https://www.aspectsecurity.com\">Aspect Security</a>",20478],["* @author Dave Wichers <a href=\"https://www.aspectsecurity.com\">Aspect Security</a>",10784],["* @author <a href=\"mailto:thompsonbry@users.sourceforge.net\">Bryan Thompson</a>",8161],["* <a href=\"http://www.openolat.org\">",8143],["* @author <a href=\"mailto:bill@burkecentral.com\">Bill Burke</a>",6799],["* @author <a href=\"mailto:dev@directory.apache.org\">Apache Directory Project</a>",5695]],"useCount":776924},{"word":"html","context":[["*  http://www.eclipse.org/legal/epl-v10.html",9283],["import org.apache.wicket.markup.html.basic.Label;",7549],["* For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html",7513],["* http://www.eclipse.org/legal/epl-v10.html",189338],["* <a href=\"http://d.android.com/tools/testing/testing_android.html\">Testing Fundamentals</a>",30848],["* and is available at http://www.eclipse.org/legal/epl-v10.html",23608],["response.setContentType(\"text/html\");",15497],["* Project Info:  http://www.jfree.org/jfreechart/index.html",11756],["* \"http://www.silverpeas.org/docs/core/legal/floss_exception.html\"",11724],["response.setContentType(\"text/html;charset=UTF-8\");",7846]],"useCount":901460},{"word":"http","context":[["import javax.servlet.http.HttpServlet;",72722],["*     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",105617],["import javax.servlet.http.HttpServletResponse;",180588],["* http://www.eclipse.org/legal/epl-v10.html",189338],["import javax.servlet.http.HttpServletRequest;",226484],["import javax.servlet.http.HttpSession;",31266],["* http://www.eclipse.org/org/documents/edl-v10.php.",40289],["*  http://aws.amazon.com/apache2.0",62247],["// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a>",64734],["// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a>",64734]],"useCount":3981631},{"word":"https","context":[["* https://code.google.com/p/opencloudb/.",3266],["* https://www.eclipse.org/org/documents/edl-v10.html",3097],["* Latest version available online at https://github.com/zach-m/jonix",2341],["* @author Dave Wichers <a href=\"https://www.aspectsecurity.com\">Aspect Security</a>",10784],["* https://www.google.com/design/icons/ for full list",1782],["* <https://github.com/anba/es6draft>",1750],["* https://github.com/encog/encog-java-core",3376],["* @author Nick Sanidas <a href=\"https://www.aspectsecurity.com\">Aspect Security</a>",20478],["* <a href=\"https://www.owasp.org/index.php/Benchmark\">https://www.owasp.org/index.php/Benchmark</a>.",31273],["* <a href=\"https://www.owasp.org/index.php/Benchmark\">https://www.owasp.org/index.php/Benchmark</a>.",31273]],"useCount":452809},{"word":"i","context":[["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167],["\"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\")",317212],["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167],["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167],["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167],["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167],["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167],["\"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\")",317212],["\"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\")",317212],["\"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\")",317212]],"useCount":26995773},{"word":"id","context":[["public void setId(String id) {",38075],["this.id = id;",269261],["this.id = id;",269261],["return id;",244824],["* @param id",82470],["private String id;",48980],["private int id;",44134],["int id = item.getItemId();",34636],["return this.id;",42446],["private Long id;",40326]],"useCount":5272803},{"word":"identifier","context":[["return identifier;",7265],["this.identifier = identifier;",6766],["* @param identifier",5312],["if (this.identifier == null)",3429],["* Alphanumeric identifier of the entity",3096],["* @param orderId Unique identifier of the order.",3008],["private String identifier;",2501],["return this.identifier;",2350],["this.identifier = new ArrayList<Identifier>();",2270],["this.identifier = identifier;",6766]],"useCount":328559},{"word":"idx","context":[["idx++;",11199],["return idx;",4084],["SearchResponse response = client().prepareSearch(\"idx\")",3485],["int idx;",3379],["idx = 0;",2539],["if (idx >= 0) {",2637],["int idx = 0;",14649],[".prepareSearch(\"idx\")",2768],["if (idx != -1) {",2920],["SearchResponse response = client().prepareSearch(\"idx\").setTypes(\"type\")",2819]],"useCount":353412},{"word":"if","context":[["* @throws SystemException if a system exception occurred",102486],["if (value != null) {",59368],["* or visit www.oracle.com if you need additional information or have any",139265],["if (value == null) {",188189],["if (log.isDebugEnabled()) {",87568],["if ( state.backtracking==0 ) {",81964],["if (obj == null)",75603],["if (lastComparison != 0) {",73423],["if (LOG.isDebugEnabled()) {",68006],["if (this == obj)",62225]],"useCount":48541265},{"word":"ignore","context":[["* it's useful to ignore a case when inheritance will catch all the cases anyway.",26089],["// ignore",59805],["* This default implementation returns null so that we can easily ignore cases;",26089],["} catch (Exception ignore) {",9760],["//ignore",8488],["// @ignore",5346],["} catch (Throwable ignore) {",1548],["/* ignore */",1724],["} catch (InterruptedException ignore) {",2699],["} catch (IOException ignore) {",4524]],"useCount":326182},{"word":"image","context":[["import java.awt.image.BufferedImage;",57937],["import javafx.scene.image.Image;",6425],["if (image != null) {",5790],["return image;",22675],["* @param image",5877],["this.image = image;",11550],["this.image = image;",11550],["import java.awt.image.*;",8252],["super.control.newRow(value, text, image, textColor);",7078],["super.control.newRow(value, text, image);",7078]],"useCount":890197},{"word":"impl","context":[["import org.eclipse.emf.ecore.impl.ENotificationImpl;",16668],["import org.apache.http.impl.client.CloseableHttpClient;",6964],["PyObject res=impl.__get__(this,self_type).__call__(other);",7673],["if (impl!=null) {",12216],["import org.apache.http.impl.client.DefaultHttpClient;",17426],["import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;",6166],["import com.orientechnologies.orient.core.record.impl.ODocument;",5605],["import org.apache.http.impl.client.HttpClients;",4973],["import ims.domain.impl.DomainImpl;",4030],["// Generated from form domain impl",3928]],"useCount":1220459},{"word":"implementation","context":[["* The default implementation does nothing.",6937],["* <p>The default implementation does nothing.</p>",43308],["*        request. Users can provide an implementation of the callback",7010],["* <p>The default implementation returns the result of calling",10702],["*           life-cycle of the request. Users could provide the implementation of",10739],["*     IBM Corporation - initial API and implementation",31115],["*   Codenvy, S.A. - initial API and implementation",17145],["*     Oracle - initial API and implementation from Oracle TopLink",19029],["* This default implementation returns null so that we can easily ignore cases;",26089],["* This implementation returns null;",28167]],"useCount":710609},{"word":"implements","context":[["public enum _Fields implements org.apache.thrift.TFieldIdEnum {",12294],["public final static class CurrentEngine implements Serializable",3899],["implements",27282],["implements Serializable",6403],["implements org.apache.axis2.databinding.ADBBean{",5801],["com.google.protobuf.GeneratedMessage implements",5144],["com.google.protobuf.GeneratedMessage.Builder<Builder> implements",5139],["public class BaseAccessLogic extends FormAccessLogic implements Serializable",3899],["public final static class CurrentForm implements Serializable",3899],["public final class AccessLogic extends BaseAccessLogic implements Serializable",3899]],"useCount":857264},{"word":"import","context":[["import java.util.Collection;",504870],["import java.util.Arrays;",511452],["import java.util.Set;",648198],["import java.io.File;",732150],["import java.util.HashMap;",857091],["import org.junit.Test;",907784],["import java.util.Map;",1349189],["import java.io.IOException;",1626247],["import java.util.ArrayList;",1724117],["import java.util.List;",2715539]],"useCount":102703904},{"word":"ims","context":[["throw new ims.framework.exceptions.CodingRuntimeException(\"Invalid field name\");",10835],["return this.buildVo(new ims.vo.ValueObjectBeanMap());",8064],["ims.framework.utils.Color color = null;",9130],["ims.framework.utils.ImagePath img = null;",9130],["ims.domain.DomainObject o = (ims.domain.DomainObject)iter.next();",11066],["public void handle() throws ims.framework.exceptions.PresentationLogicException",20815],["import ims.framework.enumerations.SortOrder;",12391],["public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException",10666],["public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException",10666],["ims.domain.DomainObject o = (ims.domain.DomainObject)iter.next();",11066]],"useCount":1106610},{"word":"in","context":[["* Objects of the following type(s) are allowed in the list",85689],["attribute's value can be found in the {@link #Theme} array.",68134],["in.close();",82049],["/** <p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",117936],["in (inches), mm (millimeters).",151497],["* Redistribution and use in source and binary forms, with or without",168359],["* and open the template in the editor.",179345],["<p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",252522],["theme attribute (in the form",317212],["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167]],"useCount":10213517},{"word":"index","context":[["index++;",55897],["int index;",16116],["int index) {",20841],["this.index = index;",29339],["this.index = index;",29339],["* <a href=\"https://www.owasp.org/index.php/Benchmark\">https://www.owasp.org/index.php/Benchmark</a>.",31273],["* <a href=\"https://www.owasp.org/index.php/Benchmark\">https://www.owasp.org/index.php/Benchmark</a>.",31273],["return index;",42183],["* @param index",47911],["int index = 0;",63012]],"useCount":4041609},{"word":"indexOf","context":[["nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(\":\"));",4011],["return col.indexOf(instance);",11626],["int domIdx = domainObjectList.indexOf(domainObject);",7273],["int index = indexOf(instance);",14965],["return indexOf(instance) >= 0;",14965],["if(this.col.indexOf(value) < 0)",23253],["java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(\":\")+1);",3967],["if (fullTypeName.indexOf(\":\") > -1){",3866],["return super.indexOf(instance);",3340],["int domIdx = list.indexOf(domainObject);",3793]],"useCount":384626},{"word":"info","context":[["this.info = info;",7400],["LOG.info(e);",5382],["this.info = info;",7400],["for more info.",7563],["for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {",7924],["javax.swing.UIManager.setLookAndFeel(info.getClassName());",8129],["if (info != null) {",12694],["if (info == null) {",8804],["if (\"Nimbus\".equals(info.getName())) {",8187],["return info;",27024]],"useCount":1631286},{"word":"information","context":[["* distributed with this work for additional information",436355],["* @return The information object of specified column. (NotNull)",8042],["* For further information about OpenCms, please see the",9501],["distributed with this work for additional information",9914],["Details (including contact information) can be found at:",12534],["// distributed with this work for additional information",18526],["* For more information contact:",27227],["* CA 95054 USA or visit www.sun.com if you need additional information or",29458],["*  distributed with this work for additional information",30628],["* or visit www.oracle.com if you need additional information or have any",139265]],"useCount":1303175},{"word":"inheritDoc","context":[["* {@inheritDoc}",618060],["* {@inheritDoc }",1918],["* @return {@inheritDoc}",1989],["* @throws NullPointerException {@inheritDoc}",2058],["/** {@inheritDoc} */",332261],["* @inheritDoc",20008],["/** @inheritDoc */",4391],["* @{inheritDoc",3623],["/** {@inheritDoc}",3227],["* @{inheritDoc}",2478]],"useCount":1026490},{"word":"init","context":[["init(context);",8869],["public static void init() {",10631],["protected void init() {",10730],["public void init()",11125],["private void init() {",28880],["import net.minecraft.init.Items;",14635],["init();",102064],["super.init();",16468],["import net.minecraft.init.Blocks;",22986],["public void init() {",59074]],"useCount":867121},{"word":"initial","context":[["*     Oracle - initial API and implementation",2406],["*     IBM Corporation - initial API and implementation",31115],["*     Oracle - initial API and implementation from Oracle TopLink",19029],["*   Codenvy, S.A. - initial API and implementation",17145],["*     David A Carlson (XMLmodeling.com) - initial API and implementation",2846],["* a) in the case of the initial Contributor, the initial code and documentation distributed under this Agreement, and",2281],["* a) in the case of the initial Contributor, the initial code and documentation distributed under this Agreement, and",2281],["*    Google, Inc. - initial API and implementation",2169],["* Minnesota Supercomputing Institute - initial API and implementation",1899],["*     Bruno Medeiros - initial API and implementation",1814]],"useCount":325077},{"word":"initialize","context":[["protected void initialize() {",13972],["private void initialize() {",11992],["* This method is called from within the constructor to initialize the form.",17286],["public void initialize() {",17422],["initialize();",34270],["//-- initialize element descriptors",2980],["//-- initialize attribute descriptors",2980],["epService.initialize();",3343],["super.initialize();",5946],["* initialize the form.",10967]],"useCount":358679},{"word":"inject","context":[["import com.google.inject.AbstractModule;",11146],["import javax.inject.Inject;",122720],["import com.google.inject.Inject;",57368],["import javax.inject.Named;",29440],["import com.google.inject.Singleton;",16683],["import org.elasticsearch.common.inject.Inject;",14889],["import com.google.inject.Guice;",8801],["import com.google.inject.Injector;",14704],["import com.google.inject.Provider;",11048],["import javax.inject.Singleton;",23318]],"useCount":491272},{"word":"input","context":[["com.google.protobuf.CodedInputStream input)",18424],["input.consume();",28298],["return PARSER.parseFrom(input);",25633],["return PARSER.parseFrom(input, extensionRegistry);",25606],["MismatchedSetException mse = new MismatchedSetException(null,input);",23236],["int tag = input.readTag();",18873],["java.io.InputStream input,",36814],["recover(input,re);",60403],["com.google.protobuf.CodedInputStream input,",63638],["input.close();",16899]],"useCount":2313507},{"word":"insert","context":[["db.insert(\"Province\", null, values);",1478],["* must be called, which will insert the new row into both this rowset",1522],["* Sets the designated column in either the current row or the insert",1528],["public Uri insert(Uri uri, ContentValues values) {",2617],["db.insert(\"City\", null, values);",1566],["mapper.insert(record);",2370],["* current row or the insert row.  The updater methods do not",3836],["return insert(map, valueObject, domainObject);",7273],["valueObject = insert(map, valueObject, domainObject);",7273],["* If the cursor is on the insert row, the method {@link #insertRow}",1584]],"useCount":326298},{"word":"instance","context":[["return instance;",92215],["if (instance == null) {",27126],["* Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}",22244],["if (instance == null)",19194],["if(instance != null)",18971],["* Creates a new instance.",16033],["return indexOf(instance) >= 0;",14965],["int index = indexOf(instance);",14965],["return col.indexOf(instance);",11626],["* object is an invalid instance according to the schema",10468]],"useCount":1858873},{"word":"instanceof","context":[["if (ref instanceof String) {",15216],["if (axisFaultException.detail instanceof java.rmi.RemoteException) {",9558],["if (oo instanceof Boolean)",6672],["if (jjte000 instanceof ParseException) {",6564],["if (ref instanceof java.lang.String) {",19694],["if (t instanceof RuntimeException) {",19578],["if (t instanceof com.liferay.portal.kernel.exception.SystemException) {",14558],["if (_resp instanceof java.rmi.RemoteException) {",13450],["if (value instanceof String) {",9930],["if (!(ref instanceof java.lang.String)) {",9847]],"useCount":2293404},{"word":"int","context":[["int index = 0;",63012],["final int prime = 31;",87389],["int count = 0;",126838],["int i = 0;",196784],["public int hashCode() {",375581],["public int size() {",76638],["int i;",76140],["public int getCount() {",56098],["public void onClick(DialogInterface dialog, int which) {",61196],["int result = 1;",66791]],"useCount":32221928},{"word":"intellij","context":[["import com.intellij.psi.*;",22113],["import com.intellij.util.containers.ContainerUtil;",19351],["import com.intellij.psi.util.PsiTreeUtil;",16156],["import com.intellij.openapi.editor.Editor;",15865],["import com.intellij.openapi.util.text.StringUtil;",23553],["import com.intellij.openapi.application.ApplicationManager;",23743],["import com.intellij.openapi.diagnostic.Logger;",29704],["import com.intellij.openapi.vfs.VirtualFile;",31168],["import com.intellij.psi.PsiElement;",33809],["import com.intellij.openapi.project.Project;",61816]],"useCount":1743838},{"word":"intent","context":[["Intent intent = new Intent(Intent.ACTION_VIEW);",5461],["public int onStartCommand(Intent intent, int flags, int startId) {",8443],["String action = intent.getAction();",8708],["return intent;",9643],["context.startActivity(intent);",11241],["public IBinder onBind(Intent intent) {",12452],["Intent intent = getIntent();",14576],["Intent intent = new Intent();",22909],["public void onReceive(Context context, Intent intent) {",33729],["startActivity(intent);",92026]],"useCount":799818},{"word":"interface","context":[["* Java content interface and Java element interface",4057],["* Java content interface and Java element interface",4057],["* For the given interface, get the stub implementation.",4295],["* If this service has no port for the given interface,",4297],["*        methods in this interface to receive notification of successful or",7010],["* interface.",7519],["* the SWIG interface file instead.",10675],["*           the four callback methods in this interface to process the operation",10739],["//Trying to avoid the hibernate collection being marked as dirty via its public interface methods. (like add)",11574],["// Generated from form domain interface definition",19346]],"useCount":819821},{"word":"interfaces","context":[["import com.planet_ink.coffee_mud.core.interfaces.*;",16054],["import com.planet_ink.coffee_mud.Exits.interfaces.*;",15990],["import com.planet_ink.coffee_mud.Races.interfaces.*;",15994],["import com.planet_ink.coffee_mud.Behaviors.interfaces.*;",15994],["import com.planet_ink.coffee_mud.Areas.interfaces.*;",15994],["import com.planet_ink.coffee_mud.Abilities.interfaces.*;",16002],["import com.planet_ink.coffee_mud.Common.interfaces.*;",16020],["import com.planet_ink.coffee_mud.Items.interfaces.*;",16011],["import com.planet_ink.coffee_mud.Locales.interfaces.*;",16007],["import com.planet_ink.coffee_mud.MOBS.interfaces.*;",16006]],"useCount":487847},{"word":"internal","context":[["import org.apache.ignite.internal.util.typedef.internal.*;",2758],["import org.elasticsearch.search.internal.SearchContext;",3826],["import org.apache.ignite.internal.util.typedef.internal.U;",3474],["import org.apache.ignite.internal.util.typedef.internal.U;",3474],["*  This code and its internal interfaces are subject to change or",3541],["* @apilevel internal",3936],["//Application-internal dependencies",4229],["* @xerces.internal",4259],["* @apilvl internal",4712],["*             If any internal errors are encountered inside the client while",35112]],"useCount":1283980},{"word":"into","context":[["*         rethrown wrapped into a TorqueException.",8858],["* Encodes a byte array into Base64 notation.",3328],["* Pushes the specified amount of characters back into the input stream.",1733],["* must be called, which will insert the new row into both this rowset",1522],["* @param v value to set into the feature",1508],["* @return populated map to pass into Provisioning.modifyAttrs",1339],["* Convert the BlockState into the correct metadata value",1266],["* Convert the given metadata into a BlockState for this Block",1168],["// TODO: Rename method, update argument and hook method into UI event",1013],["* @param len max number of bytes to read into array",988]],"useCount":669822},{"word":"invoke","context":[["a=0;//     invoke-direct {p0}, Ljava/lang/Object;-><init>()V",1776],["if(!super.invoke(mob,commands,givenTarget,auto,asLevel))",6398],["public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {",3801],["public boolean invoke(MOB mob, Vector commands, Physical givenTarget, boolean auto, int asLevel)",3501],["import java.lang.invoke.MethodHandle;",3270],["public Object invoke(Object bean, Object[] params) {",2130],["public Object invoke(Object target, Object[] params) {",2039],["import java.lang.invoke.MethodHandles;",3048],["response = invoke(request, responseHandler, executionContext);",7889],["* Constructs a new asynchronous client to invoke service methods on",1948]],"useCount":345660},{"word":"io","context":[["import java.io.InputStream;",382690],["import java.io.InputStreamReader;",134195],["import java.io.FileInputStream;",148091],["throws java.io.IOException {",156112],["import java.io.OutputStream;",160613],["import java.io.BufferedReader;",161838],["import java.io.*;",178727],["import java.io.Serializable;",421145],["import java.io.File;",732150],["import java.io.IOException;",1626247]],"useCount":8144711},{"word":"is","context":[["*     allowed object is",507505],["* This file is part of the Open Web Application Security Project (OWASP)",31744],["*             if a network connection is not available.",35112],["// Inflate the menu; this adds items to the action bar if it is present.",38110],["/** <p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",42975],["is.close();",44964],["<p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",87204],["<p>This is a private symbol.",118752],["* which accompanies this distribution, and is available at",205415],["*     possible object is",507152]],"useCount":14145277},{"word":"isDebugEnabled","context":[["if (logger.isDebugEnabled()) {",53912],["if (LOG.isDebugEnabled()) {",68006],["if (log.isDebugEnabled()) {",87568],["if (log.isDebugEnabled())",44117],["if (logger.isDebugEnabled())",22855],["if (LOGGER.isDebugEnabled()) {",10960],["if (LOG.isDebugEnabled())",8897],["if(LOG.isDebugEnabled()) {",5018],["if(log.isDebugEnabled()) {",4379],["if (log.isDebugEnabled()) log.debug(funcName + \": enter\");",3810]],"useCount":436532},{"word":"isEmpty","context":[["if (isEmpty()) {",5293],["boolean isEmpty();",3070],["while (!queue.isEmpty()) {",3439],["if (!map.isEmpty()) {",3586],["if (!TextUtils.isEmpty(response)) {",3782],["if (list.isEmpty()) {",4236],["public boolean isEmpty() {",56569],["public boolean isEmpty()",8169],["if (!item.isEmpty())",6840],["if (!list.isEmpty()) {",5105]],"useCount":1205196},{"word":"it","context":[["while (it.hasNext())",11979],["// Inflate the menu; this adds items to the action bar if it is present.",38110],["while(it.hasNext()) {",13499],["* the FLOSS exception, and it is also available here:",14510],["* if it is not found.",14962],["* aapt tool from the resource data it found.  It",16709],["while (it.hasNext()) {",98158],["// If it gets here its bad",17190],["* it's useful to ignore a case when inheritance will catch all the cases anyway.",26089],["it.remove();",35164]],"useCount":3560193},{"word":"item","context":[["* For example, to add a new item, do as follows:",88109],["import net.minecraft.item.ItemStack;",92788],["switch (item.getItemId()) {",38446],["import net.minecraft.item.Item;",44298],["int id = item.getItemId();",34636],["return item;",30132],["// Handle action bar item clicks here. The action bar will",26835],["if (item != null) {",14375],["return super.onOptionsItemSelected(item);",70788],["public boolean onOptionsItemSelected(MenuItem item) {",77426]],"useCount":2206483},{"word":"items","context":[["this.items = items;",8353],["this.items = items;",8353],["showAsAction=\"ifRoom\" items can fit. \"always\" items can override this.",7657],["showAsAction=\"ifRoom\" items can fit. \"always\" items can override this.",7657],["items.add(item);",5740],["for (int i = 0; i < items.length; i++) {",4019],["* @param items",3892],["return items;",18096],["// Inflate the menu; this adds items to the action bar if it is present.",38110],["items.clear();",3432]],"useCount":709766},{"word":"iter","context":[["while (iter.hasNext()) {",60853],["java.util.Iterator iter = beans.iterator();",11403],["java.util.Iterator iter = domainObjectSet.iterator();",7273],["assertTrue(iter.hasNext());",6513],["while ( iter.hasNext() ) {",6289],["domainObjectSet.remove(iter.next());",7273],["iter.remove();",23032],["iter = removedSet.iterator();",11066],["ims.domain.DomainObject o = (ims.domain.DomainObject)iter.next();",11066],["while (iter.hasNext())",41897]],"useCount":556988},{"word":"iterator","context":[["java.util.Iterator iterator = domainObjectSet.iterator();",7273],["iterator.remove();",30251],["while (iterator.hasNext()) {",52027],["return col.iterator();",11655],["java.util.Iterator iter = beans.iterator();",11403],["iter = removedSet.iterator();",11066],["while (iterator.hasNext())",8857],["iterator.next();",7585],["while( iterator.hasNext() )",7487],["java.util.Iterator iter = domainObjectSet.iterator();",7273]],"useCount":1095738},{"word":"its","context":[["//Trying to avoid the hibernate collection being marked as dirty via its public interface methods. (like add)",11574],["* Find the _Fields constant that matches fieldId, or null if its not found.",14952],["* Find the _Fields constant that matches name, or null if its not found.",14946],["* Postcondition: If this object is an element, the reader is positioned at its end element",6055],["*                If this object is a complex type, the reader is positioned at the end element of its outer element",5977],["* * Neither the name of 'jMonkeyEngine' nor the names of its contributors",5328],["* [Oracle and Java are registered trademarks of Oracle and/or its affiliates.",6966],["This source code and its compiled class files are free and modifiable under the terms of",22574],["* For more information on the BioJava project and its aims,",4171],["// If it gets here its bad",17190]],"useCount":771752},{"word":"j","context":[["int i, j;",8542],["int j = 0;",29648],["j++;",28821],["int j;",14891],["return j;",13704],["j--;",8295],["for (int j = 0; j < n; j++) {",7565],["for (int j = 0; j < n; j++) {",7565],["for (int j = 0; j < n; j++) {",7565],["j = 0;",7467]],"useCount":2226757},{"word":"jackson","context":[["import com.fasterxml.jackson.databind.ObjectMapper;",41209],["import com.fasterxml.jackson.databind.JsonNode;",17000],["import com.fasterxml.jackson.annotation.JsonIgnoreProperties;",14756],["import com.fasterxml.jackson.core.JsonProcessingException;",13309],["import com.fasterxml.jackson.annotation.JsonInclude;",11499],["import org.codehaus.jackson.map.ObjectMapper;",11403],["import com.fasterxml.jackson.annotation.JsonIgnore;",15935],["import com.fasterxml.jackson.annotation.JsonCreator;",14680],["import com.fasterxml.jackson.annotation.JsonProperty;",45810],["import com.fasterxml.jackson.core.JsonToken;",9479]],"useCount":444179},{"word":"java","context":[["import java.util.Set;",648198],["import java.util.Collections;",472955],["import java.util.Collection;",504870],["import java.io.File;",732150],["import java.util.Arrays;",511452],["import java.util.List;",2715539],["import java.util.ArrayList;",1724117],["import java.io.IOException;",1626247],["import java.util.Map;",1349189],["import java.util.HashMap;",857091]],"useCount":32155509},{"word":"javafx","context":[["import javafx.scene.Node;",10305],["import javafx.scene.Scene;",13033],["import javafx.scene.control.Label;",9800],["import javafx.stage.Stage;",15766],["import javafx.scene.control.Button;",9666],["import javafx.collections.ObservableList;",9112],["import javafx.event.ActionEvent;",9021],["import javafx.scene.paint.Color;",8944],["import javafx.application.Application;",8601],["import javafx.fxml.FXML;",10176]],"useCount":476815},{"word":"javax","context":[["import javax.xml.bind.annotation.XmlElement;",101222],["import javax.xml.bind.annotation.XmlRootElement;",97132],["import javax.xml.bind.annotation.XmlAccessType;",176699],["import javax.servlet.ServletException;",116530],["import javax.inject.Inject;",122720],["import javax.swing.*;",123760],["import javax.servlet.http.HttpServletRequest;",226484],["import javax.xml.bind.annotation.XmlType;",182690],["import javax.servlet.http.HttpServletResponse;",180588],["import javax.xml.bind.annotation.XmlAccessorType;",176902]],"useCount":9047973},{"word":"jboss","context":[["import org.jboss.arquillian.junit.Arquillian;",10761],["import org.jboss.arquillian.container.test.api.Deployment;",9691],["import org.jboss.shrinkwrap.api.ShrinkWrap;",7823],["import org.jboss.logging.Logger;",7365],["import org.jboss.netty.channel.Channel;",5793],["import org.jboss.netty.buffer.ChannelBuffers;",3765],["import org.jboss.shrinkwrap.api.Archive;",4829],["import org.jboss.netty.buffer.ChannelBuffer;",11051],["import org.jboss.netty.channel.ChannelHandlerContext;",4954],["import org.jboss.shrinkwrap.api.spec.WebArchive;",5208]],"useCount":477121},{"word":"jetbrains","context":[["import org.jetbrains.annotations.TestOnly;",2958],["import org.jetbrains.annotations.Contract;",1290],["import com.jetbrains.python.PyBundle;",1320],["import com.jetbrains.python.psi.*;",1787],["import org.jetbrains.annotations.NotNull;",137417],["import org.jetbrains.annotations.Nullable;",88447],["import org.jetbrains.annotations.NonNls;",26484],["import org.jetbrains.annotations.*;",10589],["import org.jetbrains.annotations.Nls;",3923],["import org.jetbrains.plugins.groovy.lang.psi.api.statements.expressions.GrExpression;",2049]],"useCount":459063},{"word":"job","context":[["if (job == null) {",2406],["public void configure(JobConf job) {",1992],["if (job != null) {",2037],["job.schedule();",2048],["import org.pentaho.di.job.JobMeta;",2188],["job.setOutputKeyClass(Text.class);",2777],["return job;",6776],["* @param job",4190],["this.job = job;",3339],["this.job = job;",3339]],"useCount":530006},{"word":"join","context":[["thread.join();",6538],["t.join();",7650],["server.join();",3409],["Joiner.on('\\n').join(",1994],["t1.join();",1927],["* or to join the biojava-l mailing list, visit the home page",4171],["threads[i].join();",5338],["typeCheck(Joiner.on('\\n').join(",22151],["LINE_JOINER.join(",22217],["typeCheck(LINE_JOINER.join(",24630]],"useCount":324178},{"word":"json","context":[["import org.json.simple.JSONObject;",14789],["import org.json.JSONArray;",48359],["import org.json.JSONException;",75304],["import org.json.JSONObject;",99361],["return json;",13732],["import net.sf.json.JSONObject;",10229],["@Produces(\"application/json\")",10133],["@Headers(\"Content-Type: application/json; charset=utf-8\")",9647],["JSONObject json = new JSONObject();",8920],["import org.json.simple.JSONArray;",8013]],"useCount":924721},{"word":"junit","context":[["import org.junit.Before;",315191],["import org.junit.Test;",907784],["import static org.junit.Assert.assertEquals;",235826],["import org.junit.runner.RunWith;",162969],["import static org.junit.Assert.*;",159718],["import org.junit.Assert;",153924],["import static org.junit.Assert.assertTrue;",145713],["import junit.framework.TestCase;",134531],["import org.junit.After;",118903],["import org.junit.BeforeClass;",83746]],"useCount":3493495},{"word":"just","context":[["param = headerNames.nextElement(); // just grab first element",1890],["// We're done, just return.",17189],["// Called just before this Command runs the first time",6345],["*              ... and it just works.",6262],["return Observable.just(clientResponse);",4122],["param = headers.nextElement(); // just grab first element",2943],["* relayed to the caller of the composed operation. This method is just convenience, to provide the ability to",2936],["* input, and then applies this function to the result. This method is just convenience, to provide the ability to",2038],["param = names.nextElement(); // just grab first element",1890],["* the caller of the composed operation. This method is just convenience, to provide the ability to transform this",1562]],"useCount":356646},{"word":"k","context":[["int k = 0;",16020],["++k;",2792],["for (int i = 0; i < k; i++) {",2835],["this.k = k;",2836],["this.k = k;",2836],["* @param k",3634],["k = 0;",4349],["return k;",6070],["int k;",7488],["k++;",14091]],"useCount":988536},{"word":"kernel","context":[["if (t instanceof com.liferay.portal.kernel.exception.SystemException) {",14558],["com.liferay.portal.kernel.exception.SystemException;",6669],["throws com.liferay.portal.kernel.exception.SystemException,",6759],["import com.liferay.portal.kernel.exception.SystemException;",8491],["throw (com.liferay.portal.kernel.exception.SystemException)t;",11032],["throws com.liferay.portal.kernel.exception.SystemException {",44413],["throws com.liferay.portal.kernel.exception.PortalException,",18138],["throws com.liferay.portal.kernel.exception.SystemException;",24632],["com.liferay.portal.kernel.util.OrderByComparator orderByComparator)",19008],["com.liferay.portal.kernel.exception.SystemException {",16280]],"useCount":394700},{"word":"key","context":[["* @param key the key",10548],["if (key != null) {",9865],["* @param key the key",10548],["private String key;",13016],["if (key == null) {",16698],["/** Message constant for key in the resource bundle. */",22405],["this.key = key;",48567],["this.key = key;",48567],["return key;",49803],["* @param key",86062]],"useCount":4056195},{"word":"keys","context":[["for (String key : keys) {",8090],["return keys;",9553],["while (keys.hasNext()) {",6572],["while (keys.hasMoreElements()) {",6490],["for (int i = 0; i < keys.length; i++) {",4067],["* @param keys",3902],["this.keys = keys;",3013],["this.keys = keys;",3013],["keys.add(key);",2992],["java.lang.String key = (java.lang.String) keys.nextElement();",2392]],"useCount":613085},{"word":"kuali","context":[["import org.kuali.rice.krad.util.GlobalVariables;",6404],["* @author Kuali Rice Team (rice.collab@kuali.org)",14685],["import org.kuali.rice.krad.service.BusinessObjectService;",4495],["import org.kuali.kfs.sys.context.SpringContext;",4456],["import org.kuali.rice.krad.util.ObjectUtils;",3722],["import org.kuali.coeus.sys.framework.service.KcServiceLocator;",3490],["import org.kuali.kra.infrastructure.Constants;",3481],["import org.kuali.rice.krad.util.KRADConstants;",3291],["import org.kuali.rice.krad.document.Document;",3137],["import org.kuali.rice.core.api.util.type.KualiDecimal;",3130]],"useCount":440646},{"word":"l","context":[["return l;",25813],["* @param l",7047],["* or to join the biojava-l mailing list, visit the home page",4171],["if (l != null) {",4744],["protected void onLayout(boolean changed, int l, int t, int r, int b) {",4867],["if (l == null) {",4938],["if ((0x3ff000000000000L & l) == 0L)",5684],["if ((0x3ff000000000000L & l) != 0L)",6305],["int l = packed.length();",6428],["while (i < l) {",6506]],"useCount":953523},{"word":"label","context":[["if (label != null) {",4454],["return label;",28188],["this.label = label;",22578],["this.label = label;",22578],["private String label;",10383],["* @param label",8439],["* This returns the label text for the adapted class.",7425],["public void setLabel(String label) {",6959],["return label == null || label.length() == 0 ?",4489],["return label == null || label.length() == 0 ?",4489]],"useCount":680633},{"word":"lang","context":[["java.lang.String mechType,",67577],["import java.lang.annotation.RetentionPolicy;",68362],["import java.lang.reflect.InvocationTargetException;",69054],["@java.lang.Override",72427],["import java.lang.reflect.Field;",72663],["import java.lang.annotation.Target;",73626],["import java.lang.annotation.Retention;",82802],["import org.apache.commons.lang.StringUtils;",92138],["java.lang.Class _javaType,",67541],["import java.lang.reflect.Method;",126565]],"useCount":4180183},{"word":"last","context":[["/** the textposition at the last accepting state */",1691],["// we have to store this data until last moment since it is not possible to write any",6150],["this.last = last;",1811],["this.last = last;",1811],["* i.e., the most specific visitXXX() call comes last.",1857],["if (last != null) {",1875],["last = null;",1922],["int last = 0;",2026],["// Process the listeners last to first, notifying",2205],["return last;",5816]],"useCount":550803},{"word":"layout","context":[["import org.eclipse.swt.layout.GridLayout;",16556],["layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)",42154],["setContentView(R.layout.activity_main);",41876],[".addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)",28627],["layout.setVerticalGroup(",24164],["layout.setHorizontalGroup(",24163],[".addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)",23703],["import org.eclipse.swt.layout.GridData;",18077],["getContentPane().setLayout(layout);",17084],[".addGroup(layout.createSequentialGroup()",63314]],"useCount":1097775},{"word":"left","context":[["<colgroup align=\"left\" />",236448],["this.left = left;",7812],["this.left = left;",7812],["* @param left",5228],["protected void onLayout(boolean changed, int left, int top, int right, int bottom) {",4199],["// <editor-fold defaultstate=\"collapsed\" desc=\"HttpServlet methods. Click on the + sign on the left to edit the code.\">",3989],["super.onLayout(changed, left, top, right, bottom);",3743],["return left;",8725],["*  [This line intentionally left blank.]",15396],["int left = 0;",2210]],"useCount":1015443},{"word":"len","context":[["if (len == 0) {",5971],["for (int i = 0; i < len; i++) {",28504],["int len;",15989],["return len;",10501],["int len = 0;",10060],["* @param len",6366],["for (int i = 0; i < len; i++)",6024],["int len = s.length();",5084],["if (len > 0) {",4820],["for (int i = 0; i < len; ++i) {",4499]],"useCount":750197},{"word":"length","context":[["if(dataString.length() > 0)",13719],["if(filterString.length() > 0)",12264],["for (int i = 0; i < values.length; i++) {",12950],["for (int i = 0; i < array.length; i++) {",13032],["* @param length",14785],["this.length = length;",15258],["this.length = length;",15258],["for(int x = 0; x < existingErrors.length; x++)",16137],["return length;",21641],["for (int i = 0; i < length; i++) {",31491]],"useCount":5845676},{"word":"level","context":[["this.level = level;",13009],["* @param addr low level Feature Structure reference",4179],["@LogMessage(level = Logger.Level.WARN)",4918],["All customizations that are NOT specific to a particular API-level can go here.",4961],["Base application theme, dependent on API level. This theme is replaced",5064],["level = TestLevel.COMPLETE,",6784],["* @param level",7018],["return level;",11668],["this.level = level;",13009],["level++;",4152]],"useCount":607924},{"word":"li","context":[["* </li>",62727],["* <li>",59054],["*        </li>",18507],["*        <li>",18449],["*   </li>",10204],["*     </li>",8751],["*     <li>",7491],["*         </li>",7437],["*   <li>",7044],["*         <li>",6807]],"useCount":1329199},{"word":"lib","context":[["import com.google.devtools.build.lib.vfs.PathFragment;",3984],["package mesquite.lib;",4721],["import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;",4739],["import com.google.api.ads.common.lib.auth.OfflineCredentials.Api;",4935],["import com.google.api.ads.common.lib.auth.OfflineCredentials;",4945],["import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;",4980],["import org.eclipse.jgit.lib.Repository;",6064],["import mesquite.lib.characters.*;",9481],["import mesquite.lib.duties.*;",14546],["import mesquite.lib.*;",17679]],"useCount":577864},{"word":"library","context":[["Linking this library statically or dynamically with other modules is",21357],["* DynamicReports - Free Java reporting library for creating reports dynamically",2869],["* this exception to your version of the library, but you are not",3265],["* library is not considered a \"derivative work\" of the program:",7566],["// This library was generated by the LoxiGen Compiler.",8278],["* ProActive Parallel Suite(TM): The Java(TM) library for",8767],["* JFreeChart : a free chart library for the Java(tm) platform",11727],["this exception to your version of the library, but you are not",20635],["making a combined work based on this library.  Thus, the terms and",20656],["* This library is part of OpenCms -",9134]],"useCount":388148},{"word":"liferay","context":[["throws com.liferay.portal.kernel.exception.PortalException,",18138],["throws com.liferay.portal.kernel.exception.SystemException {",44413],["throws com.liferay.portal.kernel.exception.SystemException;",24632],["com.liferay.portal.kernel.util.OrderByComparator orderByComparator)",19008],["com.liferay.portal.kernel.exception.SystemException {",16280],["if (t instanceof com.liferay.portal.kernel.exception.SystemException) {",14558],["throw (com.liferay.portal.kernel.exception.SystemException)t;",11032],["import com.liferay.portal.kernel.exception.SystemException;",8491],["throws com.liferay.portal.kernel.exception.SystemException,",6759],["com.liferay.portal.kernel.exception.SystemException;",6669]],"useCount":430285},{"word":"limit","context":[["this.limit = limit;",8239],["* @param limit",5463],["this.limit = limit;",8239],["return limit;",5402],["cursor = limit - v_1;",2975],["v_1 = limit - cursor;",2192],["cursor = limit - v_3;",2090],["if (cursor >= limit)",2086],["cursor = limit - v_2;",1777],["private int limit;",2151]],"useCount":395762},{"word":"line","context":[["while ((line = reader.readLine()) != null) {",20550],["String line;",60705],["String line = null;",24781],["* @param args the command line arguments",20803],["*  [This line intentionally left blank.]",15396],["while ((line = br.readLine()) != null) {",13967],["return line;",12223],["line = reader.readLine();",9711],["line = line.trim();",9721],["line = line.trim();",9721]],"useCount":1454495},{"word":"link","context":[["*     {@link Integer }",23560],["* Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}",22244],["* Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}",22244],["attribute's value can be found in the {@link #ActionBar} array.",22588],["*     {@link Long }",23310],["*     {@link JAXBElement }{@code <}{@link String }{@code >}",23588],["*     {@link JAXBElement }{@code <}{@link String }{@code >}",23588],["*     {@link Boolean }",32458],["attribute's value can be found in the {@link #Theme} array.",68134],["*     {@link String }",494747]],"useCount":5119231},{"word":"list","context":[["* This accessor method returns a reference to the live list,",84346],["* Objects of the following type(s) are allowed in the list",85689],["return list;",135091],["* returned list will be present inside the JAXB object.",84324],["if (list == null) {",16925],["* Create the ValueObject collection to hold the list of DomainObjects.",14546],["List<String> list = new ArrayList<String>();",11526],["* @param list",11453],["List list = new ArrayList();",11035],["*  Complete list of developers available at our web site:",11027]],"useCount":3120510},{"word":"listener","context":[["if (listener != null) {",23784],["listeners.remove(listener);",7627],["mListener = listener;",9387],["if (listener == null) {",6407],["* @param listener",24592],["public void enterRule(ParseTreeListener listener) {",24399],["listeners.add(listener);",10970],["this.listener = listener;",21260],["this.listener = listener;",21260],["public void exitRule(ParseTreeListener listener) {",24399]],"useCount":1108649},{"word":"llapi","context":[["GreaterThanOrEqualHLAPI elem = new GreaterThanOrEqualHLAPI(llapi);",365],["LessThanOrEqualHLAPI elem = new LessThanOrEqualHLAPI(llapi);",365],["llapi.getSubterm().add(",275424],["llapi.getInput().add(",19002],["llapi.getPartitionelementconstants().add(",5954],["assert llapi.getSubterm().contains(unit.getContainedItem()) : \"missing element\";",5822],["assert llapi.getInput().contains(unit.getContainedItem()) : \"missing element\";",1582],["GreaterThanHLAPI elem = new GreaterThanHLAPI(llapi);",533],["LessThanHLAPI elem = new LessThanHLAPI(llapi);",533],["llapi.getElementSort().add(",414]],"useCount":331918},{"word":"load","context":[["public void load()",1709],["properties.load(in);",1724],["props.load(in);",1948],["static boolean __typelib__loaded = __TypeLib.load();",1958],["loader.load();",2011],["props.load(is);",2097],["config.load();",2277],["* Could not load the following classes:",3755],["public void load() {",5546],["load();",12529]],"useCount":441018},{"word":"local","context":[["StringBuffer buf = new StringBuffer();  // local buffer for option-args",3595],["* @throws ServiceLocalException the service local exception",1222],["this.local = local;",1323],["this.local = local;",1323],["@Value(\"${local.server.port}\")",1496],["* If a NEGATIVE integer, then the number refers to the local version of the package, e.g. a third party package*/",1950],["local.add( badge );",2029],["return local;",2338],["{ //-- local scope",12512],["* Sets the user local service.",1186]],"useCount":478507},{"word":"location","context":[["this.location = location;",17422],["this.location = location;",17422],["import android.location.Location;",14841],["* @param location",8268],["import android.location.LocationManager;",7715],["if (location != null) {",6854],["mob.location().send(mob,msg);",6223],["if(mob.location().okMessage(mob,msg))",5564],["private String location;",5273],["return location;",18378]],"useCount":743745},{"word":"lock","context":[["readLock.lock();",6130],["lock.readLock().lock();",5503],["lock.readLock().lock();",5503],["lock();",5748],["lock.readLock().unlock();",5891],["lock.writeLock().unlock();",5453],["synchronized (lock) {",35021],["lock.unlock();",55495],["lock.lock();",51622],["lock.lock();",51622]],"useCount":629955},{"word":"log","context":[["log.error(msg);",6686],["if (log.isDebugEnabled()) {",87568],["if (log.isDebugEnabled())",44117],["log.error(e.getMessage(), e);",16796],["if (log.isTraceEnabled()) {",14166],["log.error(e);",11872],["log.error(msg, e);",9618],["if (log.isInfoEnabled())",8790],["import timber.log.Timber;",7909],["if (log.isInfoEnabled()) {",7666]],"useCount":1887547},{"word":"log4j","context":[["import org.apache.logging.log4j.Level;",5964],["import org.apache.log4j.Logger;",173138],["import org.apache.logging.log4j.Logger;",29182],["import org.apache.logging.log4j.LogManager;",25720],["import org.apache.log4j.Level;",13425],["import org.apache.log4j.PropertyConfigurator;",3892],["import org.apache.log4j.spi.LoggingEvent;",2958],["import org.apache.log4j.BasicConfigurator;",2781],["import org.apache.log4j.*;",1937],["import org.apache.log4j.LogManager;",5131]],"useCount":342222},{"word":"logger","context":[["if(logger.isTraceEnabled())",9233],["Logging.logger().severe(message);",7335],["logger.error(e.getMessage());",8486],["this.logger = logger;",9652],["this.logger = logger;",9652],["logger.error(e);",10923],["if (logger.isTraceEnabled()) {",14917],["logger.error(e.getMessage(), e);",18303],["if (logger.isDebugEnabled())",22855],["if (logger.isDebugEnabled()) {",53912]],"useCount":1253610},{"word":"logging","context":[["import java.util.logging.LogRecord;",5621],["import java.util.logging.*;",5797],["import org.apache.logging.log4j.Level;",5964],["import org.jboss.logging.Logger;",7365],["import org.apache.logging.log4j.LogManager;",25720],["import org.apache.logging.log4j.Logger;",29182],["import java.util.logging.Level;",134119],["import org.apache.commons.logging.LogFactory;",148935],["import org.apache.commons.logging.Log;",153397],["import java.util.logging.Logger;",172222]],"useCount":1018979},{"word":"long","context":[["private static final long serialVersionUID = 1L;",566114],["long start = System.currentTimeMillis();",38402],["private static final long serialVersionUID = 0L;",31068],["// automatically handle clicks on the Home/Up button, so long",26831],["public long getItemId(int position) {",25401],["public long getId() {",23865],["long now = System.currentTimeMillis();",23624],["long startTime = System.currentTimeMillis();",21279],["public void onItemClick(AdapterView<?> parent, View view, int position, long id) {",17575],["private long id;",18195]],"useCount":4792996},{"word":"lt","context":[["*     &lt;/restriction>",107135],["* &lt;/complexType>",148879],["*   &lt;complexContent>",142498],["*   &lt;/complexContent>",142497],["*       &lt;/sequence>",121418],["*       &lt;sequence>",117413],["*     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",105617],["* &lt;complexType>",51868],["*     &lt;/extension>",41706],["*         &lt;/element>",27453]],"useCount":2436765},{"word":"lucene","context":[["import org.apache.lucene.search.IndexSearcher;",6612],["import org.apache.lucene.analysis.TokenStream;",8601],["import org.apache.lucene.store.Directory;",9121],["import org.apache.lucene.index.IndexReader;",9169],["import org.apache.lucene.document.Field;",9237],["import org.apache.lucene.index.Term;",9571],["import org.apache.lucene.analysis.Analyzer;",10163],["import org.apache.lucene.document.Document;",11358],["import org.apache.lucene.util.BytesRef;",11607],["import org.apache.lucene.search.Query;",12493]],"useCount":476321},{"word":"m","context":[["return m;",31957],["m.setAccessible(true);",4309],["Marker m = enter_section_(b);",5152],["if (m == null) {",5244],["if (m != null) {",5854],["for (int i = 0; i < m; i++) {",5859],["if (m.matches()) {",7649],["while (m.find()) {",7826],["* @param m",8091],["if (m.find()) {",8218]],"useCount":1158045},{"word":"main","context":[["public static void main(final String[] args) {",8619],["setContentView(R.layout.main);",9781],["getMenuInflater().inflate(R.menu.main, menu);",12327],["public static void main(String[] args){",17970],["public static void main(String[] args) throws IOException {",25412],["public static void main(String args[]) {",30386],["public static void main(String[] args)",40781],["public static void main(String[] args) throws Exception {",77841],["public static void main(String[] args) {",291153],["public static void main(String[] args) throws Exception",7352]],"useCount":1016358},{"word":"make","context":[["*             attempting to make the request or handle the response.  For example",35090],["* not a snapshot. Therefore any modification you make to the",84353],["Perhaps with your help we can be more than a few, and make Mesquite better.",22515],["* Do not make changes to this file unless you know what you are doing--modify",10675],["//Sybase stores it as a single space, Oracle stores it as NULL. This fix will make them consistent at least.",7191],["SourceModel.Expr.Application.make(",5310],["// Java from RobotBuilder. Do not put any code or make any change in",4004],["QualifiedName.make(",2378],[".make();",2328],["* extent necessary to make such provision valid and enforceable.",2281]],"useCount":566658},{"word":"manager","context":[["this.manager = manager;",8523],["* Mandatory empty constructor for the fragment manager to instantiate the",1426],["* @param manager",2168],["super(manager);",2191],["* Artifactory is a binaries repository manager.",2365],["if (manager != null) {",2510],["manager.close();",2990],["if (manager == null) {",3452],["return manager;",6192],["this.manager = manager;",8523]],"useCount":461805},{"word":"map","context":[["if(map != null)",16344],["return map;",63059],["if (map == null) {",9329],["this.map = map;",9551],["this.map = map;",9551],["* @param map",11223],["import org.codehaus.jackson.map.ObjectMapper;",11403],["DomainObjectMap map = new DomainObjectMap();",14546],["* @param map DomainObjectMap of DomainObjects to already created ValueObjects.",14546],["* @param map - maps DomainObjects to created ValueObjects",14546]],"useCount":1825556},{"word":"mapping","context":[["* Used for OX mapping.",2466],["* @param mapping",8709],["return mapping;",4580],["String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")",4382],["public org.exolab.castor.mapping.AccessMode getAccessMode(",3422],["public org.exolab.castor.mapping.FieldDescriptor getIdentity(",3422],["return mapping.findForward(Constants.MAPPING_BASIC);",3394],["/** Field mapping. */",3256],["org.exolab.castor.mapping.FieldHandler             handler        = null;",2822],["import org.springframework.data.mongodb.core.mapping.Document;",2524]],"useCount":419417},{"word":"match","context":[["match(input, Token.UP, null); if (state.failed) return retval;",2984],["match(input, Token.DOWN, null); if (state.failed) return retval;",3356],["switch (match) {",3675],["match = false;",3748],["boolean match = false;",3861],["* Returns the number of rows that match the dynamic query.",4584],["* @return the number of rows that match the dynamic query",4600],["match = true;",4925],["return match;",6224],["import org.projectfloodlight.openflow.protocol.match.*;",8282]],"useCount":640114},{"word":"matcher","context":[["if (!matcher.find()) {",1717],["if (matcher.find()) {",11858],["Matcher matcher;",1816],["if (matcher.find())",1884],["matcher.find();",2107],["return matcher;",2185],["return matcher.matches();",2243],["if (!matcher.matches()) {",4019],["if (matcher.matches()) {",9855],["while (matcher.find()) {",10433]],"useCount":316777},{"word":"matches","context":[["return matcher.matches();",2243],["* Find the _Fields constant that matches name, or null if its not found.",14946],["* Find the _Fields constant that matches fieldId, throwing an exception",14940],["if (matcher.matches()) {",9855],["if (m.matches()) {",7649],["return matches;",5257],["if (!matcher.matches()) {",4019],["if (!m.matches()) {",1997],["* @return the Set of all values, null if no parameter with the given name exists, empty set if there are no matches",1752],["* Find the _Fields constant that matches fieldId, or null if its not found.",14952]],"useCount":340150},{"word":"materials","context":[["*       and/or other materials provided with the distribution.",11422],["* This program and the accompanying materials are made available under the",56649],["and/or other materials provided with the distribution.",27946],["* and/or other materials provided with the distribution.",24823],["*    and/or other materials provided with the distribution.",24613],["*    documentation and/or other materials provided with the distribution.",21240],["*       documentation and/or other materials provided with the distribution.",15298],["* documentation and/or other materials provided with the distribution.",12548],["*   documentation and/or other materials provided with the distribution.",11151],["* This program and the accompanying materials",10532]],"useCount":347984},{"word":"math","context":[["import java.math.*;",8033],["import com.badlogic.gdx.math.MathUtils;",3553],["import com.jme3.math.Vector3f;",4215],["import com.badlogic.gdx.math.Matrix4;",4623],["import com.badlogic.gdx.math.Vector3;",7021],["import java.math.RoundingMode;",7252],["import com.badlogic.gdx.math.Vector2;",10478],["import net.minecraft.util.math.BlockPos;",13035],["import java.math.BigInteger;",75077],["import java.math.BigDecimal;",108053]],"useCount":443183},{"word":"matrix","context":[["this.matrix = matrix;",1138],["Matrix matrix = new Matrix();",5080],["return matrix;",4952],["* @param matrix",2519],["matrix.getValues(m);",1875],["setImageMatrix(matrix);",1716],["for (int i = 0; i < matrix.length; i++) {",1495],["this.matrix = matrix;",1138],["* then the new matrix will be <code>M * R</code>. So when transforming a",1005],["import org.apache.sysml.runtime.matrix.data.MatrixBlock;",900]],"useCount":326114},{"word":"max","context":[["return max;",18781],["this.max = max;",9430],["this.max = max;",9430],["int max = 0;",7052],["* @author max",6578],["* @param max",5966],["for (int i = 0; i < max; i++) {",3095],["int min, max;",2912],["private int max;",1888],["@Size(max = 2147483647)",1857]],"useCount":709248},{"word":"menu","context":[["super.onCreateOptionsMenu(menu, inflater);",6832],["public boolean onCreateOptionsMenu(Menu menu) {",68037],["return menu;",6909],["return super.onCreateOptionsMenu(menu);",9646],["getMenuInflater().inflate(R.menu.menu_main, menu);",9898],["getMenuInflater().inflate(R.menu.menu_main, menu);",9898],["public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {",10434],["getMenuInflater().inflate(R.menu.main, menu);",12327],["getMenuInflater().inflate(R.menu.main, menu);",12327],["// Inflate the menu; this adds items to the action bar if it is present.",38110]],"useCount":602429},{"word":"merge","context":[["*   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",1718],["* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",145292],["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",18250],["* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of",5539],["* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies",5072],["* copy, modify, merge, publish, distribute, sublicense, and/or sell",3768],["// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",3346],["*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",2868],["current.merge(kw);",1463],["*      to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",1073]],"useCount":319680},{"word":"message","context":[["* @param message",56860],["// OF message fields",12800],["super(message);",101162],["super(message, cause);",51255],["return message;",48317],["this.message = message;",41382],["this.message = message;",41382],["private String message;",19548],["//  fmt:message",13189],["public void setMessage(String message) {",11941]],"useCount":2906601},{"word":"messages","context":[["* A key is pointing to the warning message text in \"messages.properties\"",2236],["return messages;",6944],["this.messages = messages;",3281],["this.messages = messages;",3281],["messages.add(message);",2836],["* @param messages",1851],["/* error messages for the codes above */",1753],["for (Message message : messages) {",1737],["import com.intellij.util.messages.MessageBusConnection;",1563],["messages.clear();",1520]],"useCount":346427},{"word":"meta","context":[["import com.oracle.graal.api.meta.*;",2866],["this.meta = meta;",3086],["this.meta = meta;",3086],["import org.bukkit.inventory.meta.ItemMeta;",3673],["import eu.lunisolar.magma.basics.meta.*; // NOSONAR",3686],["import eu.lunisolar.magma.basics.meta.functional.domain.*; // NOSONAR",3686],["import eu.lunisolar.magma.basics.meta.functional.type.*; // NOSONAR",3686],["import eu.lunisolar.magma.basics.meta.functional.*; // NOSONAR",3686],["return meta;",5310],["* @return the meta-property, not null",8902]],"useCount":427666},{"word":"metadata","context":[["metadata,",2535],["if (metadata != null) {",2581],["* @param metadata",3220],["import org.elasticsearch.cluster.metadata.MetaData;",4424],["this.metadata = metadata;",7222],["import org.elasticsearch.cluster.metadata.IndexMetaData;",9094],["return metadata;",9290],["* Return type metadata object",34100],["// Type metadata",34136],["this.metadata = metadata;",7222]],"useCount":679192},{"word":"method","context":[["* This method was generated by MyBatis Generator.",58319],["// TODO Auto-generated method stub",476306],["* This accessor method returns a reference to the live list,",84346],["* @return Returns a reference to this object so that method calls can be",49924],["* Returns a reference to this object so that method calls can be chained together.",33913],["* @return A reference to this updated object so that method calls can be chained",33793],["a=0;// .end method",25726],["return method;",19838],["* Test method for",19502],["* This method is called from within the constructor to initialize the form.",17286]],"useCount":3999198},{"word":"methods","context":[["import org.apache.http.client.methods.HttpGet;",19942],["import org.apache.http.client.methods.HttpPost;",16212],["/** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */",14769],["//Trying to avoid the hibernate collection being marked as dirty via its public interface methods. (like add)",11574],["*           the four callback methods in this interface to process the operation",10739],["//To change body of implemented methods use File | Settings | File Templates.",7552],["* It test the number of wanted objet returned by the methods, and if any object really exist in the original list.",7363],["*        methods in this interface to receive notification of successful or",7010],["return null;  //To change body of implemented methods use File | Settings | File Templates.",6712],["* methods.",6611]],"useCount":802780},{"word":"min","context":[["return min;",12457],["@Size(min = 1, max = 2147483647)",1562],["for (int i=min; i<max; i++)\t{",1577],["import static java.lang.Math.min;",1979],["int min = 0;",2035],["int min = Integer.MAX_VALUE;",2132],["int min, max;",2912],["this.min = min;",7453],["this.min = min;",7453],["* @param min",4337]],"useCount":497419},{"word":"minecraft","context":[["import net.minecraft.block.material.Material;",29273],["import net.minecraft.client.Minecraft;",23526],["import net.minecraft.item.ItemStack;",92788],["import net.minecraft.entity.player.EntityPlayer;",67118],["import net.minecraft.block.Block;",48391],["import net.minecraft.item.Item;",44298],["import net.minecraft.nbt.NBTTagCompound;",32100],["import net.minecraft.entity.Entity;",29474],["import net.minecraft.tileentity.TileEntity;",29438],["import net.minecraft.world.World;",71652]],"useCount":1351000},{"word":"mock","context":[["import static org.mockito.Mockito.mock;",55724],["import org.springframework.mock.web.MockHttpServletRequest;",5633],["MockEndpoint mock = getMockEndpoint(\"mock:result\");",5019],["MockEndpoint mock = getMockEndpoint(\"mock:result\");",5019],[".to(\"mock:result\");",3868],["import org.springframework.mock.web.MockHttpServletResponse;",3818],["mock.expectedMessageCount(1);",3272],["mock.assertIsSatisfied();",2173],["return mock;",2109],["import org.apache.camel.component.mock.MockEndpoint;",9954]],"useCount":451868},{"word":"mockito","context":[["import org.mockito.Mock;",43884],["import static org.mockito.Mockito.verify;",42729],["import org.mockito.Mockito;",28181],["import static org.mockito.Mockito.*;",24873],["import static org.mockito.Matchers.any;",24060],["import org.mockito.runners.MockitoJUnitRunner;",22509],["import org.mockito.MockitoAnnotations;",14779],["import static org.mockito.Matchers.eq;",13045],["import static org.mockito.Mockito.when;",55981],["import static org.mockito.Mockito.mock;",55724]],"useCount":517036},{"word":"mode","context":[["this.mode = mode;",10353],["mode.finish();",2612],["/* -*- Mode: java; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-",2826],["* @return the access mode specified for this class.",3422],["// -*- mode: java; c-basic-offset: 2; -*-",4766],["* @param mode",5495],["an action bar/action mode. This will be used to determine how many",7657],["return mode;",7787],["switch (mode) {",9262],["this.mode = mode;",10353]],"useCount":571246},{"word":"model","context":[["* @model",43650],["return model;",29501],["* @param model",20292],["* <!-- end-model-doc -->",18434],["* <!-- begin-model-doc -->",18295],["this.model = model;",16819],["this.model = model;",16819],["* @model containment=\"true\"",14467],["import org.apache.wicket.model.IModel;",10906],["package model;",8357]],"useCount":3811846},{"word":"modify","context":[["* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",145292],["* WARNING: Do NOT modify this code. The content of this method is",10949],["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",18250],["* WARNING: Do NOT modify this code. The content of this method is always",17199],["* Do not make changes to this file unless you know what you are doing--modify",10675],["// Do not modify",8280],["// DO NOT modify this class. It was generated from LeafRegionEntry.cpp",6912],["* modify, copy, or redistribute it subject to the terms and conditions",6499],["* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of",5539],["// Variables declaration - do not modify//GEN-BEGIN:variables",32271]],"useCount":414793},{"word":"module","context":[["return module;",5522],["/** returns whether this module is requesting to appear as a primary choice */",3571],["this.module = module;",4330],["this.module = module;",4330],["/** returns an explanation of what the module does.*/",5092],["* @module.api",10552],["import com.intellij.openapi.module.Module;",11788],["module.  An independent module is a module which is not derived from",20690],["module.  An independent module is a module which is not derived from",20690],["module.  An independent module is a module which is not derived from",20690]],"useCount":531868},{"word":"more","context":[["* For more information, contact:",4850],["// Called when another command which requires one or more of the same",6339],["for more details.",7314],["for more info.",7563],["<p>Must be one or more (separated by '|') of the following constant values.</p>",11719],["* more details.",21809],["Perhaps with your help we can be more than a few, and make Mesquite better.",22515],["* For more information contact:",27227],["* for more details.",28425],["* there really should be more of a description here...",62720]],"useCount":776352},{"word":"move","context":[["move();",1510],["public void move() {",1535],["a=0;//     move-result-object v0",17071],["a=0;//     move-result v0",8792],["a=0;//     move-result-object v1",7416],["a=0;//     move-result v1",3992],["a=0;//     move-result-object v2",3860],["a=0;//     move-result v2",2317],["a=0;//     move-result-object v3",2107],["a=0;//     move-exception v0",2062]],"useCount":325217},{"word":"msg","context":[["super(msg);",29662],["return msg;",22408],["public void handleMessage(Message msg) {",21890],["* @param msg",18168],["switch (msg.what) {",12364],["this.msg = msg;",6891],["log.error(msg, e);",9618],["Message msg = new Message();",7560],["throw new IllegalArgumentException(msg);",7084],["this.msg = msg;",6891]],"useCount":1261125},{"word":"must","context":[["* of this program must display Appropriate Legal Notices, as required under",4215],["*    Foundation\" must not be used to endorse or promote products derived",3252],["*    must display the following acknowledgement:",3483],["*    if any, must include the following acknowledgment:",3752],["* are met: 1) Redistributions of source code must retain the above",4049],["*    any, must include the following acknowlegement:",4300],["// TODO FIXME:  This test must pass when CQ issue",4360],["* @param index The index must be between 0 and length() - 1.",4841],["* Any modifications to this file must keep this entire header intact.",9260],["*     * Redistributions of source code must retain the above",11092]],"useCount":1029395},{"word":"n","context":[["\"\\n\" +",86245],["int n = 0;",21583],["+ \"\\n\"",22064],["typeCheck(Joiner.on('\\n').join(",22151],["out.write(\"\\n\");",23438],["sb.append(\"\\n\");",27757],["<p>Must be a string value, using '\\\\;' to escape characters such as '\\\\n' or '\\\\uxxxx' for a unicode character.",31095],["out.write(\"\\r\\n\");",31644],["for (int i = 0; i < n; i++) {",34776],["return n;",42445]],"useCount":5699059},{"word":"name","context":[["public void setName(String name) {",119986],["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167],["this.name = name;",333295],["this.name = name;",333295],["\"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\")",317212],["\"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>\") or",317212],["return name;",288762],["<p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",252522],["private String name;",176139],["* @param name",121019]],"useCount":10766252},{"word":"names","context":[["*       names, trademarks, service marks, or product names of the Licensor,",2735],["names.add(name);",2757],["java.util.Enumeration<String> names = request.getParameterNames();",2840],["*  - Neither the name of Oracle Corporation nor the names of its",3284],["List<String> names = new ArrayList<String>();",3459],["* Neither the name of the HSQL Development Group nor the names of its",3960],["* * Neither the name of 'jMonkeyEngine' nor the names of its contributors",5328],["for (String name : names) {",6565],["return names;",13590],["for (int i = 0; i < names.length; i++) {",4182]],"useCount":611781},{"word":"namespace","context":[["import javax.xml.namespace.QName;",45809],["xmlWriter.writeNamespace(prefix, namespace);",22665],["xmlWriter.setPrefix(prefix, namespace);",22665],["elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));",19876],["prefix = generatePrefix(namespace);",15051],["registerPrefix(xmlWriter, namespace);",12626],["public void serialize(final javax.xml.namespace.QName parentQName,",12202],["xmlWriter.writeAttribute(namespace,attName,attValue);",11591],["if (namespace.equals(\"\")) {",9645],["javax.xml.namespace.QName _xmlType) {",67909]],"useCount":960917},{"word":"need","context":[["* CA 95054 USA or visit www.sun.com if you need additional information or",29458],["* or visit www.oracle.com if you need additional information or have any",139265],["//Find out which objects need to be removed",11574],["// don't need explicit deletion of cnode as parent's view deletion would clean child views as well",4996],["* or visit www.openflexo.org if you need additional information.",2673],["* Clara, CA 95054 or visit www.sun.com if you need additional",2541],["* This method buffers the input internally, so there is no need to use a",2135],["* <span style=\"color: #3F7E5E\">// you don't need to set values of common columns</span>",1957],["* <span style=\"color: #3F7E5E\">// you don't need to set a value of concurrency column</span>",1850],["* <span style=\"color: #3F7E5E\">// you don't need to set PK value</span>",1532]],"useCount":649834},{"word":"net","context":[["import java.net.InetSocketAddress;",48945],["import java.net.URISyntaxException;",57879],["import java.net.InetAddress;",66245],["import net.minecraft.entity.player.EntityPlayer;",67118],["import net.minecraft.world.World;",71652],["import java.net.MalformedURLException;",74873],["import net.minecraft.item.ItemStack;",92788],["import android.net.Uri;",105319],["import java.net.URI;",113277],["import java.net.URL;",219147]],"useCount":4703504},{"word":"netty","context":[["import io.netty.channel.nio.NioEventLoopGroup;",4442],["import io.netty.channel.EventLoopGroup;",4275],["import io.netty.buffer.ByteBuf;",31652],["import io.netty.channel.ChannelHandlerContext;",14349],["import org.jboss.netty.buffer.ChannelBuffer;",11051],["import io.netty.channel.Channel;",7902],["import io.netty.buffer.Unpooled;",7788],["import io.netty.channel.ChannelFuture;",5930],["import org.jboss.netty.channel.Channel;",5793],["import org.jboss.netty.channel.ChannelHandlerContext;",4954]],"useCount":377136},{"word":"network","context":[["*             if a network connection is not available.",35112],["* @throws IOException if a remote or network exception occurs",5450],["import net.minecraft.network.Packet;",4362],["import net.minecraft.network.PacketBuffer;",2865],["import com.l2jserver.gameserver.network.SystemMessageId;",2701],["* @throws WeiboException when Weibo service or network is unavailable",2581],["import net.minecraft.network.NetworkManager;",2474],["import cpw.mods.fml.common.network.simpleimpl.IMessage;",2269],["return network;",2228],["import cpw.mods.fml.common.network.NetworkRegistry;",2202]],"useCount":442728},{"word":"new","context":[["throw new IllegalStateException(",54806],["throw new UnsupportedOperationException();",258167],["StringBuffer sb = new StringBuffer();",70651],["throw new RuntimeException(e);",221750],["StringBuilder sb = new StringBuilder();",204542],["throw new NullPointerException();",113045],["throw new IllegalArgumentException(",102541],["throw new IllegalArgumentException();",92146],["* For example, to add a new item, do as follows:",88109],["throw new IllegalStateException();",75008]],"useCount":36359075},{"word":"next","context":[["super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);",10466],["ims.domain.DomainObject o = (ims.domain.DomainObject)iter.next();",11066],["next();",11248],["return next;",15533],["rs.next();",16047],["assertFalse(rs.next());",16135],["if (rs.next()) {",18032],["assertTrue(rs.next());",29284],["reader.next();",34616],["while (rs.next()) {",46836]],"useCount":2120428},{"word":"nio","context":[["import java.nio.FloatBuffer;",9488],["import java.nio.ByteBuffer;",138628],["import java.nio.*;",9927],["import java.nio.channels.FileChannel;",15449],["import java.nio.ByteOrder;",16958],["import java.nio.charset.StandardCharsets;",22747],["import java.nio.file.Paths;",37540],["import java.nio.file.Files;",43707],["import java.nio.charset.Charset;",58340],["import java.nio.file.Path;",60410]],"useCount":669202},{"word":"no","context":[["* [version-no]",2282],["// Tiene errores no recuperables",2300],["* by updating the map directly. Because of this design, there's no setter.",3333],["* @return the identity field, null if this class has no",3422],["// no op",3923],["* If this service has no port for the given interface,",4297],["worldwide, non-exclusive, no-charge, royalty-free, irrevocable",4416],["*       worldwide, non-exclusive, no-charge, royalty-free, irrevocable",5470],["// Make this return true when this Command no longer needs to run execute()",6340],["// no-op",9288]],"useCount":1234403},{"word":"node","context":[["return node;",46800],["* @param node",22734],["if (node == null) {",17638],["if (node != null) {",14967],["import com.fasterxml.jackson.databind.node.ObjectNode;",8585],["super(node);",14767],["this.node = node;",12765],["this.node = node;",12765],["import org.elasticsearch.cluster.node.DiscoveryNode;",6952],["if(node != null)",5328]],"useCount":2552337},{"word":"nodes","context":[["return nodes;",13272],["import org.jsoup.nodes.Document;",9334],["import org.jsoup.nodes.Element;",8039],["nodes.add(node);",3670],["for (Node node : nodes) {",3588],["System.arraycopy(roots, 0, nodes, 0, roots.length);",3339],["TreeNode[] nodes = new TreeNode[roots.length];",3339],["for (int i = 0; i < nodes.length; i++) {",3181],["this.nodes = nodes;",3065],["this.nodes = nodes;",3065]],"useCount":612538},{"word":"non","context":[["*     always non-null",3403],["* (non-Javadoc)",289104],["* returning a non-null result will terminate the switch.",26832],["*       worldwide, non-exclusive, no-charge, royalty-free, irrevocable",5470],["worldwide, non-exclusive, no-charge, royalty-free, irrevocable",4416],["//~--- non-JDK imports --------------------------------------------------------",2653],["// Guaranteed to return a non-null array",2158],["* limitations, transferable or non-transferable, directly at",2085],["* <span style=\"color: #3F7E5E\">// (auto-increment for version number is valid though non-exclusive control)</span>",1982],["/* (non-Javadoc)",348786]],"useCount":1089251},{"word":"not","context":[["* not a snapshot. Therefore any modification you make to the",84353],["// This should not have happened",17191],["\" is not a valid exception\");",18854],["obligated to do so.  If you do not wish to do so, delete this",20629],["this exception to your version of the library, but you are not",20635],["module.  An independent module is a module which is not derived from",20690],["* along with Resin Open Source; if not, write to the",22227],["* along with OpenNMS(R).  If not, see:",27188],["// Variables declaration - do not modify//GEN-BEGIN:variables",32271],["*             if a network connection is not available.",35112]],"useCount":4979734},{"word":"nothing","context":[["//do nothing",10927],["// do nothing.",2852],["//Do nothing",3251],["* The default implementation does nothing.",6937],["// nothing",7693],["// Do nothing.",9389],["// nothing to do",14551],["// Do nothing",27419],["* <p>The default implementation does nothing.</p>",43308],["// do nothing",48957]],"useCount":353869},{"word":"now","context":[["return now;",1203],["long now = System.currentTimeMillis();",23624],["Date now = new Date();",12303],["//now represent the ones removed from the VO collection. No longer referenced.",11973],["final long now = System.currentTimeMillis();",3451],["Calendar now = Calendar.getInstance();",3227],["long now = System.nanoTime();",2397],["now = System.currentTimeMillis();",2277],["final Date now = new Date();",1563],["* @deprecated You should now call this method on the result of",1483]],"useCount":454163},{"word":"null","context":[["null,",217596],["if (value == null) {",188189],["null);",81799],["if (obj == null)",75603],["if (value != null) {",59368],["if (result == null) {",52889],["if (obj == null) {",48065],["if(value == null)",46838],["ResultSet rs = null;",39082],["return null;",3960180]],"useCount":34932524},{"word":"number","context":[["<p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",87204],["/** <p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",42975],["return number;",12703],["this.number = number;",11096],["this.number = number;",11096],["\"required: number\");",8489],["* It test the number of wanted objet returned by the methods, and if any object really exist in the original list.",7363],["* This test add a random number (1..10) of wanting output objets",7363],["\"found   : number\\n\" +",5879],["// check number of evidence elements and their value",5263]],"useCount":1631933},{"word":"o","context":[["* @param o",14567],["if (this == o) return true;",45807],["if (o == null || getClass() != o.getClass()) return false;",33253],["if (o == null || getClass() != o.getClass()) return false;",33253],["if (this == o) {",24896],["return o;",23465],["if (o == null) {",18166],["if (o == null || getClass() != o.getClass()) {",15897],["public boolean equals(Object o) {",105625],["if (o == null || getClass() != o.getClass()) {",15897]],"useCount":1522429},{"word":"obj","context":[["public boolean equals(Object obj) {",181284],["if (obj == null)",75603],["public boolean equals(Object obj)",28876],["return obj;",34195],["if (obj == null) return false;",37973],["if (this == obj) return true;",38204],["if (this == obj) {",41256],["if (getClass() != obj.getClass())",41869],["if (obj == null) {",48065],["if (this == obj)",62225]],"useCount":1897794},{"word":"object","context":[["* Returns a reference to this object so that method calls can be chained together.",33913],["public boolean equals(Object object) {",22070],["* @param object the target of the switch.",28445],["return object;",33383],["* @return A reference to this updated object so that method calls can be chained",33793],["* Return type metadata object",34100],["* @return Returns a reference to this object so that method calls can be",49924],["* returned list will be present inside the JAXB object.",84324],["*     possible object is",507152],["*     allowed object is",507505]],"useCount":4491397},{"word":"objects","context":[["* @param voCollection - the collection of value objects",14546],["//Find out which objects need to be removed",11574],["//Remove the unwanted objects",11574],["* @param domainFactory - used to create existing (persistent) domain objects.",21819],["super(context, resource, objects);",1613],["// Create HTTP transport objects",1795],["* @param objects",2474],["* Serialized objects of this class will not be compatible with",3432],["return objects;",4373],["* objects.",5760]],"useCount":641929},{"word":"occurs","context":[["* @throws SQLException if a database access error occurs",4945],["* @exception IOException if an input/output error occurs",3026],["* @exception SQLException if a database access error occurs or",3198],["* @exception  IOException  if an I/O error occurs.",3514],["* @exception SQLException If an error occurs.",3724],["* @throws IOException if an I/O error occurs.",4002],["* @throws IOException if a remote or network exception occurs",5450],["* @throws ServletException if a servlet-specific error occurs",12178],["* @exception SQLException if a database access error occurs",14384],["* @throws IOException if an I/O error occurs",22012]],"useCount":361805},{"word":"of","context":[["containing a value of this type.",317212],["// Any modifications to this file will be lost upon recompilation of the source schema.",64071],["* there really should be more of a description here...",62720],["//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #",39871],["//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #",39871],["// WARNING: DO NOT MODIFY the content of this file",73630],["* JBoss, Home of Professional Open Source",33074],["// End of variables declaration//GEN-END:variables",32363],["* Objects of the following type(s) are allowed in the list",85689],["* This file is part of the Open Web Application Security Project (OWASP)",31744]],"useCount":17018535},{"word":"off","context":[["public void write(byte b[], int off, int len) throws IOException {",1133],["public int read(byte[] b, int off, int len) throws IOException {",4038],["public void write(byte[] b, int off, int len) throws IOException {",3459],["* @param off",3072],["int off = 0;",2906],["off++;",1439],["* @param off Offset in array where conversion should begin",1396],["out.write(b, off, len);",1244],["// @formatter:off",15079],["//@formatter:off",10854]],"useCount":345945},{"word":"offset","context":[["* @param offset",19037],["return offset;",15335],["this.offset = offset;",14090],["int offset = 0;",27012],["this.offset = offset;",14090],["offset++;",8928],["offset = 0;",8052],["private int offset;",4192],["// -*- mode: java; c-basic-offset: 2; -*-",4766],["int j = offset;  /* index in unpacked array */",6205]],"useCount":1332658},{"word":"on","context":[["// automatically handle clicks on the Home/Up button, so long",26831],["typeCheck(Joiner.on('\\n').join(",22151],["making a combined work based on this library.  Thus, the terms and",20656],["* Performs a deep copy on <i>other</i>.",15588],["// @formatter:on",13797],["* To work on unit tests, switch the Test Artifact in the Build Variants view.",13652],["* {@link #visitChildren} on {@code ctx}.</p>",10717],["//@formatter:on",10516],["classification, clustering, pattern mining and so on.",9988],["Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),",151497]],"useCount":3075176},{"word":"onClick","context":[["public void onClick(DialogInterface dialog,",6127],["public void onClick(DialogInterface dialogInterface, int i) {",8098],["public void onClick(View v)",8569],["public void onClick(DialogInterface dialog, int whichButton) {",8659],["public void onClick(View arg0) {",12408],["public void onClick(DialogInterface dialog, int id) {",15009],["public void onClick(ClickEvent event) {",19349],["public void onClick(View view) {",48237],["public void onClick(DialogInterface dialog, int which) {",61196],["public void onClick(View v) {",215214]],"useCount":503183},{"word":"onCreate","context":[["super.onCreate(icicle);",5555],["onCreate(db);",5558],["protected void onCreate(Bundle savedInstanceState)",5942],["public void onCreate(Bundle savedInstanceState)",7347],["public void onCreate(SQLiteDatabase db) {",10726],["super.onCreate();",23246],["public void onCreate() {",25743],["public void onCreate(Bundle savedInstanceState) {",83187],["protected void onCreate(Bundle savedInstanceState) {",174571],["super.onCreate(savedInstanceState);",288856]],"useCount":717070},{"word":"one","context":[["<p>Must be one of the following constant values.</p>",15389],["*           pertain to any part of the Derivative Works, in at least one",2735],["<p>Must be one or more (separated by '|') of the following constant values.</p>",11719],["* Then add one of all possible objet in the list.",7363],["* It is intended to be used when one called to an Assembler is made.",7273],["* Copy one ValueObject to another",7273],["/** <p>Must be one of the following constant values.</p>",6996],["// Called when another command which requires one or more of the same",6339],["/** <p>Must be one or more (separated by '|') of the following constant values.</p>",3923],["* one or more patents listed at http://www.pivotal.io/patents.",2792]],"useCount":1148429},{"word":"only","context":[["String       oper;                      // only used in some methods",3597],["// this method is not needed. It is here for compatibility purpose only.",3562],["if(factory == null); // this is to avoid eclipse warning only.",3899],["* If you wish your version of this file to be governed by only the CDDL or",4947],["if(loader == null); // this is to avoid eclipse warning only.",7113],["if(runtimeSize == null); // this is to avoid eclipse warning only.",7113],["if(control == null); // this is to avoid eclipse warning only.",7113],["* This is a convenience method only.",7273],["if(caseInsensitive); // this is to avoid eclipse warning only.",8044],["//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #",39871]],"useCount":1151009},{"word":"op","context":[["// No-op.",10525],["// no-op",9288],["import lucee.runtime.op.Caster;",1988],["// No-op",2014],["* @param op",3370],["// no op",3923],["switch (op) {",4650],["this.op = op;",4681],["this.op = op;",4681],["return op;",6324]],"useCount":361565},{"word":"open","context":[["* and open the template in the editor.",179345],["database.open(\"admin\", \"admin\");",2017],["adapter.open();",2148],["document.open();",2335],["* LensKit, an open source recommender systems toolkit.",3005],["dialog.open();",4080],["shell.open();",5285],["public void open() {",5312],["mb.open();",5664],["open();",14036]],"useCount":645642},{"word":"openapi","context":[["import com.intellij.openapi.project.Project;",61816],["import com.intellij.openapi.vfs.VirtualFile;",31168],["import com.intellij.openapi.diagnostic.Logger;",29704],["import com.intellij.openapi.application.ApplicationManager;",23743],["import com.intellij.openapi.util.text.StringUtil;",23553],["import com.intellij.openapi.editor.Editor;",15865],["import com.intellij.openapi.module.Module;",11788],["import com.intellij.openapi.util.io.FileUtil;",9527],["import com.intellij.openapi.util.TextRange;",9437],["import com.intellij.openapi.util.Pair;",9269]],"useCount":753745},{"word":"operation","context":[["* relayed to the caller of the composed operation. This method is just convenience, to provide the ability to",2936],["*           the four callback methods in this interface to process the operation",10739],["*        unsuccessful completion of the operation.",7010],["*         operation returned by the service.",6471],["* operation.",6341],["// does not warrant that the operation of the program will be",5542],["return operation;",5095],["this.operation = operation;",4847],["this.operation = operation;",4847],["* @param operation",2952]],"useCount":674018},{"word":"optional","context":[["@Basic( optional = false )",1641],["@Inject(optional = true)",1799],["@Basic( optional = true )",2575],["* Set - optional<br>",3050],["* <code>optional string name = 1;</code>",3769],["* Get - optional<br>",4179],["@ManyToOne(optional = false)",5857],["//<editor-fold defaultstate=\"collapsed\" desc=\" Look and feel setting code (optional) \">",7875],["The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to",17007],["@Basic(optional = false)",20889]],"useCount":566576},{"word":"options","context":[["return options;",16828],["this.options = options;",10172],["this.options = options;",10172],["CompilerOptions options = createCompilerOptions();",9428],["* @param options",9115],["Options options = new Options();",6755],["import com.microsoft.graph.options.*;",6303],["BitmapFactory.Options options = new BitmapFactory.Options();",4983],["options,",4911],["// Decompiler options: braces fieldsfirst space lnc",4740]],"useCount":936797},{"word":"or","context":[["\"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>\") or",317212],["*             attempting to make the request or handle the response.  For example",35090],["*             either a problem with the data in the request, or a server side issue.",35135],["<p>Must be a boolean value, either \"<code>true</code>\" or \"<code>false</code>\".",41343],["\"<code>#<i>rrggbb</i></code>\", or \"<code>#<i>aarrggbb</i></code>\".",65142],["* or visit www.oracle.com if you need additional information or have any",139265],["* or visit www.oracle.com if you need additional information or have any",139265],["* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",145292],["* Redistribution and use in source and binary forms, with or without",168359],["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167]],"useCount":5844103},{"word":"oracle","context":[["import com.oracle.graal.api.code.*;",1621],["import com.oracle.truffle.api.frame.VirtualFrame;",1305],["import com.oracle.graal.jtt.*;",1470],["import com.oracle.graal.nodes.spi.*;",1807],["import com.oracle.graal.graph.*;",2110],["*  berkeleydb-info_us@oracle.com",2566],["import com.oracle.graal.api.meta.*;",2866],["import com.oracle.graal.nodes.*;",3062],["* For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html",7513],["* or visit www.oracle.com if you need additional information or have any",139265]],"useCount":351153},{"word":"order","context":[["if (order == SortOrder.DESCENDING)",19964],["* @param orderByComparator the comparator to order the set by (optionally <code>null</code>)",18628],["* @param orderByComparator the comparator to order the results by (optionally <code>null</code>)",9729],["return order;",9078],["this.order = order;",8000],["this.order = order;",8000],["* Add order-by as descend. <br>",3133],["* @param order",4251],["* Add order-by as ascend. <br>",3128],["super(id, text, active, parent, image, color, order);",3339]],"useCount":711029},{"word":"ordered","context":[["* @return the ordered range of matching rows",2772],["* Performs a dynamic query on the database and returns an ordered range of the matching rows.",2772],["* @model containment=\"true\" ordered=\"false\"",1102],[".ordered()",947],["* @model required=\"true\" ordered=\"false\"",732],["this.ordered = ordered;",630],["this.ordered = ordered;",630],["* @ordered",303113],["* Used in decoding the \"ordered\" dialect of Base64.",584],["* @model ordered=\"false\"",564]],"useCount":371568},{"word":"org","context":[["import org.slf4j.Logger;",456484],["import org.junit.Test;",907784],["import static org.junit.Assert.assertEquals;",235826],["import org.junit.Before;",315191],["import org.springframework.beans.factory.annotation.Autowired;",196694],["* http://www.eclipse.org/legal/epl-v10.html",189338],["import org.apache.log4j.Logger;",173138],["import org.junit.runner.RunWith;",162969],["import static org.junit.Assert.*;",159718],["import org.slf4j.LoggerFactory;",442983]],"useCount":41378185},{"word":"os","context":[["import android.os.Handler;",78203],["os.close();",23660],["import android.os.Parcel;",26842],["import android.os.Environment;",27206],["import android.os.IBinder;",27823],["import android.os.Parcelable;",30388],["import android.os.Message;",35348],["import android.os.AsyncTask;",51074],["import android.os.Build;",71291],["import android.os.Bundle;",413597]],"useCount":1233767},{"word":"other","context":[["*       documentation and/or other materials provided with the distribution.",15298],["public boolean equals(Object other) {",27197],["and/or other materials provided with the distribution.",27946],["* Performs a deep copy on <i>other</i>.",15588],["public Builder mergeFrom(com.google.protobuf.Message other) {",17434],["super.mergeFrom(other);",17560],["*    documentation and/or other materials provided with the distribution.",21240],["Linking this library statically or dynamically with other modules is",21357],["*    and/or other materials provided with the distribution.",24613],["* and/or other materials provided with the distribution.",24823]],"useCount":1980100},{"word":"otherwise","context":[["*         <code>false</code> otherwise.",4010],["*         <code>false</code> otherwise",3656],["be used in advertising or otherwise to promote the sale, use or other dealings",3094],["* @return <code>true</code> if so; <code>false</code> otherwise",3067],["* otherwise",2986],["/** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */",13392],["* otherwise.",9514],["* <code>false</code> otherwise.",8097],["*         otherwise.",6924],["*         otherwise",4742]],"useCount":465553},{"word":"out","context":[["The commenting leaves much to be desired. Please approach this source code with the spirit of helping out.",22515],["out.write(\"\\n\");",23438],["out.println();",24278],["System.out",26208],["System.out.println(\"\");",27324],["return out;",45365],["out.flush();",57544],["out.close();",101632],["System.out.println();",116349],["out.write(\"\\r\\n\");",31644]],"useCount":4313323},{"word":"output","context":[["this.output = output;",7236],["import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;",4980],["* @param output",5445],["this.output = output;",7236],["* This test add a random number (1..10) of wanting output objets",7363],["output.flush();",9382],["output.close();",14222],["getUnknownFields().writeTo(output);",15219],["public void writeTo(com.google.protobuf.CodedOutputStream output)",18351],["return output;",34241]],"useCount":1211431},{"word":"ovirt","context":[["import org.ovirt.engine.core.compat.Guid;",13306],["import org.ovirt.engine.core.common.action.VdcActionType;",4646],["package org.ovirt.engine.core.bll;",4214],["import org.ovirt.engine.core.common.queries.VdcQueryType;",3881],["import org.ovirt.engine.core.common.businessentities.VM;",3566],["import org.ovirt.engine.core.common.businessentities.VDS;",3328],["import org.ovirt.engine.core.dal.dbbroker.DbFacade;",2995],["import org.ovirt.engine.core.common.AuditLogType;",2889],["import org.ovirt.engine.core.common.queries.IdQueryParameters;",2679],["import org.ovirt.engine.core.common.errors.EngineMessage;",2586]],"useCount":365781},{"word":"owner","context":[["return this.owner;",1458],["this.owner = owner;",14306],["if (owner == null) {",2237],["private String owner;",2497],["if (owner != null) {",2552],["super(owner);",5065],["* @param owner",6989],["return owner;",9477],["this.owner = owner;",14306],["public void setOwner(String owner) {",2057]],"useCount":318588},{"word":"p","context":[["<p>Includes the following attributes:</p>",54642],["* </p>",1229403],["* <p/>",478582],["* <p>",3060868],["<p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",252522],["<p>",204889],["* <p>The following schema fragment specifies the expected content contained within this class.",169528],["<p>This is a private symbol.",118752],["/** <p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",117936],["<p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",87204]],"useCount":10137257},{"word":"package","context":[["\"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\")",317212],["<p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",252522],["/** <p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",117936],["package org.owasp.benchmark.testcode;",31139],["package com.vmware.vim25;",19228],["package adila.db;",12874],["package fr.javatronic.blog.massive.annotation1.sub1;",9999],["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167],["\"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>\") or",317212],["buf.append(\"package test1;\\n\");",9422]],"useCount":10635390},{"word":"page","context":[["this.page = page;",7154],["model.addAttribute(\"page\", page);",2785],["* @param page",8098],["if (page != null) {",2915],["// check number of elements in the page",3743],["* or to join the biojava-l mailing list, visit the home page",4171],["// Jad home page: http://www.geocities.com/kpdus/jad.html",5347],["this.page = page;",7154],["model.addAttribute(\"page\", page);",2785],["return page;",12491]],"useCount":601652},{"word":"param","context":[["* @param context",78135],["* @param type",53612],["* @param request",56525],["* @param message",56860],["* @param ctx the parse tree",58366],["* @param args",60228],["* @param value",641461],["* @param name",121019],["* @param key",86062],["* @param id",82470]],"useCount":16512920},{"word":"parameter","context":[["import com.rapidminer.parameter.ParameterType;",2992],["* @param parameter",3184],["* @parameter",7447],["// A start element we are not expecting indicates an invalid parameter was passed",6058],["* @param parameterName the name of the parameter",4497],["* parameter.",4292],["return parameter;",4036],["* Wrapper for calling the ActiveX-Method with input-parameter(s).",3961],["import org.apache.wicket.request.mapper.parameter.PageParameters;",3707],["* @param x the parameter value",2962]],"useCount":773066},{"word":"parameters","context":[["this.parameters = parameters;",9325],["this.parameters = parameters;",9325],["* @param parameters",10549],["Map<String, Object> parameters = new HashMap<String, Object>();",3292],["if (parameters != null) {",3364],["if (parameters == null) {",3767],["* @throws IllegalArgumentException exception thrown from invalid parameters",4195],["* parameters.",5460],["super(parameters);",5958],["return parameters;",14805]],"useCount":820738},{"word":"params","context":[["* @param params",18549],["Map<String, Object> params = new HashMap<String, Object>();",14318],["params,",10958],["this.params = params;",10407],["this.params = params;",10407],["Map<String, String> params = new HashMap<String, String>();",8533],["protected Void doInBackground(Void... params) {",7876],["if (params != null) {",6274],["return params;",22529],["if (params == null) {",5786]],"useCount":1185804},{"word":"parent","context":[["if (parent != null) {",23645],["this.parent = parent;",39390],["this.parent = parent;",39390],["public View getView(int position, View convertView, ViewGroup parent) {",33349],["super(parent);",29372],["return parent;",27195],["com.google.protobuf.GeneratedMessage.BuilderParent parent) {",27170],["// as you specify a parent activity in AndroidManifest.xml.",26880],["* @param parent",24939],["super(parent, invokingState);",24408]],"useCount":1604771},{"word":"parse","context":[["*  Factory class that keeps the parse method",5981],["// Use Jackson to parse it",1881],["import com.parse.ParseQuery;",1982],["import com.parse.ParseObject;",2807],["import com.parse.ParseUser;",2969],["parser.parse();",3074],["import com.parse.ParseException;",3081],["parse();",3089],["Query parsedQuery = queryParser.parse(query).query();",7217],["* @param ctx the parse tree",58366]],"useCount":704046},{"word":"parser","context":[["this.parser = parser;",4665],["import org.json.simple.parser.ParseException;",4269],["JSONParser parser = new JSONParser();",3938],["return CUP$parser$result;",6350],["parser.nextToken();",6126],["while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {",5728],["return parser;",5523],["currentFieldName = parser.currentName();",4690],["import org.json.simple.parser.JSONParser;",4667],["this.parser = parser;",4665]],"useCount":906972},{"word":"part","context":[["* This file is part of the LibreOffice project.",7131],["* This is part of Geomajas, a GIS framework, http://www.geomajas.org/.",7424],["* This library is part of OpenCms -",9134],["/* This file is part of VoltDB.",9763],["* This program is part of JasperReports.",11541],["* This file is part of Neo4j.",11814],["* This file is part of Alfresco",12606],["* This file is part of Resin(R) Open Source",22244],["* This file is part of OpenNMS(R).",27316],["* This file is part of the Open Web Application Security Project (OWASP)",31744]],"useCount":1165782},{"word":"password","context":[["this.password = password;",41111],["return this.password;",2879],["if (password != null) {",3319],["if (password == null) {",3341],["private final String password;",3637],["* @param password",15810],["public void setPassword(String password) {",21352],["private String password;",29222],["this.password = password;",41111],["return password;",29273]],"useCount":599288},{"word":"path","context":[["File file = new File(path);",9126],["String path;",6153],["return path;",45683],["* @param path",33300],["this.path = path;",29232],["this.path = path;",29232],["private String path;",12491],["if (path == null) {",12132],["if (path != null) {",11309],["public void setPath(String path) {",6393]],"useCount":1726710},{"word":"pattern","context":[["classification, clustering, pattern mining and so on.",9988],["private String pattern;",1723],["private final Pattern pattern;",1767],["* @return a reference to this {@code AbstractQueryBuilder} object to fulfill the \"Builder\" pattern.",1999],["private Pattern pattern;",2154],["if (pattern == null) {",2352],["return pattern;",6476],["this.pattern = pattern;",6899],["this.pattern = pattern;",6899],["* @param pattern",7025]],"useCount":428558},{"word":"persistence","context":[["import javax.persistence.Column;",70719],["import javax.persistence.Id;",69782],["import javax.persistence.Table;",64198],["import javax.persistence.GeneratedValue;",49785],["import javax.persistence.EntityManager;",40847],["import javax.persistence.ManyToOne;",32793],["import javax.persistence.JoinColumn;",32233],["import javax.persistence.GenerationType;",30315],["import javax.persistence.*;",24711],["import javax.persistence.Entity;",94783]],"useCount":1384305},{"word":"pixels","context":[["/**  Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.",1161],["Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),",151497],["* @param pixels",905],["int[] pixels = new int[width * height];",953],["Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),",151497],["Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),",151497],["return pixels;",1511],["Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.",1164],["/**  Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.",1163],["Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.",1162]],"useCount":581883},{"word":"player","context":[["import net.minecraft.entity.player.EntityPlayer;",67118],["* @param player",10397],["this.player = player;",9331],["this.player = player;",9331],["import net.minecraft.entity.player.EntityPlayerMP;",9182],["import net.minecraft.entity.player.InventoryPlayer;",8501],["return player;",6415],["if (player != null) {",5362],["Player player = event.getPlayer();",5221],["private Player player;",3973]],"useCount":727413},{"word":"plugin","context":[["this.plugin = plugin;",12404],["import org.apache.maven.plugin.AbstractMojo;",4594],["import org.eclipse.ui.plugin.AbstractUIPlugin;",5144],["import org.apache.maven.plugin.MojoExecutionException;",10544],["this.plugin = plugin;",12404],["return plugin;",8835],["import org.bukkit.plugin.java.JavaPlugin;",8331],["import org.bukkit.plugin.Plugin;",7595],["import org.apache.maven.plugin.MojoFailureException;",6226],["plugin = this;",5278]],"useCount":475547},{"word":"point","context":[["* @param point",3898],["/** <p>Must be a floating point value, such as \"<code>1.2</code>\".",4142],["return point;",4383],["<p>Must be a floating point value, such as \"<code>1.2</code>\".",4827],["// Main entry point",3724],["// The starting point.",3693],["/** <p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",42975],["<p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",87204],["this.point = point;",1772],["this.point = point;",1772]],"useCount":570518},{"word":"port","context":[["public void setPort(int port) {",5642],["* If this service has no port for the given interface,",4297],["* Set the endpoint address for the specified port name.",4346],["private final int port;",5273],["* @param port",10308],["private int port;",12627],["return port;",19753],["this.port = port;",28687],["this.port = port;",28687],["int port;",4791]],"useCount":597878},{"word":"portal","context":[["throws com.liferay.portal.kernel.exception.SystemException {",44413],["throws com.liferay.portal.kernel.exception.SystemException;",24632],["com.liferay.portal.kernel.util.OrderByComparator orderByComparator)",19008],["throws com.liferay.portal.kernel.exception.PortalException,",18138],["com.liferay.portal.kernel.exception.SystemException {",16280],["if (t instanceof com.liferay.portal.kernel.exception.SystemException) {",14558],["throw (com.liferay.portal.kernel.exception.SystemException)t;",11032],["import com.liferay.portal.kernel.exception.SystemException;",8491],["com.liferay.portal.kernel.exception.SystemException;",6669],["throws com.liferay.portal.kernel.exception.SystemException,",6759]],"useCount":457767},{"word":"pos","context":[["pos = 0;",7824],["pos = ( pos + 1 ) & mask;",4142],["pos = ( pos + 1 ) & mask;",4142],["this.pos = pos;",5092],["this.pos = pos;",5092],["int pos;",5359],["return pos;",13846],["int pos = 0;",19555],["* @param pos",7246],["pos++;",22142]],"useCount":923145},{"word":"position","context":[["public Object getItem(int position) {",17165],["return position;",37232],["this.position = position;",16005],["public void onPageSelected(int position) {",7797],["switch (position) {",9548],["* @param position",13288],["this.position = position;",16005],["public View getView(int position, View convertView, ViewGroup parent) {",33349],["public long getItemId(int position) {",25401],["public void onItemClick(AdapterView<?> parent, View view, int position, long id) {",17575]],"useCount":1474955},{"word":"possible","context":[["* Then add one of all possible objet in the list.",7363],["*     possible object is",507152],["// we have to store this data until last moment since it is not possible to write any",6150],["* @return possible object is",4195],["by the system. Favor this option over \"always\" where possible.",2316],["* @return an Iterator over all possible elements in this",1413],["* @return an Enumeration over all possible elements of this",1413],["* @return possible object is {@link String }",12648],["* possible.",1373],["* The remote call of DynAny methods is not possible.",1296]],"useCount":736135},{"word":"pre","context":[["* </pre></blockquote>",8644],["* <pre><code>",8943],["* </pre>",815604],["* <pre>",801320],["* <p><pre><code>",23145],["* </code></pre></p>",19638],["* }</pre>",16460],["* </code></pre>",12915],["* <blockquote><pre>",9305],["* <pre>{@code",9539]],"useCount":2020547},{"word":"prefix","context":[["xmlWriter.setPrefix(prefix,namespaceURI);",11592],["xmlWriter.writeNamespace(prefix, namespace);",22665],["xmlWriter.setPrefix(prefix, namespace);",22665],["if (prefix == null) {",21649],["prefix = generatePrefix(namespace);",15051],["xmlWriter.writeNamespace(prefix, namespaceURI);",12694],["* Util method to write an attribute without the ns prefix",12639],["if (prefix.trim().length() > 0){",11592],["prefix = generatePrefix(namespaceURI);",12630],["return prefix;",13855]],"useCount":690061},{"word":"print","context":[["System.out.print(\".\");",3278],["out.print(' ');",1412],["out.print(\", \");",1653],["print();",2268],["out.print(\" \");",2711],["EventPrinter.print(timeStamp, inEvents, removeEvents);",3195],["out.print(",3273],["System.out.print(\"\\n\");",3473],["System.out.print(\" \");",3753],["public void print() {",4824]],"useCount":734151},{"word":"printStackTrace","context":[["e.printStackTrace();",1367378],["ioe.printStackTrace();",10753],["exception.printStackTrace();",10459],["ex.printStackTrace();",122764],["e1.printStackTrace();",51609],["t.printStackTrace();",22030],["//\t\t\te.printStackTrace();",15714],["//e.printStackTrace();",12639],["e.printStackTrace(System.err);",11286],["// e.printStackTrace();",10238]],"useCount":1881196},{"word":"println","context":[["System.err.println();",9493],["System.out.println(s);",10121],["System.out.println();",116349],["System.out.println(\"\");",27324],["out.println();",24278],["System.out.println(",18625],["System.out.println(e.getMessage());",16318],["System.out.println(e);",14955],["System.err.println(e.getMessage());",12684],["System.out.println(result);",10531]],"useCount":2025817},{"word":"private","context":[["private String description;",47431],["private static final long serialVersionUID = 1L;",566114],["private String name;",176139],["private static org.apache.axis.description.TypeDesc typeDesc =",33871],["private void initComponents() {",35865],["private Long id;",40326],["<p>This is a private symbol.",118752],["private final String name;",58747],["private String id;",48980],["private int id;",44134]],"useCount":20584652},{"word":"process","context":[["public void process(Exchange exchange) throws Exception {",11030],["process();",2063],["public void process(WatchedEvent event) {",2202],[".process(new Processor() {",2493],["return process;",3162],["process.destroy();",3601],["process.waitFor();",3706],["public void process(Node externs, Node root) {",3869],["public void process() {",4240],["*           the four callback methods in this interface to process the operation",10739]],"useCount":604187},{"word":"program","context":[["// exclusively on the program for any reason.  IN NO EVENT SHALL THE",4155],["vm.step(program);",4638],["// does not warrant that the operation of the program will be",5542],["// uninterrupted or error-free. The end-user understands that the program",5551],["* HELIUM V IT-Solutions GmbH. The licensing of the program under the",5714],["* library is not considered a \"derivative work\" of the program:",7566],["* This program and the accompanying materials",10532],["* This program is part of JasperReports.",11541],["* This program and the accompanying materials are made available under the",56649],["* of this program must display Appropriate Legal Notices, as required under",4215]],"useCount":320261},{"word":"project","context":[["if (project == null) {",5494],["myProject = project;",14259],["* @param project",6920],["* This file is part of the LibreOffice project.",7131],["import org.apache.maven.project.MavenProject;",7842],["* project website: http://www.opencms.org",9131],["return project;",9722],["this.project = project;",10388],["this.project = project;",10388],["import com.intellij.openapi.project.Project;",61816]],"useCount":892048},{"word":"properties","context":[["super(properties,firstToken,lastToken);",5436],[".startObject(\"properties\")",7236],["* \"ads.properties\" file. See README for more info.",4759],["if (properties != null) {",4537],["if (properties == null) {",5063],["return properties;",26507],["Properties properties = new Properties();",19465],["this.properties = properties;",11933],["this.properties = properties;",11933],["* @param properties",8037]],"useCount":823301},{"word":"property","context":[["return property;",7636],["* @param property",7875],["* @return the meta-property, not null",8902],["* Sets the value of the name property.",9919],["* Gets the value of the name property.",10324],["* Sets the value of the value property.",10460],["}  // End of if for expected property start element",10746],["* Gets the value of the value property.",10840],["* Sets the value of the id property.",11915],["* Gets the value of the id property.",12545]],"useCount":1934746},{"word":"props","context":[["final Properties props = new Properties();",2520],["Properties props = new Properties();",34056],["return props;",14519],["Properties props = PropertiesUtil.deepCopy(TEST_PROPERTIES);",5381],["Connection conn = DriverManager.getConnection(getUrl(), props);",4593],["props = new Properties();",3596],["* @param props",3298],["this.props = props;",2634],["this.props = props;",2634],["if (props != null) {",2484]],"useCount":420087},{"word":"protected","context":[["protected void onCreate(Bundle savedInstanceState) {",174571],["protected void configure() {",22014],["protected String name;",24176],["protected void onPause() {",24603],["protected void onDestroy() {",25826],["protected void tearDown() throws Exception {",31063],["protected com.google.protobuf.GeneratedMessage.FieldAccessorTable",31517],["protected void onResume() {",33465],["protected EClass eStaticClass() {",19167],["protected void setUp() throws Exception {",54696]],"useCount":5901538},{"word":"protobuf","context":[["public static final com.google.protobuf.Descriptors.Descriptor",33263],["return (com.google.protobuf.ByteString) ref;",22358],["com.google.protobuf.GeneratedMessage.BuilderParent parent) {",27170],["} catch (com.google.protobuf.InvalidProtocolBufferException e) {",27674],["protected com.google.protobuf.GeneratedMessage.FieldAccessorTable",31517],["size += com.google.protobuf.CodedOutputStream",58563],["com.google.protobuf.CodedInputStream input,",63638],["throws com.google.protobuf.InvalidProtocolBufferException {",104994],["com.google.protobuf.ExtensionRegistryLite extensionRegistry)",136082],["com.google.protobuf.ByteString b =",22061]],"useCount":1316274},{"word":"protocol","context":[["org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);",37065],["import org.projectfloodlight.openflow.protocol.*;",8295],["new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));",9108],["if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {",9628],["if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {",10715],["org.apache.thrift.protocol.TField schemeField;",10734],["public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {",12145],["public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {",12146],["write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));",12415],["read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));",12418]],"useCount":890320},{"word":"provided","context":[["* particular file as subject to the \"Classpath\" exception as provided",100648],["*   documentation and/or other materials provided with the distribution.",11151],["and/or other materials provided with the distribution.",27946],["* and/or other materials provided with the distribution.",24823],["*    and/or other materials provided with the distribution.",24613],["*    documentation and/or other materials provided with the distribution.",21240],["terms of your choice, provided that you also meet, for each linked",20904],["*       documentation and/or other materials provided with the distribution.",15298],["*       and/or other materials provided with the distribution.",11422],["* documentation and/or other materials provided with the distribution.",12548]],"useCount":685093},{"word":"provider","context":[["import android.provider.MediaStore;",11736],["import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;",6586],["import org.eclipse.emf.edit.provider.ITreeItemContentProvider;",6589],["import org.eclipse.emf.edit.provider.IItemPropertySource;",6667],["import org.eclipse.emf.edit.provider.IItemLabelProvider;",6749],["this.provider = provider;",7393],["this.provider = provider;",7393],["import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;",7730],["return provider;",7869],["import android.provider.Settings;",9334]],"useCount":593263},{"word":"psi","context":[["import com.intellij.psi.PsiElement;",33809],["import com.intellij.psi.util.PsiUtil;",4629],["import com.intellij.psi.*;",22113],["import com.intellij.psi.util.PsiTreeUtil;",16156],["import com.intellij.psi.PsiFile;",15702],["import com.intellij.psi.tree.IElementType;",8313],["import com.intellij.psi.search.GlobalSearchScope;",7751],["import com.intellij.psi.PsiElementVisitor;",5707],["import com.intellij.psi.PsiClass;",5630],["import com.intellij.psi.PsiDocumentManager;",4043]],"useCount":389488},{"word":"public","context":[["public String toString()",152120],["public String toString() {",851120],["public void run() {",806195],["public int hashCode() {",375581],["public String getName() {",368813],["public static void main(String[] args) {",291153],["public void onClick(View v) {",215214],["public void actionPerformed(ActionEvent e) {",187882],["public void setName(String name) {",119986],["public boolean equals(Object obj) {",181284]],"useCount":63437224},{"word":"put","context":[["_table_.put(_value_,this);",8845],["put(\"A\", \"B\");",7990],["domMap.put(key, domainObject);",7273],["domMap.put(valueObject, domainObject);",7273],["map.put(key, value);",6178],["* @param product Product to put",5514],["region.put(put);",4202],["region.put(put);",4202],["// Java from RobotBuilder. Do not put any code or make any change in",4004],["byName.put(field.getFieldName(), field);",15139]],"useCount":2697700},{"word":"q","context":[["count = (Long)q.uniqueResult();",1849],["return q.list();",4246],["return q.getResultList();",3283],["Query q;",2830],["Query q = new Query();",2677],["* @param q",2051],["if (q != null) {",1992],["QueryPos qPos = QueryPos.getInstance(q);",5162],["return q;",7589],["Query q = session.createQuery(sql);",5249]],"useCount":425432},{"word":"qName","context":[["cachedSerFactories.add(new org.apache.axis.encoding.ser.ArraySerializerFactory(qName, qName2));",2130],["cachedSerQNames.add(qName);",189676],["public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)",5842],["_call.registerTypeMapping(cls, qName, sf, df, false);",4651],["javax.xml.namespace.QName qName;",3659],["public void endElement(String uri, String localName, String qName) throws SAXException {",2604],["javax.xml.namespace.QName qName =",2318],["public void startElement(String uri, String localName, String qName,",1826],["public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {",1696],["public void endElement(String uri, String localName, String qName)",1504]],"useCount":382552},{"word":"query","context":[["query.close();",45342],["Query parsedQuery = queryParser.parse(query).query();",7217],["this.query = query;",10209],["this.query = query;",10209],["* @param query",11204],["* @param dynamicQuery the dynamic query",12996],["return query;",20764],["final XQuery query = new XQuery(",44024],["result = new QT3Result(query.value());",44024],["Query parsedQuery = queryParser.parse(query).query();",7217]],"useCount":2039273},{"word":"queue","context":[["this.queue = queue;",4475],["MessageProducer producer = session.createProducer(queue);",1468],["MessageConsumer consumer = session.createConsumer(queue);",1544],["synchronized (queue) {",1731],["out.println(\"</queue>\");",2190],["if (queue == null) {",2303],["queue.clear();",2838],["while (!queue.isEmpty()) {",3439],["return queue;",3979],["this.queue = queue;",4475]],"useCount":384963},{"word":"r","context":[["if (r == null) {",6998],["return r;",65804],["out.write(\"\\r\\n\");",31644],["case '\\r':",12845],["Random r = new Random();",11091],["r.close();",10183],["if (r != null) {",9671],["\"MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\\r\\n\" +",8760],["* @param r",7784],["boolean r;",7057]],"useCount":1655875},{"word":"random","context":[["if (random().nextBoolean()) {",2554],["private final Random random = new Random();",2563],["private Random random;",2663],["private Random random = new Random();",2742],["this.random = random;",3361],["this.random = random;",3361],["if (random.nextBoolean()) {",4949],["* This test add a random number (1..10) of wanting output objets",7363],["howmany = (int)(Math.random()*10);",7512],["Random random = new Random();",15601]],"useCount":400866},{"word":"range","context":[["* Performs a dynamic query on the database and returns a range of the matching rows.",2772],["* @return the range of matching rows",2772],["throw new com.jmex.xml.xml.XmlException(\"Out of range\");",2876],["this.range = range;",3294],["this.range = range;",3294],["if (true) { // don't check resource type if the property range is Resource",4417],["return range;",4554],["* Value range (decimal notation) :<br>",5216],["* @param start the lower bound of the range of model instances",5512],["* @param end the upper bound of the range of model instances (not inclusive)",5512]],"useCount":537472},{"word":"re","context":[["+ \"even though we're Cloneable!\", e);",7484],["} catch (RuntimeException re) {",14178],["// We're done, just return.",17189],["throw re;",17768],["_errHandler.recover(this, re);",24404],["_errHandler.reportError(this, re);",24404],["_localctx.exception = re;",24409],["reportError(re);",50831],["recover(input,re);",60403],["catch (RecognitionException re) {",85719]],"useCount":659714},{"word":"read","context":[["return read;",4384],["*                 <span class=\"constraint ReadOnly\">This field is read",4935],["int read = 0;",5584],["int read;",7227],["schemes.get(iprot.getScheme()).getScheme().read(iprot, this);",11239],["public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {",12146],["read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));",12418],["public int read() throws IOException {",13757],["read();",17284],["public int read(byte[] b, int off, int len) throws IOException {",4038]],"useCount":1161186},{"word":"reader","context":[["reader.close();",63772],["while (!reader.isStartElement() && !reader.isEndElement()) reader.next();",8850],["reader.next();",34616],["while ((line = reader.readLine()) != null) {",20550],["while (!reader.isStartElement() && !reader.isEndElement())",12986],["while (!reader.isStartElement() && !reader.isEndElement())",12986],["BufferedReader reader = null;",10487],["if (reader != null) {",10303],["line = reader.readLine();",9711],["* @param reader",9520]],"useCount":988267},{"word":"record","context":[["* Date this record was created",3023],["return record;",8707],["// If this is not a recordedInError record, and the domainObject",7273],["// If this is a recordedInError record, and the domainObject",7273],["* The record is active in the system",6032],["import com.orientechnologies.orient.core.record.impl.ODocument;",5605],["* Optional short description of the record",3566],["* @param record",3258],["import com.orientechnologies.orient.core.db.record.OIdentifiable;",3117],["* Date this record was updated",3027]],"useCount":441752},{"word":"ref","context":[["(com.google.protobuf.ByteString) ref;",17580],["return ref;",8026],["import java.lang.ref.WeakReference;",25684],["return (com.google.protobuf.ByteString) ref;",22358],["return (java.lang.String) ref;",19700],["if (ref instanceof java.lang.String) {",19694],["(java.lang.String) ref);",19435],["import java.lang.ref.SoftReference;",6930],["if (ref instanceof String) {",15216],["if (!(ref instanceof java.lang.String)) {",9847]],"useCount":553588},{"word":"reference","context":[["this.reference = reference;",3817],["this.reference = reference;",3817],["* @param addr low level Feature Structure reference",4179],["return reference;",5635],["* @return A reference to this updated object so that method calls can be chained",33793],["* Returns a reference to this object so that method calls can be chained together.",33913],["* @return Returns a reference to this object so that method calls can be",49924],["* This accessor method returns a reference to the live list,",84346],["/** <p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",117936],["<p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",252522]],"useCount":1132869},{"word":"reflect","context":[["import java.lang.reflect.Method;",126565],["import java.lang.reflect.Field;",72663],["import java.lang.reflect.InvocationTargetException;",69054],["import java.lang.reflect.Type;",39754],["import java.lang.reflect.Constructor;",36549],["import java.lang.reflect.Modifier;",27328],["import java.lang.reflect.Array;",20854],["import java.lang.reflect.*;",11623],["import java.lang.reflect.ParameterizedType;",11618],["import com.google.gson.reflect.TypeToken;",10667]],"useCount":579984},{"word":"regex","context":[["import java.util.regex.Pattern;",148259],["Pattern pattern = Pattern.compile(regex);",1428],["import java.util.regex.Matcher;",90188],["import java.util.regex.*;",6574],["import java.util.regex.PatternSyntaxException;",5312],["* Test regex syntax.",1976],["* @param regex",1898],["this.regex = regex;",1505],["this.regex = regex;",1505],["import org.elasticsearch.common.regex.Regex;",1471]],"useCount":328128},{"word":"region","context":[["this.region = region;",4670],["return region;",5230],["this.region = region;",4670],["region.put(put);",4202],["* @param region",3446],["this.region = null;",2795],["region.flushcache();",2389],["HRegion.closeHRegion(this.region);",1971],["if (region != null) {",1935],["if (region == null) {",1819]],"useCount":422706},{"word":"remove","context":[["public void remove() {",49902],["it.remove();",35164],["iterator.remove();",30251],["iter.remove();",23032],["remove(index);",15693],["i.remove();",14315],["public void remove(int index)",12546],["this.col.remove(index);",11626],["public boolean remove(Object o) {",8116],["public void remove()",7746]],"useCount":1215019},{"word":"repository","context":[["import org.pentaho.di.repository.ObjectId;",3971],["import org.alfresco.service.cmr.repository.NodeRef;",6795],["import org.springframework.data.jpa.repository.Query;",4117],["import org.springframework.data.repository.CrudRepository;",4876],["import org.pentaho.di.repository.Repository;",5116],["return repository;",5172],["this.repository = repository;",6293],["this.repository = repository;",6293],["import org.springframework.data.jpa.repository.JpaRepository;",8618],["* @param repository",7374]],"useCount":440958},{"word":"req","context":[["this.req = req;",1892],["this.req = req;",1892],["protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {",1794],["ConnectionsManager.getInstance().performRpc(req, new RPCRequest.RPCRequestDelegate() {",1682],["protected Command getDestroyElementCommand(DestroyElementRequest req) {",1604],["protected void doPost(HttpServletRequest req, HttpServletResponse resp)",1950],["protected void doGet(HttpServletRequest req, HttpServletResponse resp)",3062],["protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {",3213],["return req;",5043],["* @param req",7608]],"useCount":444766},{"word":"request","context":[["this.request = request;",14845],["this.request = request;",14845],["return request;",30693],["public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",32240],["public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",32278],["doPost(request, response);",33124],["*             attempting to make the request or handle the response.  For example",35090],["*             either a problem with the data in the request, or a server side issue.",35135],["* @param request",56525],["request.setAWSRequestMetrics(awsRequestMetrics);",13734]],"useCount":2975353},{"word":"required","context":[["\"required: string\");",5988],["// check for required fields",15602],["@XmlElement(required = true)",43698],["// check for required fields of primitive type, which can't be checked in the validate method",12733],["\"required: number\");",8489],["* @required",6067],["@XmlAttribute(required = true)",5695],["@Autowired(required = false)",4662],["*                 <span class=\"constraint Required\">This field is required",4596],["* of this program must display Appropriate Legal Notices, as required under",4215]],"useCount":817598},{"word":"res","context":[["return res;",133111],["by AppBaseTheme from res/values-vXX/styles.xml on newer devices.",5064],["res/values-vXX/styles.xml, while customizations related to",5505],["if (res != null) {",5864],["import android.content.res.AssetManager;",6635],["PyObject res=impl.__get__(this,self_type).__call__(other);",7673],["if (res==Py.NotImplemented)",7800],["import android.content.res.Configuration;",21328],["import android.content.res.TypedArray;",26651],["import android.content.res.Resources;",38792]],"useCount":959615},{"word":"reset","context":[["public void reset(){",3411],["reset();",42714],["public static void reset() {",3253],["out.reset();",3455],["listener.reset();",4089],["public void reset() throws IOException {",4276],["private void reset() {",4298],["super.reset();",8881],["public void reset()",9995],["public void reset() {",53144]],"useCount":504659},{"word":"resource","context":[["/** <p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",117936],["import org.eclipse.jface.resource.ImageDescriptor;",6970],["this.resource = resource;",8107],["this.resource = resource;",8107],["@SuppressWarnings(\"resource\")",10009],["* @param resource",11117],["return resource;",12917],["* aapt tool from the resource data it found.  It",16709],["/** Message constant for key in the resource bundle. */",22405],["<p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",252522]],"useCount":1412482},{"word":"resources","context":[["import com.google.gwt.resources.client.ImageResource;",3932],["this.resources = resources;",4059],["this.resources = resources;",4059],["import net.minecraft.client.resources.I18n;",4127],["return resources;",7277],["import org.eclipse.core.resources.ResourcesPlugin;",9040],["import org.eclipse.core.resources.IResource;",12236],["import org.eclipse.core.resources.IFile;",13144],["import org.eclipse.core.resources.IProject;",14876],["import org.eclipse.core.resources.IFolder;",3826]],"useCount":508026},{"word":"response","context":[["public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",32240],["* @param response servlet response",12982],["* @param response servlet response",12982],["response.setContentType(\"text/html\");",15497],["* @return A Java Future object containing the response from the",21364],["* @param response",30854],["public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",32278],["doPost(request, response);",33124],["*             attempting to make the request or handle the response.  For example",35090],["return response;",75241]],"useCount":2628134},{"word":"restriction","context":[["*                         &lt;/restriction>",11028],["*   &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}string\">",14114],["*   &lt;/restriction>",17940],["*               &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",19435],["*               &lt;/restriction>",19656],["*     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",105617],["*     &lt;/restriction>",107135],["*                         &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",10936],["*       &lt;/restriction>",9972],["*       &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",9972]],"useCount":443577},{"word":"result","context":[["assertNotNull(result);",27364],["result = true;",30473],["boolean result = false;",35442],["if (result != null) {",37911],["result = new QT3Result(query.value());",44024],["result = new QT3Result(trw);",44024],["if (result == null) {",52889],["return result.toString();",54953],["int result = 1;",66791],["return result;",1214936]],"useCount":6981739},{"word":"results","context":[["results.clear();",3225],["return results;",55714],["results.add(result);",3723],["assertEquals(1, results.size());",4104],["results.size() );",4616],["this.results = results;",5804],["this.results = results;",5804],["assertNotNull(results);",6113],["results.close();",6851],["* @param orderByComparator the comparator to order the results by (optionally <code>null</code>)",9729]],"useCount":787358},{"word":"ret","context":[["return ret;",213079],["ret = false;",4826],["if (ret == null) {",5440],["if (ret == null)",5756],["String ret = \"\";",6191],["return ret.toString();",6389],["ret = true;",6759],["int ret = 0;",6826],["boolean ret = false;",8063],["fillFieldsfromXML(el, factory, ret, domMap);",3793]],"useCount":672038},{"word":"return","context":[["return null;",3960180],["return true;",3626568],["return;",3621574],["return this;",1982229],["* @return",1857834],["return result;",1214936],["return 0;",678455],["return -1;",376983],["return value;",342804],["return false;",4886646]],"useCount":68848062},{"word":"returned","context":[["* returned.",9296],["* returned list will be present inside the JAXB object.",84324],["*             If an error response is returned by AmazonIdentityManagement indicating",2914],["*                 The value returned if the actual value is not exposed by the requested API version.",3155],["* the map returned by this method is live, and you can add new attribute",3333],["*             If an error response is returned by AmazonRDS indicating",3574],["* is returned.",3851],["*         operation returned by the service.",6471],["* It test the number of wanted objet returned by the methods, and if any object really exist in the original list.",7363],["*             If an error response is returned by AmazonEC2 indicating",9141]],"useCount":774350},{"word":"returns","context":[["* This accessor method returns a reference to the live list,",84346],["* Performs a dynamic query on the database and returns an ordered range of the matching rows.",2772],["/** returns whether this module is requesting to appear as a primary choice */",3571],["/** returns an explanation of what the module does.*/",5092],["// Called once after isFinished returns true",6328],["* This returns the property descriptors for the adapted class.",7333],["* This returns the label text for the adapted class.",7425],["* <p>The default implementation returns the result of calling",10702],["* This implementation returns null;",28167],["* This default implementation returns null so that we can easily ignore cases;",26089]],"useCount":743216},{"word":"retval","context":[["return retval.toString();",6517],["return retval;",57042],["if (state.backtracking>0) {state.failed=true; return retval;}",6896],["adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);",7877],["adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);",7877],["adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);",7877],["retval.stop = input.LT(-1);",9200],["retval.tree = root_0;",10631],["retval.start = input.LT(1);",12478],["if (state.failed) return retval;",20274]],"useCount":342078},{"word":"right","context":[["this.right = right;",6956],["this.right = right;",6956],["<tr><td><code>right</code></td><td>0x05</td><td></td></tr>",1540],["super(left, right);",1574],["// Bail out if this isn't the right error code that this",1844],["if (right != null) {",2191],["super.onLayout(changed, left, top, right, bottom);",3743],["protected void onLayout(boolean changed, int left, int top, int right, int bottom) {",4199],["* @param right",5321],["return right;",5939]],"useCount":689235},{"word":"root","context":[["* @param root",6044],["return root;",25148],["this.root = root;",8049],["this.root = root;",8049],["if (root == null) {",7820],["if (root != null) {",4961],["root.commit();",4423],["public void process(Node externs, Node root) {",3869],["descriptor = root;",3629],["com.google.protobuf.Descriptors.FileDescriptor root) {",3601]],"useCount":731002},{"word":"row","context":[["* @param row",9681],["super.row.setTooltip(1, value);",3928],["super.row.setTooltip(0, value);",4428],["int row = 0;",4978],["this.row = row;",5105],["this.row = row;",5105],["import org.pentaho.di.core.row.ValueMetaInterface;",5662],["import org.pentaho.di.core.row.RowMetaInterface;",7302],["return row;",14825],["row++;",12101]],"useCount":1278228},{"word":"rows","context":[["return rows;",9035],["for (int i = 0; i < rows; i++) {",3192],["* @param rows",3339],["\"rows\",",3348],["rows.add(row);",3508],["this.rows = rows;",4500],["this.rows = rows;",4500],["* Returns the number of rows that match the dynamic query.",4584],["* @return the number of rows that match the dynamic query",4600],["for (int r = 0; r < rows; r++) {",5482]],"useCount":421480},{"word":"rs","context":[["assertTrue(rs.next());",29284],["rs.close();",57047],["import javax.ws.rs.Produces;",32651],["import javax.ws.rs.GET;",33046],["import javax.ws.rs.Path;",38740],["import javax.ws.rs.PathParam;",20441],["ResultSet rs = null;",39082],["import javax.ws.rs.core.MediaType;",42437],["import javax.ws.rs.core.Response;",45379],["while (rs.next()) {",46836]],"useCount":1373724},{"word":"rule","context":[["e1.add(rule);",2618],["this.rule = rule;",2668],["this.rule = rule;",2668],["@Override public ParserRule getRule() { return rule; }",3039],["return rule;",4145],["public ParserRule getRule() { return rule; }",4498],["* Access rule :<br>",5216],["private final Group cGroup = (Group)rule.eContents().get(1);",5286],["// rule labels: retval",5958],["// rule list labels:",6519]],"useCount":447550},{"word":"rules","context":[["import com.facebook.buck.rules.BuildRuleParams;",3836],["import com.facebook.buck.rules.BuildRuleResolver;",4088],["import com.facebook.buck.rules.SourcePath;",4609],["import com.facebook.buck.rules.BuildRule;",4667],["import com.facebook.buck.rules.SourcePathResolver;",5231],["import org.junit.rules.TestRule;",5649],["return rules;",5729],["// checkstyle: Checks Java source code for adherence to a set of rules.",7387],["import org.junit.rules.TemporaryFolder;",10965],["import org.junit.rules.ExpectedException;",18618]],"useCount":349959},{"word":"run","context":[["public void run() {",806195],["public void run()",81327],["//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #",39871],["public void run(){",17987],["@Override public void run() {",14438],["runnable.run();",12263],["public Object run() {",9844],["public void run() throws Exception {",9644],["run();",6803],["task.run();",6589]],"useCount":1719246},{"word":"runtime","context":[["import org.eclipse.core.runtime.NullProgressMonitor;",5995],["import org.eclipse.core.runtime.Platform;",6140],["import org.eclipse.core.runtime.IAdaptable;",7016],["import org.eclipse.core.runtime.Path;",7384],["import org.eclipse.gmf.runtime.notation.View;",7773],["import org.eclipse.core.runtime.IPath;",8870],["import org.eclipse.core.runtime.Status;",9729],["import org.eclipse.core.runtime.IStatus;",12788],["import org.eclipse.core.runtime.IProgressMonitor;",19957],["import org.eclipse.core.runtime.CoreException;",21986]],"useCount":834133},{"word":"s","context":[["* Objects of the following type(s) are allowed in the list",85689],["super(s);",20299],["attribute's value can be found in the {@link #Toolbar} array.",21741],["Mesquite's web site is http://mesquiteproject.org",22514],["attribute's value can be found in the {@link #ActionBar} array.",22588],["* @param s",23514],["* it's useful to ignore a case when inheritance will catch all the cases anyway.",26089],["s.close();",30768],["attribute's value can be found in the {@link #Theme} array.",68134],["return s;",109788]],"useCount":5120542},{"word":"same","context":[["// Called when another command which requires one or more of the same",6339],["* the same version of Swing.  As of 1.4, support for long term storage",3042],["import static org.mockito.Matchers.same;",792],["versions instead (which are exactly the same).",837],["* The output will be the same irrespective of the machine that the code is running on.",979],["* Two objects that are equal are required to return the same hashCode.",1030],["* <p>This method returns a new array with the same elements of the input",1434],["// called for.  If the criteria is the same as the last",1543],["// Two ways to do the same thing. Don't know which way I like best.",2209],["* type of the returned array is always the same as that of the input",1254]],"useCount":569352},{"word":"save","context":[["canvas.save();",10772],["save();",15306],["session.save();",8288],["public void save() {",7475],["config.save();",4201],["superuser.save();",2305],["userRepository.save(user);",1920],["doc.save();",1615],["this.save();",1472],["public String save() {",1454]],"useCount":377101},{"word":"savedInstanceState","context":[["if (savedInstanceState != null) {",11191],["if (savedInstanceState == null) {",11442],["super.onViewCreated(view, savedInstanceState);",11892],["public void onActivityCreated(Bundle savedInstanceState) {",15432],["super.onActivityCreated(savedInstanceState);",19914],["public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {",26617],["Bundle savedInstanceState) {",37542],["public void onCreate(Bundle savedInstanceState) {",83187],["protected void onCreate(Bundle savedInstanceState) {",174571],["super.onCreate(savedInstanceState);",288856]],"useCount":841453},{"word":"sb","context":[["final StringBuilder sb = new StringBuilder();",21237],["if (!first) sb.append(\", \");",23089],["sb.append(\"{\");",23984],["sb.append(\")\");",26599],["sb.append(\"\\n\");",27757],["sb.append(\"null\");",30392],["StringBuffer sb = new StringBuffer();",70651],["StringBuilder sb = new StringBuilder();",204542],["return sb.toString();",279523],["sb.append(\"}\");",32239]],"useCount":2296114},{"word":"scene","context":[["import javafx.scene.layout.HBox;",5048],["import javafx.scene.Scene;",13033],["import javafx.scene.Node;",10305],["import javafx.scene.control.Label;",9800],["import javafx.scene.control.Button;",9666],["import javafx.scene.paint.Color;",8944],["import javafx.scene.control.TextField;",6676],["import javafx.scene.image.Image;",6425],["import javafx.scene.layout.VBox;",6055],["import javafx.scene.Parent;",5419]],"useCount":323536},{"word":"schema","context":[["* <p>The following schema fragment specifies the expected content contained within this class.",169528],["* @param schema",3529],["* and classes representing the binding of schema",4050],["* content can consist of schema derived interfaces",4050],["* against an XML schema provided by Kaltura.",5245],["this.schema = schema;",5669],["this.schema = schema;",5669],["return schema;",7641],["* object is an invalid instance according to the schema",10468],["// Any modifications to this file will be lost upon recompilation of the source schema.",64071]],"useCount":729695},{"word":"scope","context":[["{ //-- local scope",12512],["return scope;",7199],["this.scope = scope;",6752],["this.scope = scope;",6752],["* @param scope",3510],["scope.close();",2995],["if (scope != null) {",2122],["*         <th scope=\"col\">PQL Property</th> <th scope=\"col\">Object Property</th>",1836],["*         <th scope=\"col\">PQL Property</th> <th scope=\"col\">Object Property</th>",1836],["private String scope;",1752]],"useCount":352425},{"word":"search","context":[["import org.apache.lucene.search.TopDocs;",3162],["Minimum width of the search view text entry area.",3538],["import org.apache.lucene.search.BooleanQuery;",3582],["import org.elasticsearch.search.internal.SearchContext;",3826],["import org.apache.lucene.search.TermQuery;",4054],["import org.apache.lucene.search.IndexSearcher;",6612],["import org.elasticsearch.action.search.SearchResponse;",7076],["import com.intellij.psi.search.GlobalSearchScope;",7751],["import org.apache.lucene.search.Query;",12493],["import org.apache.lucene.search.Filter;",3132]],"useCount":732835},{"word":"second","context":[["this.second = second;",4495],["/**  Specifies a background drawable for a second stacked row of the action bar.",1363],["* @param columnIndex the first column is <code>1</code>, the second",1440],["*            the first column is 1, the second is 2, ...",1673],["* @param second",2314],["* @param parameterIndex the first parameter is 1, the second is 2, ...",2572],["return second;",3971],["* @param columnIndex the first column is 1, the second is 2, ...",4013],["this.second = second;",4495],["* @param before2 The second function to apply before this function is applied",4544]],"useCount":340385},{"word":"security","context":[["import java.security.NoSuchAlgorithmException;",46034],["import java.security.MessageDigest;",29866],["import java.security.SecureRandom;",21491],["import java.security.cert.X509Certificate;",19254],["import java.security.AccessController;",15785],["import java.security.PrivilegedAction;",12730],["import java.security.PublicKey;",11667],["import java.security.InvalidKeyException;",11625],["import java.security.Principal;",15554],["import java.security.cert.CertificateException;",11141]],"useCount":1210434},{"word":"see","context":[["* For further information about OpenCms, please see the",9501],["* @see #getName()",9597],["* @see java.lang.Object#hashCode()",13608],["* @see java.lang.Object#equals(java.lang.Object)",14304],["* 02110-1301 USA, or see the FSF site: http://www.fsf.org.",23819],["* along with OpenNMS(R).  If not, see:",27188],["* @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)",27933],["* Benchmark Project. For details, please see",31139],["* @see java.lang.Object#toString()",44272],["* @see",67947]],"useCount":3248576},{"word":"select","context":[["import org.jsoup.select.Elements;",6387],["yyError  = yyResult.select(yyError);",7010],["\"select\", //$NON-NLS-1$",2829],["this.select = select;",1732],["this.select = select;",1732],["return select;",1615],["\"select\\n\"",1502],["select();",1303],["\"select \"",1205],["* Sets the select clause for the request",1183]],"useCount":412079},{"word":"send","context":[["mob.location().send(mob,msg);",6223],["producer.send(message);",5786],["* To contact the author please send an email to: support@sql-workbench.net",1951],["Transport.send(message);",1533],["socket.send(packet);",1356],["producer.send(msg);",1217],["send();",1159],["public void send() {",1126],[".send();",1111],["Transport.send(msg);",1036]],"useCount":334581},{"word":"sequence","context":[["*       &lt;sequence>",117413],["*       &lt;/sequence>",121418],["*                 &lt;/sequence>",17425],["*                 &lt;sequence>",16482],["*         &lt;/sequence>",10772],["*         &lt;sequence>",10425],["*                           &lt;/sequence>",10271],["*                           &lt;sequence>",10086],["*                                     &lt;/sequence>",7436],["*                                     &lt;sequence>",7381]],"useCount":634355},{"word":"serialVersionUID","context":[["private static final long serialVersionUID = 510l;",2775],["private static final long serialVersionUID = 2L;",3143],["static final long serialVersionUID = 1L;",3286],["private static final long serialVersionUID = -1L;",3599],["static final long serialVersionUID = 20050617;",4211],["/** The Constant serialVersionUID. */",4442],["private static final long serialVersionUID = 1;",6449],["private static final long serialVersionUID = 0;",9469],["private static final long serialVersionUID = 0L;",31068],["private static final long serialVersionUID = 1L;",566114]],"useCount":769210},{"word":"server","context":[["*             either a problem with the data in the request, or a server side issue.",35135],["server.stop();",13593],["server.start();",23563],["this.server = server;",10528],["this.server = server;",10528],["return server;",9257],["server.enqueue(new MockResponse()",7666],["import org.eclipse.jetty.server.Server;",7656],["import net.minecraft.server.MinecraftServer;",6980],["package net.minecraft.server;",6383]],"useCount":1973943},{"word":"service","context":[["* @param service",5956],["if (service != null) {",4549],["import org.alfresco.service.namespace.QName;",5181],["*         operation returned by the service.",6471],["*         service.",6523],["import org.alfresco.service.cmr.repository.NodeRef;",6795],["this.service = service;",10335],["return service;",11328],["this.service = service;",10335],["if (service == null) {",6667]],"useCount":1835735},{"word":"services","context":[["package com.amazonaws.services.ec2.model.transform;",2985],["this.services = services;",1757],["this.services = services;",1757],["*        authenticate requests with AWS services.",2047],["* This file is part of mycollab-services.",2696],["* program services by normal system calls through the application",3001],["package com.amazonaws.services.ec2.model;",3023],["import com.amazonaws.services.ec2.model.*;",3225],["return services;",3375],["// IS\", without any accompanying services from The Regents. The Regents",5542]],"useCount":533003},{"word":"servlet","context":[["import javax.servlet.ServletResponse;",15118],["import javax.servlet.ServletRequest;",17392],["import org.springframework.web.servlet.ModelAndView;",22777],["import javax.servlet.ServletContext;",26668],["import javax.servlet.annotation.WebServlet;",44296],["import javax.servlet.http.HttpServlet;",72722],["import javax.servlet.ServletException;",116530],["import javax.servlet.http.HttpServletResponse;",180588],["import javax.servlet.http.HttpServletRequest;",226484],["import javax.servlet.http.HttpSession;",31266]],"useCount":1355044},{"word":"session","context":[["Session session = null;",21439],["session.close();",37908],["return session;",14687],["this.session = session;",14440],["this.session = session;",14440],["if (session != null) {",12695],["* @param session",12643],["session.commit();",11781],["session = openSession();",11042],["closeSession(session);",10383]],"useCount":1290178},{"word":"set","context":[["// checkstyle: Checks Java source code for adherence to a set of rules.",7387],["* @param value the value to set.",8407],["optionals.set(0);",8603],["this.col.set(index, value);",11626],["/** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */",13392],["* Create the ValueObject collection to hold the set of DomainObjects.",14546],["/** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */",14769],["* @param orderByComparator the comparator to order the set by (optionally <code>null</code>)",18628],["return set;",25324],["domainObjectList.set(domIdx, tmp);",7273]],"useCount":3156920},{"word":"setId","context":[["this.setId(id);",2027],["public void setId(String id)",2270],["setId(id);",3820],["public void setId(Integer value)",7297],["public void setId(String value) {",8890],["public void setId(long id) {",13486],["public void setId(Integer id) {",20647],["public void setId(int id) {",30762],["public void setId(Long id) {",31923],["public void setId(String id) {",38075]],"useCount":318511},{"word":"setName","context":[["public void setName(final String name) {",4977],["void setName(String name);",2640],["setName((String)newValue);",2733],["void setName(String value);",2770],["* @see #setName(String)",2776],["setName(NAME_EDEFAULT);",3097],["public void setName(String name)",9366],["setName(name);",9879],["public void setName(String value) {",10728],["public void setName(String name) {",119986]],"useCount":435792},{"word":"setText","context":[["public void setText(String text) {",12995],["setText(text);",3985],["_token.setText(new String(text.getBuffer(), _begin, text.length()-_begin));",3928],["setText(\"\");",2523],["setText(null);",2048],["textView.setText(text);",1653],["public void setText(String text)",1600],["cancelButton.setText(\"Cancel\");",1482],["titleText.setText(selectedCity.getCityName());",1381],["titleText.setText(selectedProvince.getProvinceName());",1376]],"useCount":456669},{"word":"setUp","context":[["setUp();",4595],["public void setUp() throws IOException {",4619],["workspace.setUp();",6095],["public void setUp() throws Exception",9532],["protected void setUp() {",7037],["public void setUp()",13883],["protected void setUp() throws Exception {",54696],["public void setUp() {",79293],["super.setUp();",83998],["public void setUp() throws Exception {",117044]],"useCount":454196},{"word":"setValue","context":[["super.row.setValue(value);",3568],["public void setValue(String value)",3001],["setValue(value);",5412],["public V setValue(V value) {",1875],["public void setValue(String value) {",22452],["public void setValue( java.lang.Object object, java.lang.Object value)",12451],["super.control.setValue(value);",7371],["public void setValue(Object value) {",5766],["super.grid.setValue(value);",3568],["public void setValue(int value) {",3041]],"useCount":408134},{"word":"setVisible","context":[["frame.setVisible(true);",25423],["setVisible(false);",21936],["setVisible(true);",21183],["dialog.setVisible(true);",13955],["this.setVisible(true);",8423],["this.setVisible(false);",8107],["public void setVisible(boolean visible) {",5102],["f.setVisible(true);",4725],["window.setVisible(true);",2739],["dlg.setVisible(true);",2645]],"useCount":322130},{"word":"settings","context":[["import org.elasticsearch.common.settings.Settings;",33961],["* @param settings",2456],["import static org.elasticsearch.common.settings.Settings.settingsBuilder;",2498],["private final Settings settings;",2758],["SharedPreferences.Editor editor = settings.edit();",3433],["import org.elasticsearch.common.settings.ImmutableSettings;",5495],["return settings;",6959],["super(settings);",7440],["this.settings = settings;",7965],["this.settings = settings;",7965]],"useCount":576168},{"word":"sf","context":[["java.lang.Class sf = (java.lang.Class)",2303],["org.apache.axis.encoding.SerializerFactory sf = (org.apache.axis.encoding.SerializerFactory)",2304],["import net.sf.json.JSONObject;",10229],["_call.registerTypeMapping(cls, qName, sf, df, false);",4651],["import net.sf.jasperreports.engine.JRException;",4346],["import net.sf.json.JSONArray;",4128],["import net.sf.jabref.logic.l10n.Localization;",2288],["import net.sf.jasperreports.engine.JRConstants;",2646],["import net.sf.jabref.model.entry.BibEntry;",2718],["import net.sf.l2j.gameserver.model.actor.instance.L2PcInstance;",3883]],"useCount":463665},{"word":"shared","context":[["* Returns the shared instance",2991],["import com.google.gwt.event.shared.GwtEvent;",4305],["import com.google.gwt.event.shared.EventHandler;",4480],["import com.google.gwt.event.logical.shared.ValueChangeEvent;",3973],["import com.google.gwt.event.logical.shared.ValueChangeHandler;",3824],["import com.google.web.bindery.event.shared.EventBus;",3790],["* @return the shared instance",3337],["// The shared instance",3029],["import com.google.gwt.event.shared.EventBus;",5302],["import com.google.gwt.event.shared.HandlerRegistration;",5760]],"useCount":383630},{"word":"short","context":[["@return Optional short description of the record",2209],["Optional short description of the record",2209],["@Test(groups = \"short\")",2411],["* appropriate for short term storage or RMI between applications running",3051],["* Optional short description of the record",3566],["* Returns a short description of the servlet.",4488],["_Fields(short thriftId, String fieldName) {",15132],["public short getThriftFieldId() {",15141],["private final short _thriftId;",15230],["public short getType() {",1898]],"useCount":612774},{"word":"should","context":[["* should not be modified by hand.",16709],["* FLOSS exception.  You should have recieved a copy of the text describing",3262],["// This should not have happened",17191],["* there really should be more of a description here...",62720],["//Remove all ones in domList where index > voCollection.size() as these should",11973],["* FLOSS exception.  You should have received a copy of the text describing",8696],["* authors.  These should be listed in @author doc comments.",4376],["Any questions should be directed to the author via email at: products@puttysoftware.com",4142],["fail(\"should throw IllegalArgumentException\");",3749],["// should never happen",3409]],"useCount":1606358},{"word":"show","context":[["}).show();",7137],["alert.show();",8444],["builder.show();",8650],["toast.show();",12012],["public void show() {",13624],["Toast.LENGTH_LONG).show();",14658],["Toast.LENGTH_SHORT).show();",20889],[".show();",32054],["dialog.show();",23236],["progressDialog.show();",6429]],"useCount":525806},{"word":"since","context":[["* @since 1.3",28360],["* @since 1.1",20349],["* @since 3.0",29667],["* @since 1.0.0",31417],["* @since 1.6",32767],["* @since 1.5",34701],["* @since 1.2",38012],["* @since 1.4",45225],["* @since 2.0",46335],["* @since 1.0",80196]],"useCount":1488886},{"word":"size","context":[["Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),",151497],["this.size = size;",26004],["public int size()",24416],["for(int i=0; i<size; i++)",22512],["this.size = size;",26004],["size = 0;",30297],["for (int i = 0; i < size; i++) {",46512],["size += com.google.protobuf.CodedOutputStream",58563],["return size;",74633],["public int size() {",76638]],"useCount":5317461},{"word":"sleep","context":[["Thread.sleep(500);",22332],["Thread.sleep(100);",38426],["Thread.sleep(2000);",17746],["Thread.sleep(1000);",55142],["Thread.sleep(3000);",8909],["Thread.sleep(5000);",13741],["Thread.sleep(10);",13328],["Thread.sleep(50);",9727],["Thread.sleep(200);",9104],["Thread.sleep(1);",7341]],"useCount":434311},{"word":"slf4j","context":[["package org.slf4j.impl;",751],["import org.slf4j.Logger;",456484],["import org.slf4j.LoggerFactory;",442983],["import lombok.extern.slf4j.Slf4j;",15834],["import static org.slf4j.LoggerFactory.getLogger;",5457],["import org.slf4j.MDC;",1586],["import org.slf4j.*;",1525],["import org.slf4j.Marker;",1334],["import org.slf4j.Logger ;",737],["import org.slf4j.ILoggerFactory;",693]],"useCount":949205},{"word":"so","context":[["* This default implementation returns null so that we can easily ignore cases;",26089],["obligated to do so.  If you do not wish to do so, delete this",20629],["obligated to do so.  If you do not wish to do so, delete this",20629],["furnished to do so, subject to the following conditions:",18665],["* furnished to do so, subject to the following conditions:",149001],["* @return Returns a reference to this object so that method calls can be",49924],["* Returns a reference to this object so that method calls can be chained together.",33913],["classification, clustering, pattern mining and so on.",9988],["* @return A reference to this updated object so that method calls can be chained",33793],["// automatically handle clicks on the Home/Up button, so long",26831]],"useCount":1225634},{"word":"socket","context":[["this.socket = socket;",5568],["Socket socket = null;",2759],["import io.netty.channel.socket.nio.NioServerSocketChannel;",2422],["socket = null;",3186],["import io.netty.channel.socket.SocketChannel;",3667],["return socket;",4406],["if (socket != null) {",4470],["private Socket socket;",4619],["this.socket = socket;",5568],["socket.close();",20703]],"useCount":321609},{"word":"some","context":[["String       oper;                      // only used in some methods",3597],["* @throws IOException Signals that an I/O exception of some sort has",3283],["menu views are excepted. Only valid for some themes and configurations.",3276],["//given (+ some assertions)",2626],["i++;// some comment...â¦.........",5121],["some parent container.",17007],["your action bar look bad on some screens. In most cases you should",2316],["logger.info(\"--> indexing some data\");",2128],["*      of the client being idle or some other reason causing the server",1654],["// Set up some useful variables",1260]],"useCount":373061},{"word":"sort","context":[["return sort(SortOrder.ASCENDING);",11626],["Collections.sort(col, comparator);",8064],["Collections.sort(this.col, comparator);",3562],["Collections.sort(list, new Comparator<Object>() {",10322],["return sort(SortOrder.ASCENDING, caseInsensitive);",8064],["Collections.sort(list);",6854],["return sort;",2328],["this.sort = sort;",2745],["this.sort = sort;",2745],["* @throws IOException Signals that an I/O exception of some sort has",3283]],"useCount":362086},{"word":"source","context":[["The commenting leaves much to be desired. Please approach this source code with the spirit of helping out.",22515],["This source code and its compiled class files are free and modifiable under the terms of",22574],["return source;",23071],["Redistribution and use in source and binary forms, with or without",18917],["* Redistribution and use in source and binary forms, with or without",168359],["* @param source",21543],["this.source = source;",24921],["this.source = source;",24921],["Redistribution and use in source and binary forms, with or without modification,",25923],["// Any modifications to this file will be lost upon recompilation of the source schema.",64071]],"useCount":1929332},{"word":"span","context":[["*                 <span class=\"constraint ReadOnly\">This field is read",4935],["*                 <span class=\"constraint Required\">This field is required",4596],["*                 <span class=\"constraint Selectable\">This field can",4455],["*     <span style=\"color: #553000\">cb</span>.query().set...",3918],["*     <span style=\"color: #553000\">cb</span>.query().set...",3918],["* Filterable\">This field can be filtered on.</span>",3031],["*                     <span class=\"constraint Required\">This field is",2766],["*     <span>Note:</span>",2448],["*     <span>Note:</span>",2448],["* only and will be ignored when sent to the API.</span>",2446]],"useCount":415418},{"word":"specified","context":[["* Implemented as specified by the {@link TreeViewer} interface.",1898],["* @return The information object of specified column. (NotNull)",8042],["* Set the endpoint address for the specified port name.",4346],["* @return the access mode specified for this class.",3422],["// Check the type of the specified child object and return the proper feature to use for",2984],["* specified.",2804],["* @throws NullPointerException if the specified element is null",2618],["* Implemented as specified by the {@link ImViewer} interface.",2238],["* @throws NullPointerException if the specified key is null",1959],["* Runs the test using the specified harness.",1819]],"useCount":1287965},{"word":"spi","context":[["import com.facebook.presto.spi.ConnectorSession;",2078],["import com.facebook.presto.spi.PrestoException;",2656],["import com.facebook.presto.spi.block.Block;",2895],["import org.apache.log4j.spi.LoggingEvent;",2958],["import com.facebook.presto.spi.type.Type;",5928],["import static com.facebook.presto.spi.type.BigintType.BIGINT;",2907],["import javax.enterprise.inject.spi.Bean;",2082],["import com.facebook.presto.spi.block.BlockBuilder;",2252],["import ch.qos.logback.classic.spi.ILoggingEvent;",2367],["import javax.enterprise.inject.spi.BeanManager;",2410]],"useCount":396178},{"word":"split","context":[["Specifies a background for the split action mode bar.",1363],["for (int i = 0; i < split.length; i++) {",1141],["/**  Specifies a background drawable for the bottom component of a split action bar.",1158],["String[] allCities = response.split(\",\");",1163],["/**  Background drawable to use for action mode UI in the lower split bar",1315],["String[] array = c.split(\"\\\\|\");",2154],["return split;",1615],["String lines[] = x.split(\"\\n\");//$NON-NLS-1$",1488],["String[] array = p.split(\"\\\\|\");",1372],["Specifies a background drawable for the bottom component of a split action bar.",1363]],"useCount":356020},{"word":"springframework","context":[["import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;",33282],["import org.springframework.beans.factory.annotation.Autowired;",196694],["import org.springframework.stereotype.Component;",68777],["import org.springframework.web.bind.annotation.RequestMapping;",63771],["import org.springframework.stereotype.Service;",60982],["import org.springframework.stereotype.Controller;",54900],["import org.springframework.transaction.annotation.Transactional;",45404],["import org.springframework.web.bind.annotation.RequestMethod;",39313],["import org.springframework.context.annotation.Configuration;",37145],["import org.springframework.test.context.ContextConfiguration;",32178]],"useCount":2270613},{"word":"sql","context":[["import java.sql.SQLException;",162466],["import java.sql.Date;",18734],["import java.sql.*;",18897],["import java.sql.DriverManager;",23101],["import javax.sql.DataSource;",31169],["import java.sql.Statement;",37695],["import java.sql.Timestamp;",46110],["import java.sql.PreparedStatement;",55615],["import java.sql.Connection;",93012],["import java.sql.ResultSet;",94878]],"useCount":1518191},{"word":"src","context":[["if (src == null) {",2858],["result = TRVD_TLVD_Action(src, dest);",17330],["* @param src",7854],["assertTrue(ParamFailure2, checkResult_ParamFailure2(src, dest, result));",7595],["return src;",4970],["package net.minecraft.src;",4382],["//\t\t\tresult = TRVD_TLVD_Action(src, dest);",4365],["assertTrue(Failure2, checkResult_Failure2(src, dest, result));",3955],["this.src = src;",3619],["this.src = src;",3619]],"useCount":607921},{"word":"stack","context":[["return stack;",9438],["stack.pop();",6439],["public Object runSafely(Catbert.FastStack stack) throws Exception{",3442],["if (stack != null) {",2930],["while (!stack.isEmpty()) {",2536],["* @param stack",2150],["this.stack = stack;",1699],["this.stack = stack;",1699],["if (stack == null) {",2057],["* This file is part of SeedStack, An enterprise-oriented full development stack.",2071]],"useCount":542277},{"word":"start","context":[["this.start = start;",16433],["server.start();",23563],["start();",19031],["this.start = start;",16433],["}.start();",24419],["thread.start();",26355],["t.start();",28798],["}).start();",35457],["long start = System.currentTimeMillis();",38402],["public void start() {",41881]],"useCount":2354046},{"word":"state","context":[["this.state = state;",27070],["return state;",35901],["state.channel = _channel;",54605],["state.type = _type;",54635],["if ( state.backtracking==0 ) {",81964],["state._fsp--;",104364],["if (state.failed) return retval;",20274],["switch (state) {",17579],["if (state.failed) return ;",17280],["this.state = state;",27070]],"useCount":2351648},{"word":"statement","context":[["statement.close();",22278],["PreparedStatement statement = conn.prepareStatement(query);",4867],["e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.",4508],["return statement;",5160],["ResultSet rs = statement.executeQuery();",5646],["PreparedStatement statement = null;",5767],["statement.execute();",7887],["exception statement from your version. */",18839],["throw new Error(\"Missing return statement in function\");",20076],["statement.executeUpdate();",5104]],"useCount":548885},{"word":"static","context":[["import static org.junit.Assert.assertNotNull;",71184],["private static final long serialVersionUID = 1L;",566114],["static {",382785],["import static org.junit.Assert.assertFalse;",68429],["public static void main(String[] args) {",291153],["import static org.junit.Assert.assertEquals;",235826],["import static org.junit.Assert.*;",159718],["import static org.junit.Assert.assertTrue;",145713],["public static void main(String[] args) throws Exception {",77841],["import static org.junit.Assert.assertThat;",63342]],"useCount":17440684},{"word":"status","context":[["this.status = status;",48184],["this.status = status;",48184],["* @param status",11605],["public void setStatus(String status) {",11117],["private String status;",10985],[".andExpect(status().isOk())",9124],["return this.status;",7918],["switch (status) {",6866],["this.status = value;",6043],["return status;",63339]],"useCount":1211089},{"word":"stmt","context":[["if (stmt != null) {",5392],["rs = stmt.executeQuery();",5437],["stmt = conn.createStatement();",6473],["Statement stmt = null;",9762],["stmt.execute();",10656],["PreparedStatement stmt = null;",12139],["stmt.close();",33505],["ResultSet rs = stmt.executeQuery();",5138],["stmt.executeUpdate();",7325],["Statement stmt = conn.createStatement();",7045]],"useCount":443673},{"word":"stop","context":[["public void stop() {",45462],["timer.stop();",6761],["stop();",19410],["server.stop();",13593],["retval.stop = input.LT(-1);",9200],["adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);",7877],["public void stop()",7077],["public void stop(BundleContext context) throws Exception {",5467],["stop = true;",4856],["super.stop();",5045]],"useCount":505956},{"word":"storage","context":[["String storage = \"\";",1386],["import org.exist.storage.BrokerPool;",1418],["import org.ovirt.engine.core.common.businessentities.storage.DiskImage;",1448],["* appropriate for short term storage or RMI between applications running",3051],["* the same version of Swing.  As of 1.4, support for long term storage",3042],["this.storage = storage;",2759],["return storage;",2389],["import org.exist.storage.DBBroker;",2420],["*             If a storage service error occurred.",2612],["this.storage = storage;",2759]],"useCount":381966},{"word":"store","context":[["import org.apache.lucene.store.FSDirectory;",2833],["import org.apache.lucene.store.Directory;",9121],["this.store = store;",4269],["this.store = store;",4269],["// we have to store this data until last moment since it is not possible to write any",6150],["return store;",5112],["store.close();",4279],["import org.apache.lucene.store.RAMDirectory;",2502],["* Druid - a distributed column store.",3588],["* @param store",2521]],"useCount":661396},{"word":"str","context":[["if (str == null) {",11970],["* @param str",19252],["String str =",5323],["return str.toString();",8336],["for (int i = 0; i < str.length(); i++) {",5170],["StringBuilder str = new StringBuilder();",5003],["if (str != null) {",4045],["String str;",8487],["return str;",38266],["String str = \"\";",10843]],"useCount":740586},{"word":"stream","context":[["import javax.xml.stream.XMLStreamException;",15326],[".stream()",15149],["import java.util.stream.Stream;",20362],["javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {",14861],["javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {",14861],["import javax.xml.transform.stream.StreamResult;",13026],["import java.util.stream.Collectors;",48526],["stream.close();",22716],["stream.writeInt32(constructor);",25790],["public void serializeToStream(AbsSerializedData stream) {",15464]],"useCount":1554043},{"word":"string","context":[["* @return A string representation of this object.",20641],["* @return the string",9903],["/** <p>Must be a string value, using '\\\\;' to escape characters such as '\\\\n' or '\\\\uxxxx' for a unicode character.",12372],["*   &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}string\">",14114],["public static final class string {",15427],["* @param string",16521],["return string;",17329],["elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));",19876],["* Returns a string representation of this object; useful for testing and",20478],["<p>Must be a string value, using '\\\\;' to escape characters such as '\\\\n' or '\\\\uxxxx' for a unicode character.",31095]],"useCount":2147020},{"word":"stub","context":[["//\t\t// TODO Auto-generated method stub",2367],["* For the given interface, get the stub implementation.",4295],["// TODO Auto-generated constructor stub",46663],["// TODO Auto-generated method stub",476306],["if (stub != null) {",1930],["// Auto-generated method stub",1481],["return stub;",1438],["// // TODO Auto-generated method stub",959],["// TODO: Auto-generated method stub",764],["/** Construct the stub at attach it to the interface. */",737]],"useCount":598276},{"word":"style","context":[["public static final class style {",12170],["return style;",8029],["super(parent, style);",2972],["this.style = style;",5194],["* @param style",5229],["this.style = style;",5194],["*     <span style=\"color: #553000\">cb</span>.query().set...",3918],["import android.text.style.ForegroundColorSpan;",2528],["Specifies a style to use for title text.",2726],["Specifies a style to use for subtitle text.",2726]],"useCount":546290},{"word":"subject","context":[["* furnished to do so, subject to the following conditions:",149001],["* particular file as subject to the \"Classpath\" exception as provided",100648],["* This Source Code Form is subject to the terms of the Mozilla Public",27937],["furnished to do so, subject to the following conditions:",18665],["this.subject = subject;",8393],["this.subject = subject;",8393],["return subject;",8146],["* modify, copy, or redistribute it subject to the terms and conditions",6499],["* subject to the following conditions:",6165],["* so, subject to the following conditions:",5174]],"useCount":575584},{"word":"substring","context":[["nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(\":\"));",4011],["s = s.substring(0, s.length() - 1);",1646],["baseUrl = baseUrl.substring(0, (baseUrl.length() - 1) + 0);",1722],["java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(\":\")+1);",3967],["String shortClassName = className.substring(className.lastIndexOf(\".\")+1);",3796],["String testCaseNumber = fullClassName.substring(fullClassName.lastIndexOf('.')+1+\"BenchmarkTest\".length());",2197],["return unlocalizedName.substring(unlocalizedName.indexOf(\".\") + 1);",2113],["path = path.substring(1);",2077],["url = url.substring(1);",1979],["retval.append(\"\\\\u\" + s.substring(s.length() - 4, s.length()));",1535]],"useCount":488423},{"word":"success","context":[["success = true;",26955],["this.success = success;",11207],["boolean success = false;",28239],["return success;",35890],["if (success) {",15571],["success = false;",18379],["if (!success) {",17010],["boolean success = true;",10458],["this.success = success;",11207],["tx.success();",7592]],"useCount":535787},{"word":"such","context":[["/** <p>Must be an integer value, such as \"<code>100</code>\".",2891],["*    if and wherever such third-party acknowledgments normally appear.",3729],["<p>Must be an integer value, such as \"<code>100</code>\".",4140],["/** <p>Must be a floating point value, such as \"<code>1.2</code>\".",4142],["*    if and wherever such third-party acknowlegements normally appear.",4301],["<p>Must be a floating point value, such as \"<code>1.2</code>\".",4827],["/** <p>Must be a string value, using '\\\\;' to escape characters such as '\\\\n' or '\\\\uxxxx' for a unicode character.",12372],["<p>Must be a string value, using '\\\\;' to escape characters such as '\\\\n' or '\\\\uxxxx' for a unicode character.",31095],["/** <p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",42975],["<p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",87204]],"useCount":555478},{"word":"sun","context":[["// Siehe <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a>",4132],["// Siehe <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a>",4132],["@Generated(value = \"com.sun.tools.xjc.Driver\", date = \"2014-09-19T03:10:02-06:00\", comment = \"JAXB RI v2.2.6\")",11865],["@Generated(value = \"com.sun.tools.xjc.Driver\", date = \"2015-10-25T05:29:34+06:00\", comments = \"JAXB RI v2.2.11\")",12626],["* CA 95054 USA or visit www.sun.com if you need additional information or",29458],["// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a>",64734],["// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a>",64734],["import com.sun.jersey.api.client.ClientResponse;",3393],["import com.sun.star.uno.UnoRuntime;",3949],["@Generated(value = \"com.sun.tools.xjc.Driver\", date = \"2014-09-19T03:09:21-06:00\", comment = \"JAXB RI v2.2.6\")",4065]],"useCount":929725},{"word":"super","context":[["super.onDestroy();",56849],["super(name);",79654],["super.setUp();",83998],["super(context);",90171],["super(message);",101162],["super.onCreate(savedInstanceState);",288856],["super();",639241],["super.onResume();",72528],["return super.onOptionsItemSelected(item);",70788],["super(context, attrs);",56657]],"useCount":7016917},{"word":"support","context":[["import android.support.v4.app.FragmentManager;",20782],["import android.support.v4.app.FragmentActivity;",15830],["import android.support.v4.view.ViewPager;",21006],["import android.support.v7.app.ActionBarActivity;",24660],["import android.support.v7.widget.Toolbar;",27305],["import android.support.annotation.Nullable;",38390],["import android.support.v7.widget.RecyclerView;",38509],["import android.support.v7.app.AppCompatActivity;",51760],["import android.support.v4.app.Fragment;",66832],["import android.support.annotation.NonNull;",43723]],"useCount":1329627},{"word":"supported","context":[["* @return the package supported by this factory.",1524],["throw new UnsupportedOperationException(\"Not supported yet.\");",46350],["* The following features are supported:",19074],["*  <p><b>This is NOT part of any supported API.",2997],["throw new SQLException(\"not supported\");",2612],["* Returns the package supported by this factory.",1482],["throw new SQLException(\"Method not supported\");",2594],["* supported.",2102],["throw new UnsupportedOperationException(\"Not supported\");",1686],["throw new UnsupportedOperationException(\"Not supported.\");",1903]],"useCount":366260},{"word":"swing","context":[["import javax.swing.JComponent;",35413],["layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)",42154],["import javax.swing.JOptionPane;",53478],["import javax.swing.JFrame;",54775],["import javax.swing.JButton;",58698],["import javax.swing.JLabel;",68024],[".addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)",90522],["import javax.swing.JPanel;",93720],["import javax.swing.*;",123760],["import javax.swing.JScrollPane;",35296]],"useCount":2700371},{"word":"switch","context":[["switch (featureID) {",71258],["switch (type) {",50985],["switch (field) {",46672],["switch (item.getItemId()) {",38446],["switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {",35838],["* @param object the target of the switch.",28445],["* returning a non-null result will terminate the switch.",26832],["switch (featureID)",21680],["switch (this) {",22069],["switch (tag) {",23778]],"useCount":1716837},{"word":"swt","context":[["import org.eclipse.swt.SWT;",42019],["import org.eclipse.swt.widgets.Shell;",21432],["import org.eclipse.swt.widgets.Display;",19202],["import org.eclipse.swt.layout.GridData;",18077],["import org.eclipse.swt.widgets.Label;",16737],["import org.eclipse.swt.layout.GridLayout;",16556],["import org.eclipse.swt.events.SelectionEvent;",16438],["import org.eclipse.swt.widgets.Composite;",35105],["import org.eclipse.swt.widgets.Button;",15152],["import org.eclipse.swt.graphics.Image;",14571]],"useCount":514422},{"word":"symbol","context":[["<p>This symbol is the offset where the {@link android.R.attr#layout_gravity}",3303],["this.symbol = symbol;",3809],["<p>This symbol is the offset where the {@link android.R.attr#id}",2808],["resource symbol {@link android.R.attr#id}.",2597],["resource symbol {@link android.R.attr#menuCategory}.",2596],["resource symbol {@link android.R.attr#enabled}.",2596],["this.symbol = symbol;",3809],["resource symbol {@link android.R.attr#orderInCategory}.",2596],["<p>This is a private symbol.",118752],["return symbol;",4573]],"useCount":419131},{"word":"synchronized","context":[["public synchronized boolean equals(java.lang.Object obj) {",25141],["synchronized (monitor())",22757],["synchronized (mutex) {",12518],["synchronized (mLock) {",12267],["synchronized (this)",11128],["synchronized (listeners) {",9505],["public synchronized int hashCode() {",25772],["synchronized(this) {",26936],["synchronized (lock) {",35021],["synchronized (this) {",112139]],"useCount":1200263},{"word":"system","context":[["system-provided items in the bar.",2726],["this.system = system;",1537],["return system;",1644],["* @throws SystemException if a system exception occurred",102486],["* Kuali Coeus, a comprehensive research administration system for higher education.",12806],["* The Kuali Financial System, a comprehensive financial management system for higher education.",10420],["* The record is active in the system",6032],["* program services by normal system calls through the application",3001],["* system.",1865],["by the system. Favor this option over \"always\" where possible.",2316]],"useCount":626727},{"word":"t","context":[["t = ClpSerializer.translateThrowable(t);",18678],["t = ClpSerializer.translateThrowable(t);",18678],["if (fields == null) throw new IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");",14842],["throw new RuntimeException(t.getClass().getName() +",18854],["if (t instanceof RuntimeException) {",19578],["t.printStackTrace();",22030],["catch (Throwable t) {",26264],["t.start();",28798],["return t;",57207],["} catch (Throwable t) {",142048]],"useCount":3973015},{"word":"table","context":[["import javax.swing.table.TableCellRenderer;",6009],["* @param table",7532],["import javax.swing.table.AbstractTableModel;",8602],["import javax.swing.table.DefaultTableModel;",8998],["this.table = table;",11158],["this.table = table;",11158],["return table;",18790],["* </table>",21235],["<table>",97762],["</table>",98958]],"useCount":1692741},{"word":"tag","context":[["extensionRegistry, tag)) {",16144],["* Utility method to write an element start tag.",3178],["if (tag != null) {",3688],["this.tag = tag;",9203],["return tag;",11699],["int tag = input.readTag();",18873],["switch (tag) {",23778],["* by the @authors tag.",4901],["* @param tag",9030],["this.tag = tag;",9203]],"useCount":740586},{"word":"target","context":[["this.target = target;",19143],["return target;",29760],["target.init();",5763],["target,",7806],["if (target != null) {",8229],["if (target == null) {",9466],["if (target == null)",13088],["* @param object the target of the switch.",28445],["* @param target",16386],["this.target = target;",19143]],"useCount":1286867},{"word":"task","context":[["return task;",10026],["task.run();",6589],["OperationResult result = task.getResult();",5982],["this.task = task;",5681],["this.task = task;",5681],["* @param task",4502],["if (task != null) {",5414],["if (task == null) {",4661],["task.execute();",4561],["import backtype.storm.task.TopologyContext;",3398]],"useCount":668826},{"word":"td","context":[["<tr><td><code>none</code></td><td>0</td><td></td></tr>",8684],["<tr><td><code>none</code></td><td>0</td><td></td></tr>",8684],["<tr><td><code>none</code></td><td>0</td><td></td></tr>",8684],["<tr><td><code>showTitle</code></td><td>0x8</td><td></td></tr>",4483],["<tr><td><code>none</code></td><td>0</td><td></td></tr>",8684],["* </td>",4648],["<tr><td><code>none</code></td><td>0</td><td></td></tr>",8684],["<tr><td><code>showCustom</code></td><td>0x10</td><td></td></tr>",4483],["<tr><td><code>homeAsUp</code></td><td>0x4</td><td></td></tr>",4483],["<tr><td><code>none</code></td><td>0</td><td></td></tr>",8684]],"useCount":2010072},{"word":"temp","context":[["if (temp != null) {",3336],["result = prime * result + (int) (temp ^ (temp >>> 32));",4300],["result = 31 * result + (int) (temp ^ (temp >>> 32));",1995],["String temp = \"\";",2123],["result = prime * result + (int) (temp ^ (temp >>> 32));",4300],["return temp;",21486],["String temp;",2119],["Snapshot temp = new Snapshot();",4224],["long temp;",3948],["int temp;",2111]],"useCount":379863},{"word":"template","context":[["// Automatically generated by LOXI from template of_class.java",4536],["* @param template",3572],["* and open the template in the editor.",179345],["* To change this template file, choose Tools | Templates",96536],["* To change this template, choose Tools | Templates",79042],["* To change this template use File | Settings | File Templates.",27048],["return template;",8065],["\" * @template T\",",7326],["this.template = template;",4908],["this.template = template;",4908]],"useCount":822462},{"word":"terms","context":[["* modify, copy, or redistribute it subject to the terms and conditions",6499],["assertThat(terms.getName(), equalTo(\"terms\"));",4187],["assertThat(terms, notNullValue());",4249],["* the terms of the AGPL are supplemented with the following terms:",5714],["* the terms of the AGPL are supplemented with the following terms:",5714],["* As a special exception to the terms and conditions of version 3.0 of",13882],["making a combined work based on this library.  Thus, the terms and",20656],["terms of your choice, provided that you also meet, for each linked",20904],["This source code and its compiled class files are free and modifiable under the terms of",22574],["* This Source Code Form is subject to the terms of the Mozilla Public",27937]],"useCount":379759},{"word":"test","context":[["import org.springframework.boot.test.SpringApplicationConfiguration;",9515],["createIndex(\"test\");",9608],["import org.jboss.arquillian.container.test.api.Deployment;",9691],["public void test() throws Exception {",12541],["public void test() {",26072],["* @test",26438],["import android.test.ApplicationTestCase;",31277],["import org.springframework.test.context.ContextConfiguration;",32178],["import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;",33282],["test(",56388]],"useCount":2749359},{"word":"tests","context":[["* To work on unit tests, switch the Test Artifact in the Build Variants view.",13652],["* @return the suite of tests being tested",5862],["// test suite from all defined tests",3299],["package tests;",2771],["apps.tests.Log4JFixture.setUp();",2286],["apps.tests.Log4JFixture.tearDown();",2286],["package com.example.tests;",2071],["* Returns the tests as a test suite.",1762],["* Constructs a new set of tests.",1760],["import org.apache.activemq.artemis.tests.util.ActiveMQTestBase;",1757]],"useCount":331864},{"word":"text","context":[["childrenElements.add(new DOMElement(\"#text\", \"\", new ArrayList<String>(Arrays.asList(\"\"))));",26221],["import java.text.MessageFormat;",29086],["this.text = text;",29848],["this.text = text;",29848],["import java.text.DecimalFormat;",31514],["return text;",41918],["import java.text.DateFormat;",42315],["import java.text.ParseException;",62650],["import android.text.TextUtils;",69069],["import java.text.SimpleDateFormat;",123972]],"useCount":2751746},{"word":"th","context":[["<tr><th>Attribute</th><th>Description</th></tr>",54638],["<tr><th>Constant</th><th>Value</th><th>Description</th></tr>",42374],["<tr><th>Attribute</th><th>Description</th></tr>",54638],["<tr><th>Attribute</th><th>Description</th></tr>",54638],["<tr><th>Attribute</th><th>Description</th></tr>",54638],["<tr><th>Constant</th><th>Value</th><th>Description</th></tr>",42374],["<tr><th>Constant</th><th>Value</th><th>Description</th></tr>",42374],["<tr><th>Constant</th><th>Value</th><th>Description</th></tr>",42374],["<tr><th>Constant</th><th>Value</th><th>Description</th></tr>",42374],["<tr><th>Constant</th><th>Value</th><th>Description</th></tr>",42374]],"useCount":628388},{"word":"than","context":[["*        and equal to or less than the number of columns in this rowset",972],["* 'context', rather than just what's in the current screen.",827],["Perhaps with your help we can be more than a few, and make Mesquite better.",22515],["any unit or agency of the Government other than DoD, it is classified as",2682],["profile than the rest of the activity the difference",2630],["* capacity equal to or greater than <tt>initialCapacity</tt> and",1647],["*                This number must not be greater than yylength()!",1610],["(such as screen margins) for screens with more than 820dp of available width. This",1549],["*         if the specified {@code index} is less than {@code 0} or",1144],["than 3.0. (API 11)",1095]],"useCount":535697},{"word":"that","context":[["* Find the _Fields constant that matches name, or null if its not found.",14946],["* Find the _Fields constant that matches fieldId, throwing an exception",14940],["* @return Returns a reference to this object so that method calls can be",49924],["* Returns a reference to this object so that method calls can be chained together.",33913],["* @return A reference to this updated object so that method calls can be chained",33793],["if (that == null)",32175],["* This default implementation returns null so that we can easily ignore cases;",26089],["terms of your choice, provided that you also meet, for each linked",20904],["public boolean equals(Object that) {",19564],["* Find the _Fields constant that matches fieldId, or null if its not found.",14952]],"useCount":4823750},{"word":"the","context":[["* Objects of the following type(s) are allowed in the list",85689],["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167],["theme attribute (in the form",317212],["<p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",252522],["* and open the template in the editor.",179345],["* and open the template in the editor.",179345],["* <p>The following schema fragment specifies the expected content contained within this class.",169528],["* furnished to do so, subject to the following conditions:",149001],["/** <p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",117936],["* particular file as subject to the \"Classpath\" exception as provided",100648]],"useCount":48123547},{"word":"theme","context":[["Base application theme for API 14+. This theme completely replaces",4633],["Base application theme for API 11+. This theme completely replaces",4654],["Base application theme for API 11+. This theme completely replaces",4654],["API 11 theme customizations can go here.",4882],["/**  Application theme.",4909],["API 14 theme customizations can go here.",5014],["Base application theme, dependent on API level. This theme is replaced",5064],["Base application theme, dependent on API level. This theme is replaced",5064],["theme attribute (in the form",317212],["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167]],"useCount":852131},{"word":"then","context":[["// then",53402],["\"then\\n\" +",18728],["//then",10715],[".then()",8548],["// value isIncludeRecord has not been set, then we return null and",7273],["// value isIncludeRecord has been set, then we return null and",7273],["* then ServiceException is thrown.",4297],[".then().expect()",3954],["*           distribution, then any Derivative Works that You distribute must",2735],["* input, and then applies this function to the result.",2658]],"useCount":812185},{"word":"there","context":[["* by updating the map directly. Because of this design, there's no setter.",3333],["* @throws IOException  if there is an I/O error.",3310],["* purpose. Use it at your own risk. If there's a problem you get to fix it.",3241],["* This is why there is not a <CODE>set</CODE> method for the content property.",2919],["* This is why there is not a <CODE>set</CODE> method for the any property.",2311],["<tr><td><code>ifRoom</code></td><td>1</td><td> Show this item in an action bar if there is room for it as determined",2188],["* This method buffers the input internally, so there is no need to use a",2135],["* there really should be more of a description here...",62720],["* be present inside the JAXB object. This is why there is not a",2044],["* @throws java.io.IOException if there is an error",3819]],"useCount":753929},{"word":"this","context":[["return this;",1982229],["* distributed with this work for additional information",436355],["this.name = name;",333295],["containing a value of this type.",317212],["this.id = id;",269261],["return (Criteria) this;",263514],["* which accompanies this distribution, and is available at",205415],["* accompanied this code).",174705],["* <p>The following schema fragment specifies the expected content contained within this class.",169528],["this.value = value;",165286]],"useCount":36756897},{"word":"thread","context":[["Thread thread = new Thread() {",2379],["* thread.",2538],["thread = null;",2630],["private Thread thread;",3784],["thread.interrupt();",4218],["thread.setDaemon(true);",4460],["return thread;",4677],["thread.join();",6538],["thread.start();",26355],["*    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>",6706]],"useCount":570836},{"word":"thrift","context":[["public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;",12658],["} catch (org.apache.thrift.TException te) {",24640],["org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);",37065],["read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));",12418],["read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));",12418],["write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));",12415],["write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));",12415],["public enum _Fields implements org.apache.thrift.TFieldIdEnum {",12294],["public void validate() throws org.apache.thrift.TException {",12289],["public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {",12146]],"useCount":547595},{"word":"throw","context":[["throw new UnsupportedOperationException();",258167],["throw new NullPointerException();",113045],["throw new UnsupportedOperationException(\"Not supported yet.\");",46350],["throw new IllegalStateException(",54806],["throw ex;",73440],["throw new IllegalStateException();",75008],["throw new IllegalArgumentException();",92146],["throw new IllegalArgumentException(",102541],["throw new RuntimeException(e);",221750],["throw e;",249494]],"useCount":6446067},{"word":"thrown","context":[["* thrown.",4472],["* @throws IOException exception thrown from serialization/deserialization",17173],["* @throws ErrorException exception thrown from REST call",10560],["* @throws IllegalArgumentException thrown if callback is null",7598],["* null or if any SAXException is thrown during marshaling",7495],["public ExpectedException thrown = ExpectedException.none();",6623],["* @throws CloudException exception thrown from REST call",5189],["thrown.expect(IllegalArgumentException.class);",5003],["* then ServiceException is thrown.",4297],["fail(\"Should have thrown exception\");",4387]],"useCount":438187},{"word":"throws","context":[["* @throws SystemException if a system exception occurred",102486],["throws com.google.protobuf.InvalidProtocolBufferException {",104994],["public void setUp() throws Exception {",117044],["throws IOException",137817],["throws java.io.IOException {",156112],["throws Exception",159902],["throws Exception {",183095],["* @throws Exception",257752],["throws IOException {",275767],["* @throws IOException",358011]],"useCount":13275515},{"word":"time","context":[["import org.joda.time.DateTime;",50385],["//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #",39871],["return time;",15896],["this.time = time;",15020],["this.time = time;",15020],["import java.time.LocalDate;",14023],["import org.joda.time.LocalDate;",11535],["import java.time.LocalDateTime;",11375],["long time = System.currentTimeMillis();",10271],["import org.joda.time.DateTimeZone;",9807]],"useCount":1413633},{"word":"timeout","context":[["this.timeout = timeout;",9774],["@Test(timeout=10000)",4601],["this.timeout = timeout;",9774],["* @param timeout",7382],["@Test(timeout = 5000)",6264],["return timeout;",6040],["@Test(timeout = 60000)",5969],["@Test(timeout = 10000)",4981],["@Test(timeout=100)",4679],["@Test(timeout = 1000)",3291]],"useCount":435363},{"word":"timestamp","context":[["this.timestamp = timestamp;",15875],["this.timestamp = timestamp;",15875],["return timestamp;",12914],["* @param timestamp",5751],["private long timestamp;",3482],["return this.timestamp;",3104],["long timestamp = System.currentTimeMillis();",2564],["private final long timestamp;",1895],["public void setTimestamp(long timestamp) {",1885],["private Date timestamp;",1801]],"useCount":322744},{"word":"title","context":[["return title;",42229],["setTitle(title);",5078],["private String title;",31688],["public void setTitle(String title) {",28896],["this.title = title;",51101],["this.title = title;",51101],["* @param title",15480],["public String title;",6158],["String title;",5640],["if (title != null) {",5131]],"useCount":818954},{"word":"tmp","context":[["package tmp.generated_xhtml;",2467],["if (tmp != null) {",3503],["list.set(domIdx, tmp);",3793],["Object tmp = list.get(i);",3800],["domainObjectList.set(domIdx, tmp);",7273],["Object tmp = domainObjectList.get(i);",7273],["return tmp;",16230],["if (tmp == null) {",1732],["int tmp;",1851],["String tmp;",1652]],"useCount":350313},{"word":"to","context":[["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167],["<p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",252522],["* furnished to do so, subject to the following conditions:",149001],["* furnished to do so, subject to the following conditions:",149001],["* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",145292],["/** <p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",117936],["* particular file as subject to the \"Classpath\" exception as provided",100648],["* For example, to add a new item, do as follows:",88109],["* not a snapshot. Therefore any modification you make to the",84353],["* This accessor method returns a reference to the live list,",84346]],"useCount":18317436},{"word":"toString","context":[["public String toString(){",31035],["public String toString() {",851120],["return sb.toString();",279523],["public String toString()",152120],["return result.toString();",54953],["return buf.toString();",54416],["return builder.toString();",51095],["* @see java.lang.Object#toString()",44272],[".toString();",41649],["return buffer.toString();",35313]],"useCount":4114052},{"word":"token","context":[["} else if (token == END_ARRAY || token == END_OBJECT) {",6544],["this.token = token;",11101],["} else if (token == END_ARRAY || token == END_OBJECT) {",6544],["* @param token",6932],["return token;",22497],["this.token = token;",11101],["// token list labels:",6541],["jj_la = xla; jj_lastpos = jj_scanpos = token;",14986],["if (token == null)",12287],["token = context.nextToken();",12020]],"useCount":956900},{"word":"tools","context":[["import org.apache.tools.ant.BuildException;",6622],["* <a href=\"http://d.android.com/tools/testing/testing_android.html\">Testing Fundamentals</a>",30848],["@Generated(value = \"com.sun.tools.xjc.Driver\", date = \"2015-10-25T05:29:34+06:00\", comments = \"JAXB RI v2.2.11\")",12626],["@Generated(value = \"com.sun.tools.xjc.Driver\", date = \"2014-09-19T03:10:02-06:00\", comment = \"JAXB RI v2.2.6\")",11865],["import javax.tools.JavaFileObject;",5194],["@Generated(value = \"com.sun.tools.xjc.Driver\", date = \"2014-09-19T03:09:21-06:00\", comment = \"JAXB RI v2.2.6\")",4065],["import org.apache.tools.ant.Project;",3837],["import com.puppycrawl.tools.checkstyle.api.TokenTypes;",3396],["@Generated(value = \"com.sun.tools.xjc.Driver\", date = \"2014-09-19T03:08:06-06:00\", comment = \"JAXB RI v2.2.6\")",3245],["import com.puppycrawl.tools.checkstyle.api.DetailAST;",3085]],"useCount":552840},{"word":"top","context":[["mDivider.setBounds(left, top, right, bottom);",1499],["* @param top",1822],["this.top = top;",2819],["this.top = top;",2819],["* along with this program. Look for COPYING file in the top folder.",2834],["super.onLayout(changed, left, top, right, bottom);",3743],["return top;",3903],["* <tr valign=\"top\">",3920],["protected void onLayout(boolean changed, int left, int top, int right, int bottom) {",4199],["<tr><td><code>top</code></td><td>0x30</td><td></td></tr>",1662]],"useCount":506177},{"word":"tr","context":[["* </tr>",63285],["<tr><th>Attribute</th><th>Description</th></tr>",54638],["<tr><th>Constant</th><th>Value</th><th>Description</th></tr>",42374],["<tr><th>Attribute</th><th>Description</th></tr>",54638],["<tr><th>Constant</th><th>Value</th><th>Description</th></tr>",42374],["*         <tr>",15516],["*         </tr>",14811],["* <tr>",57318],["<tr><td><code>none</code></td><td>0</td><td></td></tr>",8684],["<tr><td><code>none</code></td><td>0</td><td></td></tr>",8684]],"useCount":1205405},{"word":"transaction","context":[["transaction.commit();",12713],["import org.springframework.transaction.annotation.Transactional;",45404],["import org.springframework.transaction.annotation.Propagation;",4703],["transaction.rollback();",3852],["import org.springframework.transaction.PlatformTransactionManager;",3766],["import javax.transaction.Transactional;",3460],["import org.springframework.transaction.TransactionStatus;",3064],["import org.springframework.transaction.annotation.EnableTransactionManagement;",2769],["import javax.transaction.UserTransaction;",2736],["import javax.transaction.TransactionManager;",2722]],"useCount":471401},{"word":"transform","context":[["import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;",6966],["import com.amazonaws.transform.*;",7438],["import javax.xml.transform.stream.StreamSource;",10026],["import javax.xml.transform.Source;",8899],["import javax.xml.transform.stream.StreamResult;",13026],["import com.amazonaws.transform.Marshaller;",12994],["import javax.xml.transform.TransformerException;",12460],["import javax.xml.transform.TransformerFactory;",12096],["import javax.xml.transform.Transformer;",12078],["import javax.xml.transform.dom.DOMSource;",10863]],"useCount":405362},{"word":"tree","context":[["* @param ctx the parse tree",58366],["CommonTree tree;",6057],["adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);",7877],["import com.intellij.psi.tree.IElementType;",8313],["import javax.swing.tree.TreePath;",8510],["public Object getTree() { return tree; }",8693],["retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);",5849],["return tree;",10966],["retval.tree = root_0;",10631],["import javax.swing.tree.DefaultMutableTreeNode;",9003]],"useCount":987380},{"word":"true","context":[["while (true)",42280],["boolean first = true;",49764],["@XmlElement(required = true)",43698],["return true;",3626568],["while (true) {",219180],["true,",67154],["done = true;",53346],["found = true;",49833],["true);",44648],["if (this == o) return true;",45807]],"useCount":12989940},{"word":"try","context":[["//\t\ttry {",16801],["try",1038609],["try{",325691],["//        try {",16636],["// try {",12330],["try { curChar = input_stream.readChar(); }",11749],["}   // end try",5846],["//            try {",5620],["} // end try",4462],["try {",9379544]],"useCount":11281277},{"word":"tt","context":[["* @param in the <tt>java.io.InputStream</tt> from which to read data.",984],["* capacity equal to or greater than <tt>initialCapacity</tt> and",1647],["* capacity equal to or greater than <tt>initialCapacity</tt> and",1647],["* Returns the character at position <tt>pos</tt> from the",1641],["* Returns the character at position <tt>pos</tt> from the",1641],["* <tt>null</tt>.",1139],["* <tt>null</tt>.",1139],["* Lexical state is set to <tt>ZZ_INITIAL</tt>.",1012],["* Lexical state is set to <tt>ZZ_INITIAL</tt>.",1012],["* @param in the <tt>java.io.InputStream</tt> from which to read data.",984]],"useCount":939701},{"word":"two","context":[["/** Combines two functions together in a order. */",1854],["* of another message.  The substitution text contains two error",483],["* (that is, using the <code>int</code> \"|\" operator) two or more",487],["if (one.getClass() != two.getClass()) {",522],["* Is this block (a) opaque and (b) a full 1m cube?  This determines whether or not to render the shared face of two",686],["// These two need to be declared outside the try/catch",849],["// In two-pane mode, show the detail view in this activity by",883],["//two continuous end elements means we are exiting the xml structure",936],["// Create buffer with zero-padding if there are only one or two",1045],["* activity is showing a two-pane settings UI.",1386]],"useCount":349334},{"word":"tx","context":[["if (tx != null)",2821],["Transaction tx = new Transaction(params);",3003],["if (tx != null) {",3090],["tx = session.beginTransaction();",4437],["if (tx.isActive())",4576],["Transaction tx = null;",4907],["tx.success();",7592],["tx.begin();",11619],["tx.rollback();",14426],["tx.commit();",30955]],"useCount":373973},{"word":"type","context":[["\"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>\") or",317212],["* Objects of the following type(s) are allowed in the list",85689],["/** <p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",117936],["return type;",121107],["this.type = type;",131142],["this.type = type;",131142],["<p>Must be a reference to another resource, in the form \"<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>\"",252522],["\"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\")",317212],["containing a value of this type.",317212],["or to a theme attribute in the form \"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>\".",406167]],"useCount":7519481},{"word":"types","context":[["return types;",16096],["types.add(EsbElementTypes.EsbLink_4001);",32239],["import org.projectfloodlight.openflow.types.*;",8288],["types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionParent_4001);",6320],["types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4002);",6320],["import org.bson.types.ObjectId;",5726],["types.add(type);",5330],["this.types = types;",4029],["this.types = types;",4029],["for (int i = 0; i < types.length; i++) {",3436]],"useCount":956669},{"word":"u0000","context":[["\"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"+",76789],["\"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"+",76789],["\"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"+",76789],["\"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"+",76789],["\"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"+",76789],["\"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"+",76789],["\"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"+",76789],["\"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"+",76789],["\"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\" +",19740],["\"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\" +",19740]],"useCount":820458},{"word":"uffff","context":[["\"\\1\\uffff\",",10994],["\"\\12\\62\\7\\uffff\\32\\62\\4\\uffff\\1\\62\\1\\uffff\\32\\62\",",694],["\"\\12\\62\\7\\uffff\\32\\62\\4\\uffff\\1\\62\\1\\uffff\\32\\62\",",694],["\"\\12\\62\\7\\uffff\\32\\62\\4\\uffff\\1\\62\\1\\uffff\\32\\62\",",694],["\"\\12\\52\\7\\uffff\\32\\52\\4\\uffff\\1\\52\\1\\uffff\\32\\52\",",716],["\"\\12\\52\\7\\uffff\\32\\52\\4\\uffff\\1\\52\\1\\uffff\\32\\52\",",716],["\"\\12\\52\\7\\uffff\\32\\52\\4\\uffff\\1\\52\\1\\uffff\\32\\52\",",716],["\"\\12\\57\\7\\uffff\\32\\57\\4\\uffff\\1\\57\\1\\uffff\\32\\57\",",731],["\"\\12\\57\\7\\uffff\\32\\57\\4\\uffff\\1\\57\\1\\uffff\\32\\57\",",731],["\"\\12\\57\\7\\uffff\\32\\57\\4\\uffff\\1\\57\\1\\uffff\\32\\57\",",731]],"useCount":353801},{"word":"ui","context":[["import com.vaadin.ui.VerticalLayout;",6566],["import com.google.gwt.user.client.ui.Widget;",20217],["import org.springframework.ui.Model;",17515],["import org.eclipse.ui.PlatformUI;",13314],["import com.intellij.util.ui.UIUtil;",10134],["import com.google.gwt.user.client.ui.Composite;",10089],["import com.google.gwt.user.client.ui.Label;",8375],["import com.intellij.openapi.ui.Messages;",7403],["import org.springframework.ui.ModelMap;",7320],["import com.vaadin.ui.Button;",6843]],"useCount":1549007},{"word":"ul","context":[["*  </ul>",4618],["<ul>",4669],["</ul>",5267],["*        </ul>",5366],["*         <ul>",7081],["*         </ul>",7087],["*        <ul>",8994],["* @exception SWTException <ul>",9180],["* <ul>",318627],["* </ul>",331446]],"useCount":830919},{"word":"unchecked","context":[["@SuppressWarnings({\"rawtypes\", \"unchecked\"})",5019],["@SuppressWarnings({ \"unchecked\", \"rawtypes\" })",19636],["//noinspection unchecked",19012],["@SuppressWarnings({ \"rawtypes\", \"unchecked\" })",17498],["@SuppressWarnings({\"unchecked\"})",11698],["@SuppressWarnings( \"unchecked\" )",9141],["@SuppressWarnings({\"unchecked\", \"rawtypes\"})",6284],["@SuppressWarnings({\"unchecked\", \"cast\"})",5834],["@SuppressWarnings({ \"unchecked\" })",5513],["@SuppressWarnings(\"unchecked\")",636994]],"useCount":814013},{"word":"under","context":[["* modules, and to copy and distribute the resulting executable under",3400],["* This program and the accompanying materials are made available under the",56649],["This source code and its compiled class files are free and modifiable under the terms of",22574],["modules, and to copy and distribute the resulting executable under",20699],["* that can be created under this object.",7333],["* HELIUM V IT-Solutions GmbH. The licensing of the program under the",5714],["* modified versions of the Program under the name \"HELIUM V\" or \"HELIUM 5\",",5714],["* recipient has the option to distribute your version of this file under",4658],["* of this program must display Appropriate Legal Notices, as required under",4215],["* opensource volunteers. you can redistribute it and/or modify it under the",3279]],"useCount":325580},{"word":"unit","context":[["<p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",87204],["/** <p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",42975],["* To work on unit tests, switch the Test Artifact in the Build Variants view.",13652],["import org.elasticsearch.common.unit.TimeValue;",9557],["* @param unit",6439],["for (TermHLAPI unit : totest) {",5954],["return unit;",5841],["assert llapi.getSubterm().contains(unit.getContainedItem()) : \"missing element\";",5822],["this.unit = unit;",5797],["this.unit = unit;",5797]],"useCount":470710},{"word":"up","context":[["* @return The object to set up a function. (NotNull)",3432],["// clean up",2762],["// Clean up",1433],["* and proceeding up the inheritance hierarchy",1356],["/**  Content description for the action bar \"up\" affordance. [CHAR LIMIT=NONE]",1290],["// Set up the ViewPager with the sections adapter.",1250],["// set up the drawer's list view with items and click listener",1248],["// For list preferences, look up the correct display value in",1240],["// http://developer.android.com/design/patterns/navigation.html#up-vs-back",1239],["// Set up some useful variables",1260]],"useCount":557820},{"word":"update","context":[["// update. Deleting the comments indicating the section will prevent",4044],["* <code>insertRow</code> methods are called to update the database.",3840],["* update the underlying database; instead the <code>updateRow</code> or",3970],["public void update()",4134],["public void update(AnActionEvent e) {",5452],["super.update();",5649],["* This handles model notifications by calling {@link #updateChildren} to update any cached",7502],["public void update() {",23930],["update();",25810],["* The updater methods are used to update column values in the",3836]],"useCount":847088},{"word":"uri","context":[["if (uri == null || uri.length() == 0) {",2931],["public String getType(Uri uri) {",3251],["private String uri;",4081],["if (uri != null) {",5227],["getContext().getContentResolver().notifyChange(uri, null);",5232],["if (uri == null) {",5550],["this.uri = uri;",11825],["this.uri = uri;",11825],["* @param uri",12271],["return uri;",15747]],"useCount":621566},{"word":"url","context":[["return url;",45538],["* client.setBaseAddress(url);",9672],["URL url = null;",9253],["this.url = url;",36743],["this.url = url;",36743],["* @param url",27466],["private String url;",21927],["public void setUrl(String url) {",14385],["if (url == null) {",11382],["if (url != null) {",10314]],"useCount":1180189},{"word":"use","context":[["return null;  //To change body of implemented methods use File | Settings | File Templates.",6712],["//To change body of implemented methods use File | Settings | File Templates.",7552],["// Redistribution and use in source and binary forms, with or without",8716],["* Redistribution and use in source and binary forms, with or without modification,",13261],["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",18250],["Redistribution and use in source and binary forms, with or without",18917],["Redistribution and use in source and binary forms, with or without modification,",25923],["* To change this template use File | Settings | File Templates.",27048],["* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",145292],["* Redistribution and use in source and binary forms, with or without",168359]],"useCount":1830818},{"word":"used","context":[["* @param domainFactory - used to create existing (persistent) domain objects.",21819],["an action bar/action mode. This will be used to determine how many",7657],["* It is intended to be used when one called to an Assembler is made.",7273],["/*  This tracker boolean wil be used to detect whether the user called the set method",4991],["*   for this attribute. It will be used to determine whether to include this field",4991],["// package private constructor - used by readers, builders, and factory",4131],["while( used[ pos ] ) {",4078],["* used.",3945],["* The updater methods are used to update column values in the",3836],["String       oper;                      // only used in some methods",3597]],"useCount":1511825},{"word":"user","context":[["if (user == null) {",19061],["import com.google.gwt.user.client.ui.Widget;",20217],["* @param user",23886],["this.user = user;",26957],["this.user = user;",26957],["* <!-- begin-user-doc --> <!-- end-user-doc -->",30191],["* <!-- begin-user-doc --> <!-- end-user-doc -->",30191],["return user;",39640],["* <!-- end-user-doc -->",1457031],["* <!-- begin-user-doc -->",1454217]],"useCount":5086740},{"word":"username","context":[["String username;",2571],["this.username = username;",30834],["public void setUsername(String username) {",15199],["if (username != null) {",2540],["if (username == null) {",3231],["private final String username;",3450],["* @param username",13080],["return username;",22482],["private String username;",22571],["this.username = username;",30834]],"useCount":433354},{"word":"using","context":[["* All service calls made using this new client object are blocking, and",2586],["// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)",29771],["/** <p>Must be a string value, using '\\\\;' to escape characters such as '\\\\n' or '\\\\uxxxx' for a unicode character.",12372],["* <a href=\"http://www.castor.org\">Castor 1.3.1</a>, using an XML",4084],["* This class was generated using generate.php",3844],["<p>Must be a string value, using '\\\\;' to escape characters such as '\\\\n' or '\\\\uxxxx' for a unicode character.",31095],["* using a String value.",3247],["* using instance of generated typedef class.",3064],["*       appropriateness of using or redistributing the Work and assume any",2735],["// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)",43888]],"useCount":824192},{"word":"util","context":[["import java.util.Arrays;",511452],["import java.util.Iterator;",468926],["import java.util.Collections;",472955],["import java.util.Collection;",504870],["import java.util.Set;",648198],["import java.util.HashMap;",857091],["import java.util.Map;",1349189],["import java.util.ArrayList;",1724117],["import java.util.List;",2715539],["import java.util.Date;",430980]],"useCount":19999547},{"word":"utils","context":[["ims.framework.utils.Color color = null;",9130],["xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));",12002],["stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));",11786],["xmlWriter.writeCharacters(prefix + \":\" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));",5891],["import org.apache.cassandra.utils.FBUtilities;",6012],["prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();",6239],["return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();",6266],["import org.apache.cassandra.utils.ByteBufferUtil;",7109],["import com.badlogic.gdx.utils.Array;",7377],["ims.framework.utils.ImagePath img = null;",9130]],"useCount":1000514},{"word":"v","context":[["switch (v.getId()) {",14693],["if (c.value.equals(v)) {",8985],["if (v == null) {",10728],["return valueOf(v);",11288],["value = v;",12087],["if (v != null) {",13068],["public boolean onTouch(View v, MotionEvent event) {",13125],["* @param v",14579],["return v;",51948],["public void onClick(View v) {",215214]],"useCount":1773232},{"word":"v1","context":[["a=0;//     #v1=(Null);",1892],["* OWASP Benchmark Project v1.3alpha",2688],["* OWASP Benchmark Project v1.1",21041],["a=0;//     #v1=(Reference,Ljava/lang/String;);",3806],["a=0;//     move-result v1",3992],["a=0;//     #v1=(Integer);",4806],["* OWASP Benchmark Project v1.2beta",7248],["a=0;//     move-result-object v1",7416],["import org.xmlpull.v1.XmlPullParserException;",7487],["import org.xmlpull.v1.XmlPullParser;",7863]],"useCount":342345},{"word":"v2","context":[["@Generated(value = \"com.sun.tools.xjc.Driver\", date = \"2014-09-19T03:10:02-06:00\", comment = \"JAXB RI v2.2.6\")",11865],["a=0;//     #v2=(Integer);",2831],["* the method will throw an java.io.IOException. <b>This is new to v2.3!</b>",2656],["// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4",2898],["@Generated(value = \"com.sun.tools.xjc.Driver\", date = \"2014-09-19T03:08:06-06:00\", comment = \"JAXB RI v2.2.6\")",3245],["a=0;//     #v2=(Reference,Ljava/lang/String;);",2605],["a=0;//     move-result-object v2",3860],["@Generated(value = \"com.sun.tools.xjc.Driver\", date = \"2014-09-19T03:09:21-06:00\", comment = \"JAXB RI v2.2.6\")",4065],["@Generated(value = \"com.sun.tools.xjc.Driver\", date = \"2015-10-25T05:29:34+06:00\", comments = \"JAXB RI v2.2.11\")",12626],["// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2",20257]],"useCount":322954},{"word":"v4","context":[["import android.support.v4.app.FragmentTransaction;",9971],["import android.support.v4.app.NotificationCompat;",7682],["import android.support.v4.content.ContextCompat;",8887],["import android.support.v4.app.DialogFragment;",9462],["import android.support.v4.view.ViewPager;",21006],["import android.support.v4.widget.DrawerLayout;",10607],["import android.support.v4.app.FragmentActivity;",15830],["import android.support.v4.app.Fragment;",66832],["import android.support.v4.app.FragmentManager;",20782],["import android.support.v4.content.Loader;",7161]],"useCount":396483},{"word":"val","context":[["int val = 0;",2597],["* @param val Value.",2938],["if (val == null)",3976],["int val;",4568],["this.val = val;",6237],["this.val = val;",6237],["* @param val",7769],["if (val != null) {",8200],["if (val == null) {",8794],["return val;",28367]],"useCount":722309},{"word":"valid","context":[["\" is not a valid exception\");",18854],["* @return true if this object is valid according to the schema",3037],["menu views are excepted. Only valid for some themes and configurations.",3276],["boolean valid = false;",3535],["if (valid) {",3866],["if (!valid) {",4763],["valid = true;",6268],["boolean valid = true;",8743],["return valid;",11870],["valid = false;",16919]],"useCount":423841},{"word":"validate","context":[["public String[] validate(String[] existingErrors)",16130],["public void validate() {",5759],["String[] listOfOtherErrors = this.col.get(x).validate();",8064],["public void validate() throws org.apache.thrift.TException {",12289],["// check for required fields of primitive type, which can't be checked in the validate method",12733],["return validate(null);",16130],["validate();",27712],["struct.validate();",22551],["protected boolean validate(EObject objectToTest, BasicDiagnostic diagnostician, Map<Object, Object> map) {",5356],["public String[] validate()",23282]],"useCount":428006},{"word":"value","context":[["<p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",87204],["getField(value);",83306],["attribute's value can be found in the {@link #Theme} array.",68134],["* @param value",641461],["if (value != null) {",59368],["return value;",342804],["containing a value of this type.",317212],["if (value == null) {",188189],["this.value = value;",165286],["this.value = value;",165286]],"useCount":14243026},{"word":"valueOf","context":[["return valueOf(v);",11288],["return String.valueOf(value);",3424],["return String.valueOf(attr.getValue());",2684],["* Use this in place of valueOf.",2065],["return Integer.valueOf(value);",1457],["lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());",1406],["lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());",1337],["return Double.valueOf(value);",1055],["return Boolean.valueOf(value);",1124],["BigDecimal accessLevel = BigDecimal.valueOf(3);",1197]],"useCount":567543},{"word":"values","context":[["* @implNote The input argument of this method is a able to handle primitive values. In this case this is {@code",7680],["return values;",30867],["if (values == null) {",8859],["this.values = values;",11258],["this.values = values;",11258],["<p>Must be one or more (separated by '|') of the following constant values.</p>",11719],["* @param values",11793],["for (int i = 0; i < values.length; i++) {",12950],["<p>Must be one of the following constant values.</p>",15389],["ContentValues values = new ContentValues();",28286]],"useCount":2188603},{"word":"var","context":[["\"var ns = {};\",",1858],["\"/** @const */ var ns = {};\",",1906],["* @param var",1940],["var data = {",2002],["this.var = var;",2125],["this.var = var;",2125],["\"var goog = {};\" +",3087],["var jso = this.@com.ait.toolkit.core.client.JsObject::getJsObj()();",3128],["return var;",4453],["var jso = this.@com.emitrom.ti4j.core.client.ProxyObject::getJsObj()();",5908]],"useCount":561359},{"word":"variables","context":[["// End of variables declaration//GEN-END:variables",32363],["/** initialize variables to correspond with Cas Type and Features",2034],["this.variables = variables;",2296],["this.variables = variables;",2296],["Map<String, Object> variables = new HashMap<String, Object>();",2377],["return variables;",3431],["import org.pentaho.di.core.variables.VariableSpace;",3914],["// create path and map variables",5225],["// Variables declaration - do not modify//GEN-BEGIN:variables",32271],["// End of variables declaration//GEN-END:variables",32363]],"useCount":339258},{"word":"verify","context":[["verify(o, never()).onError(any(Throwable.class));",1434],["public void verify() {",2458],["public boolean verify(String hostname, SSLSession session) {",1600],["verify(observer, never()).onError(any(Throwable.class));",1777],["// verify required params are set",2045],["control.verify();",1528],["import static org.easymock.EasyMock.verify;",2809],["// verify",5528],["verify();",7000],["import static org.mockito.Mockito.verify;",42729]],"useCount":468603},{"word":"version","context":[["* @version",21862],["* @version $Revision$",24147],["// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)",29771],["this.version = version;",30254],["this.version = version;",30254],["return version;",32527],["* version.",36795],["// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)",43888],["* @version $Id$",61301],["* @version 1.0",96017]],"useCount":2100402},{"word":"view","context":[["import android.view.KeyEvent;",31161],["public void onClick(View view) {",48237],["import android.view.MotionEvent;",49931],["import android.view.View.OnClickListener;",54694],["return view;",56352],["import android.view.Menu;",94589],["import android.view.MenuItem;",99555],["import android.view.LayoutInflater;",169164],["import android.view.ViewGroup;",195672],["import android.view.View;",440678]],"useCount":3206779},{"word":"visit","context":[["* or to join the biojava-l mailing list, visit the home page",4171],["public void visit(NodeTraversal t, Node n, Node parent) {",4021],["super.visit(that);",4504],["* and trademarks visit:",5037],["return visitor.visit(this);",5501],["visitor.visit(this);",12473],["* CA 95054 USA or visit www.sun.com if you need additional information or",29458],["* or visit www.oracle.com if you need additional information or have any",139265],["return visitor.visit(this, data);",3443],["v.visit(this);",3249]],"useCount":485496},{"word":"vo","context":[["public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)",8064],["return ims.vo.ValueObject.generateUniqueID();",8064],["return this.getBean(new ims.vo.ValueObjectBeanMap());",8064],["if(vo == null)",8091],["// create LookupInstance from vo LookupType",8674],["return vo;",10457],["this.id = vo.getBoId();",14546],["this.version = vo.getBoVersion();",14546],["voList.add(vo);",14596],["if (vo != null)",14627]],"useCount":597447},{"word":"void","context":[["public void clear() {",96552],["public void actionPerformed(ActionEvent e) {",187882],["public void actionPerformed(java.awt.event.ActionEvent evt) {",112800],["public void setUp() throws Exception {",117044],["public void setName(String name) {",119986],["protected void onCreate(Bundle savedInstanceState) {",174571],["public void onClick(View v) {",215214],["public static void main(String[] args) {",291153],["public void run() {",806195],["public void onCreate(Bundle savedInstanceState) {",83187]],"useCount":27724726},{"word":"w","context":[["this.w = w;",4961],["this.w = w;",4961],["super.onSizeChanged(w, h, oldw, oldh);",6008],["* @param w",6138],["protected void onSizeChanged(int w, int h, int oldw, int oldh) {",6355],["w.addDocument(doc);",3663],["return w;",7808],["w.close();",10486],["Log.w(TAG, e);",3488],["w.flush();",3151]],"useCount":748857},{"word":"w3","context":[["*                         &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",10936],["*                                   &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",7744],["*     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",105617],["elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));",19876],["*               &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",19435],["*   &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}string\">",14114],["*       &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",9972],["writeAttribute(\"xsi\",\"http://www.w3.org/2001/XMLSchema-instance\",\"type\",",9678],["elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"long\"));",8875],["*     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\"&gt;",6736]],"useCount":481266},{"word":"w3c","context":[["import org.w3c.dom.DOMImplementation;",1591],["import org.w3c.dom.Node;",54054],["import org.w3c.dom.Document;",58229],["import org.w3c.dom.NodeList;",35180],["import org.w3c.dom.NamedNodeMap;",8722],["import org.w3c.dom.*;",7056],["import org.w3c.dom.Attr;",5650],["import org.w3c.dom.DOMException;",4885],["import org.w3c.dom.Text;",4561],["import org.w3c.dom.Element;",65613]],"useCount":314131},{"word":"was","context":[["* This method was generated by MyBatis Generator.",58319],["* This file was auto-generated from WSDL",49423],["// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)",43888],["// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)",29771],["// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2",20257],["* This field was generated by MyBatis Generator.",18406],["* This class was automatically generated by the",17601],["* This code was generated",11074],["* This file was automatically generated by SWIG (http://www.swig.org).",10675],["* This class was automatically generated with",8470]],"useCount":1247614},{"word":"we","context":[["// we cannot intantiate the class - throw the original Axis fault",3439],["* This default implementation returns null so that we can easily ignore cases;",26089],["Perhaps with your help we can be more than a few, and make Mesquite better.",22515],["+ \"even though we're Cloneable!\", e);",7484],["// value isIncludeRecord has been set, then we return null and",7273],["// value isIncludeRecord has not been set, then we return null and",7273],["// we have to store this data until last moment since it is not possible to write any",6150],["// A start element we are not expecting indicates an invalid parameter was passed",6058],["// A start element we are not expecting indicates a trailing invalid property",3822],["+ \"even though we're Cloneable!\",",2971]],"useCount":1967325},{"word":"web","context":[["Mesquite's web site is http://mesquiteproject.org",22514],["import org.springframework.web.bind.annotation.RequestMapping;",63771],["import org.springframework.web.bind.annotation.RequestMethod;",39313],["import org.springframework.web.servlet.ModelAndView;",22777],["import org.springframework.web.bind.annotation.ModelAttribute;",10711],["import org.springframework.web.bind.annotation.RequestParam;",21947],["import org.springframework.web.bind.annotation.ResponseBody;",20908],["import org.springframework.web.bind.annotation.PathVariable;",18399],["import org.springframework.web.bind.annotation.RestController;",13792],["*  Complete list of developers available at our web site:",11027]],"useCount":936954},{"word":"when","context":[["// when",53817],["// Called when another command which requires one or more of the same",6339],["// Make this return true when this Command no longer needs to run execute()",6340],["import static org.mockito.Mockito.when;",55981],["* It is intended to be used when one called to an Assembler is made.",7273],["/** Called when the activity is first created. */",7726],["\"when\\n\" +",10529],[".when()",12279],["//when",13557],["* it's useful to ignore a case when inheritance will catch all the cases anyway.",26089]],"useCount":1807149},{"word":"where","context":[["<p>This symbol is the offset where the {@link android.R.attr#background}",1965],["//Remove all ones in domList where index > voCollection.size() as these should",11973],["<p>This symbol is the offset where the {@link android.R.attr#focusable}",2087],["//where",2238],["by the system. Favor this option over \"always\" where possible.",2316],["<p>This symbol is the offset where the {@link android.R.attr#minWidth}",2379],["// where",2578],["<p>This symbol is the offset where the {@link android.R.attr#gravity}",2594],["<p>This symbol is the offset where the {@link android.R.attr#id}",2808],["<p>This symbol is the offset where the {@link android.R.attr#layout_gravity}",3303]],"useCount":648331},{"word":"whether","context":[["/*  This tracker boolean wil be used to detect whether the user called the set method",4991],["*   for this attribute. It will be used to determine whether to include this field",4991],["// return whether it worked",3906],["* a boolean indicating whether this is a configuration object or not",3793],["/** returns whether this module is requesting to appear as a primary choice */",3571],["*       whether in tort (including negligence), contract, or otherwise,",2735],["*       \"Work\" shall mean the work of authorship, whether in Source or",2735],["*       direction or management of such entity, whether by contract or",2735],["*       \"Derivative Works\" shall mean any work, whether in Source or Object",2735],["whether in tort (including negligence), contract, or otherwise,",2208]],"useCount":464382},{"word":"which","context":[["* which accompanies this distribution, and is available at",205415],["* @param responseFields Use this field to include those fields which are not included by default.",8595],["//Find out which objects need to be removed",11574],["// check for required fields of primitive type, which can't be checked in the validate method",12733],["module.  An independent module is a module which is not derived from",20690],["* children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.",7493],["* which accompanies this distribution.",34541],["/** <p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",42975],["public void onClick(DialogInterface dialog, int which) {",61196],["<p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",87204]],"useCount":1889123},{"word":"while","context":[["while (rs.next()) {",46836],["while (iterator.hasNext()) {",52027],["while (true)",42280],["while (iter.hasNext()) {",60853],["while (iter.hasNext())",41897],["} while (true);",41684],["while (i.hasNext()) {",37659],["*             If any internal errors are encountered inside the client while",35112],["while (true) {",219180],["while (it.hasNext()) {",98158]],"useCount":2905983},{"word":"widget","context":[["import android.widget.TextView;",217026],["import android.support.v7.widget.RecyclerView;",38509],["import android.widget.Toast;",115638],["import android.widget.ArrayAdapter;",47970],["import android.widget.AdapterView;",55668],["import android.widget.LinearLayout;",56575],["import android.widget.EditText;",64677],["import android.widget.ListView;",68010],["import android.widget.Button;",91748],["import android.widget.ImageView;",100512]],"useCount":1529620},{"word":"width","context":[["int width;",4174],["int width = getWidth();",3996],["public void resize(int width, int height) {",3842],["this.width = width;",24486],["this.width = width;",24486],["return width;",20078],["* @param width",13601],["private int width;",8400],["for (int x = 0; x < width; x++) {",6273],["int width = 0;",4682]],"useCount":1063175},{"word":"will","context":[["* it's useful to ignore a case when inheritance will catch all the cases anyway.",26089],["// Any modifications to this file will be lost upon recompilation of the source schema.",64071],["// Handle action bar item clicks here. The action bar will",26835],["* returning a non-null result will terminate the switch.",26832],["//Sybase stores it as a single space, Oracle stores it as NULL. This fix will make them consistent at least.",7191],["* @throws TorqueException Any exceptions caught during processing will be",8858],["/* This file and method are generated by TestGenerator, any edits will be overwritten by the next generation. */",6556],["// does not warrant that the operation of the program will be",5542],["an action bar/action mode. This will be used to determine how many",7657],["* returned list will be present inside the JAXB object.",84324]],"useCount":2374604},{"word":"window","context":[["if (window == null) {",1387],["Window window = getWindow();",1751],["window",2005],["// Detect X or ALT-F4 or something that kills this window...",2516],["window.setVisible(true);",2739],["return window;",2810],["this.window = window;",2934],["this.window = window;",2934],["if (window != null) {",2970],["import org.eclipse.jface.window.Window;",3436]],"useCount":345817},{"word":"with","context":[["<p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",87204],["Redistribution and use in source and binary forms, with or without modification,",25923],["* along with OpenNMS(R).  If not, see:",27188],["and/or other materials provided with the distribution.",27946],["*  distributed with this work for additional information",30628],["*             either a problem with the data in the request, or a server side issue.",35135],["/** <p>Must be a dimension value, which is a floating point number appended with a unit such as \"<code>14.5sp</code>\".",42975],["* Redistribution and use in source and binary forms, with or without",168359],["* distributed with this work for additional information",436355],["* and/or other materials provided with the distribution.",24823]],"useCount":4678876},{"word":"within","context":[["*           notices within Derivative Works that You distribute, alongside",2735],["* <p>The following schema fragment specifies the expected content contained within this class.",169528],["* This method is called from within the constructor to initialize the form.",17286],["/** This method is called from within the constructor to",10485],["* Organizational entity within client",5820],["* The following schema fragment specifies the expected content contained within",2836],["*       or a Contribution incorporated within the Work constitutes direct",2735],["*           of the following places: within a NOTICE text file distributed",2735],["*           as part of the Derivative Works; within the Source form or",2735],["*           within a display generated by the Derivative Works, if and",2735]],"useCount":488683},{"word":"without","context":[["* Redistribution and use in source and binary forms, with or without modification, are",4388],["* purpose with or without fee is hereby granted, provided that the above",5440],["*  Redistribution and use in source and binary forms, with or without",5517],["// IS\", without any accompanying services from The Regents. The Regents",5542],["// Redistribution and use in source and binary forms, with or without",8716],["* Util method to write an attribute without the ns prefix",12639],["* Redistribution and use in source and binary forms, with or without modification,",13261],["Redistribution and use in source and binary forms, with or without",18917],["Redistribution and use in source and binary forms, with or without modification,",25923],["* Redistribution and use in source and binary forms, with or without",168359]],"useCount":508659},{"word":"work","context":[["// TODO: Warning - this method won't work in the case the id fields are not set",7191],["*  distributed with this work for additional information",30628],["making a combined work based on this library.  Thus, the terms and",20656],["* See the NOTICE file distributed with this work for additional",19893],["// distributed with this work for additional information",18526],["* distributed with this work for additional information",436355],["* agreements. See the NOTICE file distributed with this work",15998],["* To work on unit tests, switch the Test Artifact in the Build Variants view.",13652],["distributed with this work for additional information",9914],["* library is not considered a \"derivative work\" of the program:",7566]],"useCount":912423},{"word":"world","context":[["import net.minecraft.world.World;",71652],["import net.minecraft.world.IBlockAccess;",11819],["this.world = world;",5895],["this.world = world;",5895],["super(world);",5415],["import net.minecraft.world.biome.BiomeGenBase;",5124],["import net.minecraft.world.WorldServer;",3316],["* Hello world!",3152],["* @param world",3044],["return world;",3002]],"useCount":559243},{"word":"write","context":[["out.write('\\n');",12998],["out.write(NL);",10935],["schemes.get(oprot.getScheme()).getScheme().write(oprot, this);",11239],["public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {",12145],["write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));",12415],["* Util method to write an attribute without the ns prefix",12639],["* along with this distribution; if not, write to:",15523],["* along with Resin Open Source; if not, write to the",22227],["out.write(\"\\n\");",23438],["out.write(\"\\r\\n\");",31644]],"useCount":1566882},{"word":"writer","context":[["* @param writer",6616],["writer.close();",68479],["if (writer != null) {",7503],["return writer.toString();",7736],["writer.addDocument(doc);",7922],["return writer;",8155],["writer.newLine();",9651],["StringWriter writer = new StringWriter();",15689],["writer.writeEndElement();",6464],["writer.flush();",29240]],"useCount":898662},{"word":"ws","context":[["import javax.ws.rs.core.MediaType;",42437],["import javax.ws.rs.core.Response;",45379],["import javax.ws.rs.QueryParam;",11880],["import javax.ws.rs.core.Context;",14214],["import javax.ws.rs.Consumes;",17783],["import javax.ws.rs.POST;",19425],["import javax.ws.rs.PathParam;",20441],["import javax.ws.rs.Produces;",32651],["import javax.ws.rs.GET;",33046],["import javax.ws.rs.Path;",38740]],"useCount":641285},{"word":"wso2","context":[["import org.wso2.carbon.context.PrivilegedCarbonContext;",2595],["import org.wso2.developerstudio.eclipse.gmf.esb.diagram.providers.EsbElementTypes;",2665],["import org.wso2.developerstudio.eclipse.gmf.esb.diagram.part.EsbVisualIDRegistry;",2078],["import org.wso2.carbon.registry.core.exceptions.RegistryException;",2067],["import org.wso2.developerstudio.eclipse.gmf.esb.EsbPackage;",1787],["import org.wso2.developerstudio.eclipse.gmf.esb.EsbFactory;",1607],["import org.wso2.carbon.context.CarbonContext;",1578],["import org.wso2.siddhi.core.executor.ExpressionExecutor;",1538],["import org.wso2.carbon.utils.CarbonUtils;",1519],["import org.wso2.carbon.user.api.UserStoreException;",1472]],"useCount":334608},{"word":"www","context":[["* http://www.eclipse.org/legal/epl-v10.html",189338],["* or visit www.oracle.com if you need additional information or have any",139265],["*     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">",105617],["* http://www.eclipse.org/org/documents/edl-v10.php.",40289],["* <a href=\"https://www.owasp.org/index.php/Benchmark\">https://www.owasp.org/index.php/Benchmark</a>.",31273],["* <a href=\"https://www.owasp.org/index.php/Benchmark\">https://www.owasp.org/index.php/Benchmark</a>.",31273],["* CA 95054 USA or visit www.sun.com if you need additional information or",29458],["*     http://www.opennms.org/",27205],["*     http://www.opennms.com/",27205],["* 02110-1301 USA, or see the FSF site: http://www.fsf.org.",23819]],"useCount":1979839},{"word":"x","context":[["for(int x = 0; x < this.col.size(); x++)",18899],["for(int x = 0; x < errorCount; x++)",16157],["for(int x = 0; x < errorCount; x++)",16157],["for(int x = 0; x < errorCount; x++)",16157],["for(int x = 0; x < this.col.size(); x++)",18899],["for(int x = 0; x < this.col.size(); x++)",18899],["* @param x",38034],["return x;",39881],["this.x = x;",42846],["this.x = x;",42846]],"useCount":4085290},{"word":"xml","context":[["import javax.xml.bind.annotation.XmlType;",182690],["import javax.xml.bind.annotation.XmlAccessorType;",176902],["import javax.xml.bind.annotation.XmlAccessType;",176699],["import javax.xml.bind.annotation.XmlElement;",101222],["import javax.xml.bind.annotation.XmlRootElement;",97132],["javax.xml.namespace.QName _xmlType) {",67909],["// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a>",64734],["// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a>",64734],["import org.xml.sax.SAXException;",54870],["import javax.xml.bind.annotation.XmlAttribute;",53087]],"useCount":3301881},{"word":"xmlWriter","context":[["javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {",14861],["xmlWriter.writeAttribute(namespace,attName,attValue);",11591],["xmlWriter.setPrefix(prefix,namespaceURI);",11592],["xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));",12002],["xmlWriter);",12322],["registerPrefix(xmlWriter, namespace);",12626],["xmlWriter.writeNamespace(prefix, namespaceURI);",12694],["xmlWriter.writeEndElement();",14456],["xmlWriter.writeNamespace(prefix, namespace);",22665],["xmlWriter.setPrefix(prefix, namespace);",22665]],"useCount":319826},{"word":"y","context":[["for (int y = 0; y < height; y++) {",6548],["this.y = y;",40425],["for (int y = 0; y < height; y++) {",6548],["for(int y = 0; y < listOfOtherErrors.length; y++)",8064],["for(int y = 0; y < listOfOtherErrors.length; y++)",8064],["for(int y = 0; y < listOfOtherErrors.length; y++)",8064],["return y;",21838],["* @param y",27003],["this.y = y;",40425],["listOfErrors.add(listOfOtherErrors[y]);",8064]],"useCount":2185968},{"word":"you","context":[["* interest in our trademarks remain entirely with us. If you want to propagate",5714],["* Do not make changes to this file unless you know what you are doing--modify",10675],["* Do not make changes to this file unless you know what you are doing--modify",10675],["obligated to do so.  If you do not wish to do so, delete this",20629],["this exception to your version of the library, but you are not",20635],["terms of your choice, provided that you also meet, for each linked",20904],["// as you specify a parent activity in AndroidManifest.xml.",26880],["* CA 95054 USA or visit www.sun.com if you need additional information or",29458],["* not a snapshot. Therefore any modification you make to the",84353],["* or visit www.oracle.com if you need additional information or have any",139265]],"useCount":1222706},{"word":"your","context":[["* recipient has the option to distribute your version of this file under",4658],["* terms of your choice, provided that you also meet, for each linked",3400],["* exception statement from your version.",3915],["* If you wish your version of this file to be governed by only the CDDL or",4947],["// TODO: Add your conditions here.",6913],["exception statement from your version. */",18839],["this exception to your version of the library, but you are not",20635],["terms of your choice, provided that you also meet, for each linked",20904],["Perhaps with your help we can be more than a few, and make Mesquite better.",22515],["// TODO add your handling code here:",29680]],"useCount":447539},{"word":"z","context":[["this.z = z;",11278],["* @param z",7152],["return z;",6672],["model.rotateAngleZ = z;",2635],["z = z + 1;",2543],["z = z + 1;",2543],["y = z + 1;",2518],["grammarBuilder.append(\"ID : 'a'..'z'+ ;\\n\");",2240],["TileEntity te = world.getTileEntity(x, y, z);",1960],["this.z = z;",11278]],"useCount":656674}]