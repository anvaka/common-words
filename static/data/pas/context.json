[{"word":"A","context":[["BESEN - A ECMAScript Fifth Edition Object Pascal Implementation",296],["B := A;",174],["ADEQUACAO A QUALQUER PROPOSITO EM PARTICULAR. Consulte a Licenca Publica",168],["if TryEncodeDate(A,M,DD,DiaAnterior) then",145],["DecodeDate(FechaK,A,M,D);",123],["* @param avcl A pointer to an arbitrary struct of which the first field is a",116],["Result := ItemsCompare(A, B);",106],["Result := ItemsEqual(A, B);",106],["with A^ do",104],["A: TsdAttribute;",97]],"useCount":18228},{"word":"ACollection","context":[["inherited Create(ACollection);",158],["ExceptionHelper.Throw_ArgumentNilError('ACollection');",100],["///  <exception cref=\"SysUtils|EArgumentNilException\"><paramref name=\"ACollection\"/> is <c>nil</c>.</exception>",116],["AddAll(ACollection);",134],["ACollection.AddAll(Self);",143],["It := ACollection.First;",886],["ACollection.Clear;",159],["if FSize <> ACollection.Size then",143],["constructor Create(ACollection: TCollection); override;",152],["if ACollection = nil then",1094]],"useCount":5460},{"word":"AF","context":[["AF:PFechasLiq;",83],["AF^.Causado := False;",108],["AF^.Anticipado := False;",108],["AF := FechasLiq.Items[J];",110],["AF^.Devuelto := False;",138],["AF^.Vencida := False;",143],["if AF^.Devuelto then",150],["if AF^.Vencida then",151],["AF^.Corrientes := False;",108],["New(AF);",80]],"useCount":2792},{"word":"AList","context":[["AList.Free;",181],["AList.Clear;",175],["AList := TStringList.Create;",130],["for i := 0 to AList.Count - 1 do",122],["AList.Add(VItem);",111],["FList := AList;",105],["AList := TList.Create;",75],["AList: TStringList;",64],["const AList: IInterfaceListSimple;",62],["for i := 0 to AList.Count-1 do",45]],"useCount":2898},{"word":"AName","context":[["///\t<param name=\"AName\">",106],["Result.Name := AName;",113],["const AName: string;",246],["FName := AName;",333],["with NodeFindOrCreate(AName) do",48],["AName,",47],["Name := AName;",91],["Data := InternAddItem(AName);",77],["Child := NodeByName(AName);",59],["AttributeAdd(AName, S);",50]],"useCount":3232},{"word":"AOwner","context":[["inherited Create(AOwner);",4382],["FOwner := AOwner;",378],["AOwner: TComponent;",112],["constructor Create(AOwner: TComponent); override;",5003],["constructor Create(AOwner: TComponent);",103],["constructor Create(AOwner: TComponent);  override;",222],["constructor Create(AOwner : TComponent); override;",324],["{ constructor Create(AOwner: TComponent) }",123],["class function MakeNewItem(AOwner : TIdFTPListItems) : TIdFTPListItem; override;",129],["constructor Create(AOwner: TPersistent); override;",139]],"useCount":13062},{"word":"APointer","context":[["LMsgPtr := NativeUIntToStrBuf(APointer.AllocationGroup, LMsgPtr);",36],["LMsgPtr := NativeUIntToStrBuf(APointer.AllocationNumber, LMsgPtr);",36],["MoveX8LP(APointer^, Result^, ANewSize);",36],["PLargeBlockHeader(PByte(APointer) - LargeBlockHeaderSize).UserAllocatedSize := ANewSize;",36],["if APointer.AllocationGroup > 0 then",51],["LBlockHeader := PNativeUInt(PByte(APointer) - BlockHeaderSize)^;",74],["FastFreeMem(APointer);",104],["Result := APointer;",157],["MoveX16LP(APointer^, Result^, ANewSize);",36],["System.Move(APointer^, Result^, ANewSize);",51]],"useCount":2905},{"word":"AR","context":[["AR^.nomcuenta := IBSQL3.FieldByName('NOMBRE').AsString;",393],["AR^.nocredito := '';",406],["AR^.estado := 'O';",406],["AR^.tasa := 0;",406],["AR^.monto := 0;",406],["AR^.idpersona := '';",406],["AR^.nocuenta := 0;",406],["AR^.tipoide := 0;",406],["Lista.Add(AR);",414],["New(AR);",701]],"useCount":13951},{"word":"ARect","context":[["R := ARect;",476],["const ARect: TRect;",116],["with ARect do",124],["const ARect: TDoubleRect",193],["Canvas.FillRect(ARect);",170],["ACanvas.FillRect(ARect);",106],["const ARect: TDoubleRect;",99],["ARect: TRect;",357],["const ARect: TRect",87],["OffsetRect(ARect, 1, 1);",79]],"useCount":8403},{"word":"ASender","context":[["LContext := ASender.Context as TIdFTPServerContext;",190],["ASender.SendReply;",182],["if LContext.IsAuthenticated(ASender) then begin",151],["LContext := TIdIMAP4PeerContext(ASender.Context);",112],["ASender.Reply.NumericCode := 500;",95],["CmdSyntaxError(ASender);",85],["CmdNotImplemented(ASender);",85],["if not AuthRequired(ASender) then begin",82],["if not SecLayerRequired(ASender) then begin",81],["SendUnassignedDefaultMechanism(ASender);",76]],"useCount":2644},{"word":"ASource","context":[["FSource := ASource;",84],["procedure Assign(ASource: TPersistent); override;",212],["inherited Assign(ASource);",214],["case ASource of",96],["const ASource: ILocalCoordConverter;",69],["Assert(Assigned(ASource));",46],["const ASource: IGeometryLonLatLine;",38],["Result := ASource;",36],["procedure Deserialize(const ASource: TStream); override;",31],["const ASource: IBitmap32Static;",30]],"useCount":2559},{"word":"AStream","context":[["const AStream: TStream",84],["procedure SaveToStream(AStream: TStream); override;",62],["procedure LoadFromStream(AStream: TStream); override;",74],["AStream.Free;",80],["AStream := TMemoryStream.Create;",138],["FStream := AStream;",163],["procedure LoadFromStream(AStream: TStream);",109],["procedure SaveToStream(AStream: TStream);",105],["AStream.Position := 0;",99],["const AStream: TStream;",103]],"useCount":2731},{"word":"AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER","context":[["(* AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER *)",3288]],"useCount":3288},{"word":"AValue","context":[["// AValue. If AValue = ADefault, and WriteOnDefault = False, no subnode will be added.",90],["FValue := AValue;",313],["if AValue then",180],["if WriteOnDefault or (AValue <> ADefault) then",150],["if AValue <> nil then",122],["Result := AValue;",235],["if AValue then begin",93],["FVisible := AValue;",93],["// AValue. If AValue = ADefault, and WriteOnDefault = False, no subnode will be added.",90],["AValue.FreeNotification(Self);",83]],"useCount":12094},{"word":"Abort","context":[["DoArchiveProgress(100, Abort);",50],["if not Abort then",49],["var Abort : Boolean);",64],["procedure Abort;",77],["Abort : Boolean;",97],["if Abort then",141],["Abort := FALSE;",176],["Abort := False;",222],["Abort;",1873],["Abort; // D4 does not generate an exception!",40]],"useCount":3731},{"word":"Action","context":[["property Action;",102],["Action := Cafree;",92],["Action := cafree;",96],["var Action: TReconcileAction);",107],["procedure ActionListUpdate(Action: TBasicAction; var Handled: Boolean);",110],["case Action of",169],["Action := caFree;",802],["var Action: TCloseAction);",1110],["procedure FormClose(Sender: TObject; var Action: TCloseAction);",2924],["procedure TForm1.FormClose(Sender: TObject; var Action: TCloseAction);",119]],"useCount":7713},{"word":"Active","context":[["Active := False;",678],["Active := True;",596],["if dm.c_6_genid.Active then",247],["if Active then",245],["if Dm.cds_parametro.Active then",208],["if (s_parametro.Active) then",199],["if dm.cds_parametro.Active then",141],["Active := true;",99],["if (dm.cds_parametro.Active) then",95],["if not Active then",71]],"useCount":6344},{"word":"Add","context":[["SQL.Add('SELECT');",455],["Lista.Add(AR);",414],["MyCuotasLiq.Lista.Add(AR);",386],["LCommandHandler := CommandHandlers.Add;",300],["ResultsMemo.Lines.Add('');",296],["LCmd := CommandHandlers.Add;",349],["sql.Add(texto);",831],["SQL.Add('FROM');",670],["Strings.Add(Output);",616],["SQL.Add('WHERE');",545]],"useCount":51443},{"word":"Added","context":[["Added IPv6 support",40],["{ Added 1.8 }",48],["{CC3: Added: Retrieve the text part of the message...}",49],["<li>06/06/07 - DaStr - Added GLColor to uses (BugtrackerID = 1732211)",57],["Added localization comments.",326],["<li>23/08/10 - Yar - Added OpenGLTokens to uses, replaced OpenGL1x functions to OpenGLAdapter",139],["// Added by Massimo Nardello",132],["(*** Added in the v2 interface ***)",81],["<li>30/03/07 - DaStr - Added $I GLScene.inc",99],["Added \"Do not Localize\" comments.",115]],"useCount":3249},{"word":"Align","context":[["Align := alLeft;",125],["property    Align;",150],["{Align branch target}",709],["Align := alClient;",295],["property Align;",741],["Align := alBottom;",75],["memLab.Align := alClient;",77],["case Align of",77],["Align := alTop;",83],["wc.AddProperty('Align', TPropertyEnum, 'Component alignment');",124]],"useCount":3624},{"word":"AnsiChar","context":[["Result[1] := AnsiChar(b1);",45],["function  EncodeChar(const Ch: WideChar): AnsiChar; override;",526],["function  DecodeChar(const P: AnsiChar): WideChar; override;",526],["LErrorMessageTitle: array[0..1023] of AnsiChar;",120],["c: AnsiChar;",115],["function MKBETAG(a, b, c, d: AnsiChar): integer; {$IFDEF HasInline}inline;{$ENDIF}",68],["if (((SOIChar(v) < 256) and (AnsiChar(v) in path)) or (SOIChar(v) >= 256)) then",63],["Ch: AnsiChar;",63],["C: AnsiChar;",49],["LErrorMessage: array[0..32767] of AnsiChar;",46]],"useCount":4194},{"word":"AnsiString","context":[["S : AnsiString;",63],["s: AnsiString;",700],["): AnsiString;",130],["Name: AnsiString;",95],["FileName: AnsiString;",49],["out AContentType: AnsiString",50],["const ADefault: AnsiString",52],["RawByteString = AnsiString;",55],["s : AnsiString;",73],["S: AnsiString;",219]],"useCount":8935},{"word":"Append","context":[["{@member Append",84],["Append;",1008],["tok.pb.Append(@v, 1);",294],["Append(str + start_offset, pos - start_offset);",135],["sb.Append(')');",105],["mdTmpIds.Append;",95],["function Append(buf: PSOChar; Size: Integer): Integer; override;",87],["function Append(buf: PSOChar): Integer; override;",66],["Append(TOK_DQT, 1);",66],["TabelaArmazenar.Append;",52]],"useCount":4862},{"word":"Application","context":[["property Application: Application read Get_Application;",161],["Application.CancelHint;",119],["property Application: IDispatch readonly dispid 1610743808;",132],["Application.HandleException(Self);",132],["function Get_Application: Application; safecall;",161],["property Application: Application read Get_Application;",161],["property Application: Application readonly dispid 1;",210],["property Application: Application readonly dispid 1;",210],["Application.Terminate;",1258],["Application.ProcessMessages;",5553]],"useCount":12721},{"word":"AsCurrency","context":[["function AsCurrency: Currency;",37],["IBSQLAux.ParamByName('MONTO_RETENCION').AsCurrency := 0;",42],["Valor := IBSQL3.FieldByName('SALDO').AsCurrency;",122],["Saldo := FieldByName('SALDO').AsCurrency;",38],["ParamByName('MONTO_RETENCION').AsCurrency := 0;",116],["ParamByName('CAPITAL').AsCurrency := Capital;",99],["ParamByName('INTERES').AsCurrency := Interes;",83],["Valor := Valor + IBSQL3.FieldByName('SALDO').AsCurrency;",71],["ParamByName('DEBITO').AsCurrency := 0;",65],["Result := obj.AsCurrency else",63]],"useCount":2988},{"word":"AsInteger","context":[["ParamByName('ID_AGENCIA').AsInteger := IBQuery1.FieldByName('ID_AGENCIA').AsInteger;",161],["IBSQL3.ParamByName('MES').AsInteger := Monthof(EdFechaCorte.Date);",156],["Params.ParamByName('wbillid').AsInteger := FID;",148],["IBSQL3.ParamByName('ID_AGENCIA').AsInteger := Agencia;",148],["ParamByName('ID_IDENTIFICACION').AsInteger := DBidentificacioncod.KeyValue;",126],["ParamByName('ID_IDENTIFICACION').AsInteger := DBidentificacion.KeyValue;",112],["ParamByName('ID_AGENCIA').AsInteger := IBQuery1.FieldByName('ID_AGENCIA').AsInteger;",161],["ParamByName('ID_AGENCIA').AsInteger := agencia;",203],["ParamByName('ID_AGENCIA').AsInteger := Agencia;",1250],["ParamByName('ID_AGENCIA').AsInteger := IdAgencia;",209]],"useCount":14834},{"word":"AsString","context":[["ParamByName('ID_PERSONA').AsString := JvDocumento.Text;",147],["ParamByName('ID_SOLICITUD').AsString := num_radicado;",269],["IBSQL3.ParamByName('CODIGO').AsString := Codigo;",426],["AR^.nomcuenta := IBSQL3.FieldByName('NOMBRE').AsString;",393],["ParamByName('ID_COLOCACION').AsString := TableName;",221],["ParamByName('ID_COLOCACION').AsString := IdColocacion;",221],["ParamByName('ID_EMPLEADO').AsString := DBAlias;",219],["ParamByName('ID_COLOCACION').AsString := vColocacion;",185],["ParamByName('ID_COLOCACION').AsString := IBQuery1.FieldByName('ID_COLOCACION').AsString;",166],["ParamByName('ID_COLOCACION').AsString := IBQuery1.FieldByName('ID_COLOCACION').AsString;",166]],"useCount":14406},{"word":"Assert","context":[["Assert(Length(Points) > 0);",96],["Assert(Size = Context.BufferSize);",74],["Assert(List <> nil);",76],["Assert(OutF.SeekEoln = False);",79],["Assert(Visitor is TgaCustomParserVisitor, Format(SassIncorrectParserVisitor, [Visitor.ClassName]));",89],["Assert(False);",535],["Assert.WillRaise(",192],["Assert.IsNotNull(result, ' Nil result ');",119],["Assert(Assigned(ABitmap32StaticFactory));",111],["Assert.WillNotRaise(",103]],"useCount":6473},{"word":"Assign","context":[["Assign method copies the contents of another similar object.",81],["FFont.Assign(Value);",85],["Canvas.Font.Assign(Font);",70],["El método Assign copia el contenido de un objeto similar.",81],["procedure Assign(oSource : TAdvObject); override;",134],["procedure Assign(ASource: TPersistent); override;",212],["inherited Assign(ASource);",214],["// Assign",240],["inherited Assign(Source);",764],["procedure Assign(Source: TPersistent); override;",1461]],"useCount":6113},{"word":"Assigned","context":[["if Assigned(FOnChange) then FOnChange(Self);",219],["if Assigned(FOnMessage) then",160],["if Assigned(FOnChange) then",382],["if Assigned(Node) then",279],["if Assigned(Result) then",276],["if not Assigned(Result) then",254],["Guard.CheckNotNull(Assigned(source), 'source');",243],["if Assigned(FArchive) then",237],["if Assigned(Value) then",213],["if Assigned(fOnChange) then fOnChange(Self);",194]],"useCount":30012},{"word":"AssistiveData","context":[["InitSpeech.AssistiveData[Length(InitSpeech.AssistiveData) - 1] :=",87],["InitSpeech.AssistiveData[Length(InitSpeech.AssistiveData) - 1] :=",87],["SetLength(InitSpeech.AssistiveData, Length(InitSpeech.AssistiveData) + 1);",85],["InitSpeech.AssistiveData[Length(InitSpeech.AssistiveData) - 1].Description :=",108],["InitSpeech.AssistiveData[Length(InitSpeech.AssistiveData) - 1].Description :=",108],["InitSpeech.AssistiveData[Length(InitSpeech.AssistiveData) - 1].TheObject :=",114],["InitSpeech.AssistiveData[Length(InitSpeech.AssistiveData) - 1].TheObject :=",114],["sak.AssistiveData[Length(sak.AssistiveData) - 1] :=",77],["sak.AssistiveData[Length(sak.AssistiveData) - 1].TheObject :=",77],["SetLength(InitSpeech.AssistiveData, Length(InitSpeech.AssistiveData) + 1);",85]],"useCount":3143},{"word":"Author","context":[["Author:    nbi",99],["Author: fireundubh <fireundubh@gmail.com>",115],["Author:    Dan",138],["Author:       François PIETTE",156],["Author: Jean SUZINEAU <Jean.Suzineau@wanadoo.fr>                            |",625],["{ Author:        $Author::                                                                       $ }",158],["Version  Date      Author      Modification",260],["{ Author:        $Author:: outchy                                                                $ }",214],["{ Author:        $Author:: outchy                                                                $ }",214],["{ Author:        $Author::                                                                       $ }",158]],"useCount":4084},{"word":"Availability","context":[["*  Availability:",10322]],"useCount":10322},{"word":"B","context":[["B: TBitmap;",142],["Result := B;",300],["B := 0;",274],["B := A;",174],["B: Boolean;",162],["B: Byte;",161],["B := B shr 6;",118],["B := B shr 6;",118],["if B then",126],["B.Free;",285]],"useCount":17715},{"word":"BEGIN","context":[["THEN BEGIN",212],["BEGIN",23004],["ELSE BEGIN",291],["IF EntityDef <> NIL THEN BEGIN",27],["WHILE (P^ <> #32) AND (P^ <> #0) DO BEGIN",28],["END ELSE BEGIN",131],["//DOM-IGNORE-BEGIN",69],["'?' : BEGIN",42],["'%' : BEGIN",30],["DO BEGIN",30]],"useCount":24599},{"word":"BOOL","context":[["pcbComputedHash :PDWORD):BOOL ; stdcall;",42],["pcbProvName :PDWORD):BOOL ; stdcall;",49],["):BOOL ; stdcall;",182],["): BOOL; stdcall;",146],["booln: BOOL;",93],["dwFlags: DWORD): BOOL; stdcall;",88],["var booln: BOOL;",74],["dwFlags :DWORD):BOOL ; stdcall;",63],["{ V4  i.. BOOL               }",57],["BOOL = LongBool;",44]],"useCount":3347},{"word":"Begin","context":[["THEN Begin",241],["End Else Begin",278],["Begin",73027],["{Begin BillingAware}",226],["With ActiveCircuit Do Begin",80],["If ActiveCircuit <> Nil Then Begin",83],["//Skin Patch Begin",105],["Then Begin",107],["ELSE Begin",144],["Else Begin",111]],"useCount":76132},{"word":"BeginRead","context":[["lock.BeginRead();",14],["FSyncLock.BeginRead;",14],["SyncReaderWriter.BeginRead;",3126],["CS.BeginRead;",207],["FCS.BeginRead;",101],["FSync.BeginRead;",36],["procedure BeginRead;",33],["FSynchronizer.BeginRead;",30],["FLock.BeginRead;",28],["FDLLSync.BeginRead;",15]],"useCount":3615},{"word":"BeginUpdate","context":[["tvNotes.Items.BeginUpdate;",49],["AAddresses.BeginUpdate;",45],["DisplayMemo.Lines.BeginUpdate;",45],["Tree.Items.BeginUpdate;",55],["Strings.BeginUpdate;",56],["Lines.BeginUpdate;",70],["List.BeginUpdate;",130],["procedure BeginUpdate;",242],["Items.BeginUpdate;",371],["BeginUpdate;",1272]],"useCount":3341},{"word":"BeginWrite","context":[["BeginWrite(oPortrait, A4, msMM, Langue, Preview);",39],["ResourceStringDomainListCS.BeginWrite;",22],["FSourceHashMatrixCS.BeginWrite;",24],["function BeginWrite: Boolean;",24],["uSynchronizer.BeginWrite;",27],["FSynchronizer.BeginWrite;",29],["SyncReaderWriter.BeginWrite;",3096],["CS.BeginWrite;",217],["FCS.BeginWrite;",212],["FSync.BeginWrite;",78]],"useCount":3859},{"word":"Boolean","context":[["): Boolean;",1297],["Selected: Boolean);",292],["WheelDelta: Integer; MousePos: TPoint; var Handled: Boolean);",313],["var Handled: Boolean);",331],["function MoveNext: Boolean;",393],["var accept: Boolean);",399],["function IsEmpty: Boolean;",565],["procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);",616],["Found: Boolean;",654],["if Boolean(Mask and BitRun) then",372]],"useCount":58943},{"word":"Bottom","context":[["glTexCoord2f(1, 1); glVertex2f(Rec.Right, Rec.Bottom);",84],["Canvas.MoveTo(ARect.Left, ARect.Bottom - 1);",50],["Y := (R.Top + R.Bottom) div 2;",51],["Canvas.LineTo(ARect.Right, ARect.Bottom - 1);",55],["Y := (ARect.Top + ARect.Bottom - FHeight) div 2;",60],["if (ARect.Top <= VIntersect) and (VIntersect < ARect.Bottom) then begin",60],["LineTo(Right - 1, Bottom - 1);",61],["Dec(R.Bottom);",62],["gui_Clip_Rect              : (Left:94; Top:75; Right:398; Bottom:410);",85],["glTexCoord2f(0, 1); glVertex2f(Rec.Left,  Rec.Bottom);",100]],"useCount":6446},{"word":"Break","context":[["Break;",19354],["#0, #10, #13: Break;",35],["if not Result then Break;",40],["Inc(Scan); Inc(Match); if (Scan^ <> Match^) then Break;",40],["then Break;",54],["if Terminated then Break;",68],["Break; //. >",93],["Break",529],["else Break;",100],["if (Word(Value) = CodePage) or (Value < 0) then Break;",126]],"useCount":21218},{"word":"Brush","context":[["Canvas.Brush.Style := bsSolid;",225],["Brush.Style := bsSolid;",407],["Brush.Style := bsClear;",387],["Canvas.Brush.Style := bsClear;",238],["DeleteObject(Brush);",231],["Brush.Color := clWhite;",188],["Canvas.Brush.Color := Color;",181],["Brush.Color := Pen.Color;",167],["Canvas.Brush.Color := clWhite;",130],["Brush.Color := Self.Color;",99]],"useCount":6333},{"word":"Bucket","context":[["Bucket := FBuckets[FHashToRangeFunction(Hash(Key), FCapacity)];",132],["Bucket := FBuckets[I];",536],["for J := 0 to Bucket.Size - 1 do",422],["if KeysEqual(Bucket.Entries[I].Key, Key) then",352],["for I := 0 to Bucket.Size - 1 do",567],["if Bucket <> nil then",1103],["Result := Bucket.Entries[I].Value;",194],["Bucket := FBuckets[J];",176],["if ValuesEqual(Bucket.Entries[I].Value, Value) then",176],["Result.Add(Bucket.Entries[J].Key);",132]],"useCount":8899},{"word":"Buf","context":[["case FBuffer.Buf[FBuffer.Run] of",77],["Buf: TBufArr;",540],["Buf := nil;",571],["Handle.Buffer.Release(Pointer(Buf));",540],["Handle.Buffer.Allocate(Pointer(Buf), SizeBuf);",540],["Stream.Write(Buf[0], SizeBuf);",270],["Stream.Read(Buf[0], SizeBuf);",270],["Buf: TStatBuf64;",99],["SetLength(Buf, x);",90],["ZeroMemory(@Buf, SizeOf(Buf));",64]],"useCount":6583},{"word":"Buffer","context":[["Handle.Buffer.Release(Pointer(Buf));",540],["Handle.Buffer.Allocate(Pointer(Buf), SizeBuf);",540],["function Write(const Buffer; Count: Longint): Longint; override;",320],["FreeMem(Buffer);",264],["Buffer: PtrString;",120],["inc(Buffer);",169],["Buffer: Pointer;",181],["Buffer.Chars := P;",196],["Buffer.Length := L;",209],["function Read(var Buffer; Count: Longint): Longint; override;",262]],"useCount":11603},{"word":"Button","context":[["if Button = mbLeft then",196],["procedure MouseUp(Button: TMouseButton; Shift: TShiftState;",92],["if Button = mbRight then",98],["procedure MouseDown(Button: TMouseButton; Shift: TShiftState; X, Y: Integer); override;",136],["inherited MouseDown(Button, Shift, X, Y);",142],["Button: TMouseButton; Shift: TShiftState; X, Y: Integer;",239],["Button: TMouseButton; Shift: TShiftState; X, Y: Integer);",1556],["inherited MouseUp(Button, Shift, X, Y);",109],["procedure MouseDown(Button: TMouseButton; Shift: TShiftState;",107],["Button: TMouseButton;",134]],"useCount":6253},{"word":"Button1Click","context":[["procedure Button1Click(Sender: TObject);",1843],["Button1Click(Self);",18],["procedure TConfig.Button1Click(Sender: TObject);",18],["Button1Click(Sender);",24],["procedure TForm4.Button1Click(Sender: TObject);",25],["procedure TForm3.Button1Click(Sender: TObject);",35],["procedure TfrmMain.Button1Click(Sender: TObject);",52],["procedure TForm2.Button1Click(Sender: TObject);",73],["procedure TMainForm.Button1Click(Sender: TObject);",77],["procedure TForm1.Button1Click(Sender: TObject);",749]],"useCount":2958},{"word":"Byte","context":[["SBCS := Pointer(NativeUInt(Byte(Value shr 16)) * SizeOf(TUniConvSBCS) + NativeUInt(@UNICONV_SUPPORTED_SBCS));",146],["b: Byte;",178],["const ADest: TStringStream; const AOpCode: Byte;",214],["const AZoom: Byte",167],["B: Byte;",161],["SizeBitPix: Byte;",540],["const AZoom: Byte;",356],["VZoom: Byte;",293],["case Byte of",255],["i: Byte;",102]],"useCount":14502},{"word":"C","context":[["C: Char;",286],["case C of",249],["L I C E N S E",297],["{$IFOPT C+}",290],["C := C+1;",216],["{$PACKRECORDS C} (* C/C++-compatible record packing *)",199],["C := C+1;",216],["C := 0;",206],["C: Integer;",200],["{$PACKRECORDS C} (* C/C++-compatible record packing *)",199]],"useCount":16240},{"word":"CFM","context":[["*    Non-Carbon CFM:   in QuickTimeLib 2.5 and later",1102],["*    Non-Carbon CFM:   in CarbonAccessors.o 1.0 and later",106],["*    Non-Carbon CFM:   in InterfaceLib 9.0 and later",111],["*    Non-Carbon CFM:   in QTStreamLib 4.0 and later",148],["*    Non-Carbon CFM:   in QuickTimeLib 4.0 and later",186],["*\tNon-Carbon CFM:   not available",205],["*    Non-Carbon CFM:   in QuickTimeLib 3.0 and later",208],["*    Non-Carbon CFM:   available as macro/inline",947],["*    Non-Carbon CFM:   in InterfaceLib 7.1 and later",1185],["*    Non-Carbon CFM:   not available",3490]],"useCount":9801},{"word":"Canvas","context":[["with Canvas do begin",143],["Canvas.Brush.Style := bsSolid;",225],["with Canvas do",807],["Canvas.Brush.Color := Color;",181],["Canvas.Font := Font;",175],["Canvas.FillRect(ARect);",170],["Canvas.FillRect(R);",158],["Canvas.FillRect(Rect);",144],["Canvas.Brush.Style := bsClear;",238],["DC := Canvas.Handle;",294]],"useCount":15006},{"word":"Caption","context":[["Caption := ' ';",73],["Caption:=Name;",71],["EdTotalColManual.Caption := FormatCurr('#,0.00',TGeneral);",70],["lblQualifier.Caption := 'Date Range';",70],["adit[2].Caption := stringgrid1.Cells[1, stringgrid1.Row]",100],["property Caption;",290],["FormDetails.Caption:=Takbir;",177],["property Caption: WideString read GetCaption write SetCaption;",168],["Caption := '';",154],["( Sender as TMenuItem).Caption));",131]],"useCount":9422},{"word":"Carbon","context":[["*    Non-Carbon CFM:   available as macro/inline",947],["*    Non-Carbon CFM:   in QuickTimeLib 2.5 and later",1102],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only]",821],["*    Mac OS X:         in version 10.0 and later in Carbon.framework",609],["*    Non-Carbon CFM:   in InterfaceLib 7.1 and later",1185],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.5",349],["*    Non-Carbon CFM:   not available",3490],["*    Non-Carbon CFM:   in QuickTimeLib 3.0 and later",208],["*\tNon-Carbon CFM:   not available",205],["*    Non-Carbon CFM:   in QuickTimeLib 4.0 and later",186]],"useCount":12727},{"word":"CarbonLib","context":[["*    CarbonLib:        in CarbonLib 1.1 and later",1009],["*    CarbonLib:        in CarbonLib 1.0.2 and later",327],["*    CarbonLib:        not available in CarbonLib 1.x, is available on Mac OS X version 10.2 and later",259],["*    CarbonLib:        in CarbonLib 1.0.2 and later",327],["*    CarbonLib:        in CarbonLib 1.0 and later",5337],["*    CarbonLib:        in CarbonLib 1.0 and later",5337],["*    CarbonLib:        not available",2016],["*    CarbonLib:        in CarbonLib 1.1 and later",1009],["*    CarbonLib:        not available in CarbonLib 1.x, is available on Mac OS X version 10.2 and later",259],["*    CarbonLib:        in CarbonLib 1.3 and later",210]],"useCount":18386},{"word":"Cardinal","context":[["if Cardinal(Index) >= Cardinal(FCount) then",254],["if Cardinal(Index) >= Cardinal(FCount) then",254],["I: Cardinal;",196],["Size: Cardinal;",169],["i: Cardinal;",122],["Inc(Z.TotalInput, Cardinal(P) - Cardinal(Z.NextInput));",100],["Inc(Z.TotalInput, Cardinal(P) - Cardinal(Z.NextInput));",100],["Msg: Cardinal;",97],["procedure Encode(Source, Dest: Pointer; Count: Cardinal; var BytesStored: Cardinal); override;",91],["procedure Encode(Source, Dest: Pointer; Count: Cardinal; var BytesStored: Cardinal); override;",91]],"useCount":12049},{"word":"Ch","context":[["function  EncodeChar(const Ch: WideChar): AnsiChar; override;",526],["Ch: AnsiChar;",63],["READ(Ch);",65],["Ch : REChar;",75],["Ch := p^;",82],["case Ord(Ch) of",90],["Ch: UCS4;",101],["Ch := P^;",106],["Ch: Char;",164],["case Ch of",240]],"useCount":3802},{"word":"Changed","context":[["procedure Changed; virtual;",82],["Changed: boolean;",50],["Dst.Changed;",50],["Changed := False;",57],["Changed(Self);",74],["Changed := True;",93],["Changed := TRUE;",95],["Changed: Boolean;",109],["Changed(False);",253],["Changed;",1194]],"useCount":3456},{"word":"Char","context":[["I, J: Char;",85],["procedure DBGrid1KeyPress(Sender: TObject; var Key: Char);",87],["Sender: TObject; var Key: Char);",131],["procedure KeyPress(var Key: Char); override;",145],["Ch: Char;",164],["I: Char;",206],["var Key: Char);",2063],["c: Char;",241],["C: Char;",286],["procedure FormKeyPress(Sender: TObject; var Key: Char);",644]],"useCount":7614},{"word":"Check","context":[["Check;",70],["(* Check if linked versions are supported *)",163],["{ Check arguments }",172],["Check(VI <> nil, 'Ýëåìåíò íå íàéäåí');",60],["Check(ReturnValue, 'ReturnValue should be True');",67],["{Check that the block has not been modified since being freed}",68],["Check(not FParser.GetErrorIndex(FErrorIndex), 'GetErrorIndex failure');",69],["Check(c.MoveLast());",78],["{ Check for indexes }",131],["{ Check length }",139]],"useCount":5781},{"word":"CheckEquals","context":[["CheckEquals(True,c.MoveFirst());",148],["CheckEquals(2,ls.size());",124],["CheckEquals(0, FZip.ErrCode, 'Zip Error: ' + FZip.ErrMessage);",124],["CheckEquals(False,c.MoveNext());",166],["CheckEquals(1,ls.size());",171],["CheckEquals(0,ls.size());",222],["CheckEquals(True,IsBitON(attributeBuffer^,BIT_ORDER_SET));",278],["CheckEquals(False,IsBitON(attributeBuffer^,BIT_ORDER_NULL));",278],["CheckEquals(True,c.MoveNext());",446],["CheckEquals(FExpectedString, FActualString, Format('Expected %s but got %s.',",602]],"useCount":8681},{"word":"Checked","context":[["if Checked[i] then",48],["Checked := not Checked;",120],["Checked := not Checked;",120],["lbxSection.Checked[Index] := False;",50],["chkPRN.Checked := True;",51],["if CheckBox2.Checked then",53],["if (Sender as TToggleBox).Checked then",80],["if CheckBox1.Checked then",97],["Checked := True;",99],["if Checked then",124]],"useCount":5204},{"word":"Classes","context":[["Classes;",889],["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,",781],["System.Classes,",610],["Classes, SysUtils;",452],["SysUtils, Classes,",440],["Classes, SysUtils,",421],["Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms,",325],["Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,",2688],["Classes,",4462],["Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,",5455]],"useCount":22492},{"word":"Clear","context":[["FTBLOutrasFuncoes.SQL.Clear;",310],["SQL.Clear;",5847],["Clear;",5134],["procedure Clear;",3163],["procedure Clear; override;",841],["IBSQL3.SQL.Clear;",615],["sql.Clear;",414],["inherited Clear;",337],["Items.Clear;",319],["List.Clear;",316]],"useCount":36580},{"word":"Close","context":[["procedure Close; override;",184],["Self.Close;",222],["IBSQL1.Close;",240],["s_parametro.Close;",256],["Close();",326],["IBSQL3.Close;",733],["procedure Close;",338],["dm.c_6_genid.Close;",507],["Close;",14855],["dm.cds_parametro.Close;",649]],"useCount":27391},{"word":"Code","context":[["This Source Code Form is subject to the terms of the Mozilla Public",123],["* The Initial Developer of the Original Code is",774],["* The Original Code is TurboPower Abbrevia",595],["{ Project JEDI Code Library (JCL)                                                                  }",495],["| The Initial Developer of the Original Code is Lukas Gebauer (Czech Republic).|",325],["* Code outside libavcodec should access this field using:",250],["if LastCmdResult.Code = IMAP_OK then begin",218],["Code: Integer;",195],["Code.GenLocation(ToVisit.Location);",160],["* The Initial Developer of the Original Code is Mauricio",124]],"useCount":9457},{"word":"CodeGeneratorContext","context":[["r3:=CodeGeneratorContext.AllocateRegister;",164],["CodeGeneratorContext.Registers[DestRegNr].IsWhat:=bcgtNUMBER;",116],["CodeGeneratorContext.VariableAllSetType(bvtUNDEFINED);",116],["vta:=CodeGeneratorContext.VariableGetTypes;",84],["CodeGeneratorContext.VariableSetTypes(vta);",76],["CodeGeneratorContext.DeallocateRegister(r3);",184],["r2:=CodeGeneratorContext.AllocateRegister;",205],["CodeGeneratorContext.DeallocateRegister(r2);",296],["DestRegNr:=CodeGeneratorContext.AllocateRegister;",248],["CodeGeneratorContext.DeallocateRegister(r1);",416]],"useCount":3345},{"word":"Color","context":[["Font.Color := clBlack;",134],["Color: TColor;",141],["property Color;",611],["Brush.Color := clWhite;",188],["Canvas.Brush.Color := Color;",181],["Canvas.Brush.Color := Color;",181],["Brush.Color := Pen.Color;",167],["Pen.Color := clBlack;",168],["Brush.Color := Pen.Color;",167],["Canvas.Brush.Color := clWhite;",130]],"useCount":14008},{"word":"ColsCount","context":[["SizeBuf := ColsCount * SizeBitPix;",540],["ColsCount := ReqRgn.ColsCount;",540],["ColsCount, RowsCount: Integer;",540],["ColsCount := ReqRgn.ColsCount;",540],["for J := 0 to ColsCount - 1 do",540]],"useCount":2700},{"word":"Column","context":[["case Column of",256],["const Rect: TRect; DataCol: Integer; Column: TColumn;",148],["Node: PVirtualNode; Column: TColumnIndex; TextType: TVSTTextType;",141],["DataCol: Integer; Column: TColumn; State: TGridDrawState);",131],["Node: PVirtualNode; Kind: TVTImageKind; Column: TColumnIndex;",115],[".Column('C_Name')",74],["Column: TColumnIndex; TextType: TVSTTextType; var CellText: string);",67],["Column: TListColumn);",98],["Column: TColumn; State: TGridDrawState);",64],[".Column('C_Doc')",62]],"useCount":3552},{"word":"Commit","context":[["IBSQL3.Transaction.Commit;",38],["SQLTransaction1.Commit;",54],["procedure Commit;",64],["dmGeneral.IBTransaction1.Commit;",69],["IBSQL1.Transaction.Commit;",74],["Transaction.Commit;",1254],["inherited Commit;",48],["IBQuery1.Transaction.Commit;",45],["procedure Commit; override;",75],["dm.sqlsisAdimin.Commit(TD);",495]],"useCount":2744},{"word":"Const","context":[["Constructor Create( Const Args: Array of Const );",95],["Constructor Create( Const Args: Array of Const; Const OptArgs: Array of Const );",41],["Constructor Create( Const Args: Array of Const; Const OptArgs: Array of Const );",41],["Constructor Create( Const Args: Array of Const; Const OptArgs: Array of Const );",41],["Constructor Create( Const Args: Array of Const; Const OptArgs: Array of Const );",41],["Constructor Create( Const Args: Array of Const );",95],["function RemoveChar(Const Texto:String):String;",24],["(* Const before type ignored *)",395],["Const",2208],["Procedure SetBlob(Const Blob:TERRAString); Override;",23]],"useCount":3138},{"word":"Context","context":[["procedure Accept( Visitor : TvbNodeVisitor; Context : TObject = nil ); override;",106],["LContext := TIdIMAP4PeerContext(ASender.Context);",112],["LContext := ASender.Context as TIdFTPServerContext;",190],["Context.Release;",90],["Context: THashContext;",87],["Context.Requires;",84],["Assert(Size = Context.BufferSize);",74],["TIdSMTPServerContext(ASender.Context).EHLO);",60],["SHA1Compress(Context);",60],["class function Context: TCipherContext; override;",60]],"useCount":4044},{"word":"Continue","context":[["if Signature(e) = 'TES4' then Continue;",27],["then Continue;",50],["Continue",155],["if not Continue then",47],["var Continue: boolean);",38],["Continue;",4459],["var rci: TRenderContextInfo; var Continue: Boolean);",20],["Continue := true;",22],["Continue : Boolean;",27],["Continue := True;",28]],"useCount":5218},{"word":"Control","context":[["Control: TWinControl;",48],["If Control.ResetPlantPools then",43],["if Control.IncludeP then",91],["Control.ProjectHasChanged := true;",82],["Control: TControl;",101],["Control.ProjectHasChanged := TRUE;",53],["SetCurrentDir(Control.ProjectDirectory);",76],["FDataLink.Control := Self;",56],["If Control.IncludeP then",54],["If Control.IncludeIsotopes then",55]],"useCount":2936},{"word":"Controls","context":[["Classes, SysUtils, FileUtil, LResources, Forms, Controls, Graphics, Dialogs,",119],["Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,",2688],["Controls,",848],["{    Tnt Delphi Unicode Controls                                              }",108],["{%CLASSGROUP 'Vcl.Controls.TControl'}",114],["SysUtils, WinTypes, WinProcs, Messages, Classes, Graphics, Controls,",117],["Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, ExtCtrls,",147],["Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, StdCtrls,",291],["Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms,",325],["Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,",5455]],"useCount":13134},{"word":"ConvFail","context":[["ConvFail, ConvFail, ConvFail, ConvFail",162],["ConvFail, ConvFail, ConvFail, ConvFail, ConvFail, ConvFail,",407],["ConvFail, ConvFail, ConvFail, ConvFail, ConvFail, ConvFail,",407],["ConvFail, ConvFail, ConvFail, ConvFail, ConvFail, ConvFail,",407],["ConvFail, ConvFail, ConvFail, ConvFail, ConvFail, ConvFail,",407],["ConvFail, ConvFail, ConvFail, ConvFail, ConvFail, ConvFail,",407],["ConvFail, ConvFail, ConvFail, ConvFail",162],["ConvFail, ConvFail, ConvFail, ConvFail",162],["ConvFail, ConvFail, ConvFail, ConvFail, ConvFail, ConvFail,",407],["ConvFail, ConvFail, ConvFail, ConvFail",162]],"useCount":3468},{"word":"Copy","context":[["FHash.TransformString(System.Copy(FDefaultData, 1, 3), TEncoding.UTF8);",92],["FHash.TransformString(System.Copy(FDefaultData, 7, 3), TEncoding.UTF8);",92],["FHash.TransformString(System.Copy(FDefaultData, 10, 3), TEncoding.UTF8);",92],["FHash.TransformString(System.Copy(FDefaultData, 13, 2), TEncoding.UTF8);",92],["FHash.TransformString(System.Copy(FDefaultData, 4, 3), TEncoding.UTF8);",92],["Result := Copy(S, 1, I);",77],["{Copy this row}",70],["{Copy data}",63],["//   Copy",58],["{ Copy all items in }",53]],"useCount":6217},{"word":"Count","context":[["if Count > 0 then",822],["Count := 0;",798],["while Count > 0 do",728],["property Count: Integer read GetCount;",715],["Inc(Count);",629],["Dec(Count);",866],["Count: 1;",981],["for i := 0 to Count - 1 do",1241],["for I := 0 to Count - 1 do",1675],["Result := Count;",413]],"useCount":52471},{"word":"Create","context":[["inherited Create;",15290],["raise EJclNoSuchElementError.Create('');",1061],["inherited Create();",985],["constructor Create; virtual;",887],["inherited Create(AOwner);",4382],["constructor Create(AOwner: TComponent); override;",5003],["raise EJclReadOnlyError.Create;",3629],["constructor Create(",2347],["constructor Create; override;",1787],["constructor Create;",8068]],"useCount":126461},{"word":"Current","context":[["if Current.Previous <> nil then",130],["Current := Current.Right;",130],["Current := Current.Right;",130],["Current.Free;",133],["Source.ReadChunkData(Current);",164],["FreeChunkData(Current);",220],["while Current <> nil do",292],["Current := FStart;",339],["Current := Current.Next;",366],["Current := Current.Next;",366]],"useCount":8938},{"word":"Cursor","context":[["Screen.Cursor:=crHourGlass;",547],["Screen.Cursor:=SC;",434],["Screen.Cursor := crHourGlass;",1055],["Screen.Cursor := crDefault;",2572],["SC:=Screen.Cursor;",432],["Screen.Cursor := crHourglass;",349],["Screen.Cursor := crSQLWait;",302],["Screen.Cursor:=crDefault;",117],["Cursor := crDefault;",67],["property Cursor;",62]],"useCount":7241},{"word":"D","context":[["* Autor: Brovin Y.D.",57],["E := D + T;",65],["{ C & D }",83],["D := 0;",90],["D.Free;",93],["E := D;",96],["Inc(D);",114],["DecodeDate(FechaK,A,M,D);",123],["{$IFOPT D+}",165],["D := C;",179]],"useCount":7078},{"word":"DC","context":[["DC: HDC;",931],["DC := GetDC(0);",326],["ReleaseDC(0, DC);",314],["DC := Canvas.Handle;",294],["SelectObject(DC, SaveFont);",128],["SaveIndex := SaveDC(DC);",101],["ReleaseDC(Handle, DC);",83],["RestoreDC(DC, SaveIndex);",79],["RealizePalette(DC);",75],["DeleteDC(DC);",66]],"useCount":4913},{"word":"DEBUG","context":[["{.$DEFINE DEBUG}",21],["{.$DEFINE DEBUG} // track memory leack",22],["{$IFDEF DEBUG}",1779],["{$ifdef DEBUG}",419],["{$ENDIF DEBUG}",101],["{$IFNDEF DEBUG}",54],["{.$Define DEBUG}",50],["{$DEFINE DEBUG}",33],["strAUXDEBUG := 'WriteDailyLog - DEBUG #1';",26],["#ifdef DEBUG",22]],"useCount":2539},{"word":"DEFINE","context":[["{$DEFINE MSWINDOWS}",88],["{$DEFINE SYN_CLX}",199],["{$DEFINE R_PLUS}",142],["{$DEFINE x64}",70],["{$DEFINE VER11_PLUS}",65],["{$DEFINE VER10_PLUS}",56],["{$DEFINE BCB}",50],["{$DEFINE BAD_STACK_ALIGNMENT}",49],["{$DEFINE DELPHI}",47],["{$DEFINE VER12_PLUS}",42]],"useCount":3270},{"word":"DFM","context":[["{$R *.DFM}",3485]],"useCount":3485},{"word":"DWORD","context":[["dwFlags: DWORD;",497],["TimeDateStamp: DWORD;",105],["dwCertEncodingType :DWORD;",112],["Size: DWORD;",134],["cbSize :DWORD;",149],["dwFlags: DWORD): HResult; stdcall;",155],["Flags: DWORD;",258],["dwFlags :DWORD;",269],["cbSize: DWORD;",344],["dwSize: DWORD;",398]],"useCount":25505},{"word":"DWord","context":[["Usage  : DWord;",36],["Filter: DWord;",312],["Usage: DWord;",224],["MipFilter: DWord;",168],["Flags: DWord;",98],["ChunkSize: DWord;",54],["dwCallback: DWord;",44],["Index: DWord;",40],["Size: DWord;",39],["RIFFChunkSize: DWord;",38]],"useCount":3215},{"word":"Data","context":[["Data := nil;",121],["if Assigned(Data) then",126],["Data: nil",350],["Data: PJsonDataValue;",249],["Data := Sender.GetNodeData(Node);",221],["Data: Pointer;",195],["ShowMessage ('Data Inválida!');",186],["Data: PTreeData;",128],["Dat := TDatArr(Data);",540],["Data: string;",114]],"useCount":17565},{"word":"DataSet","context":[["FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet,",145],["FireDAC.Comp.DataSet, FireDAC.Comp.Client;",114],["if (dsCadastro.DataSet.State in [dsInsert, dsEdit])",45],["ShowMessage('DataSet Close!');",50],["FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client;",59],["DataSet: TDataSet);",300],["if (dsCadastro.DataSet.State in [dsInsert, dsEdit]) Then",306],["DataSet: TDataSet; var TableName: String);",68],["If (dsCadastro.DataSet.State in [dsInsert, dsEdit]) Then",63],["if (dsCadastro.DataSet.State in [dsInsert]) Then",60]],"useCount":3703},{"word":"Date","context":[["{ Last modified: $Date::                                                                         $ }",156],["Version  Date      Author      Modification",260],["IBSQL3.ParamByName('MES').AsInteger := Monthof(EdFechaCorte.Date);",156],["Date: '$Date$';",153],["ParamByName('FECHA_CORTE').AsDate := EdFechaCorte.Date;",153],["lblQualifier.Caption := 'Date Range';",70],["//   Date    Ver   Who  Comment                                              //",93],["Date:      05-Feb-2004",134],["Date Created: Sept 18, 1997 (Version 1.1)",148],["Date: '$Date$';",153]],"useCount":4640},{"word":"Dec","context":[["Dec(FSize);",513],["Dec(P);",202],["Dec(L);",206],["Dec(Index);",296],["Dec(Result);",330],["Dec(FCount);",394],["Dec(Count);",866],["Dec(I);",604],["Dec(J);",547],["Dec(i);",463]],"useCount":12266},{"word":"Declarations","context":[["{ Protected Declarations }",753],["Visit(TBESENASTNodeVariableExpression(ToVisit).Declarations[Counter]);",14],["Visit(TBESENASTNodeVariableStatement(ToVisit).Declarations[Counter]);",14],["for Counter:=0 to length(TBESENASTNodeVariableExpression(ToVisit).Declarations)-1 do begin",30],["for Counter:=0 to length(TBESENASTNodeVariableStatement(ToVisit).Declarations)-1 do begin",30],["{$ENDREGION 'Internal Declarations'}",99],["{$REGION 'Internal Declarations'}",99],["{ Published Declarations }",431],["{ Private Declarations }",766],["{ Public Declarations }",1052]],"useCount":3323},{"word":"Default","context":[["// (NOTE: Here we map each CoClass to its Default Interface)",158],["Result := Default;",314],["Result := Default(T);",107],["{ Default }",60],["Default := True;",59],["st := st + '\". Default is \"1\". Possible range 0-1.';",57],["StatusText('Loading Default Values');",48],["comparer := TComparer<T>.Default;",37],["Default;",36],["{Default to error}",34]],"useCount":2708},{"word":"DefaultInterface","context":[["DefaultInterface.Set_standalone(fValue);",36],["DefaultInterface.Set_output(varDestination);",36],["DefaultInterface.Set_indent(fIndentMode);",36],["DefaultInterface.Set_omitXMLDeclaration(fValue);",36],["DefaultInterface.Set_byteOrderMark(fWriteByteOrderMark);",36],["DefaultInterface.Set_disableOutputEscaping(fValue);",36],["DefaultInterface.Set_onreadystatechange(Param1);",54],["Result := DefaultInterface.Get_readyState;",60],["InterfaceVariant := DefaultInterface;",257],["Result := FServer.DefaultInterface;",274]],"useCount":2742},{"word":"Delete","context":[["procedure Delete(Index: Integer);",223],["Delete(I);",223],["Delete(i);",218],["Results.Delete(0);",175],["Delete(Index);",166],["Delete(Result, 1, 1);",132],["memLab.Lines.Delete(0);",132],["Delete;",114],["Delete(s, 1, 1);",111],["procedure Delete(Index: Integer); override;",110]],"useCount":6386},{"word":"Delphi","context":[["{           Spring Framework for Delphi                                     }",330],["{Delphi 5 compatibility}",102],["* - Originally by Victor Zinetz for Delphi and Free Pascal on Windows.",191],["Delphi DUnit Test Case",150],["{ para Delphi. Em FortesReport, os relatórios são constituídos por bandas que  }",95],["// of Delphi, C++Builder or RAD Studio (Embarcadero Products).",88],["// Delphi",537],["{    Tnt Delphi Unicode Controls                                              }",108],["types do not match. Delphi was unable to generate a property of",145],["{$MODE Delphi}",1441]],"useCount":7846},{"word":"Description","context":[["Description: string;",59],["(* <Description>                                                         *)",64],["// Description",64],["sak.AssistiveData[Length(sak.AssistiveData) - 1].Description :=",75],["Description := '';",90],["Description:",856],["// Description.                                                              //",92],["//  Description:",278],["* Donations: see Donation section on Description.txt",124],["InitSpeech.AssistiveData[Length(InitSpeech.AssistiveData) - 1].Description :=",108]],"useCount":3014},{"word":"Dest","context":[["FastAssign(RPCBrokerV.Results, Dest);",337],["inherited AssignTo(Dest);",160],["Result := Dest;",179],["Src, Dest, Trans{$IFDEF Store16bits}, Extra{$ENDIF}: pChar);",195],["inherited AssignPropertiesTo(Dest);",210],["procedure AssignPropertiesTo(Dest: TJclAbstractContainerBase); override;",220],["Inc(Dest);",541],["inherited AssignDataTo(Dest);",384],["procedure AssignDataTo(Dest: TJclAbstractContainerBase); override;",384],["procedure AssignTo(Dest: TPersistent); override;",271]],"useCount":13414},{"word":"Destroy","context":[["Destroy;",619],["//{$IFDEF UDEBUG}if _udebug <> nil then _udebug.Destroy;{$ENDIF}",426],["// Destroy",571],["destructor Destroy;override;",432],["destructor Destroy(); override;",705],["Destructor Destroy; override;",788],["destructor  Destroy; override;",2134],["{$IFDEF UDEBUG}if _udebug <> nil then _udebug.Destroy;{$ENDIF}",6613],["destructor Destroy; override;",21409],["inherited Destroy;",12321]],"useCount":51079},{"word":"Dialogs","context":[["Dialogs, StdCtrls;",231],["UnitProxySpace, Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,",75],["FMX.Types, FMX.Graphics, FMX.Controls, FMX.Forms, FMX.Dialogs, FMX.StdCtrls,",75],["Dialogs, StdCtrls, ExtCtrls;",92],["Classes, SysUtils, FileUtil, LResources, Forms, Controls, Graphics, Dialogs,",119],["Dialogs;",119],["Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, ExtCtrls,",147],["Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, StdCtrls,",291],["Dialogs,",664],["Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,",2688]],"useCount":6962},{"word":"Discussion","context":[["*  Discussion:",2700]],"useCount":2700},{"word":"Dispatchable","context":[["// Flags:     (4112) Hidden Dispatchable",52],["// Flags:     (4608) Restricted Dispatchable",18],["// Flags:     (4096) Dispatchable",71],["// Flags:     (4416) Dual OleAutomation Dispatchable",1384],["// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable",410],["// Flags:     (4432) Hidden Dual OleAutomation Dispatchable",536],["// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable",1834]],"useCount":4305},{"word":"Do","context":[["// Do nothing",115],["///  <summary>Internal method. Do not call directly!</summary>",90],["Result := '';    {Do not Localize}",103],["{Do we need to lock the block type?}",104],["Added \"Do not Localize\" comments.",115],["With ActiveCircuit Do",115],["{Do we need to lock the medium blocks?}",116],["While It.HasNext() Do",129],["{: Do not call this directly. It is used internally by @link(TTCPBlockSocket)!",140],["{ This file was automatically created by Lazarus. Do not edit!",209]],"useCount":6852},{"word":"Done","context":[["@@Done:",118],["Done := TRUE;",128],["Done;",122],["Done: Boolean;",153],["jz @Done",185],["Done := True;",195],["@Done:",299],["jmp @Done",321],["Done := False;",247],["{Done}",149]],"useCount":4819},{"word":"Double","context":[["FechaPagoK:TDate;FechaPagoI:TDate;TipoInteres:integer;ValorTasa:Double;ValorMora:Double;PuntosAdic:Double;",72],["const ADefault: Double",52],["procedure PaintTo(ACanvas: TCanvas; AXFactor, AYFactor: Double; AXDesloc, AYDesloc: Integer); override;",55],["const deltaTime, newTime: Double);",66],["FechaPagoK:TDate;FechaPagoI:TDate;TipoInteres:integer;ValorTasa:Double;ValorMora:Double;PuntosAdic:Double;",72],["FechaPagoK:TDate;FechaPagoI:TDate;TipoInteres:integer;ValorTasa:Double;ValorMora:Double;PuntosAdic:Double;",72],["const ADist: Double",84],["RequestID: Double;",149],["): Double;",205],["newTime: Double);",664]],"useCount":5935},{"word":"Dual","context":[["// Flags:     (4432) Hidden Dual OleAutomation Dispatchable",536],["// Flags:     (336) Hidden Dual OleAutomation",22],["// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable",410],["// Flags:     (4416) Dual OleAutomation Dispatchable",1384],["// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable",1834]],"useCount":4186},{"word":"E","context":[["**  OBSERVAÇÃO............: CÓDIGO-FONTE LIVRE. E NÃO PODE SER COMERCIALIZADO.    **",620],["**  E-MAIL................: zanini@r7.com                                         **",620],["**                          COPIAR E UTILIZAR SEM FINS COMERCIAIS.                **",620],["on E: Exception do",2552],["on E : Exception do",544],["on E: Exception do begin",514],["on E:Exception do",307],["L I C E N S E",297],["L I C E N S E",297],["except on E: Exception do",255]],"useCount":14888},{"word":"EAX","context":[["POP     EAX",135],["mov ECX, EAX",162],["PUSH    EAX",165],["mov EAX, [EBP+$08]",309],["mov EAX, [EAX+$04]",314],["mov EAX, [EAX+$04]",314],["mov EAX, [EAX]",317],["mov EAX, [EAX]",317],["TEST    EAX,EAX",124],["TEST    EAX,EAX",124]],"useCount":10401},{"word":"EBP","context":[["POP EBP",32],["MOV     ESP, EBP",5572],["mov EAX, [EBP+$08]",309],["mov ESP, EBP",85],["MOV     EBP,[ECX]",72],["PUSH    EBP",71],["cmp [EBP].TOpcodeConst.FKind, ckValue",62],["mov ebp, [EBP].TOpcodeConst.F.Value",56],["FMUL DWORD PTR [EBP+8]",48],["POP     EBP",5627]],"useCount":12359},{"word":"EBX","context":[["POP     EBX",519],["PUSH  EBX",76],["MOV     EBX,EAX",68],["POP EBX",59],["PUSH EBX",58],["XOR     EBX,EBX",48],["POP   EBX",78],["XOR     EBX,EBX",48],["DEC     EBX",137],["PUSH    EBX",446]],"useCount":2809},{"word":"ECX","context":[["mov ECX, EAX",162],["DEC     ECX",305],["cmp byte ptr [ECX + TOpcodeAddress_offset + TOpcodeConst.FKind], ckValue",164],["MOV     ECX,EDX",136],["MOV     ECX, EAX",109],["ADD     ECX,4",88],["MOV     DWORD PTR [EDX],ECX",87],["NOT     ECX",85],["MOV     ECX,EAX",83],["ROL     ECX,5",80]],"useCount":6007},{"word":"EDI","context":[["POP     EDI",560],["INC     EDI",59],["ADD     EDI,4",62],["MOV     EDI, EAX",75],["MOV     EAX,EDI",80],["POP EDI",131],["PUSH EDI",133],["MOV     EDI,EDX",150],["PUSH    EDI",534],["PUSH  EDI",53]],"useCount":3593},{"word":"EDX","context":[["MOV     EDX,EAX",118],["MOV     DWORD PTR [EDX+4],ECX",75],["PUSH    EDX",76],["INC     EDX",78],["XOR     EAX,EDX",85],["MOV     EAX,EDX",87],["MOV     DWORD PTR [EDX],ECX",87],["MOV     ECX,EDX",136],["MOV     EDI,EDX",150],["DEC     EDX",153]],"useCount":4765},{"word":"EJclReadOnlyError","context":[["raise EJclReadOnlyError.Create;",3629]],"useCount":3629},{"word":"ELSE","context":[["{$IFDEF UNIX} cdecl; {$ELSE} stdcall; {$ENDIF}",169],["ELSE BEGIN",291],["{$IFDEF WIN32} stdcall; {$ELSE} cdecl; {$ENDIF} external cryptlibname;",174],["{$ELSE ~FPC}",182],["{$ELSE ~BCB}",186],["{$IFDEF CDECL}cdecl{$ELSE}stdcall{$ENDIF};",194],["{$ELSE ~HAS_UNITSCOPE}",220],["{$ELSE}",33603],["ELSE",5240],["{$IFDEF UNIX} cdecl {$ELSE} stdcall {$ENDIF};",369]],"useCount":44387},{"word":"END","context":[["END ELSE begin",32],["END;",26243],["END",3499],["END.",1138],["/// END ///////////////",143],["END ELSE",134],["END ELSE BEGIN",131],["//DOM-IGNORE-END",69],["{=   8}  END;",34],["{%END-REPEAT}",30]],"useCount":32002},{"word":"ENDIF","context":[["{$ENDIF}",106060],["{$ENDIF}{$IFDEF UNIX} cdecl;",1033],["{$IFDEF USE_INLINE} inline; {$ENDIF}",1172],["{$ENDIF UNITVERSIONING}",1279],["{$IFDEF UDEBUG}_udebug: Tdebug;{$ENDIF}",1404],["{$IFDEF USE_INLINE}inline;{$ENDIF}",1407],["{$ENDIF MSWINDOWS}",2246],["{$IFDEF UDEBUG}var _udebug: Tdebug;{$ENDIF}",4582],["{$IFDEF UDEBUG}if _udebug <> nil then _udebug.Destroy;{$ENDIF}",6613],["{$ENDIF THREADSAFE}",15709]],"useCount":173141},{"word":"ENDREGION","context":[["{$ENDREGION}",8021],["{$ENDREGION --------------------------------------------------------------------}",14],["{$ifdef undef}{$ENDREGION}{$endif}",14],["{$ENDIF LogPrefetch}{$ENDREGION}",19],["{$IFDEF DELPHI9_UP} {$ENDREGION} {$ENDIF}",23],["{$IFDEF _D9UP_}{$ENDREGION}{$ENDIF}",35],["{$IFDEF SUPPORTS_REGION}{$ENDREGION}{$ENDIF}",54],["{$ENDREGION 'Internal Declarations'}",99],["{$IFDEF GLS_REGION}{$ENDREGION}{$ENDIF}",172],["{$IFDEF GLS_REGIONS}{$ENDREGION}{$ENDIF}",162]],"useCount":8637},{"word":"ESI","context":[["POP   ESI",51],["POP     ESI",539],["PUSH  ESI",49],["INC     ESI",76],["MOV     ESI,[EAX]",77],["DEC     ESI",79],["MOV     ESI,EAX",101],["PUSH ESI",163],["POP ESI",164],["PUSH    ESI",436]],"useCount":3159},{"word":"ESP","context":[["{                 ESP+4   value  }",16],["MOV     ESP, EBP",5572],["mov ESP, EBP",85],["MOV ESP, EBP",31],["FSTCW   [ESP]",26],["MOV     EDI,[ESP+24]",25],["@@qt:   SUB     EDI,[ESP+24]",24],["MOV     EBX,[ESP+28]",24],["FLDCW   [ESP]",20],["mov EAX, ESP",17]],"useCount":5946},{"word":"EXIT","context":[["then EXIT; // not in compiling mode ?",25],["then EXIT;",1422],["then EXIT",94],["then EXIT; // don't stop between paired separator",50],["EXIT(**);",30],["IF NOT (Final^ IN CQuoteChar) THEN EXIT;",30],["IF Str = '' THEN EXIT;",27],["BOL, BOLML: ; // EXIT; //###0.937",26],["//             EXIT;",26],["EXIT;",2902]],"useCount":4784},{"word":"EXTERNALSYM","context":[["{$EXTERNALSYM SERVICE_TYPE_VALUE_TCPPORT}",18],["{$EXTERNALSYM DWORD_PTR}",18],["{$EXTERNALSYM SERVICE_TYPE_VALUE_UDPPORT}",18],["{$EXTERNALSYM SERVICE_TYPE_VALUE_SAPID}",18],["{$EXTERNALSYM B_ASN1_DIRECTORYSTRING}",20],["{$EXTERNALSYM EHOSTDOWN}",21],["{$EXTERNALSYM SDL_SemTryWait}",24],["{$EXTERNALSYM OSVERSIONINFOEX}",26],["{$EXTERNALSYM ULONG_PTR}",37],["{$EXTERNALSYM SD_BOTH}",17]],"useCount":9518},{"word":"ElementAssign","context":[["element := ElementAssign(ElementByPath(arcuirass, 'KWDA'), HighInteger, nil, False);",12],["element := ElementAssign(ElementByPath(arhelmet, 'KWDA'), HighInteger, nil, False);",12],["element := ElementAssign(ElementByPath(arboots, 'KWDA'), HighInteger, nil, False);",12],["master := ElementAssign(masters, HighInteger, nil, False);",12],["element := ElementAssign(ElementByPath(arhelmet, 'Armature'), HighInteger, nil, False);",12],["element := ElementAssign(ElementByPath(argloves, 'KWDA'), HighInteger, nil, False);",16],["newelement := ElementAssign(list, HighInteger, nil, False);",31],["layer := ElementAssign(group, HighInteger, nil, False);",2844],["ElementAssign(group, HighInteger, nil, False);",36]],"useCount":2987},{"word":"Else","context":[["Else",13515],["End Else",2283],["{$Else}",303],["Else Result := 0;",42],["end Else begin",42],["Else if ElementInfo = 'Pho' then",42],["Else if ElementInfo = 'C13' then",42],["Else begin",66],["Else Begin",111],["End Else Begin",278]],"useCount":17277},{"word":"Enabled","context":[["Timer1.Enabled := True;",168],["TimerRepeat.Enabled := False;",146],["Updater.Enabled;",144],["property    Enabled;",139],["wc.AddProperty('Enabled', TPropertyBoolean, '');",131],["Timer1.Enabled := False;",194],["if not Enabled then",310],["Enabled := False;",358],["if Enabled then",395],["property Enabled;",695]],"useCount":17867},{"word":"End","context":[["End;*)",281],["End Else Begin",278],["End;}",417],["End;",87366],["End",6628],["End Else",2283],["End.",1559],["End ;",1257],["DebugOpenGL(); End;",106],["{End BillingAware}",193]],"useCount":102192},{"word":"EndRead","context":[["procedure EndRead;",33],["FSynchronizer.EndRead;",30],["FLock.EndRead;",26],["FDLLSync.EndRead;",15],["FSyncLock.EndRead;",14],["FSync.EndRead;",36],["lock.EndRead();",14],["FCS.EndRead;",99],["CS.EndRead;",205],["SyncReaderWriter.EndRead;",3126]],"useCount":3609},{"word":"EndUpdate","context":[["DisplayMemo.Lines.EndUpdate;",45],["List.EndUpdate;",129],["Lines.EndUpdate;",72],["procedure EndUpdate;",231],["Items.EndUpdate;",372],["EndUpdate;",1246],["tvNotes.Items.EndUpdate;",49],["EndUpdate",52],["Tree.Items.EndUpdate;",55],["Strings.EndUpdate;",56]],"useCount":3350},{"word":"EndWrite","context":[["FLock.EndWrite;",23],["FSynchronizer.EndWrite;",29],["procedure EndWrite;",37],["EndWrite;",41],["FSync.EndWrite;",78],["FCS.EndWrite;",208],["CS.EndWrite;",221],["SyncReaderWriter.EndWrite;",3096],["ResourceStringDomainListCS.EndWrite;",22],["uSynchronizer.EndWrite;",27]],"useCount":3891},{"word":"Enter","context":[["FLocker.Enter;",140],["FLock.Enter;",207],["Lock.Enter;",434],["DataCriticalSection.Enter;",381],["Owner.Schema.ObjectModel.Lock.Enter;",316],["Model.Lock.Enter;",284],["AudioCriticalSection.Enter;",97],["Lock.Enter();",90],["GeoMonitoredObjectModel.Lock.Enter;",132],["FCriticalSection.Enter;",99]],"useCount":3743},{"word":"Entries","context":[["SetLength(Bucket.Entries, NewCapacity);",114],["if KeysEqual(Bucket.Entries[I].Key, Key) then",352],["Result := Bucket.Entries[I].Value;",194],["if ValuesEqual(Bucket.Entries[I].Value, Value) then",176],["if Bucket.Size < Length(Bucket.Entries) then",101],["if I < Length(Bucket.Entries) - 1 then",101],["SetLength(Bucket.Entries, Bucket.Size)",101],["if NewCapacity < Length(Bucket.Entries) then",114],["Result.Add(Bucket.Entries[J].Key);",132],["NewCapacity := CalcPackCapacity(Length(Bucket.Entries), Bucket.Size);",114]],"useCount":4247},{"word":"Eof","context":[["While not (Eof) do",483],["until Eof(InputFile);",53],["until Eof(InFile);",72],["WHILE NOT Eof (FileRead) DO",51],["while not IBSQL1.Eof do begin",46],["if (not s_parametro.Eof) then",106],["while not Eof do begin",547],["while not mdDet.Eof do begin",62],["while not dm.mySQLQuery1.Eof do",65],["while not Eof do",807]],"useCount":3511},{"word":"Error","context":[["FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,",178],["// HexDig will cause Error if bad hex digit found",78],["MessageDlg('Error al Buscar Deuda',mtError,[mbcancel],0);",86],["Error(SListIndexError, Index);",96],["FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,",105],["CheckEquals(0, FZip.ErrCode, 'Zip Error: ' + FZip.ErrMessage);",124],["FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,",131],["MessageDlg('Error al Obtener valor de Corto Plazo',mtError,[mbcancel],0);",215],["System.Error(reInvalidPtr);",218],["Error;",355]],"useCount":9921},{"word":"Exception","context":[["on e: Exception do FbException.catchException(nil, e);",297],["on E : Exception do",544],["on E: Exception do begin",514],["on E: Exception do",2552],["//on e: Exception do FbException.catchException(status, e);",213],["on e: Exception do",531],["//on e: Exception do FbException.catchException(nil, e);",297],["on E:Exception do",307],["on x: Exception do Fail(x);",313],["except on E: Exception do",255]],"useCount":12227},{"word":"ExecQuery","context":[["IBOtros.ExecQuery;",80],["IBSQL1.ExecQuery;",211],["IBSQL3.ExecQuery;",700],["IBSQL2.ExecQuery;",156],["IBConsulta.ExecQuery;",59],["IBOtros1.ExecQuery;",54],["IBSQLAux.ExecQuery;",43],["IBSQL4.ExecQuery;",21],["ExecQuery;",2540],["IBPagar.ExecQuery;",36]],"useCount":3950},{"word":"ExecSQL","context":[["dm.ExecSQL(",203],["qry.ExecSQL;",66],["q.ExecSQL;",70],["ExecSQL;",1037],["ExecSQL();",168],["Tabla.ExecSQL;",145],["QTemp.ExecSQL;",131],["Q.ExecSQL;",109],["Query.ExecSQL;",88],["ExecSQL(MySQL);",93]],"useCount":3028},{"word":"Execute","context":[["Execute;",975],["if Execute then",392],["if OpenDialog1.Execute then",344],["procedure Execute(var ExternalObject: TObject); override;",140],["VCLReport1.Execute;",144],["procedure Execute; override;",1458],["if SaveDialog1.Execute then",177],["procedure Execute;",165],["if SaveDialog.Execute then",200],["if OpenDialog.Execute then",245]],"useCount":7804},{"word":"Exit","context":[["else Exit;",218],["Exit; //==>",1079],["Exit;",82661],["Exit; //. ->",388],["Exit(false);",331],["Exit(True);",804],["Exit(False);",872],["if not Result then Exit;",372],["Exit",761],["then Exit;",378]],"useCount":97542},{"word":"Expected","context":[["Expected(ptRoundOpen);",96],["Expected(ptRoundClose);",104],["* @param d\t\tExpected easing duration (in frames or seconds).",82],["Expected(ptEqual);",72],["Expected(ptEnd);",144],["Expected(ptColon);",176],["Expected(ptIdentifier);",208],["CheckEquals(FExpectedString, FActualString, Format('Expected %s but got %s.',",602],["Format('Expected %s but got %s.', [FExpectedString, FActualString]));",92],["Expected(tokIdentifier);",83]],"useCount":3352},{"word":"Expr","context":[["(Expr: F_MACROMAP      ; Val: $00000001),",140],["(Expr: LISTEND         ; Val: $00000000)",142],["(Expr: B_SHOPNEXT      ; Val: $00000044),",141],["(Expr: B_ITEMTYPE      ; Val: $00000038),",139],["(Expr: F_EXTSTAT       ; Val: $00000001),",139],["(Expr: B_ITEMSTACK     ; Val: $0000003E),",139],["(Expr: B_STATWEIGHT    ; Val: $00000038),",139],["(Expr: B_ITEMSLOT      ; Val: $00000025),",139],["(Expr: F_EVPROPERTY    ; Val: $00000001),",138],["(Expr: B_CONTSIZEX     ; Val: $00000024),",137]],"useCount":5792},{"word":"F","context":[["Close(F);",157],["Rewrite(F);",185],["{$F-}",125],["CloseFile(F);",499],["F: TextFile;",149],["Writeln(F);",407],["Reset(F);",246],["F.Free;",228],["F := P;",139],["F: TField;",143]],"useCount":9186},{"word":"FALSE","context":[["{$setc TARGET_OS_MAC := FALSE}",914],["{$setc TARGET_OS_EMBEDDED := FALSE}",1824],["{$setc TARGET_CPU_PPC := FALSE}",1828],["{$setc TARGET_CPU_ARM := FALSE}",1828],["{$setc TARGET_OS_IPHONE := FALSE}",1828],["{$setc TARGET_CPU_X86 := FALSE}",1828],["{$setc TARGET_CPU_X86_64 := FALSE}",1828],["{$setc TARGET_CPU_PPC64 := FALSE}",1828],["{$setc TARGET_IPHONE_SIMULATOR := FALSE}",2285],["Result := FALSE;",1784]],"useCount":30773},{"word":"FBuffer","context":[["if FBuffer <> '' then",95],["FBuffer := s;",74],["FZRec.avail_out := sizeof(FBuffer);",77],["case FBuffer.Buf[FBuffer.Run] of",77],["Inc(FBuffer.Run, 2);",77],["case FBuffer.Buf[FBuffer.Run] of",77],["FBuffer := nil;",80],["FreeMem(FBuffer);",88],["FBuffer := '';",228],["Inc(FBuffer.Run);",413]],"useCount":4433},{"word":"FCapacity","context":[["for I := 0 to FCapacity - 1 do",682],["Bucket := FBuckets[FHashFunction(Hash(Key), FCapacity)];",132],["Result := FSize < FCapacity;",130],["SetCapacity(FCapacity + FGrowthDelta);",102],["if FCount = FCapacity then",96],["if FSize < FCapacity then",88],["Bucket := FBuckets[FHashToRangeFunction(Hash(Key), FCapacity)];",132],["FCapacity: Integer;",140],["for J := 0 to FCapacity - 1 do",185],["if FSize = FCapacity then",218]],"useCount":3425},{"word":"FCount","context":[["FCount := 0;",649],["Dec(FCount);",394],["Inc(FCount);",609],["FCount: Integer;",421],["Result := FCount;",320],["if Cardinal(Index) >= Cardinal(FCount) then",254],["if Index < FCount then",164],["inc(FCount);",151],["if (Index < 0) or (Index >= FCount) then",150],["property Count: Integer read FCount;",139]],"useCount":6510},{"word":"FCursor","context":[["OldCursor := FCursor;",156],["Result := FCursor <> nil;",265],["Result := FCursor.Value",390],["Result := FCursor;",422],["if FCursor <> nil then",750],["FCursor := ACursor;",132],["FCursor := NewCursor;",130],["ADest.FCursor := FCursor;",130],["ADest.FCursor := FCursor;",130],["Inc(FCursor)",106]],"useCount":8340},{"word":"FData","context":[["Result.FData.FName := '';",97],["Result.FData.FNameResolver := nil;",97],["if Value.FData.FIntern <> nil then",97],["Result.FData.FIntern := nil;",115],["FData := '';",111],["FData.Free;",129],["Result := FData;",129],["FData := nil;",133],["FData: Pointer;",105],["if FData.FIntern <> nil then",102]],"useCount":4244},{"word":"FEntries","context":[["if (Index >= 0) and (KeysCompare(FEntries[Index].Key, Key) = 0) then",264],["FreeKey(FEntries[Index].Key);",176],["FreeValue(FEntries[Index].Value);",176],["if (FromIndex = -1) or (KeysCompare(FEntries[FromIndex].Key, FromKey) < 0) then",176],["FEntries[Index].Value := Value;",176],["if ValuesCompare(FEntries[Index].Value, Value) = 0 then",176],["Result := FEntries[Index].Value;",88],["NewMap.FEntries[ToIndex - FromIndex] := FEntries[ToIndex];",88],["Result := FEntries[Index].Key;",88],["NewMap.FEntries[ToIndex - FromIndex] := FEntries[ToIndex];",88]],"useCount":3685},{"word":"FF","context":[["//      format.  Alpha is significant, and should usually be set to FF for",56],["rtiColorOutline             := ARGB($FF, $6A, $43, $09);",57],["rtiColorEndMouseOver        := ARGB($FF, $98, $71, $2D);",51],["Cast256_Data[3, T and $FF]);",72],["rtiColorOutline := ARGB($FF, $6A, $43, $09);",66],["rtiColorEndMouseDown        := ARGB($FF, $78, $51, $0D);",51],["rtiColorMouseOver           := ARGB($FF, $F7, $D3, $7B);",51],["rtiColor                    := ARGB($FF, $E7, $C3, $6B);",54],["rtiColorEnd                 := ARGB($FF, $88, $61, $1D);",54],["FState[1] := FState[1] + (FState[0] and $FF);",63]],"useCount":5959},{"word":"FItems","context":[["FItems.Free;",256],["FreeAndNil(FItems);",62],["Result := FItems[Index];",73],["FItems: TList;",81],["FItems := TList.Create;",90],["C := FKeyOf(FItems^[I]);",96],["for i := 0 to FItems.Count - 1 do",104],["for i := 0 to FItems.Count-1 do",105],["Result := FItems.Count;",170],["FItems.Clear;",182]],"useCount":3612},{"word":"FLastError","context":[["if FLastError = 0 then",345],["if FLastError <> sOK then",119],["FLastError := WSAETIMEDOUT;",104],["FLastError := Result;",85],["FLastError := WSANO_RECOVERY;",60],["if not b and (FLastError = 0) then",60],["FLastError := err;",242],["FLastError := WSASYSNOTREADY;",134],["FLastError := 0;",156],["if FLastError <> 0 then",514]],"useCount":2912},{"word":"FLine","context":[["case FLine[Run] of",568],["Case FLine[Run + 1] of",140],["if FLine[Run] <> #0 then inc(Run);",128],["while FLine[Run] <> #0 do",127],["if FLine[Run] in LeadBytes then",123],["if FLine[Run + 1] = '.' then break;",85],["while FLine[Run] in [#1..#9, #11, #12, #14..#32] do inc(Run);",78],["case FLine[Run + 1] of",459],["while (FLine[Run] <= #32) and not IsLineEnd(Run) do inc(Run);",53],["SetString(Result, (FLine + fTokenPos), Len);",144]],"useCount":2680},{"word":"FList","context":[["Result := FList.Count;",261],["FList := list;",95],["FList.Free;",432],["FList.Clear;",247],["FList := TList.Create;",194],["FList := AList;",105],["Result := FList[FIndex];",115],["for i := 0 to FList.Count - 1 do",120],["FreeAndNil(FList);",125],["FList: TList;",184]],"useCount":4667},{"word":"FName","context":[["property Name: string read FName;",186],["FName: String;",200],["FName := '';",127],["FName := Value;",181],["FName := Name;",174],["property Name: string read FName write FName;",174],["property Name: string read FName write FName;",174],["Result := FName;",287],["FName := AName;",333],["FName: string;",700]],"useCount":4161},{"word":"FOnChange","context":[["property OnChange: TNotifyEvent read FOnChange write FOnChange;",378],["property OnChange: TNotifyEvent read FOnChange write FOnChange;",378],["FOnChange(Self);",357],["if Assigned(FOnChange) then FOnChange(Self);",219],["FOnChange(self);",85],["FOnChange := nil;",76],["property OnChange:TNotifyEvent read FOnChange write FOnChange;",47],["if Assigned(FOnChange) then",382],["if Assigned(FOnChange) then FOnChange(Self);",219],["FOnChange: TNotifyEvent;",454]],"useCount":3215},{"word":"FOwnTree","context":[["ADest.FOwnTree := FOwnTree;",52],["FOwnTree.WriteLock;",364],["FOwnTree.WriteUnlock;",364],["FOwnTree.ReadUnlock;",780],["FOwnTree.ReadLock;",780],["Result := (FOwnTree = ItrObj.FOwnTree) and (FCursor = ItrObj.FCursor) and (Valid = ItrObj.Valid);",52],["ADest.FOwnTree := FOwnTree;",52],["Inc(FOwnTree.FSize);",104],["if not FOwnTree.ReturnDefaultElements then",312],["if FOwnTree.ReadOnly then",364]],"useCount":3920},{"word":"FPC","context":[["{$ifndef FPC}",309],["{$IfDef FPC}",165],["{$IFnDEF FPC}",223],["{$IFDEF FPC}",5568],["See the file COPYING.FPC, included in this distribution,",372],["{$ENDIF FPC}",458],["{$IFNDEF FPC}",2086],["{$ifdef FPC}{$mode objfpc}{$h+}{$endif}",1131],["{$ifdef FPC}",1006],["{$ifdef FPC}{$mode objfpc}{$h+}{$INTERFACES CORBA}{$endif}",103]],"useCount":13444},{"word":"FSize","context":[["Result := FSize;",479],["for Index := 0 to FSize - 1 do",492],["for I := 0 to FSize - 1 do",397],["Result := FSize = 0;",349],["if FSize > 0 then",245],["FSize: Integer;",238],["if FSize = FCapacity then",218],["Dec(FSize);",513],["Inc(FSize);",631],["FSize := 0;",570]],"useCount":9892},{"word":"FStream","context":[["FStream.Position := 0;",152],["if FStream <> nil then",67],["FStream.Size := 0;",70],["FStream.ReadBuffer(Tag, 1);",78],["FStream := Stream;",104],["FStream := nil;",111],["FreeAndNil(FStream);",133],["FStream := AStream;",163],["FStream: TStream;",249],["FStream.Free;",272]],"useCount":3357},{"word":"FTBLOutrasFuncoes","context":[["prcQueryDeletar(FTBLOutrasFuncoes);",288],["FTBLOutrasFuncoes.Open;",270],["FTBLOutrasFuncoes.SQL.Add(' AND                                 ');",188],["FTBLOutrasFuncoes.SQL.Add('  where                         ');",158],["if FTBLOutrasFuncoes.FieldByName('RETORNO').AsInteger > 0 then",72],["FTBLOutrasFuncoes.SQL.Add('  and                         ');",44],["FTBLOutrasFuncoes.ExecSQL;",42],["prcQueryCriar(FTBLOutrasFuncoes);",292],["FTBLOutrasFuncoes.SQL.Clear;",310],["FTBLOutrasFuncoes.Close;",44]],"useCount":2754},{"word":"FThreadSafe","context":[["if FThreadSafe then",12444]],"useCount":12444},{"word":"FValue","context":[["FValue: T;",61],["SetLength(FValue, 0);",56],["Result.FValue := FValue;",60],["Result.FValue := FValue;",60],["FValue := value;",103],["FValue: string;",117],["FEdit.Value := FValue;",156],["FValue := Value;",177],["FValue := AValue;",313],["Result := FValue;",403]],"useCount":4255},{"word":"FZip","context":[["FZip := nil;",162],["FZip.Free;",176],["FZip.UseDirOnlyEntries := True;",186],["FZip.Extract;",186],["FZip.RootDir := TestFiles;",231],["FZip.Add;",275],["ReturnValue := FZip.ErrCode;",277],["FZip.ZipFileName := dst;",322],["FZip.ZipFileName := dest;",366],["FZip.Password := 'ABC123';",422]],"useCount":7695},{"word":"False","context":[["SetBit(attributeBuffer^,BIT_ORDER_NULL,False);",656],["result := False;",677],["Active := False;",678],["layer := ElementAssign(group, HighInteger, nil, False);",2844],["Result := False",765],["Result:=False;",788],["Exit(False);",872],["Result := False;",29568],["SetLastError = False, CallingConvention= CallingConvention.cdecl,",1088],["until False;",1161]],"useCount":93242},{"word":"FieldByName","context":[["Result := FieldByName('VALOR_TASA_EFECTIVA').AsFloat;",84],["IBSQL3.ParamByName('ID_CLASIFICACION').AsInteger := FieldByName('ID_CLASIFICACION').AsInteger;",86],["FieldByName('SEGUNDO_APELLIDO').AsString + ' ' +",87],["Valor := IBSQL3.FieldByName('SALDO').AsCurrency;",122],["ParamByName('ID_AGENCIA').AsInteger := IBQuery1.FieldByName('ID_AGENCIA').AsInteger;",161],["ParamByName('ID_COLOCACION').AsString := IBQuery1.FieldByName('ID_COLOCACION').AsString;",166],["AR^.nomcuenta := IBSQL3.FieldByName('NOMBRE').AsString;",393],["Total := FieldByName('TOTAL').AsInteger;",75],["mdTmpIds.FieldByName('free').AsInteger := 0;",82],["FieldByName('NOMBRE').AsString;",81]],"useCount":12444},{"word":"FileName","context":[["if not FileExists(FileName) then",87],["procedure LoadFromFile(const FileName: string);",87],["if FileName <> '' then",92],["if FileName = '' then",108],["Result := FileName;",108],["FFileName := FileName;",115],["if FileExists(FileName) then",172],["FileName: string;",331],["FileName := '';",335],["Encoder.FileNames.Add(FileName);",128]],"useCount":7545},{"word":"FillChar","context":[["call System.@FillChar",72],["FillChar(FCurrentContext, SizeOf(FCurrentContext), 0);",108],["FillChar(List[FromIndex], Count * SizeOf(List[0]), 0);",100],["FillChar(strm, sizeof(strm), 0);",96],["FillChar(Entries[FromIndex], Count * SizeOf(Entries[0]), 0);",88],["FillChar(FEntries[FromIndex], Count * SizeOf(FEntries[0]), 0);",88],["FillChar(Msg, SizeOf(Msg), 0);",83],["FillChar(Result^,SizeOf(TObjectTrackEvent), 0);",82],["FillChar(intVal,SizeOf(intVal),#0);",112],["FillChar(Result, SizeOf(Result), 0);",250]],"useCount":4256},{"word":"FireDAC","context":[["FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet,",145],["FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,",131],["FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,",178],["FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,",178],["FireDAC.Comp.Client;",148],["FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet,",145],["FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet,",145],["FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet,",145],["FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,",178],["FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,",178]],"useCount":5023},{"word":"First","context":[["if First.HasNext then",182],["It := ACollection.First;",886],["It := AMap.KeySet.First;",273],["First;",1558],["ItSelf := First;",78],["ite.First;",88],["dm.mySQLQuery1.First;",93],["mdDet.First;",97],["It := First;",116],["Result := First;",127]],"useCount":7540},{"word":"Flags","context":[["// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable",1834],["// Flags:     (4416) Dual OleAutomation Dispatchable",1384],["// Flags:     (4432) Hidden Dual OleAutomation Dispatchable",536],["// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable",410],["// Flags:     (16) Hidden",133],["// Flags:     (0)",261],["Flags: DWORD;",258],["Flags := 0;",159],["Flags: Integer;",86],["Flags: DWord;",98]],"useCount":8653},{"word":"Font","context":[["Font.Style := [];",231],["Canvas.Font := Font;",175],["Canvas.Font := Font;",175],["Font.Color := clWindowText;",90],["{@prop Font = ancestor /}",100],["Font.Color := clBlack;",134],["Font.Style := [fsBold];",101],["Font := Self.Font;",101],["property Font;",753],["Font := Self.Font;",101]],"useCount":8208},{"word":"For","context":[["{ For now, assume/hope/pray that we will succeed. }",127],["For unit name changes.",156],["* For Overlays.",60],["* For Blt.",60],["* - For Mac OS X, some modifications were made by The Creative CAT, denoted as CAT",191],["Bugs?:      For bug reports, consult the following page on",199],["{ For further information / comments, visit our WEB site at            }",444],["//* For more information visit: http://www.degsoft.com.ar                      *",87],["//       same as the project directory. For example, if your KeyFile is",65],["For CodeTyphon Studio  (http://www.pilotlogic.com/)",65]],"useCount":6797},{"word":"Form1","context":[["Form1.Repaint;",180],["with Form1 do begin",151],["Form1: TForm1;",2015],["Form1.Close;",38],["Form1.Caption := 'Updated in a thread';",36],["Form1.Hide;",35],["end; // with Form1",35],["Form1.terrObs[posX,posY].itemId:=fillId;",27],["Form1.terrObs[posX,posY].itemRotation:=fillRotation;",26],["Form1.ProgressBar1.Position:= Form1.ProgressBar1.Position + 10;",25]],"useCount":2834},{"word":"FormClose","context":[["procedure FormClose(Sender: TObject; var Action: TCloseAction);",2924],["procedure FormClose(Sender: TObject; var CloseAction: TCloseAction);",315],["procedure TForm1.FormClose(Sender: TObject; var Action: TCloseAction);",119],["procedure TMainForm.FormClose(Sender: TObject; var Action: TCloseAction);",76],["procedure TfrmMain.FormClose(Sender: TObject; var Action: TCloseAction);",62],["procedure TMainForm.FormClose(Sender: TObject; var CloseAction: TCloseAction);",40],["procedure FormClose(",28],["procedure TForm1.FormClose(Sender: TObject; var CloseAction: TCloseAction);",24],["//   FormClose",22],["procedure TForm2.FormClose(Sender: TObject; var Action: TCloseAction);",20]],"useCount":3679},{"word":"FormCreate","context":[["procedure TAboutForm.FormCreate(Sender: TObject);",36],["procedure TfmMain.FormCreate(Sender: TObject);",38],["procedure TForm1.FormCreate;",45],["procedure TForm2.FormCreate(Sender: TObject);",56],["procedure TFormMain.FormCreate(Sender: TObject);",82],["procedure TfrmMain.FormCreate(Sender: TObject);",209],["procedure TMainForm.FormCreate(Sender: TObject);",388],["procedure TForm1.FormCreate(Sender: TObject);",1220],["procedure FormCreate(Sender: TObject);",7938],["procedure TMain.FormCreate(Sender: TObject);",36]],"useCount":10448},{"word":"FormDestroy","context":[["//   FormDestroy",15],["procedure TfmMain.FormDestroy(Sender: TObject);",16],["procedure TfMain.FormDestroy(Sender: TObject);",21],["procedure TFormMain.FormDestroy(Sender: TObject);",37],["procedure TfrmMain.FormDestroy(Sender: TObject);",81],["procedure TMainForm.FormDestroy(Sender: TObject);",175],["procedure TForm1.FormDestroy(Sender: TObject);",312],["procedure FormDestroy(Sender: TObject);",2362],["procedure TMain.FormDestroy(Sender: TObject);",13],["procedure TConfig.FormDestroy(Sender: TObject);",14]],"useCount":3058},{"word":"FormShow","context":[["procedure TfrmMain.FormShow(Sender: TObject);",78],["procedure   FormShow(Sender: TObject);",31],["procedure FormShow(Sender: TObject);",4327],["//   FormShow",31],["SET_MANAGER_CONTROL('FormShow');",36],["Procedure FormShow(Sender: TObject);",56],["procedure TMainForm.FormShow(Sender: TObject);",97],["procedure TForm1.FormShow(Sender: TObject);",185],["FormShow(nil);",28],["OnShow := @FormShow;",24]],"useCount":5166},{"word":"Format","context":[["GetAttributes(Format);",88],["Format: TCharFormat2;",80],["Format.BytesPerPixel;",80],["Assert(Visitor is TgaCustomParserVisitor, Format(SassIncorrectParserVisitor, [Visitor.ClassName]));",89],["Format('Expected %s but got %s.', [FExpectedString, FActualString]));",92],["SetAttributes(Format);",98],["InitFormat(Format);",110],["Format: TD3DFormat;",281],["with Format do begin",77],["CheckEquals(FExpectedString, FActualString, Format('Expected %s but got %s.',",602]],"useCount":6017},{"word":"Forms","context":[["Vcl.Forms,",120],["Classes, SysUtils, FileUtil, LResources, Forms, Controls, Graphics, Dialogs,",119],["uses Windows, SysUtils, Classes, Graphics, Forms, Controls, StdCtrls,",90],["UnitProxySpace, Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,",75],["Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, ExtCtrls,",147],["Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, StdCtrls,",291],["Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms,",325],["Forms,",969],["Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,",2688],["Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,",5455]],"useCount":12764},{"word":"ForwardTable","context":[["W2 := ForwardTable[Byte(T0[2] shr 16)]; W3 := ForwardTable[Byte(T0[3] shr 24)];",54],["W0 := ForwardTable[Byte(T0[0])]; W1 := ForwardTable[Byte(T0[1] shr 8)];",54],["W2 := ForwardTable[Byte(T0[0] shr 16)]; W3 := ForwardTable[Byte(T0[1] shr 24)];",54],["W0 := ForwardTable[Byte(T0[1])]; W1 := ForwardTable[Byte(T0[2] shr 8)];",54],["W2 := ForwardTable[Byte(T0[1] shr 16)]; W3 := ForwardTable[Byte(T0[2] shr 24)];",54],["W0 := ForwardTable[Byte(T0[0])]; W1 := ForwardTable[Byte(T0[1] shr 8)];",54],["W0 := ForwardTable[Byte(T0[2])]; W1 := ForwardTable[Byte(T0[3] shr 8)];",54],["W2 := ForwardTable[Byte(T0[1] shr 16)]; W3 := ForwardTable[Byte(T0[2] shr 24)];",54],["W0 := ForwardTable[Byte(T0[1])]; W1 := ForwardTable[Byte(T0[2] shr 8)];",54],["W2 := ForwardTable[Byte(T0[3] shr 16)]; W3 := ForwardTable[Byte(T0[0] shr 24)];",54]],"useCount":2640},{"word":"Found","context":[["if (not Found) and (not FReturnDefaultElements) then",264],["if not Found then",247],["Found := FALSE;",90],["|          (Found at URL: http://www.ararat.cz/synapse/)                       |",328],["Found := False;",614],["Found := True;",641],["Found: Boolean;",654],["if Found then",216],["Found := false;",120],["Found: boolean;",96]],"useCount":4413},{"word":"Free","context":[["Free;",5153],["Stream.Free;",1091],["sl.Free;",685],["List.Free;",463],["Modified for use with Free Pascal",455],["IniFile.Free;",454],["FList.Free;",432],["Reg.Free;",429],["S.Free;",384],["baseObj.Free;",372]],"useCount":51049},{"word":"FreeAndNil","context":[["FreeAndNil(LStream);",123],["FreeAndNil(localObj);",106],["FreeAndNil(ANode);",104],["FreeAndNil(T);",80],["FreeAndNil(s);",121],["FreeAndNil(FList);",125],["FreeAndNil(FStream);",133],["FreeAndNil(FBuckets[I]);",202],["FreeAndNil(t);",270],["FreeAndNil(Result);",323]],"useCount":7510},{"word":"FreeMem","context":[["FreeMem(PropList);",59],["FreeMem(Buffer);",264],["FreeMem(buffer);",138],["FreeMem(Block);",90],["FreeMem(FBuffer);",88],["FreeMem(OutBuf);",76],["FreeMem(Data);",70],["FreeMem(p);",62],["FreeMem(Buf);",60],["FreeMem(P);",112]],"useCount":3499},{"word":"FromIndex","context":[["if FromIndex > ToIndex then",273],["if FromIndex < ToIndex then",298],["Inc(FromIndex);",241],["if (ToIndex - FromIndex) < Count then",216],["if (FromIndex - ToIndex) < Count then",216],["if (FromIndex = -1) or (KeysCompare(FEntries[FromIndex].Key, FromKey) < 0) then",176],["if (FromIndex = -1) or (KeysCompare(FEntries[FromIndex].Key, FromKey) < 0) then",176],["Move(List[FromIndex], List[ToIndex], Count * SizeOf(List[0]));",121],["InitializeArray(List, FromIndex, Count);",134],["FromIndex := BinarySearch(FromKey);",176]],"useCount":4993},{"word":"G","context":[["G.Y := -1;",119],["R, G, B: Byte;",68],["H := G;",69],["G := F;",69],["G.Y := 0;",77],["G.X := -1;",97],["G := 0;",135],["G.X := 0;",171],["G := TTextureFontData.TGlyph.Create;",285],["G.AdvanceY := 0;",285]],"useCount":5847},{"word":"Get","context":[["{Get the block header}",64],["ol_PS_ID_CADASTRO   := (StrToIntDef( ol_JSON_RETORNO.Get('PS_ID_CADASTRO').JsonValue.Value, 0));",76],["ol_PS_FEEDBACK      :=  ol_JSON_RETORNO.Get('PS_FEEDBACK').JsonValue.Value;",68],["Result := Get(Index);",72],["{Get the block}",75],["ol_PS_ID_ERRO       := (StrToIntDef( ol_JSON_RETORNO.Get('PS_ID_ERRO').JsonValue.Value, 0));",76],["{Get the next medium block pool}",94],["{Get the next large block}",111],["{Get first column and enter in loop}",112],["Get;",914]],"useCount":7546},{"word":"GetBit","context":[["function GetBit(const Idx: Integer): Boolean; override;",11],["GetBit := ((DrumP shr 4) and 1) = 1;",176],["GetBit := ((DrumP shr 0) and 1) = 1;",176],["GetBit := ((DrumP shr 5) and 1) = 1;",176],["GetBit := ((DrumP shr 2) and 1) = 1;",176],["GetBit := ((DrumP shr 7) and 1) = 1;",176],["If (GetBit) then",1532],["GetBit := ((DrumP shr 1) and 1) = 1;",176],["GetBit := ((DrumP shr 3) and 1) = 1;",176],["GetBit := ((DrumP shr 6) and 1) = 1;",176]],"useCount":2951},{"word":"GetCount","context":[["property Count: Integer read GetCount;",715],["function GetCount: Integer;",958],["function  GetCount: integer;",47],["function GetCount(): NativeInt; override;",62],["for Result := 0 to GetCount - 1 do",64],["property Count: integer read GetCount write SetCount;",69],["property Count: Integer read GetCount write SetCount;",104],["function GetCount: Integer; override;",168],["property Count: integer read GetCount;",175],["function GetCount: integer;",191]],"useCount":3167},{"word":"GetName","context":[["class function GetName: string; override;",161],["property Name: string read GetName write SetName;",119],["function GetName: WideString;",97],["Validate1(ReturnValue, GetName);",95],["function GetName: string; override;",89],["property Name: WideString read GetName;",87],["function GetName: WideString; override;",77],["function GetName: string;",501],["property Name: string read GetName;",236],["function GetName: WideString; override; safecall;",195]],"useCount":2585},{"word":"Graphics","context":[["Graphics,",983],["Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,",5455],["Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,",2688],["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,",781],["Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms,",325],["Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, StdCtrls,",291],["Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, ExtCtrls,",147],["Classes, SysUtils, FileUtil, LResources, Forms, Controls, Graphics, Dialogs,",119],["SysUtils, WinTypes, WinProcs, Messages, Classes, Graphics, Controls,",117],["Windows, Messages, SysUtils, Variants, Classes, Graphics,",110]],"useCount":13851},{"word":"H","context":[["while L <= H do",331],["L, H, I: Integer;",85],["L, H, I, C: Integer;",91],["H := FOwner.FCount - 1;",101],["{$mode delphi}{$H+}",112],["W, H: Integer;",185],["H := I - 1;",304],["I := (L + H) shr 1;",328],["{$H+}",665],["{$mode objfpc}{$H+}",5240]],"useCount":11868},{"word":"HResult","context":[["HResult; stdcall;",330],["): HResult; stdcall;",80],["):HResult; stdcall;",784],["):HResult; virtual; stdcall; abstract;",524],["pUnkOuter: IUnknown): HResult; stdcall;",194],["dwFlags: DWORD): HResult; stdcall;",155],["function QueryInterface(const IID: TGUID; out Obj): HResult; stdcall;",118],["function Reset: HResult; stdcall;",114],["function GetDevice(out ppDevice: IDirect3DDevice9): HResult; stdcall;",96],["out   ppErrors:                   PResultList): HResult; stdcall;",67]],"useCount":8647},{"word":"Handle","context":[["if Handle <> 0 then",87],["CloseHandle(Handle);",130],["ScreenToClient(Handle, P);",84],["Handle := 0;",142],["Handle: THandle;",206],["DC := Canvas.Handle;",294],["Handle.Buffer.Allocate(Pointer(Buf), SizeBuf);",540],["Handle.Buffer.Release(Pointer(Buf));",540],["if Handle <> INVALID_HANDLE_VALUE then",125],["with Handle do",1083]],"useCount":11084},{"word":"Handled","context":[["Handled := True;",607],["var Handled: Boolean);",331],["WheelDelta: Integer; MousePos: TPoint; var Handled: Boolean);",313],["AResponse: TResponse; var Handled: Boolean);",85],["Handled: Boolean;",91],["if not Handled then",92],["procedure ActionListUpdate(Action: TBasicAction; var Handled: Boolean);",110],["MousePos: TPoint; var Handled: Boolean);",201],["Handled := true;",148],["Handled := False;",136]],"useCount":2593},{"word":"Height","context":[["Height := 21;",129],["Self.Height := Height;",77],["Height: Integer;",92],["for I := 0 to Height - 1 do",93],["property Height;",100],["Height := 25;",103],["Progress(Self, psRunning, MulDiv(Y, 100, Height), True, FProgressRect, '');",126],["Height := 22;",167],["for Y := 0 to Height - 1 do",168],["Height: LongWord;",203]],"useCount":10527},{"word":"High","context":[["for i := 0 to High(arr) do",281],["for I := Low(fIdentFuncTable) to High(fIdentFuncTable) do begin",66],["for i := 0 to High(TPA) do",186],["for B := 0 to High(Button) do",69],["for Level := 0 to High(fMipmapFonts) do",72],["l := High(a);",107],["Value := Integer(UNICONV_SUPPORTED_SBCS_HASH[Index and High(UNICONV_SUPPORTED_SBCS_HASH)]);",181],["for i := Low(fIdentFuncTable) to High(fIdentFuncTable) do",60],["for k := 0 to High(v) do",60],["for i := 0 to High(Result) do",58]],"useCount":5520},{"word":"HighInteger","context":[["layer := ElementAssign(group, HighInteger, nil, False);",2844],["element := ElementAssign(ElementByPath(arboots, 'KWDA'), HighInteger, nil, False);",12],["ElementAssign(group, HighInteger, nil, False);",36],["newelement := ElementAssign(list, HighInteger, nil, False);",31],["element := ElementAssign(ElementByPath(argloves, 'KWDA'), HighInteger, nil, False);",16],["master := ElementAssign(masters, HighInteger, nil, False);",12],["element := ElementAssign(ElementByPath(arcuirass, 'KWDA'), HighInteger, nil, False);",12],["element := ElementAssign(ElementByPath(arhelmet, 'KWDA'), HighInteger, nil, False);",12],["element := ElementAssign(ElementByPath(arhelmet, 'Armature'), HighInteger, nil, False);",12]],"useCount":2987},{"word":"Hint","context":[["lblTitle.Hint := lblTitle.Caption;",64],["property Hint: WideString read GetHint write SetHint stored IsHintStored;",96],["pnlCCOW.Hint := TX_CCOW_BROKEN;",40],["wc.AddProperty('Hint', TPropertyString, 'Tooltip hint');",108],["property    Hint;",110],["property Hint;",134],["property Hint: WideString read GetHint write SetHint;",168],["Hint := '';",1621],["pnlCCOW.Hint := TX_CCOW_LINKED;",48],["//   Hint: Symbol 'Type' renamed to 'type_'",63]],"useCount":3361},{"word":"I","context":[["I := 1;",1001],["Result := I;",906],["I : Integer;",1134],["for I := 0 to Count - 1 do",1675],["I:Integer;",1804],["I := 0;",1813],["I, J: Integer;",2105],["I: integer;",3600],["Inc(I);",4065],["I: Integer;",17483]],"useCount":115573},{"word":"IBSQL1","context":[["IBSQL1.ExecQuery;",211],["with IBSQL1 do begin",399],["IBSQL1.Close;",240],["IBSQL1: TIBSQL;",218],["with IBSQL1 do",157],["IBSQL1.Transaction.Rollback;",122],["with DmSolicitud.IBSQL1 do",106],["IBSQL1.Transaction.Commit;",74],["IBSQL1.Transaction.StartTransaction;",49],["IBSQL1.SQL.Clear;",208]],"useCount":2918},{"word":"IBSQL3","context":[["IBSQL3.ParamByName('ID_AGENCIA').AsInteger := Agencia;",148],["IBSQL3.Close;",733],["IBSQL3.ExecQuery;",700],["IBSQL3.SQL.Clear;",615],["IBSQL3.ParamByName('CODIGO').AsString := Codigo;",426],["AR^.nomcuenta := IBSQL3.FieldByName('NOMBRE').AsString;",393],["IBSQL3.SQL.Add('select NOMBRE from \"con$puc\" where CODIGO = :CODIGO');",192],["Valor := IBSQL3.FieldByName('SALDO').AsCurrency;",122],["IBSQL3.ParamByName('MES').AsInteger := Monthof(EdFechaCorte.Date);",156],["IBSQL3.SQL.Add('from \"con$puc\"');",174]],"useCount":5403},{"word":"ID","context":[["AnsiStringToPAnsiChar(FrameID, @ID, 4);",109],["(thanks Burkhard Carstens) (Bugtracker ID = 1678644)",83],["procedure SetupDialog(OrderAction: Integer; const ID: string); override;",72],["ID: integer;",69],["ID := 0;",96],["Index := AddFrame(ID);",97],["ID: Integer;",106],["Index := FrameExists(ID);",144],["ID: TFrameID;",166],["case field_.ID of",90]],"useCount":5350},{"word":"ID_AGENCIA","context":[["ParamByName('ID_AGENCIA').AsInteger := Agencia;",1250],["ParamByName('ID_AGENCIA').AsInteger := IdAgencia;",209],["ParamByName('ID_AGENCIA').AsInteger := agencia;",203],["ParamByName('ID_AGENCIA').AsInteger := IBQuery1.FieldByName('ID_AGENCIA').AsInteger;",161],["ParamByName('ID_AGENCIA').AsInteger := IBQuery1.FieldByName('ID_AGENCIA').AsInteger;",161],["IBSQL3.ParamByName('ID_AGENCIA').AsInteger := Agencia;",148],["IBSQL3.SQL.Add('left join \"con$saldoscuenta\" ON (\"con$puc\".ID_AGENCIA = \"con$saldoscuenta\".ID_AGENCIA and ');",87],["IBSQL3.SQL.Add('left join \"con$saldoscuenta\" ON (\"con$puc\".ID_AGENCIA = \"con$saldoscuenta\".ID_AGENCIA and ');",87],["SQL.Add('ID_AGENCIA = :\"ID_AGENCIA\" and');",78],["SQL.Add('ID_AGENCIA = :\"ID_AGENCIA\" and');",78]],"useCount":6149},{"word":"ID_COLOCACION","context":[["ParamByName('ID_COLOCACION').Clear;",82],["ParamByName('ID_COLOCACION').AsString := TableName;",221],["ParamByName('ID_COLOCACION').AsString := vIdColocacion;",111],["ParamByName('ID_COLOCACION').AsString := Colocacion;",116],["ParamByName('ID_COLOCACION').AsString := IdColocacion;",221],["ParamByName('ID_COLOCACION').AsString := vColocacion;",185],["ParamByName('ID_COLOCACION').AsString := IBQuery1.FieldByName('ID_COLOCACION').AsString;",166],["ParamByName('ID_COLOCACION').AsString := colocacion;",118],["SQL.Add('\"col$colocacion\".ID_COLOCACION,');",120],["ParamByName('ID_COLOCACION').AsString := IBQuery1.FieldByName('ID_COLOCACION').AsString;",166]],"useCount":4188},{"word":"IF","context":[["IF ActiveCircuit <> NIL",149],["{$IF ECHOES}",76],["{$IF CompilerVersion >= 21.0}",76],["IF (LastError <> 0) THEN",85],["{$IF COOPER}",497],["{$IF DEFINED(CLR)}",233],["{$IF (GDIPVER >= $0110)}",92],["IF ActiveCircuit <> Nil THEN",148],["{$IF LUA_VERSION_NUM = 501}",128],["{$IF LUA_VERSION_NUM >= 502}",116]],"useCount":7530},{"word":"IFDEF","context":[["{$IFDEF THREADSAFE}",15713],["{$IFDEF UDEBUG}if _udebug <> nil then _udebug.Destroy;{$ENDIF}",6613],["{$IFDEF MSWINDOWS}",6423],["{$IFDEF FPC}",5568],["{$IFDEF UDEBUG}var _udebug: Tdebug;{$ENDIF}",4582],["{$IFDEF UNICODE}",2873],["{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}",2192],["{$IFDEF WIN32}",2151],["{$IFDEF UNIX}",2074],["{$IFDEF DEBUG}",1779]],"useCount":137434},{"word":"IFEND","context":[["if KeyComp('IFEND') then",12],["{$IFEND <XE5}",12],["{$IF CompilerVersion >= 23}@{$IFEND}dwResult);",14],["{$IFEND >=XE5}",14],["{$IFEND IntPtr}",16],["{$IFEND};",29],["//{$IFEND}",39],["{$IFEND}",5160],["{$IF CompilerVersion >= 17.0} inline; {$IFEND}",16]],"useCount":5312},{"word":"IFNDEF","context":[["{$IFNDEF WINCE}",332],["{$IFNDEF FPC}",2086],["{$IFNDEF JWA_OMIT_SECTIONS}",822],["{$IFNDEF MSWINDOWS}",759],["{$IFNDEF NEXTGEN}",656],["{$IFNDEF SYN_CLX}",614],["{$IFNDEF CIL}",608],["{$IFNDEF DOTNET}",531],["): NTSTATUS; stdcall; {$IFNDEF RTDL}external ntdll;{$ENDIF}",365],["{$IFNDEF UNICODE}",390]],"useCount":20304},{"word":"IMPLEMENTATION","context":[["{$DEFINE IMPLEMENTATION}",17],["//                      IMPLEMENTATION",18],["{ UNIT IMPLEMENTATION }",191],["IMPLEMENTATION",862],["{$IFDEF IMPLEMENTATION}",1659],["{$UNDEF IMPLEMENTATION}",14],["**\t\t\tIMPLEMENTATION",12],["//              \tIMPLEMENTATION",12]],"useCount":2785},{"word":"IP","context":[["SetSin(Sin, IP, Port);",40],["Reg.IP += 3;",34],["{:Connects socket to remote IP address and PORT. The same rules as with",40],["procedure Connect(IP, Port: string); override;",40],["if IsIP6(IP) then",60],["{:Socket object used for TCP/IP operation. Good for seting OnStatus hook, etc.}",60],["IP := ResolveName(IP);",60],["IP := ResolveName(IP);",60],["if IsIP(IP) then",60],["DoStatus(HR_Connect, IP + ':' + Port);",60]],"useCount":2685},{"word":"ISuperObject","context":[["function Delete(const path: SOString): ISuperObject;",44],["obj: ISuperObject;",520],["o: ISuperObject;",235],["const put: ISuperObject = nil; dt: TSuperType = stNull): ISuperObject;",66],["const put: ISuperObject = nil; dt: TSuperType = stNull): ISuperObject;",66],["length, o: ISuperObject;",44],["const put: ISuperObject; dt: TSuperType): ISuperObject;",44],["const put: ISuperObject; dt: TSuperType): ISuperObject;",44],["function Compare(const obj: ISuperObject): TSuperCompareResult; overload;",44],["function SA(const Args: array of const): ISuperObject; overload;",44]],"useCount":5259},{"word":"IXMLDOMNode","context":[["function selectSingleNode(const queryString: WideString): IXMLDOMNode; dispid 30;",78],["function insertBefore(const newChild: IXMLDOMNode; refChild: OleVariant): IXMLDOMNode; dispid 13;",78],["property parentNode: IXMLDOMNode readonly dispid 6;",156],["property previousSibling: IXMLDOMNode readonly dispid 10;",156],["procedure transformNodeToObject(const stylesheet: IXMLDOMNode; outputObject: OleVariant); dispid 35;",156],["property nextSibling: IXMLDOMNode readonly dispid 11;",156],["property definition: IXMLDOMNode readonly dispid 23;",156],["function replaceChild(const newChild: IXMLDOMNode; const oldChild: IXMLDOMNode): IXMLDOMNode; dispid 14;",78],["property lastChild: IXMLDOMNode readonly dispid 9;",156],["property firstChild: IXMLDOMNode readonly dispid 8;",156]],"useCount":3370},{"word":"Idx","context":[["//  Idx: Integer;",56],["Idx: Integer;",359],["Idx: integer;",194],["Inc(Idx);",112],["if Idx >= 0 then",109],["Idx := -1;",105],["Idx := 0;",91],["if (Idx >= 0) and (Idx < NSUBEXP) and Assigned (fInputString)",75],["if (Idx >= 0) and (Idx < NSUBEXP) and Assigned (fInputString)",75],["if Idx <> -1 then",73]],"useCount":3199},{"word":"If","context":[["are not obligated to do so. If you do not wish to do so, delete this exception",297],["which is not derived from or based on this library. If you modify this",297],["{ If you wish to allow use of your version of this file only under the terms   }",338],["If not( key in['0'..'9',#8, #13] ) then",368],["* along with this program; see the file COPYING. If not, write to",563],["If ActiveCircuit <> Nil Then",275],["// Type Library. If this type library is explicitly or indirectly (via",172],["If you wish to allow use of your version of this file only under the terms",576],["If not (IsEmpty) Then",615],["If (GetBit) then",1532]],"useCount":25652},{"word":"Inc","context":[["Inc(Result);",2075],["Inc(p);",1457],["Inc(Index);",787],["Inc(J);",745],["Inc(VMIndex); Inc(VMIndex); Inc(VMIndex); Inc(VMIndex); Inc(VMIndex);",680],["Inc(VMIndex); Inc(VMIndex); Inc(VMIndex); Inc(VMIndex); Inc(VMIndex);",680],["Inc(Run);",2606],["Inc(P);",2893],["Inc(i);",3508],["Inc(I);",4065]],"useCount":70431},{"word":"Index","context":[["Index := 0;",523],["Inc(Index);",787],["case Index of",874],["for Index := 0 to FSize - 1 do",492],["Index := BinarySearch(Key);",352],["if IsCurrentToken(KeyWords[Index]) then",1795],["Index: Integer;",3065],["Index: integer;",352],["Dec(Index);",296],["if (Index >= 0) and (KeysCompare(FEntries[Index].Key, Key) = 0) then",264]],"useCount":36175},{"word":"Info","context":[["Info: TProgramInfo; ExtObject: TObject);",171],["else if Info.HasGrayChannel then",31],["Info: TImageFormatInfo;",72],["with Info do",72],["{    e-mail                  : Info@FREEship.org                                              }",67],["const Info: TImageFormatInfo);",42],["@param Info a statement parameters.",42],["Info: PImageFormatInfo;",40],["const Info: TImageFormatInfo); override;",39],["Info: PTypeInfo;",32]],"useCount":2723},{"word":"Inherited","context":[["Inherited Create(false);",64],["Inherited Create(pObjFunctionality, pflReadOnly,pidOwnerObjectProp,pOwnerPanelsProps,pProxyObject);",72],["Inherited Create();",75],["Inherited Insert(index, value);",80],["Inherited Create(AOwner);",81],["Inherited;",1768],["result := Inherited Count;",89],["Inherited Create(nil);",222],["Inherited Create;",433],["Inherited Destroy;",259]],"useCount":3863},{"word":"Initial","context":[["* The Initial Developer of this code is John Hansen.",81],["| The Initial Developer of the Original Code is Lukas Gebauer (Czech Republic).|",325],["* The Initial Developer of the Original Code is",774],["{ The Initial Developer of the Original Code is Petr Vones. Portions created by Petr Vones are     }",48],["{ The Initial Developer of the Original Code is Marcel van Brakel.                                 }",50],["* The Initial Developers of the Original Code are Kent Beck, Erich Gamma,",55],["mwEdit component suite by Martin Waldenburg and other developers, the Initial",185],["* The Initial Developer of the Original Code is Mauricio",124],["{ The Initial Developers of the Original Code are documented in the accompanying help file         }",109],["{ The Initial Developer of the Original Code is Florent Ouchet                                     }",63]],"useCount":2836},{"word":"Initialize","context":[["procedure Initialize;",264],["Initialize;",305],["FHash.Initialize();",92],["{ Initialize }",136],["procedure Initialize; override;",229],["Initialize();",73],["function Initialize: integer;",142],["Initialize(List[FromIndex], Count);",67],["Initialize(List[FromIndex]);",65],["inherited Initialize;",64]],"useCount":2954},{"word":"Insert","context":[["memLab.Lines.Insert(0,' ');",132],["{@member Insert",84],["Inherited Insert(index, value);",80],["Insert;",78],["Tabla.SQL.Text := 'Insert Into \"LibroDiario\" (ASIENTO, FECHA, LEYENDA, JERARQUIA, CUENTA, DEBE, HABER, OCULTO)'+",59],["// Insert",53],["Result := Insert(Index, It.Previous) and Result;",52],["{Insert this block back into the bins: Size check not required here,",46],["{Insert this as the first partially free pool for the block size}",46],["Tabla.Insert;",44]],"useCount":2691},{"word":"Int64","context":[["FirstElement : Int64;",48],["Size: Int64;",50],["llTime: Int64;",56],["Value: Int64;",56],["PreviousPosition: Int64;",63],["i: Int64;",78],["function Seek(const Offset: Int64; Origin: TSeekOrigin): Int64; override;",128],["Offset: Int64;",553],["function Seek(const Offset: Int64; Origin: TSeekOrigin): Int64; override;",128],["procedure SetSize(const NewSize: Int64); override;",70]],"useCount":4537},{"word":"IntToStr","context":[["ListItem.SubItems.Add(IntToStr(aCurRow) + ':' + IntToStr(aCurCol));",42],["ListItem.SubItems.Add(IntToStr(aCurRow) + ':' + IntToStr(aCurCol));",42],["Result := IntToStr(y);",45],["raise EJclNoSuchElementError.Create(IntToStr(Index));",52],["' (' + IntToStr(E.IBErrorCode ) + '). ';",54],["DoStatus(HR_WriteCount, IntToStr(Result));",57],["FCurrentContext.Status := IntToStr(ViewContext);",60],["PrintLabs(IntToStr(aID), piece(uRemoteType,'^',4), lstDates.ItemIEN);",64],["Str := IntToStr(lastErr)+' - '+SysErrorMessage(lastErr);",68],["DoStatus(HR_ReadCount, IntToStr(Result));",77]],"useCount":5735},{"word":"Integer","context":[["i : Integer;",3275],["i: Integer;",17629],["I: Integer;",17483],["Shift: TShiftState; X, Y: Integer);",3931],["I, J: Integer;",2105],["Index: Integer;",3065],["case Integer of",1226],["Y: Integer);",1203],["I:Integer;",1804],["Button: TMouseButton; Shift: TShiftState; X, Y: Integer);",1556]],"useCount":184834},{"word":"Invalidate","context":[["ParentSite.Invalidate;",35],["lstOrders.Invalidate;",37],["PaintPanel.Invalidate;",40],["Self.Invalidate;",43],["procedure Invalidate; override;",51],["procedure Invalidate;",75],["Invalidate;",4345],["EditorFrame1.CodeEditor.Invalidate;",142],["GLSceneViewer1.Invalidate;",132],["Invalidate",109]],"useCount":5941},{"word":"InverseTable","context":[["W2 := InverseTable[Byte(T0[2] shr 16)]; W3 := InverseTable[Byte(T0[1] shr 24)];",54],["W0 := InverseTable[Byte(T0[1])]; W1 := InverseTable[Byte(T0[0] shr 8)];",54],["W0 := InverseTable[Byte(T0[2])]; W1 := InverseTable[Byte(T0[1] shr 8)];",54],["W0 := InverseTable[Byte(T0[3])]; W1 := InverseTable[Byte(T0[2] shr 8)];",54],["W2 := InverseTable[Byte(T0[0] shr 16)]; W3 := InverseTable[Byte(T0[3] shr 24)];",54],["W0 := InverseTable[Byte(T0[3])]; W1 := InverseTable[Byte(T0[2] shr 8)];",54],["W0 := InverseTable[Byte(T0[0])]; W1 := InverseTable[Byte(T0[3] shr 8)];",54],["W2 := InverseTable[Byte(T0[0] shr 16)]; W3 := InverseTable[Byte(T0[3] shr 24)];",54],["W2 := InverseTable[Byte(T0[2] shr 16)]; W3 := InverseTable[Byte(T0[1] shr 24)];",54],["W2 := InverseTable[Byte(T0[1] shr 16)]; W3 := InverseTable[Byte(T0[0] shr 24)];",54]],"useCount":2640},{"word":"IsEmpty","context":[["function IsEmpty: Boolean;",565],["if not (IsEmpty) Then",270],["if IsEmpty then",109],["if (not dm.cds_parametro.IsEmpty) then",80],["IF NOT QueryExec.IsEmpty then",75],["if not (IsEmpty) then",189],["CheckFalse(outValue.IsEmpty);",640],["If not (IsEmpty) Then",615],["if not IsEmpty then begin",223],["if (dm.cds_parametro.IsEmpty) then",73]],"useCount":4378},{"word":"It","context":[["It: IJclIntfIterator;",148],["Result := Remove(It.Next) and Result;",143],["ReleaseObject(It);",190],["Key := It.Next;",185],["It := AMap.KeySet.First;",273],["It := ACollection.First;",886],["Result := Add(It.Next) and Result;",156],["while Result and It.HasNext do",156],["while It.HasNext do",988],["It:StringIterator;",154]],"useCount":9942},{"word":"Item","context":[["NewItem.Value := Item;",104],["Add(Item);",105],["if Assigned(Item) then",120],["Result := Item;",103],["Item: PJsonDataValue;",122],["Item: TListItem;",247],["{@member Item",166],["val (VarStr, Item, ErrCode);",94],["Item.Free;",163],["Item: TTBCustomItem;",123]],"useCount":8565},{"word":"ItemIndex","context":[["case rgConsultar.ItemIndex of",106],["ItemIndex := -1;",178],["ComboBox62.ItemIndex := 0;",188],["ItemIndex := 0;",194],["if lbItems.ItemIndex = -1 then Exit;",194],["cboSchedule.ItemIndex := -1;",71],["if ItemIndex < 0 then",72],["lstQualifier.ItemIndex := i;",87],["lstQualifier.ItemIndex := -1;",81],["ItemIndex := i;",81]],"useCount":7009},{"word":"ItemInfo","context":[["Pen.Color := GetPartColor(ItemInfo, ipText);",92],["with ItemInfo do",203],["with ItemInfo, Canvas do",74],["const ARect: TRect; const ItemInfo: TTBXItemInfo);",68],["PaintButton(Canvas, ARect, ItemInfo);",63],["ItemInfo.Pushed := BtnPressed;",58],["if ItemInfo.IsVertical then",58],["PaintDropDownArrow(Canvas, R, ItemInfo);",57],["else if (ItemInfo.ViewType and VT_TOOLBAR) = VT_TOOLBAR then",56],["ItemInfo: TTBXItemInfo);",55]],"useCount":3261},{"word":"Items","context":[["Items.EndUpdate;",372],["if Items.Count > 0 then",125],["lvReports.Items.Clear;",140],["LocalAnswer := TargetNode.RRs.Items[RRIndex].BinQueryRecord(TargetNode.FullName);",144],["Result := Items[I];",147],["VCLReport1.Report.DatabaseInfo.Items[0].SQLConnection := dm.sqlsisAdimin;",149],["ComboBox62.Items.Add('no SA');",187],["Items.Clear;",319],["for i := 0 to Items.Count - 1 do",370],["Items.BeginUpdate;",371]],"useCount":18720},{"word":"J","context":[["J: Integer;",289],["J := R;",254],["I, J: Integer;",2105],["until I > J;",247],["for J := 0 to Bucket.Size - 1 do",422],["J := 0;",433],["for J := 0 to ColsCount - 1 do",540],["J, I: Integer;",545],["Dec(J);",547],["Inc(J);",745]],"useCount":17828},{"word":"K","context":[["Inc(K, 8);",65],["for K := Lb to Ub do",58],["FillChar(K, SizeOf(K), 0);",54],["K := I;",72],["K := 0;",143],["var I,J,K:integer;",55],["S.bitk := K;",95],["I, J, K: Integer;",131],["Inc(K);",187],["FillChar(K, SizeOf(K), 0);",54]],"useCount":3311},{"word":"Key","context":[["if KeysEqual(Bucket.Entries[I].Key, Key) then",352],["var Key: Word; Shift: TShiftState);",462],["procedure FormKeyDown(Sender: TObject; var Key: Word;",486],["procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);",572],["procedure FormKeyPress(Sender: TObject; var Key: Char);",644],["case Key of",929],["Key := #0;",1092],["Key := 0;",1274],["var Key: Char);",2063],["Index := BinarySearch(Key);",352]],"useCount":27153},{"word":"Kind","context":[["case Kind of",175],["Kind: ckAPIVar;",163],["Node: PVirtualNode; Kind: TVTImageKind; Column: TColumnIndex;",115],["Kind: ckAPIFunc;",338],["FLook.Kind := jtkInvalidSymbol;",90],["case PropInfo^.PropType^.Kind of",51],["Kind: ckKeyword;",47],["Kind: ckAPIConst;",546],["case targetTypeInfo.Kind of",44],["case PropType^.Kind of",42]],"useCount":2928},{"word":"L","context":[["lua_pop(L, parameters);",415],["L: Integer;",586],["parameters:=lua_gettop(L);",524],["L := Length(S);",425],["MOVEA.L (A7)+,A6",381],["L := I;",385],["L := 0;",491],["MOVE.L  A6,-(A7)",381],["while L <= H do",331],["I := (L + H) shr 1;",328]],"useCount":19865},{"word":"LINUX","context":[["{$ifdef LINUX}",133],["{$IFNDEF LINUX}",111],["{$IFNDEF LINUX} stdcall {$ELSE} cdecl {$ENDIF};",67],["<li>29/03/07 - DaStr - Renamed LINUX to KYLIX (BugTrackerID=1681585)",28],["ENOSYS = 40;  // MSVC/MINGW: 40, CYGWIN: 88,  LINUX/FPC: 38",23],["EILSEQ = 42;  // MSVC/MINGW: 42, CYGWIN: 138, LINUX/FPC: 84",23],["{$IFDEF LINUX}",1745],["{$ENDIF LINUX}",229],["{$ifndef LINUX}",144],["{$IFDEF MSWINDOWS} stdcall; {$ENDIF} {$IFDEF LINUX} cdecl; {$ENDIF}",173]],"useCount":2738},{"word":"LMsgPtr","context":[["LMsgPtr := AppendClassNameToBuffer(LClass, LMsgPtr);",105],["LMsgPtr^ := #10;",119],["LMsgPtr^ := #13;",119],["LMsgPtr^ := ' ';",122],["Inc(LMsgPtr);",568],["LMsgPtr := AppendStringToBuffer(StackTraceMsg, LMsgPtr, Length(StackTraceMsg));",75],["LMsgPtr^ := #0;",69],["LMsgPtr := AppendStringToBuffer(StackTraceMsg, LMsgPtr, Length(StackTraceMsg));",75],["LMsgPtr: PAnsiChar;",78],["LMsgPtr := AppendClassNameToBuffer(LClass, LMsgPtr);",105]],"useCount":4802},{"word":"LReg","context":[["LReg.RootKey:=HKEY_CURRENT_USER;",203],["if not LReg.KeyExists('PC_DIMMER') then",206],["LReg:TRegistry;",208],["LReg.CreateKey('PC_DIMMER');",206],["if LReg.OpenKey('PC_DIMMER',true) then",206],["LReg.CloseKey;",211],["if LReg.OpenKey('PHOENIXstudios',true) then",215],["LReg.CreateKey('PHOENIXstudios');",215],["if not LReg.KeyExists('PHOENIXstudios') then",215],["LReg := TRegistry.Create;",222]],"useCount":2833},{"word":"Label1","context":[["Label1: TLabel;",5794],["FontDesc := '#Label1';",1217],["Label1.Visible:=True;",84],["with Label1 do",63],["Name := 'Label1';",59],["Label1: TfpgLabel;",45],["Label1: TTntLabel;",36],["Label1: TD2Label;",33],["Label1.Visible := True;",33],["Label1 := TfpgLabel.Create(self);",33]],"useCount":7609},{"word":"Label2","context":[["Label2: TLabel;",4448],["FontDesc := '#Label2';",109],["Label2.Visible:=True;",74],["Name := 'Label2';",37],["Label2.Visible := False;",33],["Label2: TTntLabel;",30],["Label2: TfpgLabel;",28],["Label2.Visible := True;",26],["Label2: TD2Label;",19],["with Label2 do",38]],"useCount":5008},{"word":"Label3","context":[["Label3: TLabel;",3500],["Label3.caption:=IntToStr(StrToInt(Label3.Caption) + 1);",16],["Label3.caption:=IntToStr(StrToInt(Label3.Caption) + 1);",16],["Label3 := TfpgLabel.Create(self);",18],["Label3.Visible := True;",23],["Label3: TfpgLabel;",24],["Label3: TTntLabel;",26],["Label3.Visible := False;",38],["with Label3 do",31],["Name := 'Label3';",31]],"useCount":3791},{"word":"Label4","context":[["Label4: TLabel;",2873],["Label4.Visible := False;",35],["with Label4 do",25],["Name := 'Label4';",24],["Label4: TTntLabel;",19],["Label4: TfpgLabel;",18],["Label4 := TfpgLabel.Create(self);",15],["Label4.Caption := IntToStr(MaxConnections);",14],["Label4.Caption:='2';",12],["Label4: TD2Label;",11]],"useCount":3057},{"word":"Last","context":[["for I := First to Last do",59],["Last := First + Count - 1;",56],["Section.ChangeFont(PropStack.Last);",58],["Last;",308],["{ Last modified: $Date::                                                                         $ }",156],["Last: Integer;",80],["It := ACollection.Last;",78],["Last amended by $Author: pvspain $",76],["Last of the IdStream updates",62],["Last:=nil;",59]],"useCount":2972},{"word":"Leave","context":[["FCriticalSection.Leave;",97],["DataCriticalSection.Leave;",377],["Owner.Schema.ObjectModel.Lock.Leave;",316],["Model.Lock.Leave;",284],["FLock.Leave;",214],["FLocker.Leave;",134],["Lock.Leave();",93],["AudioCriticalSection.Leave;",99],["GeoMonitoredObjectModel.Lock.Leave;",132],["Lock.Leave;",433]],"useCount":3675},{"word":"Left","context":[["Current := Current.Left",130],["glTexCoord2f(0, 0); glVertex2f(Rec.Left,  Rec.Top);",100],["Left:=result;",108],["if Result.Left <> nil then",104],["glTexCoord2f(0, 1); glVertex2f(Rec.Left,  Rec.Bottom);",100],["gui_Clip_Rect              : (Left:94; Top:75; Right:398; Bottom:410);",85],["Result := Result.Left",81],["if Current.Parent.Left = Current then",78],["Left := 0;",246],["Result := Result.Left;",133]],"useCount":14344},{"word":"Len","context":[["Len := 0;",248],["SetLength(Result, Len);",292],["if Len > 0 then",321],["Len: Integer;",557],["Len := Length(S);",244],["Len: integer;",175],["Inc(Len);",166],["Len: LongInt;",164],["Len := Run - fTokenPos;",155],["SetString(Result, (FLine + fTokenPos), Len);",144]],"useCount":9940},{"word":"Length","context":[["SetLength(Result, Length(Result) + 1);",119],["if Length(S) > 0 then",132],["L := Length(S);",425],["for I := 1 to Length(S) do",290],["for i := 1 to Length(s) do",135],["l := Length(s);",136],["if Length(Source) = 1 then",140],["for n := 1 to Length(Value) do",191],["Buffer.Length := L;",209],["Len := Length(S);",244]],"useCount":27317},{"word":"Line","context":[["Line: string;",124],["Line('}');",46],["Procedure Line(S2:TERRAString); Begin S := S + S2 + crLf; End;",48],["Line: Integer;",49],["Line := Lines[CY - 1];",50],["Line:=Line+Tmp+' |';",56],["Line:=Line+Tmp+' |';",56],["Lines[0].Line[Lines[0].Current].Note[CurrentNote].Color := 2;",70],["Lines[0].Line[Lines[0].Current].Note[CurrentNote].Color := 1;",74],["Dest := Self.GetLineOffset(Line);",76]],"useCount":3915},{"word":"LineaC","context":[["LineaC.ValDeu + LineaC.ValMor + LineaC.ValDis + LineaC.TpMone +",36],["LineaC.ValDeu + LineaC.ValMor + LineaC.ValDis + LineaC.TpMone +",36],["LineaC := LineaC + cadena;",72],["LineaC := LineaC + cadena;",72],["PlanoReporte.Add(LineaC.Numero + LineaC.Identificacion + LineaC.Nombre +",36],["PlanoReporte.Add(LineaC.Numero + LineaC.Identificacion + LineaC.Nombre +",36],["LineaC.FNacim + LineaC.FApert + LineaC.FVenci + LineaC.VCuota +",36],["LineaC.ValDeu + LineaC.ValMor + LineaC.ValDis + LineaC.TpMone +",36],["LineaC.FActua + LineaC.Reclam + LineaC.Respon + LineaC.Estrac + LineaC.Rellen);",36],["PlanoReporte.Add(LineaC.Numero + LineaC.Identificacion + LineaC.Nombre +",36]],"useCount":4081},{"word":"Lines","context":[["memLab.Lines.Delete(0);",132],["ResultsMemo.Lines.Add('');",296],["Memo1.Lines.Add('');",141],["Memo1.Lines.Clear;",136],["memLab.Lines.Insert(0,' ');",132],["Lyric.AddLine(Lines[0].Current);",105],["memText.Lines.Clear;",102],["memLab.Lines.Clear;",88],["Lines.Free;",79],["Lines[0].Line[Lines[0].Current].Note[CurrentNote].Color := 1;",74]],"useCount":7175},{"word":"List","context":[["List := TStringList.Create;",256],["for I := 0 to List.Count - 1 do",245],["List.Free;",463],["List.Clear;",316],["Move(List[FromIndex], List[ToIndex], Count * SizeOf(List[0]));",121],["List: TList;",122],["List.EndUpdate;",129],["List.BeginUpdate;",130],["InitializeArray(List, FromIndex, Count);",134],["List: TStringList;",188]],"useCount":7484},{"word":"Lock","context":[["Model.Lock.Leave;",284],["Lock;",967],["Lock.Enter;",434],["Lock.Leave;",433],["Owner.Schema.ObjectModel.Lock.Leave;",316],["Owner.Schema.ObjectModel.Lock.Enter;",316],["Model.Lock.Enter;",284],["GeoMonitoredObjectModel.Lock.Leave;",132],["procedure Lock;",154],["{Lock the medium blocks}",169]],"useCount":6027},{"word":"Log","context":[["//Log de erro",45],["Log.LogError(E.Message);",40],["Log(indentBy( Test + ' Passed', 2))",42],["Log : ILogger;",42],["{$IFDEF LogThreadPool}Log(",50],["{Log the allocation number}",68],["{Log the allocation group}",68],["{Log the error}",85],["$Log$",1101],["Log.Lines.Add('[+] Fixed.');",52]],"useCount":2780},{"word":"LongInt","context":[["Index: LongInt): Boolean; override;",45],["var i: LongInt;",50],["lBias: LongInt;",56],["l:LongInt;",92],["i : LongInt;",101],["i: LongInt;",108],["Run: LongInt;",147],["Len: LongInt;",164],["I: LongInt;",269],["function DecodeLongInt(const Value: Ansistring; Index: Integer): LongInt;",44]],"useCount":3664},{"word":"LongWord","context":[["Count:LongWord",196],["Offset:LongWord;",200],["Height: LongWord;",203],["Width: LongWord;",203],["MipLevels: LongWord;",220],["Index:LongWord",236],["MethodID : LongWord;",247],["Size: LongWord;",125],["Depth: LongWord;",83],["SrcDataSize: LongWord;",80]],"useCount":5812},{"word":"Longint","context":[["I: Longint;",81],["function Seek(Offset: Longint; Origin: Word): Longint; override;",164],["function Seek(Offset: Longint; Origin: Word): Longint; override;",164],["function Read(var Buffer; Count: Longint): Longint; override;",262],["function Read(var Buffer; Count: Longint): Longint; override;",262],["function Write(const Buffer; Count: Longint): Longint; override;",320],["function Write(const Buffer; Count: Longint): Longint; override;",320],["i: Longint;",255],["): Longint;",67],["l: Longint;",68]],"useCount":6205},{"word":"M","context":[["M: TMethod;",82],["Inc(M);",84],["'' + ^M^J +",88],["M := 0;",116],["DecodeDate(FechaK,A,M,D);",123],["if TryEncodeDate(A,M,DD,DiaAnterior) then",145],["M.Free;",146],["for i:=1 to M do begin",168],["{$M-}",239],["{$M+}",474]],"useCount":6522},{"word":"MA","context":[["Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.",667],["* Boston, MA 02110-1301, USA.",563],["Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",379],["MA 02111-1307, USA.",367],["Cambridge, MA  02139",300],["* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA",157],["Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.",146],["Temple Place, Suite 330, Boston, MA\t02111-1307, USA. Ou acesse o site do",118],["{    59 Temple Place, Suite 330, Boston, MA 02111-1307 USA                                    }",101],["{ no endereço 59 Temple Street, Suite 330, Boston, MA 02111-1307 USA.          }",95]],"useCount":3507},{"word":"MACOSALLINCLUDE","context":[["{$ifc not defined MACOSALLINCLUDE or not MACOSALLINCLUDE}",904],["{$ifc not defined MACOSALLINCLUDE or not MACOSALLINCLUDE}",904],["{$endc} {not MACOSALLINCLUDE}",907]],"useCount":2715},{"word":"MB_OK","context":[["'Information', MB_OK or MB_ICONINFORMATION);",75],["MB_OK+MB_ICONINFORMATION+MB_APPLMODAL);",1038],["'ATENÇÃO', MB_OK+MB_ICONINFORMATION+MB_APPLMODAL);",638],["MB_OK+MB_ICONSTOP+MB_APPLMODAL);",46],["'ATENÇÃO', MB_OK+MB_ICONWARNING+MB_APPLMODAL);",49],["'ATENÇÃO', MB_OK+MB_ICONSTOP+MB_APPLMODAL);",96],["if Length(ErrMsg) > 0 then InfoBox(ErrMsg, TX_ERR_CAP, MB_OK);",107],["InfoBox(ActionSts.Reason, TX_IN_AUTH, MB_OK);",109],["MB_OK+MB_ICONEXCLAMATION+MB_APPLMODAL);",121],["'ATENÇÃO', MB_OK+MB_ICONEXCLAMATION+MB_APPLMODAL);",244]],"useCount":4409},{"word":"MODE","context":[["{$MODE OBJFPC} { -*- delphi -*- }",34],["{$IFDEF FPC}{$MODE DELPHI}{$ENDIF}",38],["{$MODE Delphi}",1441],["{$MODE DELPHI}",596],["DISPLAY MODE    :  ---",220],["{$MODE DELPHI }",122],["{$MODE OBJFPC}",113],["{$MODE objfpc}",80],["{$MODE OBJFPC}{$H+}",69],["{$MODE DELPHI}{$H+}",29]],"useCount":2947},{"word":"MOV","context":[["MOV     ESP, EBP",5572],["MOV     EDI,EDX",150],["MOV     ECX,EDX",136],["MOV     EDX,EAX",118],["MOV     ECX, EAX",109],["MOV     ESI,EAX",101],["MOV     DWORD PTR [EDX],ECX",87],["MOV     EAX,EDX",87],["MOV     EAX,EDI",80],["MOV     ECX,EAX",83]],"useCount":11352},{"word":"MPL","context":[["{ http://www.mozilla.org/MPL/MPL-1.1.html                                      }",385],["{ http://www.mozilla.org/MPL/MPL-1.1.html                                      }",385],["under the MPL, indicate your decision by deleting the provisions above and",493],["http://www.mozilla.org/MPL/",572],["* Version: MPL 1.1",974],["* http://www.mozilla.org/MPL/",1018],["{ under the MPL, indicate your decision by deleting  the provisions above and  }",338],["* version of this file under the terms of the MPL, indicate your decision by",126],["http://www.mozilla.org/MPL/MPL-1.1.html",127],["http://www.mozilla.org/MPL/MPL-1.1.html",127]],"useCount":5164},{"word":"MSWINDOWS","context":[["{$IFDEF MSWINDOWS} stdcall; {$ENDIF} {$IFDEF LINUX} cdecl; {$ENDIF}",173],["): SqlReturn{$IFDEF MSWINDOWS} stdcall{$ELSE} cdecl{$ENDIF};",83],["{$DEFINE MSWINDOWS}",88],["{$IFDEF MSWINDOWS} stdcall; {$ENDIF} {$IFDEF POSIX} cdecl; {$ENDIF}",177],["{$IFDEF MSWINDOWS}stdcall;",242],["{$IFNDEF MSWINDOWS}",759],["{$ifdef MSWINDOWS}",564],["{$IFDEF MSWINDOWS} stdcall;",1167],["{$ENDIF MSWINDOWS}",2246],["{$IFDEF MSWINDOWS}",6423]],"useCount":13150},{"word":"Mac","context":[["*    Mac OS X:         in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.4",459],["*    Mac OS X:         not available",488],["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework [32-bit only] but deprecated in 10.4",541],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework",652],["*  Mac OS X threading:",3794],["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework",446],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.5",349],["*    Mac OS X:         in version 10.0 and later in QuickTime.framework",1970],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only]",821],["*    Mac OS X:         in version 10.0 and later in Carbon.framework",609]],"useCount":15309},{"word":"Message","context":[["procedure CMMouseLeave(var Message: TMessage); message CM_MOUSELEAVE;",90],["procedure WndProc(var Message: TMessage); override;",102],["case Message.Msg of",112],["procedure WMSize(var Message: TWMSize); message WM_SIZE;",117],["procedure CMFontChanged(var Message: TMessage); message CM_FONTCHANGED;",144],["Message.Result := 0;",161],["ShowMessage('Classe: ' + e.ClassName + chr(13) + 'Mensagem: ' + e.Message);",173],["with Message do",289],["Message.Result := 1;",297],["+ Exc.Message),",135]],"useCount":7486},{"word":"MessageDlg","context":[["MessageDlg('Error Grabando Consignación',mtError,[mbok],0);",46],["MessageDlg('No Existen Códigos contables para liquidar esta Colocación',mtError,[mbOk],0);",46],["MessageDlg('Tidak dapat melanjutkan operasi selanjutnya karena terjadi ' + #13 +",54],["MessageDlg(ErrorMsg,mterror,[mbOk],0);",54],["MessageDlg(Format('Der Abstand ist '+MakeNiceNumber(Result)+' (~ %0.3f)',[Result]), mtInformation, [mbOK], 0);",62],["MessageDlg('Error actualizando arqueo de caja',mtError,[mbcancel],0);",72],["MessageDlg('Error al Buscar Deuda',mtError,[mbcancel],0);",86],["MessageDlg('Código não cadastrado, deseja cadastra-ló ?', mtWarning,",98],["MessageDlg('Erro no sistema, parametro não foi gravado.', mtError,",113],["MessageDlg('Error al Obtener valor de Corto Plazo',mtError,[mbcancel],0);",215]],"useCount":2704},{"word":"MessageText","context":[["// MessageText:",6905],["MessageText := '';",11],["var MessageText: string);",20]],"useCount":6936},{"word":"Messages","context":[["SysUtils, WinTypes, WinProcs, Messages, Classes, Graphics, Controls,",117],["UnitProxySpace, Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,",75],["Winapi.Windows, Winapi.Messages,",75],["Windows, Messages, SysUtils, Variants, Classes, Graphics,",110],["Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,",5455],["Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,",2688],["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,",781],["Messages,",610],["Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms,",325],["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,",150]],"useCount":11604},{"word":"Move","context":[["{Move the data across}",218],["{Move to next column}",126],["Move(List[FromIndex], List[ToIndex], Count * SizeOf(List[0]));",121],["call System.Move",116],["System.Move(FBytesabcde, Pointer(LBuffer)^, System.SizeOf(FBytesabcde));",87],["Move(source^, dest^, count);",66],["procedure Move(CurIndex, NewIndex: Integer);",58],["{Move to next pixel}",56],["System.Move (SavedLoopStack, LoopStack, SizeOf (LoopStack));",50],["System.Move(APointer^, Result^, ANewSize);",51]],"useCount":3767},{"word":"Msg","context":[["Msg: TMsg;",141],["{-update context with Msg data}",280],["case Msg of",178],["Msg.Result := 0;",151],["Msg.Result := 1;",144],["DispatchMessage(Msg);",138],["TranslateMessage(Msg);",137],["case Message.Msg of",112],["Msg: Cardinal;",97],["inc(Ptr2Inc(Msg));",84]],"useCount":5713},{"word":"N","context":[["Inc(N);",331],["L I C E N S E",297],["N: Integer;",256],["Dec(N);",179],["I, N: Integer;",165],["for I := 1 to N do",131],["{$N+}",117],["N:Integer;",109],["if N = 0 then",105],["N := 0;",333]],"useCount":8847},{"word":"NULL","context":[["@return the column value; if the value is SQL <code>NULL</code>, the",264],["* or NULL if f is the last one.",76],["* - encoding: Set by user, can be NULL.",76],["//      Source palette of 256 colors, or NULL",76],["* if f is non-NULL, returns the next registered input format after f",74],["* @return An encoder if one was found, NULL otherwise.",62],["* @return A decoder if one was found, NULL otherwise.",62],["<LI> importedKeySetNull - change imported key to NULL if",60],["OCI_INVALID_HANDLE if 'err' is NULL.",56],["This function returns the new surface, or NULL if there was an error.",52]],"useCount":5858},{"word":"Name","context":[["Name: string;",559],["property Name: WideString read Get_Name;",164],["property Name: string read FName write FName;",174],["property Name: WideString read Get_Name write Set_Name;",166],["Name changes",496],["class function Name: string; override;",373],["FName := Name;",174],["property Name: string read FName;",186],["Name: String;",227],["property Name: string read GetName;",236]],"useCount":15236},{"word":"NativeInt","context":[["Result := NativeInt(L1) - NativeInt(L2);",45],["Result := NativeInt(L1) - NativeInt(L2);",45],["LIndex: NativeInt;",45],["FVer: NativeInt;",48],["Size: NativeInt;",48],["function GetCount(): NativeInt; override;",62],["i: NativeInt;",161],["I: NativeInt;",244],["Index: NativeInt;",45],["Ret: NativeInt;",264]],"useCount":2684},{"word":"NativeUInt","context":[["Len: NativeUInt;",68],["L: NativeUInt;",291],["X, Y: NativeUInt;",260],["Value := Integer(UNICONV_SUPPORTED_SBCS_HASH[NativeUInt(Value) shr 24]);",181],["Index: NativeUInt;",150],["SBCS := Pointer(NativeUInt(Byte(Value shr 16)) * SizeOf(TUniConvSBCS) + NativeUInt(@UNICONV_SUPPORTED_SBCS));",146],["SBCS := Pointer(NativeUInt(Byte(Value shr 16)) * SizeOf(TUniConvSBCS) + NativeUInt(@UNICONV_SUPPORTED_SBCS));",146],["Index := NativeUInt(CodePage);",126],["I: NativeUInt;",91],["Length: NativeUInt;",116]],"useCount":4553},{"word":"New","context":[["* New public fields should be added right above.",169],["* New fields can be added to the end with minor version bumps.",170],["New(AR);",701],["New(ARecord);",48],["{ New for V39:",48],["IF New=FALSE THEN",52],["New(AF);",80],["New(P);",126],["New(Result);",128],["New(ar);",155]],"useCount":2832},{"word":"Next","context":[["FParser.Next;",420],["while Next do",153],["Result := Add(It.Next) and Result;",156],["Key := It.Next;",185],["fTok.Next;",218],["Next:=nil;",219],["CheckTrue(VTestEnum.Next(VPoint));",249],["procedure Next; override;",285],["Next;",3992],["Current := Current.Next;",366]],"useCount":16070},{"word":"NextToken","context":[["Token := Parser.NextToken(tt);",34],["Token := _Parser.NextToken(tt);",50],["Parser.NextToken;",55],["AheadParse.NextToken;",58],["p.NextToken;",80],["NextToken",86],["NextToken;",2636],["parser.NextToken;",24],["function NextToken(Stream: TStream; FirstChar: Char;",29],["procedure NextToken;",31]],"useCount":3178},{"word":"Nil","context":[["If (GroupID<0) Or (_Mesh = Nil) Or (GroupID >= _Mesh._GroupCount) Then",54],["complete := Nil;",54],["If (Dest =  Nil) Then",76],["If ActiveCircuit <> Nil Then Begin",83],["Result:=Nil;",86],["Assert.IsNotNull(result, ' Nil result ');",119],["IF ActiveCircuit <> Nil THEN",148],["If ActiveCircuit <> Nil Then",275],["Result := Nil;",893],["Result := Nil",160]],"useCount":3155},{"word":"No","context":[["// Def. Intf. DISP? : No",337],["Writable? No.",46],["// No index",130],["sbb edi, -1                 //Yes->increment ptr, No->keep old ptr",126],["* No fields below this line are part of the public API. They",88],["// No show text only",72],["if Length(x) = 0 then x := '<No Section Name>';",70],["// No Index",52],["uReportInstruction := '<No Report Available>'",51],["MessageDlg('No Existen Códigos contables para liquidar esta Colocación',mtError,[mbOk],0);",46]],"useCount":3337},{"word":"Node","context":[["if Assigned(Node) then",279],["Node: TTreeNode;",369],["Node: PVirtualNode;",249],["Data := Sender.GetNodeData(Node);",221],["with Node do",194],["Node: TXmlNode;",165],["NodeData := Sender.GetNodeData(Node);",154],["Node: PVirtualNode; Column: TColumnIndex; TextType: TVSTTextType;",141],["Node: PVirtualNode);",131],["if not Assigned(Node) then",117]],"useCount":10575},{"word":"Non","context":[["*    Non-Carbon CFM:   in QuickTimeLib 3.0 and later",208],["*\tNon-Carbon CFM:   not available",205],["*    Non-Carbon CFM:   available as macro/inline",947],["*    Non-Carbon CFM:   not available",3490],["*    Non-Carbon CFM:   in InterfaceLib 7.1 and later",1185],["*    Non-Carbon CFM:   in QuickTimeLib 2.5 and later",1102],["*    Non-Carbon CFM:   in InterfaceLib 9.0 and later",111],["*    Non-Carbon CFM:   in QuickTimeLib 4.0 and later",186],["//   Non-DISP interfaces: IID_xxxx",178],["*    Non-Carbon CFM:   in QTStreamLib 4.0 and later",148]],"useCount":10274},{"word":"Not","context":[["*    Not thread safe",2666],["If (Not _Owner.Features.Shaders.Avaliable) Then",41],["raise ESqliteException.Create('Field ' + fieldname + ' Not found. Empty dataset');",42],["If Not lrOK Then",42],["Fail('Not implemented!');",42],["raise Exception.Create('Not expected');",46],["If Not FEnv.Error.Success(FRetCode) Then",57],["If Not Result Then",80],["raise EBESENTypeError.Create('Not a date object');",108],["*  \tNot appropriate for CUPS filters, drivers, and backends.",120]],"useCount":5081},{"word":"Note","context":[["Note we do *not* do INPUT_SYNC before calling fill_input_buffer,",150],["Note that the source modules HTMLGIF1.PAS and DITHERUNIT.PAS",135],["{:Note: This is high-level receive function. It using internal",120],["Lines[0].Line[Lines[0].Current].Note[CurrentNote].Color := 1;",74],["Lines[0].Line[Lines[0].Current].Note[CurrentNote].Color := 2;",70],["Note: THelpNote;",48],["(* <Note>                                                                *)",44],["// Note: defined in avutil.pas",42],["Note: If you call this on non-created socket, then socket is created",40],["{:Note::",40]],"useCount":3641},{"word":"O","context":[["AR^.estado := 'O';",406],["O := B as TJsonObject;",57],["O := TJsonObject.Create;",55],["O: TObject;",61],["O: TJsonObject;",70],["//==================== ENVIO DE DADOS PARA O SERVIDOR ==========================",76],["{$O-}",99],["O.Free;",105],["ParamByName('ESTADOAUX').AsString := 'O';",118],["{$O+}",146]],"useCount":3790},{"word":"OFF","context":[["{$WARN SYMBOL_DEPRECATED OFF}",197],["{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers.",177],["{$WARN UNIT_PLATFORM OFF}",158],["{$WARN IMPLICIT_STRING_CAST OFF}",148],["{$WARN IMPLICIT_STRING_CAST_LOSS OFF}",140],["{$WARN SYMBOL_PLATFORM OFF}",649],["{$OVERFLOWCHECKS OFF}",249],["{$HINTS OFF}",327],["{$RANGECHECKS OFF}",389],["{$WARNINGS OFF}",604]],"useCount":4742},{"word":"OK","context":[["OK:=true;",260],["* @return >=0 if OK, AVERROR_xxx on error",64],["OK:=SendCtrlToNext(command,CValue1,CValue2);",64],["Result := IMAPcommand(s) = 'OK';",80],["{Allocated OK?}",92],["OK:=false;",201],["Writeln('OK')",122],["* @return 0 if OK, AVERROR_xxx on error",118],["if OK then",117],["OK: boolean;",96]],"useCount":3376},{"word":"ON","context":[["{$SCOPEDENUMS ON}",110],["{$LONGSTRINGS ON}",108],["{$WEAKPACKAGEUNIT ON}",135],["{$WARNINGS ON}",598],["{$HINTS ON}",318],["{$ALIGN ON}",226],["{$RANGECHECKS ON}",220],["{$WRITEABLECONST ON}",159],["{$WARN SYMBOL_PLATFORM ON}",141],["{$VARPROPSETTER ON}",120]],"useCount":4863},{"word":"OR","context":[["SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",141],["SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",141],["if (Components[I] is TEdit) OR (Components[I] is TDBEdit) OR (Components[I] is TComboBox)",99],["if (Components[I] is TEdit) OR (Components[I] is TDBEdit) OR (Components[I] is TComboBox)",99],["// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",93],["| ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR  |",321],["IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN",236],["IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN",236],["OR (FrameIndex < 0)",161],["SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",141]],"useCount":3962},{"word":"OS","context":[["*  Mac OS X threading:",3794],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only]",821],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.5",349],["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework",446],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.4",459],["*    Mac OS X:         not available",488],["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework [32-bit only] but deprecated in 10.4",541],["*    Mac OS X:         in version 10.0 and later in Carbon.framework",609],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework",652],["*    Mac OS X:         in version 10.0 and later in QuickTime.framework",1970]],"useCount":15645},{"word":"Obj","context":[["if assigned(TBESENObject(ThisArgument.Obj)) and (TBESENObject(ThisArgument.Obj) is TBESENObjectDate) then begin",132],["Obj: TObject;",337],["Obj.Free;",89],["Obj: TObject3D;",80],["if not ((ThisArgument.ValueType=bvtOBJECT) and assigned(TBESENObject(ThisArgument.Obj))) then begin",177],["Obj: TSpaceObj;",156],["function QueryInterface(const IID: TGUID; out Obj): HResult; stdcall;",118],["if assigned(TBESENObject(ThisArgument.Obj)) and (TBESENObject(ThisArgument.Obj) is TBESENObjectDate) then begin",132],["if GetInterface(IID, Obj) then",153],["Obj := AIterator.GetIteratorReference;",143]],"useCount":4394},{"word":"Offset","context":[["Stream.Seek(Offset, soFromBeginning);",540],["Inc(Offset);",83],["function Seek(const Offset: Int64; Origin: TSeekOrigin): Int64; override;",128],["function Seek(Offset: Longint; Origin: Word): Longint; override;",164],["Offset: Integer;",183],["Offset:LongWord;",200],["Offset := 0;",234],["Inc(Offset, OffsetInc);",540],["Offset := StreamOffset + (NAxis1 * ReqRgn.Y1 + ReqRgn.X1) * SizeBitPix;",540],["Offset: Int64;",553]],"useCount":5894},{"word":"OleAutomation","context":[["// Flags:     (272) Hidden OleAutomation",18],["// Flags:     (336) Hidden Dual OleAutomation",22],["// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable",1834],["// Flags:     (4416) Dual OleAutomation Dispatchable",1384],["// Flags:     (4432) Hidden Dual OleAutomation Dispatchable",536],["// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable",410],["// Flags:     (256) OleAutomation",57]],"useCount":4261},{"word":"OleVariant","context":[["procedure transformNodeToObject(const stylesheet: IXMLDOMNode; outputObject: OleVariant); dispid 35;",156],["procedure open(const bstrMethod: WideString; const bstrUrl: WideString; varAsync: OleVariant;",77],["function insertBefore(const newChild: IXMLDOMNode; refChild: OleVariant): IXMLDOMNode; dispid 13;",78],["function  dataType: OleVariant; dispid 26;",78],["function  insertBefore(const newChild: IXMLDOMNode; refChild: OleVariant): IXMLDOMNode; dispid 13;",78],["InterfaceVariant : OleVariant;",114],["InterfaceVariant: OleVariant;",143],["property nodeValue: OleVariant dispid 3;",156],["property nodeTypedValue: OleVariant dispid 25;",156],["function dataType: OleVariant; dispid 26;",78]],"useCount":4956},{"word":"Open","context":[["Open;",6139],["dm.cds_parametro.Open;",460],["FTBLOutrasFuncoes.Open;",270],["q.Open;",215],["Result := Open;",178],["s_parametro.Open;",178],["IBQuery2.Open;",148],["procedure Open;",141],["Tabla.Open;",139],["dm.c_6_genid.Open;",260]],"useCount":13226},{"word":"Operands","context":[["if (Operands^[0]<>Operands^[1]) and (Operands^[0]<>Operands^[2]) then begin",84],["if (Operands^[0]<>Operands^[1]) and (Operands^[0]<>Operands^[2]) then begin",84],["AddDWord(ptruint(Operands^[1]*sizeof(TBESENValue)));",88],["AddDWord(ptruint(Operands^[1]*sizeof(TBESENValue))+(ptruint(pointer(@v.Num))-ptruint(pointer(@v))));",172],["r:=@RegisterValues[Operands^[0]];",280],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.ValueType))-ptruint(pointer(@v))));",316],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.Bool))-ptruint(pointer(@v))));",168],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue)));",124],["vp:=@RegisterValues[Operands^[0]];",112],["a:=@RegisterValues[Operands^[1]];",88]],"useCount":2644},{"word":"Operation","context":[["if (Operation = opRemove) then",52],["if Operation = opRemove then begin",70],["procedure Notification(AComponent: TComponent; Operation: TOperation);",109],["Operation: TOperation); override;",155],["if Operation = opRemove then",227],["inherited Notification(AComponent, Operation);",421],["Operation: TOperation);",458],["procedure Notification(AComponent: TComponent; Operation: TOperation); override;",579],["case Operation of",108],["if (Operation = opRemove) and (FDataLink <> nil) and",49]],"useCount":2916},{"word":"Ord","context":[["Ram.WriteByte(offset + 1, Ord(r1));",61],["x := Ord(Value.Enabled);",61],["Result := Ord(C1) - Ord(C2);",62],["Result := Ord(C1) - Ord(C2);",62],["case Ord(P) of",72],["case Ord(Ch) of",90],["Ord('Q'):",131],["Result := Ord(fTokenId);",183],["if Ord(P) < $80 then",210],["True: mHashTable[I] := Ord(J) - 64",59]],"useCount":5548},{"word":"Original","context":[["* The Initial Developer of the Original Code is Mauricio",124],["{ The Initial Developer of the Original Code is Marcel van Brakel.                                 }",50],["* The Initial Developers of the Original Code are Kent Beck, Erich Gamma,",55],["* The Initial Developer of the Original Code is",774],["* The Original Code is TurboPower Abbrevia",595],["| The Initial Developer of the Original Code is Lukas Gebauer (Czech Republic).|",325],["* The Original Code is TurboPower Async Professional",116],["* The Original Code is DUnit.",62],["{ The Initial Developer of the Original Code is Florent Ouchet                                     }",63],["{ The Initial Developers of the Original Code are documented in the accompanying help file         }",109]],"useCount":3496},{"word":"Override","context":[["Procedure ListProperties(oList : TFHIRPropertyList; bInheritedProperties : Boolean); Override;",81],["Procedure ListProperties(oList : TFHIRPropertyList; bInheritedProperties, bPrimitiveValues : Boolean); Override;",49],["constructor Create; Override;",217],["Destructor Destroy; Override;",224],["destructor Destroy; Override;",260],["Virtuality := CGMemberVirtualityKind.Override,",55],["Procedure Run; Override;",79],["Procedure Release(); Override;",121],["Constructor Create; Override;",111],["Procedure Release; Override;",283]],"useCount":2960},{"word":"Owner","context":[["Owner.Build:=False;",50],["constructor Create(Owner: TComponent); override;",45],["FSock.Owner := self;",56],["FOwner := Owner;",60],["if Assigned(Owner) then",75],["Owner.Redraw;",93],["Owner.FileChanged:=True;",156],["inherited Create(Owner);",156],["Owner.Schema.ObjectModel.Lock.Leave;",316],["Owner.Schema.ObjectModel.Lock.Enter;",316]],"useCount":3119},{"word":"P","context":[["P: PChar;",488],["case P^ of",222],["P: Pointer;",398],["if P <> nil then",259],["Result := WideChar(P)",240],["Result := P;",258],["Inc(P);",2893],["P: TPoint;",634],["P: PByte;",475],["function  DecodeChar(const P: AnsiChar): WideChar; override;",526]],"useCount":26763},{"word":"PAnsiChar","context":[["pSrcFile: PAnsiChar;",108],["LMsgPtr: PAnsiChar;",78],["extstring : PAnsiChar;",178],["P: PAnsiChar;",160],["Name:PAnsiChar",158],["pSrcResource: PAnsiChar;",108],["name: PAnsiChar;",244],["Semantic:PAnsiChar",70],["long_name: PAnsiChar;",96],["filename: PAnsiChar;",94]],"useCount":8130},{"word":"PByte","context":[["X := PByte(P)^;",96],["P1, P2: PByte;",86],["Data: PByte;",85],["LBlockHeader := PNativeUInt(PByte(APointer) - BlockHeaderSize)^;",74],["buffer, tmpBuffer, attributeBuffer : PByte;",101],["TargetPtr: PByte;",62],["LMediumBlockHeader := PNativeUInt(PByte(LPMediumBlock) - BlockHeaderSize)^;",57],["p: PByte;",107],["P: PByte;",475],["var ABuffer: {$IFDEF DOTNET}TIdBytes{$ELSE}PByte{$ENDIF};",72]],"useCount":5974},{"word":"PChar","context":[["P: PChar;",488],["function KeyHash(ToHash: PChar): Integer;",120],["fToIdent: PChar;",132],["Temp: PChar;",133],["fLine := PChar(NewValue);",153],["SendIpcMessage(PChar(UIBHOOKIPC), strm.Memory, strm.Size);",154],["fLine: PChar;",156],["p: PChar;",204],["extstring : PChar;",356],["extstring := String(PChar(glGetString(GL_EXTENSIONS)));",373]],"useCount":9508},{"word":"POP","context":[["POP ESI",164],["POP     EAX",135],["POP EDI",131],["{$POP}",93],["POP   EBX",78],["POP     ECX",76],["POP     ESI",539],["POP     EDI",560],["POP     EBX",519],["POP     EBP",5627]],"useCount":8641},{"word":"PSOChar","context":[["PSOChar = PWideChar;",26],["PSOChar = PChar;",26],["p := PSOChar(Result);",37],["function Append(buf: PSOChar): Integer; override;",66],["ParseString(PSOChar(path), true, False, self, [foCreatePath, foPutValue], TSuperObject.Create(Value));",84],["function Append(buf: PSOChar; Size: Integer): Integer; override;",87],["p: PSOChar;",101],["stString:  Result := GetIntCompResult(StrComp(PSOChar(AsString), PSOChar(obj.AsString)));",109],["stString:  Result := GetIntCompResult(StrComp(PSOChar(AsString), PSOChar(obj.AsString)));",109],["function TSuperWriterSock.Append(buf: PSOChar): Integer;",22]],"useCount":2632},{"word":"PUSH","context":[["PUSH    ECX",70],["PUSH    EDI",534],["PUSH    EBX",446],["PUSH    ESI",436],["PUSH    EAX",165],["PUSH ESI",163],["PUSH  EBX",76],["PUSH EDI",133],["PUSH    EDX",76],["PUSH    EBP",71]],"useCount":2670},{"word":"Panel1","context":[["Panel1: TPanel;",3677],["fProcura_prod.Panel1.Visible := false;",14],["Panel1.Caption := '';",55],["Panel1.Visible := False;",39],["Panel1.Enabled := False;",35],["Panel1.Visible := True;",33],["Panel1.Enabled := True;",27],["Panel1: TTntPanel;",13],["if AnsiPos('=',Panel1.Caption)<1 then",19],["with Panel1 do",15]],"useCount":3963},{"word":"Param","context":[["this := Param^.p_param[0]^.VObject;",46],["if __GetThis(Param, this) then",50],["Param[0].PType := list;",46],["Classe.Global, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,",46],["Param[1].PType := list;",66],["Param := Parser.StrValue;",115],["Param[0].PType := literal;",129],["FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,",131],["FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,",178],["with Param^ do",557]],"useCount":2687},{"word":"ParamByName","context":[["ParamByName('ID_COLOCACION').AsString := vColocacion;",185],["ParamByName('ID_AGENCIA').AsInteger := agencia;",203],["ParamByName('ID_AGENCIA').AsInteger := IdAgencia;",209],["ParamByName('ID_EMPLEADO').AsString := DBAlias;",219],["ParamByName('ID_COLOCACION').AsString := IdColocacion;",221],["ParamByName('ID_COLOCACION').AsString := TableName;",221],["ParamByName('ID_SOLICITUD').AsString := num_radicado;",269],["ParamByName('ID_AGENCIA').AsInteger := Agencia;",1250],["IBSQL3.ParamByName('CODIGO').AsString := Codigo;",426],["ParamByName('ID_COLOCACION').AsString := IBQuery1.FieldByName('ID_COLOCACION').AsString;",166]],"useCount":19880},{"word":"Parameters","context":[["procedure ParseParameters(Value: string; const Parameters: TStrings);",46],["procedure ParseParametersEx(Value, Delimiter: string; const Parameters: TStrings);",46],["Parameters",63],["| Parameters:                                                                |",65],["Parameters:(",69],["//* Parameters:",69],["//  Parameters:",284],["// Parameters:",580],["Parameters:",914],["*  Parameters:",2262]],"useCount":5086},{"word":"Params","context":[["Params.ExStyle:=WS_EX_APPWINDOW; // Params.ExStyle sorgt dafür, dass das Form einen eigenen Taskbareintrag erhält",90],["procedure CreateParams(var Params:TCreateParams);override;",91],["procedure CreateWindowHandle(const Params: TCreateParams); override;",99],["Params.ParamByName('WBILLID').AsInteger := FID;",102],["var Params  : TFtpString;",134],["Params.ParamByName('wbillid').AsInteger := FID;",148],["with Params do",184],["inherited CreateParams(Params);",408],["procedure CreateParams(var Params: TCreateParams); override;",444],["Params: '';",784]],"useCount":7813},{"word":"Parent","context":[["if Parent <> nil then",189],["property Parent: _IVSQLDMOStdObject readonly dispid 2;",202],["property Parent: _IVSQLDMOStdObject read Get_Parent;",155],["if Assigned(Parent) then",139],["Parent := PanelTools;",126],["property Parent: IDispatch read Get_Parent;",125],["Successor := Current.Parent;",104],["FCursor := FCursor.Parent;",104],["Parent := Self;",428],["Result := Result.Parent;",514]],"useCount":8743},{"word":"Pascal","context":[["// Pascal Port By: Milan Marusinec alias Milano",182],["* This is a part of the Pascal port of ffmpeg.",128],["Modified for use with Free Pascal",455],["{ Pascal code is Marcel van Brakel (brakelm att chello dott nl).               }",212],["* This is a part of Pascal porting of ffmpeg.",191],["BESEN - A ECMAScript Fifth Edition Object Pascal Implementation",296],["This file is part of the Free Pascal run time library.",213],["* - Originally by Victor Zinetz for Delphi and Free Pascal on Windows.",191],["fpGUI  -  Free Pascal GUI Toolkit",177],["// [Pascal Port History] -----------------------------------------------------",174]],"useCount":4489},{"word":"Pen","context":[["Pen.Color := clBlack;",168],["Pen.Color := clWhite;",82],["Pen.Color := GetPartColor(ItemInfo, ipText);",92],["Pen.Color := clSilver;",93],["Pen.Style := psDot;",95],["Pen.Color := clBtnShadow;",97],["Canvas.Pen.Color := Get508CompliantColor(clSilver);",97],["Brush.Color := Pen.Color;",167],["Pen.Width := 1;",192],["Pen.Style := psSolid;",267]],"useCount":4535},{"word":"Piece","context":[["ErrMsg := Piece(FReportText.Lines[0], U, 2);",36],["function Piece(const S: string; Delim: char; PieceNum: Integer): string;",39],["ADevice := Piece(cboDevice.ItemID, ';', 2);",75],["case StrToIntDef(Piece(DEAFailStr,U,1),0) of",56],["2:  TX_INFO := TX_SCHFAIL + Piece(DEAFailStr,U,2) + '.';  //prescriber has no schedule privileges in 2,2N,3,3N,4, or 5",45],["5:  TX_INFO := TX_EXP_DETOX1 + Piece(DEAFailStr,U,2) + TX_EXP_DETOX2;  //valid detox#, but expired DEA#",45],["4:  TX_INFO := TX_EXP_DEA1 + Piece(DEAFailStr,U,2) + TX_EXP_DEA2;  //prescriber's DEA# expired and no VA# is assigned",45],["//  Provider := StrToInt64Def(Piece(x, U, pnumProvider), 0);",42],["AnSSN := Piece(x, U, 4);",40],["ADate := Piece(x, U, 3);",40]],"useCount":6428},{"word":"Planet","context":[["{* SAS.Planet (SAS.Ïëàíåòà)                                                   *}",3126]],"useCount":3126},{"word":"Point","context":[["{Point eax to the start of the remainder}",45],["Point(Left, Top - 1), Point(Right - 1, Top - 1),",52],["Point(Left, Top - 1), Point(Right - 1, Top - 1),",52],["Point: TPoint;",117],["Point(Left - 1, Top), Point(Left, Top - 1)",48],["Point(Left - 1, Top), Point(Left, Top - 1)",48],["ptrPoint:=Point.ptrNextObj;",47],["ShiftState: TShiftState; Point: TPoint; var Effect: Integer);",46],["ASize := Point(Width, Height);",40],["Result := Point(0, 0);",37]],"useCount":3111},{"word":"Pointer","context":[["p: Pointer;",214],["Data: Pointer;",195],["P: Pointer;",398],["Handle.Buffer.Allocate(Pointer(Buf), SizeBuf);",540],["SBCS := Pointer(NativeUInt(Byte(Value shr 16)) * SizeOf(TUniConvSBCS) + NativeUInt(@UNICONV_SUPPORTED_SBCS));",146],["function GetRange: Pointer; override;",187],["P := Pointer(S);",170],["Buffer: Pointer;",181],["procedure SetRange(Value: Pointer); override;",187],["Handle.Buffer.Release(Pointer(Buf));",540]],"useCount":21275},{"word":"Pos","context":[["Pos[P1PX][P1PY]:= 0;",72],["I := Pos(' ', S);",59],["Pos := 0;",66],["Pos[P2PX][P2PY]:= 0;",72],["const Pos: TG2Vec2;",73],["Pos: TPoint;",82],["Pos := 1;",83],["Pos: 0;",96],["Pos: Integer;",131],["Inc(Pos);",211]],"useCount":6002},{"word":"Position","context":[["ms.Position := 0;",133],["Stream.Position := 0;",271],["LStream.Position := 0;",107],["Position:=poScreenCenter;",102],["Inc(Position);",127],["ProgressBar1.Position := 0;",127],["Position := 0;",228],["FStream.Position := 0;",152],["if FStrm.Position <> FStrmPos then FStrm.Position := FStrmPos;",96],["AStream.Position := 0;",99]],"useCount":9763},{"word":"Post","context":[["db_PedidoItens.Post;",44],["CDestado.Post;",40],["dmod.ParamT.Post;",39],["DM.cdsRare.Post;",37],["Tabla.Post;",36],["DataActual.Post;",34],["Post;",1198],["mdTmpIds.Post;",95],["mdDet.Post;",84],["TabelaArmazenar.Post;",50]],"useCount":2625},{"word":"Private","context":[["{-------------------------Private constants----------------------------}",34],["{ Private é¾ }",61],["// Private declarations",56],["{ Private Properties }",52],["// Private members",70],["{ Private-Deklarationen }",577],["{ Private Declarations }",766],["Private",783],["{ Private declarations }",9957],["private   { Private declarations }",43]],"useCount":12776},{"word":"Procedure","context":[["Procedure Release; Override;",283],["Procedure GetChildrenByName(child_name : string; list : TFHIRObjectList); override;",120],["Procedure Release(); Override;",121],["Procedure Clear;",107],["Procedure FormShow(Sender: TObject);",56],["Procedure ListProperties(oList : TFHIRPropertyList; bInheritedProperties, bPrimitiveValues : Boolean); Override;",49],["Procedure Line(S2:TERRAString); Begin S := S + S2 + crLf; End;",48],["Procedure Run; Override;",79],["Procedure btnOKClick(Sender: TObject);",47],["Procedure ListProperties(oList : TFHIRPropertyList; bInheritedProperties : Boolean); Override;",81]],"useCount":3029},{"word":"ProcessMessages","context":[["procedure ProcessMessages;",33],["ProcessMessages;",29],["// Application.ProcessMessages;",29],["Application.ProcessMessages ;",28],["Forms.Application.ProcessMessages;",25],["fpgApplication.ProcessMessages;",23],["Application.ProcessMessages;",5553],["//Application.ProcessMessages;",58],["Application.ProcessMessages();",67],["application.ProcessMessages;",168]],"useCount":6155},{"word":"Project","context":[["{                    Project: EPANET2W                              }",50],["= Project   : CENW                                             =",38],["Pt1:=Viewport.Project(P1);",50],["= Project   : CenW                                             =",107],["{ Project JEDI Code Library (JCL)                                                                  }",495],["// This unit is part of the GLScene Project, http://glscene.org",578],["$Project$",1097],["{ Joint Endeavour of Delphi Innovators ( Project JEDI )                        }",46],["Project.Dirty:=true;}",43],["Pt2:=Viewport.Project(M);",40]],"useCount":3258},{"word":"Prop","context":[["if assigned(Prop) then begin",36],["var Prop:TBESENObjectProperty;",36],["Prop:50;",838],["Prop:100;",450],["if Prop.HasBorderStyle then {start of inline border}",60],["Prop := PropStack.Last;",38],["case Prop.Id of",40],["MAPIFreeBuffer(Prop);",46],["PropStack.Document.ProcessInlines(PropStack.SIndex, Prop, True);",48],["inherited Create(Parent,Position,L,Prop);",49]],"useCount":2627},{"word":"Properties","context":[["property Properties: Properties read Get_Properties;",101],["property Properties: Properties readonly dispid 7;",135],["property Properties: Properties readonly dispid 7;",135],["{ Properties }",179],["// Properties",189],["// OLE Server Properties Proxy Class",274],["{ Methods & Properties }",635],["Properties := TProperties.Create(UseQuirksMode);",119],["property Properties: Properties read Get_Properties;",101],["function Get_Properties: Properties; safecall;",101]],"useCount":2847},{"word":"Protected","context":[["{ Protected é¾ }",14],["FTranslation[trProtected] := 'Protected';",14],["// Protected declarations",17],["Visibility := CGMemberVisibilityKind.Protected,",22],["{ Protected-Deklarationen }",22],["{ Protected declaration }",23],["{ Protected Properties }",52],["{ Protected declarations }",564],["{ Protected Declarations }",753],["Protected",1348]],"useCount":2829},{"word":"Public","context":[["Public",2314],["{ Public declarations }",9806],["{ Public Declarations }",1052],["{ Public Properties }",64],["* The contents of this file are subject to the Mozilla Public",84],["- This Source Code Form is subject to the terms of the Mozilla Public",90],["// Public declarations",94],["Visibility := CGMemberVisibilityKind.Public,",104],["This Source Code Form is subject to the terms of the Mozilla Public",123],["{ Public-Deklarationen }",574]],"useCount":14898},{"word":"Q","context":[["{$Q-}",355],["{$R-}{$Q-}",99],["Inc(Q, 4);",81],["{$Q+}",80],["if Cardinal(Q) < Cardinal(S.read) then M := Cardinal(S.read) - Cardinal(Q) - 1",70],["Q.Open;",102],["Q.ExecSQL;",109],["S.write := Q;",120],["Ord('Q'):",131],["Inc(Q);",211]],"useCount":3216},{"word":"QuickTime","context":[["*    Mac OS X:         in version 10.4 (or QuickTime 7.0) and later in QuickTime.framework",287],["*    Mac OS X:         in version 10.5 (or QuickTime 7.1) and later in QuickTime.framework",19],["*    Mac OS X:         in version 10.5 (or QuickTime 7.1) and later in QuickTime.framework",19],["*    Mac OS X:         in version 10.4 (or QuickTime 7.0) and later in QuickTime.framework",287],["*    Mac OS X:         in version 10.0 and later in QuickTime.framework",1970],["*    Windows:          in qtmlClient.lib version 10.4 (or QuickTime 7.0) and later",66],["*    Mac OS X:         in version 10.3 (or QuickTime 6.4) and later in QuickTime.framework",94],["*    Mac OS X:         in version 10.3 (or QuickTime 6.4) and later in QuickTime.framework",94],["*    Mac OS X:         in version 10.2 and later in QuickTime.framework",99],["*    Mac OS X:         in version 10.0 and later in QuickTime.framework but deprecated in 10.5",113]],"useCount":3102},{"word":"R","context":[["{$R *.DFM}",3485],["{$R+}",325],["{$R *.lfm}",2304],["R: TRect;",1711],["InflateRect(R, -1, -1);",579],["R := ARect;",476],["{$R-}",472],["{$R *.fmx}",389],["with R do",405],["{$R *.dfm}",9449]],"useCount":40382},{"word":"R2","context":[["R, R2: TRect;",71],["R := R2;",63],["Dec(R2.Right);",38],["Inc(R2.Top, 4);",44],["R2 := ARect;",40],["R.Bottom := R2.Top;",37],["Dec(R2.Bottom);",41],["R2 := R;",288],["R2: TRect;",116],["InflateRect(R2, -1, -1);",52]],"useCount":2841},{"word":"RPCBrokerV","context":[["Result := RPCBrokerV.Results ;",130],["MixedCaseList(RPCBrokerV.Results);",298],["Result := RPCBrokerV.Results;",519],["FastAssign(RPCBrokerV.Results, Dest);",337],["with RPCBrokerV do",305],["QuickCopy(RPCBrokerV.Results,Dest);",64],["SortByPiece(TStringList(RPCBrokerV.Results), U, 2);",81],["if RPCBrokerV.Results.Count > 0 then",84],["with RPCBrokerV do for i := 0 to Results.Count - 1 do",102],["a pointer to RPCBrokerV.Results, so the data must be used BEFORE the next broker call! }",108]],"useCount":3132},{"word":"Read","context":[["if (Stream.Read(b, 1) <> 1) then",70],["Frames[FrameIndex].Stream.Read(Data, 1);",82],["procedure Read( const iprot: IProtocol);",112],["TagStream.Read(ChunkID, 4);",115],["BytesRead:=Filestream.Read(DrumPC,1);",176],["BytesRead:=Filestream.Read(DrumP,1);",187],["function Read(var Buffer; Count: Longint): Longint; override;",262],["Stream.Read(Buf[0], SizeBuf);",270],["* - decoding: Read by user.",295],["* Read packets of a media file to get stream information. This",64]],"useCount":6115},{"word":"ReadOnly","context":[["if not ReadOnly then",142],["property ReadOnly;",175],["if FMap.ReadOnly then",65],["txtProvDiag.ReadOnly   := True;",86],["if FOwnList.ReadOnly then",104],["ReadOnly := True;",63],["property ReadOnly: Boolean read GetReadOnly write SetReadOnly default False;",48],["property    ReadOnly;",48],["if FOwnTree.ReadOnly then",364],["if ReadOnly then",3246]],"useCount":4945},{"word":"Rect","context":[["Rect: TRect;",279],["Rect := ClientRect;",62],["with Rect do",67],["FProgressRect := Rect(0, 0, Width, 1);",70],["const Rect: TRect; DataCol: Integer; Column: TColumn;",148],["FillRect(Rect);",209],["Rect: TRect; State: TGridDrawState);",211],["Rect: TRect; State: TOwnerDrawState);",213],["Canvas.FillRect(Rect);",144],["Index: Integer; Rect: TRect; State: TOwnerDrawState);",115]],"useCount":5071},{"word":"Register","context":[["procedure UpdateRegistry(Register: Boolean); override;",27],["procedure Register;",2864],["* Register the hardware accelerator hwaccel.",31],["ConceptManager.Register(",39],["// Register any test cases with the test runner",180],["* Register all the codecs, parsers and bitstream filters which were enabled at",31],["* Register a user provided lock manager supporting the operations",31],["* Register the codec codec and initialize libavcodec.",31],["CallingConvention := CGCallingConventionKind.Register);",51],["inherited UpdateRegistry(Register);",33]],"useCount":3552},{"word":"Release","context":[["Release();",111],["Release;",1303],["Handle.Buffer.Release(Pointer(Buf));",540],["Procedure Release; Override;",283],["// Anti-Grain Geometry - Version 2.4 Release Milano 3 (AggPas 2.4 RM3)",168],["Procedure Release(); Override;",121],["Current Release: Version 1.1 Patch 47 (Jun. 17, 2008))",101],["Context.Release;",90],["FLock.Release;",89],["procedure Release;",79]],"useCount":4070},{"word":"Remove","context":[["Result := Remove(It.Next) and Result;",143],["procedure Remove;",187],["Remove All Items from the list",86],["{Remove the first block from the linked list (LIFO)}",75],["procedure Remove; dispid 100;",58],["procedure Remove(index : Integer);",80],["procedure Remove; safecall;",56],["exit; // Remove this to make it faster",80],["It.Remove;",80],["Remove the indexth item. The first item is index 0.",86]],"useCount":2785},{"word":"Reset","context":[["Reset;",547],["function Reset: HResult; stdcall;",114],["Reset(f);",158],["c.Reset();",211],["procedure Reset; override;",218],["Reset();",81],["procedure Reset; virtual;",73],["Reset(F);",246],["tok.pb.Reset;",330],["procedure Reset;",716]],"useCount":4742},{"word":"Result","context":[["Result := True;",24834],["Result := tkIdentifier;",3775],["Result := false;",5673],["Result := 0;",18658],["Result := '';",14289],["Result := False;",29568],["Result := nil;",13384],["if Result then",6624],["Result := -1;",6554],["Result := true;",4933]],"useCount":361758},{"word":"Results","context":[["Results[i] := x;",96],["x := Results[i];",101],["with RPCBrokerV do for i := 0 to Results.Count - 1 do",102],["a pointer to RPCBrokerV.Results, so the data must be used BEFORE the next broker call! }",108],["Result := RPCBrokerV.Results ;",130],["Results.Delete(0);",175],["MixedCaseList(RPCBrokerV.Results);",298],["if RPCBrokerV.Results.Count > 0 then",84],["FastAssign(RPCBrokerV.Results, Dest);",337],["Result := RPCBrokerV.Results;",519]],"useCount":4321},{"word":"Return","context":[["// Return value:",81],["AddLog(Format(_('Return code: %d'), [RC]), ltDebug)",41],["// Return Value:",63],["{Return the result}",63],["Return := ctx.ToJson(v, index);",63],["* Return codec bits per sample.",53],["//* Return Value:",49],["{ Return self for chaining }",44],["Return:",45],["{Return}",90]],"useCount":3366},{"word":"Returns","context":[["//**Returns e=a[i]",44],["//  ppAdjacency Returns a buffer containing adjacency info.  Can be NULL.",48],["*  Returns:  0 on success, 1 if not successful.",345],["// Returns TRUE if its OK to delete from the store.",42],["///  <summary>Returns the biggest element.</summary>",39],["// Returns -1 if in r.e. no such subexpr. or this subexpr.",52],["// Returns AInputStr with r.e. occurencies replaced by AReplaceStr",52],["///  <summary>Returns the element at a given position.</summary>",56],["returns Returns 0 on success, -1 on failure.",64],["Returns:",296]],"useCount":3671},{"word":"Right","context":[["Result := Result.Right;",135],["Current := Current.Right;",130],["Result := Result.Right",80],["if Result.Right <> nil then",78],["////////// VolRight : Right volume",61],["glTexCoord2f(1, 1); glVertex2f(Rec.Right, Rec.Bottom);",84],["glTexCoord2f(1, 0); glVertex2f(Rec.Right, Rec.Top);",84],["gui_Clip_Rect              : (Left:94; Top:75; Right:398; Bottom:410);",85],["LineTo(Right - 1, Bottom - 1);",61],["if (ARect.Left <= VIntersect) and (VIntersect < ARect.Right) then begin",60]],"useCount":10498},{"word":"Rollback","context":[["DmGeneral.IBTransaction1.Rollback;",42],["Transaction.Rollback;",1825],["dm.sqlsisAdimin.Rollback(TD); //on failure, undo the changes}",281],["IBSQL1.Transaction.Rollback;",122],["dm.sqlsisAdimin.Rollback(TD);",118],["dmGeneral.IBTransaction1.Rollback;",109],["Rollback;",68],["dm.sqlsisAdimin.Rollback(TD); {on failure, undo the changes};",59],["IBSQL3.Transaction.Rollback;",44],["dmDados.ZConexao.Rollback;",37]],"useCount":3183},{"word":"Run","context":[["case fLine[Run] of",439],["case FLine[Run] of",568],["Inc(FBuffer.Run);",413],["fTokenPos := Run;",236],["until fLine[Run] in [#0, #10, #13];",214],["inc(Run);",3290],["Inc(Run);",2606],["case FLine[Run + 1] of",459],["inc(Run, 2);",999],["Inc(Run, 2);",211]],"useCount":17717},{"word":"S","context":[["S: string;",1815],["Result := S;",861],["S: String;",697],["S := '';",793],["L I C E N S E",297],["if S <> '' then",298],["S:TERRAString;",306],["S.Free;",384],["L := Length(S);",425],["Inc(S);",448]],"useCount":30780},{"word":"SAS","context":[["{* SAS.Planet (SAS.Ïëàíåòà)                                                   *}",3126],["{* SAS.Planet (SAS.Ïëàíåòà)                                                   *}",3126]],"useCount":6252},{"word":"SOString","context":[["procedure PutD(const path: SOString; Value: Double);",44],["function GetI(const path: SOString): SuperInt;",44],["property M[const path: SOString]: TSuperMethod read GetM write PutM;",44],["function AsJSon(indent: boolean = false; escape: boolean = true): SOString;",44],["function GetN(const path: SOString): ISuperObject;",44],["property D[const path: SOString]: Double read GetD write PutD;",44],["procedure PutB(const path: SOString; Value: Boolean);",44],["function GetO(const path: SOString): ISuperObject;",44],["property S[const path: SOString]: SOString read GetS write PutS;",44],["function GetA(const path: SOString): TSuperArray;",44]],"useCount":4678},{"word":"SQL","context":[["SQL.Add('WHERE');",545],["SQL.Clear;",5847],["FTBLOutrasFuncoes.SQL.Clear;",310],["**  BANCO DE DADOS........: SQL SERVER 2012                                       **",310],["**  BANCO DE DADOS........: SQL SERVER 2014                                       **",310],["SQL.Add('SELECT');",455],["IBSQL3.SQL.Clear;",615],["SQL.Add('where');",231],["@return the column value; if the value is SQL <code>NULL</code>, the",264],["SQL.Add('FROM');",670]],"useCount":31559},{"word":"Screen","context":[["Screen.Cursor := crSQLWait;",302],["Screen.Cursor:=SC;",434],["SC:=Screen.Cursor;",432],["Screen.Cursor := crHourglass;",349],["Screen.Cursor:=crHourGlass;",547],["Screen.Cursor := crHourGlass;",1055],["Screen.Cursor := crDefault;",2572],["Screen.Cursor:=crDefault;",117],["SaveCursor := Screen.Cursor;",61],["Left:=Round((Screen.Width-Width)/2);",57]],"useCount":7479},{"word":"See","context":[["See the file COPYING.modifiedLGPL, included in this distribution,",427],["{:See @inherited}",494],["See https://github.com/felipedaragon/catarinka/ for details",35],["{:See @inherited and @link(ssl_cryptlib) for more details.}",38],["See if an item is already in the list. returns -1 if not in the list",166],["See the file COPYING.MSE, included in this distribution,",329],["See the file COPYING.FPC, included in this distribution,",372],["See https://github.com/felipedaragon/sandcat/ for details.",51],["See the file COPYING, included in this distribution,",93],["*    On success, noErr is returned. See MacErrors.h for possible error",105]],"useCount":3452},{"word":"Seek","context":[["Stream.Seek(Offset, soFromBeginning);",540],["function Seek(Offset: Longint; Origin: Word): Longint; override;",164],["function Seek(const Offset: Int64; Origin: TSeekOrigin): Int64; override;",128],["Stream.Seek(0, soBeginning);",123],["Frames[FrameIndex].Stream.Seek(0, soBeginning);",114],["TagStream.Seek(PreviousPosition, soBeginning);",64],["* Seek to timestamp ts.",63],["Frames[FrameIndex].Stream.Seek(0, soFromBeginning);",58],["TagStream.Seek(ChunkSize, soCurrent);",46],["TagStream.Seek(0, soBeginning);",43]],"useCount":3051},{"word":"Selected","context":[["tvReports.Selected := tvReports.Items.GetFirstNode;",72],["Lyric.Selected := CurrentNote;",98],["Item: TListItem; Selected: Boolean);",66],["ARect: TRect; Selected: Boolean);",70],["tvReports.Selected := tvReports.Items[AnIndex];",72],["uPrevReportNode := tvReports.Selected;",80],["Selected[i] := False;",80],["aListItem := aListView.Selected;",81],["Selected: Boolean);",292],["if Selected then",135]],"useCount":6360},{"word":"Self","context":[["Result := Self;",3623],["NotifyChange(Self);",690],["ControlChange(Self);",462],["Parent := Self;",428],["FOnChange(Self);",357],["EnterTabs(Key,Self);",302],["TntPersistent_AfterInherited_DefineProperties(Filer, Self);",268],["Self.Close;",222],["if Assigned(FOnChange) then FOnChange(Self);",219],["if Assigned(fOnChange) then fOnChange(Self);",194]],"useCount":28185},{"word":"Sender","context":[["Sender: TObject);",2018],["procedure FormCreate(Sender: TObject);",7938],["procedure FormShow(Sender: TObject);",4327],["procedure FormResize(Sender: TObject);",776],["procedure FormDestroy(Sender: TObject);",2362],["procedure BitBtn1Click(Sender: TObject);",895],["procedure TForm1.FormCreate(Sender: TObject);",1220],["procedure Button2Click(Sender: TObject);",999],["procedure Button1Click(Sender: TObject);",1843],["procedure FormClose(Sender: TObject; var Action: TCloseAction);",2924]],"useCount":81968},{"word":"Set","context":[["* - encoding: Set by user.",3185],["* - decoding: Set by libavcodec.",1024],["* - decoding: Set by user.",908],["* - encoding: Set by user",402],["* - encoding: Set by libavcodec.",385],["* - decoding: Set by libavcodec",284],["* - decoding: Set by libavcodec, user can override.",141],["* - encoding: Set by user via AVOptions (NO direct access)",124],["* Demuxing: Set by user.",127],["{Set the size and flags for this block}",138]],"useCount":11686},{"word":"SetFocus","context":[["SetFocus;",597],["edtDTFINA.SetFocus;",180],["wwDBGrid1.SetFocus;",150],["Edit1.SetFocus;",174],["edtCDPROD.SetFocus;",152],["edtCDCLIE.SetFocus;",85],["DBGLista.SetFocus;",100],["edtDTINIC.SetFocus;",139],["dbeDescricao.SetFocus;",114],["FindNextControl(Sender as TWinControl, False, True, False).SetFocus; //previous control",109]],"useCount":7226},{"word":"SetLength","context":[["SetLength(Result, x);",175],["SetLength(Result, Count);",185],["SetLength(Result, l);",223],["SetLength(Result, L);",164],["SetLength(Result, Len);",292],["SetLength(Result, 2);",127],["SetLength(IL, 5);",126],["SetLength(Result, Length(Result) + 1);",119],["SetLength(Bucket.Entries, NewCapacity);",114],["SetLength(Result, 0);",592]],"useCount":11981},{"word":"Shift","context":[["Shift: TShiftState;",243],["Shift: TShiftState);",5469],["Shift: TShiftState; X, Y: Integer);",3931],["Button: TMouseButton; Shift: TShiftState; X, Y: Integer);",1556],["procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);",572],["var Key: Word; Shift: TShiftState);",462],["Shift: TShiftState; X, Y: Integer; Layer: TCustomLayer);",253],["if ssShift in Shift then",247],["procedure KeyDown(var Key: Word; Shift: TShiftState); override;",246],["Button: TMouseButton; Shift: TShiftState; X, Y: Integer;",239]],"useCount":18403},{"word":"Show","context":[["frm.Show;",52],["{Show the message}",68],["inherited Show;",54],["procedure Show;",63],["Show();",68],["fProgress.Show;",58],["//Show Cat in Top Left Mod",55],["Form.Show;",41],["procedure Show; override;",82],["Show;",735]],"useCount":2656},{"word":"ShowModal","context":[["frm.ShowModal;",129],["if ShowModal = mrOk then",159],["FormDetails.ShowModal;",526],["f.ShowModal;",76],["ShowModal();",77],["if fProcurar.ShowModal=mrOk then",77],["frmVistaPreliminar.ShowModal;",93],["if SearchForm.ShowModal =mrOk then",103],["if ShowModal = mrOK then",100],["ShowModal;",1245]],"useCount":4367},{"word":"Single","context":[["fFeedback: Single;",45],["property CompressionRate: Single read GetCompressionRate;",45],["function GetCompressionRate: Single;",45],["fGain: Single;",45],["fWetDryMix: Single;",45],["FechaDesembolso:TDate;TasaE:Single;PuntosAdicionales:Single;",44],["f: Single;",55],["Shift: TShiftState; X, Y: Single);",57],["procedure TDemoScene.Update(const DeltaTimeSec: Single);",70],["procedure Update(const DeltaTimeSec: Single); override;",84]],"useCount":5226},{"word":"Size","context":[["Size: Integer;",427],["Size := 0;",392],["if Size > 0 then",321],["Size: integer;",200],["if FSize <> AMap.Size then",176],["function Size: Integer;",556],["for I := 0 to Bucket.Size - 1 do",567],["SendIpcMessage(PChar(UIBHOOKIPC), strm.Memory, strm.Size);",154],["for J := 0 to Bucket.Size - 1 do",422],["Size: Cardinal;",169]],"useCount":18652},{"word":"SizeBitPix","context":[["Offset := StreamOffset + (NAxis1 * ReqRgn.Y1 + ReqRgn.X1) * SizeBitPix;",540],["SizeBuf := ColsCount * SizeBitPix;",540],["SizeBitPix: Byte;",540],["SizeBitPix := BitPixByteSize(BitPix);",540],["OffsetInc := NAxis1 * SizeBitPix;",540]],"useCount":2700},{"word":"SizeOf","context":[["Done := Dest.Write(TempOut, SizeOf(TempOut));",90],["FillChar(FEntries[FromIndex], Count * SizeOf(FEntries[0]), 0);",88],["FillChar(Entries[FromIndex], Count * SizeOf(Entries[0]), 0);",88],["FillChar(List[FromIndex], Count * SizeOf(List[0]), 0);",100],["FillChar(FCurrentContext, SizeOf(FCurrentContext), 0);",108],["FillChar(intVal,SizeOf(intVal),#0);",112],["Move(List[FromIndex], List[ToIndex], Count * SizeOf(List[0]));",121],["buf, SizeOf(Value.Value));",136],["SBCS := Pointer(NativeUInt(Byte(Value shr 16)) * SizeOf(TUniConvSBCS) + NativeUInt(@UNICONV_SUPPORTED_SBCS));",146],["FillChar(Result, SizeOf(Result), 0);",250]],"useCount":12349},{"word":"Source","context":[["constructor CreateCopy(Parent: TCellBasic; Source: THtmlNode); override;",91],["procedure Assign(Source: TPersistent); override;",1461],["inherited Assign(Source);",764],["{ Source:",734],["Source.ReadChunkData(Chunk);",440],["Inc(Source);",233],["Source.ReadChunkData(Current);",164],["if Length(Source) = 1 then",140],["This Source Code Form is subject to the terms of the Mozilla Public",123],["procedure Decode(var Source, Dest: Pointer; PackedSize, UnpackedSize: Integer); override;",91]],"useCount":11705},{"word":"Src","context":[["for i := 0 to Src.Count - 1 do",59],["if (Pointer(Src) = nil) then",62],["Inc(Src, SrcInfo.BytesPerPixel);",69],["Src, Dest, Trans: pChar);",86],["Inc(Src);",375],["Src, Dest, Trans{$IFDEF Store16bits}, Extra{$ENDIF}: pChar);",195],["X := PCardinal(Src)^;",77],["WorkX := Src.w;",162],["inc(Src);",128],["if Src = nil then",93]],"useCount":6054},{"word":"Start","context":[["Start := FRoot;",104],["Inc(Start);",226],["Start;",287],["if Start <> nil then",190],["procedure Start;",188],["{ Start av vc",123],["Start := 0;",101],["Start := P;",68],["AudioPlayback.PlaySound(SoundLib.Start);",80],["Start := 1;",56]],"useCount":5757},{"word":"State","context":[["case State of",222],["State: TGridDrawState);",265],["State: TDragState; var Accept: Boolean);",268],["if (dsCadastro.DataSet.State in [dsInsert, dsEdit]) Then",306],["State := 0;",122],["Rect: TRect; State: TGridDrawState);",211],["Y: Integer; State: TDragState; var Accept: Boolean);",132],["DataCol: Integer; Column: TColumn; State: TGridDrawState);",131],["Rect: TRect; State: TOwnerDrawState);",213],["Index: Integer; Rect: TRect; State: TOwnerDrawState);",115]],"useCount":7145},{"word":"StdCtrls","context":[["StdCtrls, Buttons;",91],["FMX.Types, FMX.Graphics, FMX.Controls, FMX.Forms, FMX.Dialogs, FMX.StdCtrls,",75],["StdCtrls,",599],["Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, StdCtrls,",291],["StdCtrls;",243],["Dialogs, StdCtrls;",231],["Dialogs, StdCtrls, ExtCtrls;",92],["uses Windows, SysUtils, Classes, Graphics, Forms, Controls, StdCtrls,",90],["StdCtrls, ExtCtrls;",85],["Dialogs, StdCtrls, Buttons;",72]],"useCount":3346},{"word":"Str","context":[["Str := IntToStr(lastErr)+' - '+SysErrorMessage(lastErr);",68],["while IsIdentChar(Str^) do",43],["Str := '';",91],["inc(Str);",60],["if Str <> nil then",58],["for i := 1 to Length(Str) do",55],["Str: String;",133],["Str: string;",168],["Result := Str;",183],["fStringLen := Str - fToIdent;",48]],"useCount":3680},{"word":"Stream","context":[["Stream := TMemoryStream.Create;",250],["Stream: TMemoryStream;",170],["procedure LoadFromStream(Stream: TStream); override;",223],["Stream.Write(Buf[0], SizeBuf);",270],["Stream.Read(Buf[0], SizeBuf);",270],["Stream.Position := 0;",271],["Stream: TStream;",428],["procedure SaveToStream(Stream: TStream); override;",202],["Stream.Seek(Offset, soFromBeginning);",540],["Stream.Free;",1091]],"useCount":12229},{"word":"String","context":[["tmp: String;",153],["class function GetIdent : String; override;",178],["s: String;",795],["S: String;",697],["FName: String;",200],["extstring: String;",373],["extstring := String(PChar(glGetString(GL_EXTENSIONS)));",373],["s : String;",338],["Name: String;",227],["DEBUG_unit_ID: Integer; Debugging: Boolean; DEBUG_group_ID: String = '';",179]],"useCount":21812},{"word":"Strings","context":[["Strings.Add('');",48],["Strings := TStringList.Create;",70],["Strings.Clear;",98],["Strings.Free;",66],["for I := 0 to Strings.Count - 1 do",58],["Strings.BeginUpdate;",56],["Strings.EndUpdate;",56],["Strings: TStringList;",48],["Strings.Add(Output);",616],["Strings.Destroy;",43]],"useCount":2912},{"word":"Style","context":[["Brush.Style := bsSolid;",407],["fKeyAttri.Style := [fsBold];",129],["Canvas.Brush.Style := bsSolid;",225],["Font.Style := [];",231],["Canvas.Brush.Style := bsClear;",238],["Pen.Style := psSolid;",267],["Brush.Style := bsClear;",387],["fCommentAttri.Style := [fsItalic];",125],["Font.Style := [fsBold];",101],["Pen.Style := psDot;",95]],"useCount":5999},{"word":"Summary","context":[["{ Summary:",1321],["*  Summary:",2469]],"useCount":3790},{"word":"SyncReaderWriter","context":[["SyncReaderWriter.EndRead;",3126],["SyncReaderWriter.EndWrite;",3096],["SyncReaderWriter.BeginWrite;",3096],["SyncReaderWriter.BeginRead;",3126]],"useCount":12444},{"word":"SysUtils","context":[["SysUtils;",1936],["SysUtils, Classes,",440],["Classes, SysUtils,",421],["Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms,",325],["Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,",5455],["SysUtils,",5115],["Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,",2688],["System.SysUtils,",791],["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,",781],["Classes, SysUtils;",452]],"useCount":25774},{"word":"System","context":[["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,",781],["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,",781],["System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,",315],["System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,",315],["System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,",315],["System.Generics.Collections,",336],["System.Classes,",610],["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,",781],["System.SysUtils,",791],["System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,",315]],"useCount":17147},{"word":"T","context":[["function(Arg1: T): Boolean",81],["Result := Default(T);",107],["T := (T shl 1) or (T shr 31);",120],["T := (T shl 1) or (T shr 31);",120],["T := (T shl 1) or (T shr 31);",120],["item: T;",142],["T: TAttribute;",150],["'T', 't', ' ':",85],["A := T;",80],["FreeAndNil(T);",80]],"useCount":13810},{"word":"T0","context":[["W2 := ForwardTable[Byte(T0[0] shr 16)]; W3 := ForwardTable[Byte(T0[1] shr 24)];",54],["T0[0] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["W0 := ForwardTable[Byte(T0[0])]; W1 := ForwardTable[Byte(T0[1] shr 8)];",54],["W2 := InverseTable[Byte(T0[0] shr 16)]; W3 := InverseTable[Byte(T0[3] shr 24)];",54],["W2 := ForwardTable[Byte(T0[0] shr 16)]; W3 := ForwardTable[Byte(T0[1] shr 24)];",54],["((TBits.RotateLeft64(T0, 63)) xor (TBits.RotateLeft64(T0, 56))",65],["((TBits.RotateLeft64(T0, 63)) xor (TBits.RotateLeft64(T0, 56))",65],["T0[2] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[3] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[1] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144]],"useCount":3916},{"word":"T1","context":[["T1[1] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T1[3] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["W2 := InverseTable[Byte(T1[3] shr 16)]; W3 := InverseTable[Byte(T1[2] shr 24)];",45],["W2 := ForwardTable[Byte(T1[2] shr 16)]; W3 := ForwardTable[Byte(T1[3] shr 24)];",45],["W2 := InverseTable[Byte(T1[0] shr 16)]; W3 := InverseTable[Byte(T1[3] shr 24)];",45],["W2 := InverseTable[Byte(T1[0] shr 16)]; W3 := InverseTable[Byte(T1[3] shr 24)];",45],["end; { TOmniParallelMapper<T1,T2> }",50],["T1[2] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T1[0] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["W2 := ForwardTable[Byte(T1[2] shr 16)]; W3 := ForwardTable[Byte(T1[3] shr 24)];",45]],"useCount":3346},{"word":"TARGET_IPHONE_SIMULATOR","context":[["{$setc TARGET_IPHONE_SIMULATOR := FALSE}",2285],["{$setc TARGET_IPHONE_SIMULATOR := TRUE}",457],["{$ifc not TARGET_OS_IPHONE and not TARGET_IPHONE_SIMULATOR}",14],["{$endc} {!TARGET_OS_IPHONE && !TARGET_IPHONE_SIMULATOR}",14]],"useCount":2770},{"word":"TARGET_OS_IPHONE","context":[["{$setc TARGET_OS_IPHONE := TRUE}",914],["{$ifc not TARGET_OS_IPHONE}",29],["{$endc} {!TARGET_OS_IPHONE && !TARGET_IPHONE_SIMULATOR}",14],["{$ifc not TARGET_OS_IPHONE and not TARGET_IPHONE_SIMULATOR}",14],["{$endc} {not TARGET_OS_IPHONE}",12],["{$setc TARGET_OS_IPHONE := FALSE}",1828]],"useCount":2811},{"word":"TARGET_OS_MAC","context":[["{$ifc TARGET_OS_MAC}",381],["{$endc} {TARGET_OS_MAC}",314],["{$endc} { TARGET_OS_MAC }",17],["{$setc TARGET_OS_MAC := FALSE}",914],["{$setc TARGET_OS_MAC := TRUE}",1828]],"useCount":3454},{"word":"TBESENValue","context":[["AddDWord(ptruint(Operands^[1]*sizeof(TBESENValue)));",88],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.ValueType))-ptruint(pointer(@v))));",316],["AddDWord(ptruint(Operands^[1]*sizeof(TBESENValue))+(ptruint(pointer(@v.Num))-ptruint(pointer(@v))));",172],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.Bool))-ptruint(pointer(@v))));",168],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue)));",124],["Add(#$dd#$87); // fld qword ptr [edi+RegisterOfs+TBESENValue.Num]",92],["var v:TBESENValue;",85],["Add(#$41#$c7#$86); // mov dword ptr [r14+RegisterOfs+TBESENValue.ValueType],bvtBOOLEAN",84],["Add(#$c7#$87); // mov dword ptr [edi+RegisterOfs+TBESENValue.ValueType],bvtBOOLEAN",84],["AddDWord(ptruint(Operands^[2]*sizeof(TBESENValue))+(ptruint(pointer(@v.Num))-ptruint(pointer(@v))));",84]],"useCount":3122},{"word":"TBitBtn","context":[["BtnSair: TBitBtn;",118],["BitBtn5: TBitBtn;",147],["btnOK: TBitBtn;",157],["btnCancel: TBitBtn;",209],["BitBtn4: TBitBtn;",218],["CmdCerrar: TBitBtn;",222],["BitBtn3: TBitBtn;",347],["BitBtn2: TBitBtn;",798],["BitBtn6: TBitBtn;",115],["BitBtn1: TBitBtn;",1121]],"useCount":6786},{"word":"TBitmap","context":[["Bmp := TBitmap.Create;",204],["Bitmap := TBitmap.Create;",194],["Bmp: TBitmap;",188],["bmp: TBitmap;",170],["Result := TBitmap.Create;",152],["Bitmap: TBitmap;",145],["B: TBitmap;",142],["bmp := TBitmap.Create;",120],["FBitmap: TBitmap;",76],["FBitmap := TBitmap.Create;",74]],"useCount":3259},{"word":"TBlockSocket","context":[["procedure TBlockSocket.CreateSocketByName(const Value: String);",20],["function TBlockSocket.GetSinIP(Sin: TVarSin): string;",20],["function TBlockSocket.RecvInteger(Timeout: Integer): Integer;",20],["if TBlockSocket(SocketList.Items[n]).Socket > Max then",20],["procedure TBlockSocket.Purge;",20],["{:Silently redirected to @link(TBlockSocket.RecvBufferFrom).}",20],["procedure TBlockSocket.SetTTL(TTL: integer);",20],["procedure TBlockSocket.SetLinger(Enable: Boolean; Linger: Integer);",20],["to use @link(TBlockSocket.BIND) function call before this method to select",34],["if TObject(SocketList.Items[n]) is TBlockSocket then",40]],"useCount":2554},{"word":"TButton","context":[["Button3: TButton;",613],["Button5: TButton;",261],["Button6: TButton;",197],["btnCancel: TButton;",540],["cmdOK: TButton;",359],["Button2: TButton;",1174],["Button1: TButton;",2087],["Button4: TButton;",406],["btnOK: TButton;",348],["cmdCancel: TButton;",339]],"useCount":11434},{"word":"TCloseAction","context":[["procedure TForm1.FormClose(Sender: TObject; var Action: TCloseAction);",119],["procedure TForm1.FormClose(Sender: TObject; var CloseAction: TCloseAction);",24],["procedure FormClose(Sender: TObject; var Action: TCloseAction);",2924],["procedure TMainForm.FormClose(Sender: TObject; var CloseAction: TCloseAction);",40],["var CloseAction: TCloseAction);",51],["var Action: TCloseAction",54],["procedure TfrmMain.FormClose(Sender: TObject; var Action: TCloseAction);",62],["procedure TMainForm.FormClose(Sender: TObject; var Action: TCloseAction);",76],["var Action: TCloseAction);",1110],["procedure FormClose(Sender: TObject; var CloseAction: TCloseAction);",315]],"useCount":4866},{"word":"TColor","context":[["FColor: TColor;",143],["Color: TColor;",141],["procedure SetColor(Value: TColor);",57],["C: TColor;",155],["function GetColor: TColor;",48],["FBackground: TColor;",54],["TColor;",53],["LColor: TColor;",48],["SaveColor: TColor;",48],["procedure DiagLine(C: TColor);",45]],"useCount":3321},{"word":"TComponent","context":[["procedure Notification(AComponent: TComponent; Operation: TOperation);",109],["{ constructor Create(AOwner: TComponent) }",123],["procedure Notification(AComponent: TComponent;",134],["constructor Create(AOwner: TComponent);  override;",222],["constructor Create(TheOwner: TComponent); override;",223],["constructor Create(aOwner: TComponent); override;",224],["constructor Create(AOwner : TComponent); override;",324],["procedure Notification(AComponent: TComponent; Operation: TOperation); override;",579],["constructor Create(AOwner: TComponent); override;",5003],["AOwner: TComponent;",112]],"useCount":9565},{"word":"TD","context":[["dm.sqlsisAdimin.StartTransaction(TD);",519],["dm.sqlsisAdimin.Commit(TD);",495],["TD.IsolationLevel := xilREADCOMMITTED;",307],["dm.sc.Commit(TD); {on success, commit the changes};",30],["TD : TTransactionDesc;",40],["dm.sqlsisAdimin.Rollback(TD); //on failure, undo the changes}",281],["dm.sqlsisAdimin.Rollback(TD); {on failure, undo the changes};",59],["TD.TransactionID := 1;",265],["TD: TTransactionDesc;",160],["dm.sqlsisAdimin.Rollback(TD);",118]],"useCount":2596},{"word":"TDBEdit","context":[["DBEdit6: TDBEdit;",205],["DBEdit2: TDBEdit;",449],["DBEdit7: TDBEdit;",181],["DBEdit5: TDBEdit;",253],["DBEdit4: TDBEdit;",281],["DBEdit10: TDBEdit;",154],["DBEdit9: TDBEdit;",166],["DBEdit8: TDBEdit;",178],["DBEdit3: TDBEdit;",317],["DBEdit1: TDBEdit;",441]],"useCount":5332},{"word":"TDateTime","context":[["function DelphiToJavaDateTime(const dt: TDateTime): int64;",53],["d: TDateTime;",53],["FDate: TDateTime;",53],["const ALoadDate: TDateTime;",60],["function JavaToDelphiDateTime(const dt: int64): TDateTime;",72],["dt: TDateTime;",101],["const ADefault: TDateTime",156],["function SetUTTime(Newdt: TDateTime): Boolean;",46],["function SimpleDateTime(t: TDateTime): string;",46],["): TDateTime;",157]],"useCount":3741},{"word":"TEdit","context":[["TEdit(Sender).text:=s;",84],["Edit8: TEdit;",95],["if (Components[I] is TEdit) OR (Components[I] is TDBEdit) OR (Components[I] is TComboBox)",99],["Edit2: TEdit;",621],["Edit7: TEdit;",111],["Edit6: TEdit;",134],["Edit5: TEdit;",188],["Edit4: TEdit;",266],["Edit3: TEdit;",382],["Edit1: TEdit;",1064]],"useCount":5932},{"word":"TForm","context":[["TForm1 = class(TForm)",2022],["TfrmMain = class(TForm)",319],["frm: TForm;",68],["frm := TForm.Create(nil);",67],["Form: TForm;",66],["TfrmAbout = class(TForm)",56],["TForm3 = class(TForm)",74],["TFormMain = class(TForm)",99],["TForm2 = class(TForm)",193],["TMainForm = class(TForm)",487]],"useCount":4596},{"word":"TForm1","context":[["Form1: TForm1;",2015],["procedure TForm1.FormDestroy(Sender: TObject);",312],["procedure TForm1.Button3Click(Sender: TObject);",236],["procedure TForm1.GLCadencer1Progress(Sender: TObject; const deltaTime,",207],["procedure TForm1.Timer1Timer(Sender: TObject);",355],["procedure TForm1.Button2Click(Sender: TObject);",373],["procedure TForm1.FormCreate(Sender: TObject);",1220],["{ TForm1 }",739],["procedure TForm1.Button1Click(Sender: TObject);",749],["TForm1 = class(TForm)",2022]],"useCount":12119},{"word":"TGroupBox","context":[["GroupBox9: TGroupBox;",86],["GroupBox8: TGroupBox;",91],["GroupBox10: TGroupBox;",53],["GroupBox5: TGroupBox;",271],["GroupBox4: TGroupBox;",403],["GroupBox3: TGroupBox;",591],["GroupBox7: TGroupBox;",133],["GroupBox2: TGroupBox;",958],["GroupBox1: TGroupBox;",1710],["GroupBox6: TGroupBox;",172]],"useCount":5045},{"word":"THEN","context":[["IF (NoFile) THEN",58],["IF ActiveIndex<>0 THEN Begin",70],["IF ActiveCircuit<> NIL THEN Begin",70],["THEN",648],["THEN Begin",241],["THEN BEGIN",212],["IF ActiveCircuit <> Nil THEN",148],["THEN If IsLine(ActiveCircuit.ActiveCktElement)",89],["IF (LastError <> 0) THEN",85],["IF (IOResult <> 0) THEN",72]],"useCount":4201},{"word":"THREADSAFE","context":[["{$IFDEF THREADSAFE} IJclLockable, {$ENDIF THREADSAFE} IJclIntfCloneable, IJclCloneable)",78],["{$IFDEF THREADSAFE} IJclLockable, {$ENDIF THREADSAFE} IJclIntfCloneable, IJclCloneable)",78],["{$ENDIF THREADSAFE}",15709],["{$IFDEF THREADSAFE}",15713]],"useCount":31578},{"word":"THandle","context":[["H: THandle;",64],["property Handle: THandle read GetHandle;",46],["ProcessHandle: THandle;",45],["FHandle: THandle;",117],["Handle: THandle;",206],["h: THandle;",62],["hProcess: THandle;",44],["handle: THandle;",42],["FileHandle: THandle;",41],["property Handle: THandle read FHandle;",40]],"useCount":2811},{"word":"TImage","context":[["ProgramIcon: TImage;",46],["Image6: TImage;",53],["Image: TImage;",75],["Image5: TImage;",87],["Image4: TImage;",103],["Image3: TImage;",135],["Image2: TImage;",283],["Image9: TImage;",37],["Image7: TImage;",42],["Image1: TImage;",1106]],"useCount":2834},{"word":"TLabel","context":[["Label10: TLabel;",1063],["Label1: TLabel;",5794],["Label8: TLabel;",1394],["Label7: TLabel;",1643],["Label6: TLabel;",1870],["Label5: TLabel;",2308],["Label4: TLabel;",2873],["Label3: TLabel;",3500],["Label2: TLabel;",4448],["Label9: TLabel;",1212]],"useCount":45004},{"word":"TList","context":[["FList: TList;",184],["AList := TList.Create;",75],["FItems: TList;",81],["FItems := TList.Create;",90],["ChangeList: TList;",72],["SelectedList: TList;",69],["list: TList;",67],["List: TList;",122],["FList := TList.Create;",194],["L: TList;",159]],"useCount":3405},{"word":"TMainForm","context":[["procedure TMainForm.AfterCreate;",61],["procedure TMainForm.FormShow(Sender: TObject);",97],["MainForm: TMainForm;",504],["TMainForm = class(TForm)",487],["procedure TMainForm.FormCreate(Sender: TObject);",388],["{ TMainForm }",251],["procedure TMainForm.FormDestroy(Sender: TObject);",175],["procedure TMainForm.FormClose(Sender: TObject; var Action: TCloseAction);",76],["procedure TMainForm.Button2Click(Sender: TObject);",55],["procedure TMainForm.Button1Click(Sender: TObject);",77]],"useCount":2913},{"word":"TMemoryStream","context":[["LStream := TMemoryStream.Create;",88],["Result := TMemoryStream.Create;",77],["MemStream: TMemoryStream;",79],["stream := TMemoryStream.Create;",122],["AStream := TMemoryStream.Create;",138],["MS: TMemoryStream;",145],["ms: TMemoryStream;",159],["Stream: TMemoryStream;",170],["ms := TMemoryStream.Create;",191],["Stream := TMemoryStream.Create;",250]],"useCount":4418},{"word":"TMenuItem","context":[["N2: TMenuItem;",615],["N3: TMenuItem;",449],["N4: TMenuItem;",348],["MenuItem1: TMenuItem;",266],["N1: TMenuItem;",817],["Exit1: TMenuItem;",217],["N6: TMenuItem;",221],["MenuItem2: TMenuItem;",227],["File1: TMenuItem;",247],["N5: TMenuItem;",259]],"useCount":15530},{"word":"TMouseButton","context":[["procedure MouseDown(Button: TMouseButton; Shift: TShiftState; X, Y: Integer); override;",136],["Button: TMouseButton; Shift: TShiftState; X, Y: Integer;",239],["Button: TMouseButton;",134],["procedure MouseDown(Button: TMouseButton; Shift: TShiftState;",107],["procedure MouseUp(Button: TMouseButton; Shift: TShiftState; X, Y: Integer); override;",92],["procedure MouseUp(Button: TMouseButton; Shift: TShiftState;",92],["procedure FormMouseDown(Sender: TObject; Button: TMouseButton;",81],["Button: TMouseButton; Shift: TShiftState; X, Y: Integer);",1556],["procedure FormMouseUp(Sender: TObject; Button: TMouseButton;",42],["procedure TForm1.GLSceneViewer1MouseDown(Sender: TObject; Button: TMouseButton;",38]],"useCount":3164},{"word":"TNotifyEvent","context":[["property OnChange:TNotifyEvent read FOnChange write FOnChange;",47],["FOnProgress: TNotifyEvent;",58],["fOnChange: TNotifyEvent;",58],["FOnChange: TNotifyEvent;",454],["property OnChanging: TNotifyEvent read FOnChanging write FOnChanging;",63],["FOnChanging: TNotifyEvent;",66],["property OnChange: TNotifyEvent read fOnChange write fOnChange;",46],["property OnPaint: TNotifyEvent read FOnPaint write FOnPaint;",46],["property OnProgress: TNotifyEvent read FOnProgress write FOnProgress;",61],["property OnChange: TNotifyEvent read FOnChange write FOnChange;",378]],"useCount":2962},{"word":"TObject","context":[["Sender: TObject);",2018],["procedure FormResize(Sender: TObject);",776],["procedure BitBtn1Click(Sender: TObject);",895],["procedure Button2Click(Sender: TObject);",999],["procedure TForm1.FormCreate(Sender: TObject);",1220],["procedure FormCreate(Sender: TObject);",7938],["procedure FormShow(Sender: TObject);",4327],["procedure FormClose(Sender: TObject; var Action: TCloseAction);",2924],["procedure FormDestroy(Sender: TObject);",2362],["procedure Button1Click(Sender: TObject);",1843]],"useCount":79781},{"word":"TPanel","context":[["pnlTop: TPanel;",221],["Panel5: TPanel;",396],["Panel6: TPanel;",266],["Panel7: TPanel;",198],["Panel4: TPanel;",614],["Panel8: TPanel;",159],["Panel3: TPanel;",1048],["Panel2: TPanel;",1962],["Panel1: TPanel;",3677],["pnlBottom: TPanel;",279]],"useCount":11863},{"word":"TPersistent","context":[["constructor Create(AOwner: TPersistent);",60],["procedure Assign(Source: TPersistent); override;",1461],["procedure AssignTo(Dest: TPersistent); override;",271],["procedure Assign(ASource: TPersistent); override;",212],["{ procedure Assign(Source: TPersistent); }",27],["procedure Assign(Src: TPersistent); override;",32],["function GetOwner: TPersistent; override;",183],["FOwner: TPersistent;",82],["ABanco: TPersistent;",39],["constructor Create(AOwner: TPersistent); override;",139]],"useCount":2889},{"word":"TPoint","context":[["P: TPoint;",634],["const AXY: TPoint;",576],["WheelDelta: Integer; MousePos: TPoint; var Handled: Boolean);",313],["const ATile: TPoint",222],["pt: TPoint;",202],["MousePos: TPoint; var Handled: Boolean);",201],["VTile: TPoint;",193],["const ATile: TPoint;",157],["p: TPoint;",157],["Pt: TPoint;",207]],"useCount":6437},{"word":"TRUE","context":[["{$setc TARGET_CPU_X86_64 := TRUE}",457],["{$setc TARGET_CPU_X86 := TRUE}",457],["{$setc TARGET_CPU_PPC := TRUE}",457],["{$setc TARGET_CPU_PPC64 := TRUE}",457],["{$setc TARGET_CPU_64 := TRUE}",457],["{$setc TARGET_CPU_ARM := TRUE}",457],["{$setc TARGET_RT_LITTLE_ENDIAN := TRUE}",457],["{$setc TARGET_OS_IPHONE := TRUE}",914],["Result := TRUE;",1585],["{$setc TARGET_OS_MAC := TRUE}",1828]],"useCount":19508},{"word":"TRect","context":[["R: TRect;",1711],["Index: Integer; Rect: TRect; State: TOwnerDrawState);",115],["ARect: TRect;",357],["Rect: TRect;",279],["r: TRect;",223],["Rect: TRect; State: TOwnerDrawState);",213],["Rect: TRect; State: TGridDrawState);",211],["const Rect: TRect; DataCol: Integer; Column: TColumn;",148],["const ARect: TRect;",116],["R2: TRect;",116]],"useCount":9395},{"word":"TRegExpr","context":[["end; { of function TRegExpr.Replace",48],["end; { of procedure TRegExpr.Error",50],["VRegExpr := TRegExpr.Create;",43],["VRegExpr: TRegExpr;",52],["rx: TRegExpr;",54],["var r : TRegExpr;",54],["rx := TRegExpr.Create;",57],["r := TRegExpr.Create;",61],["end; { of function TRegExpr.Exec",69],["with TRegExpr.Create do",843]],"useCount":5119},{"word":"TShiftState","context":[["Shift: TShiftState);",5469],["Shift: TShiftState; X, Y: Integer);",3931],["Button: TMouseButton; Shift: TShiftState; X, Y: Integer;",239],["Shift: TShiftState;",243],["Button: TMouseButton; Shift: TShiftState; X, Y: Integer);",1556],["procedure KeyDown(var Key: Word; Shift: TShiftState); override;",246],["procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);",572],["Shift: TShiftState; X, Y: Integer; Layer: TCustomLayer);",253],["var Key: Word; Shift: TShiftState);",462],["procedure GLSceneViewer1MouseMove(Sender: TObject; Shift: TShiftState;",208]],"useCount":16575},{"word":"TStream","context":[["S: TStream;",100],["Stream: TStream;",428],["FStream: TStream;",249],["procedure LoadFromStream(Stream: TStream); override;",223],["procedure SaveToStream(Stream: TStream); override;",202],["stream: TStream;",136],["procedure LoadFromStream(AStream: TStream);",109],["procedure SaveToStream(AStream: TStream);",105],["const AStream: TStream;",103],["procedure SaveToStream(Stream: TStream);",101]],"useCount":7016},{"word":"TStringField","context":[["StringField7: TStringField;",48],["StringField9: TStringField;",49],["StringField10: TStringField;",50],["StringField8: TStringField;",51],["StringField3: TStringField;",68],["StringField5: TStringField;",56],["StringField4: TStringField;",57],["StringField6: TStringField;",52],["StringField2: TStringField;",82],["StringField1: TStringField;",88]],"useCount":3467},{"word":"TStringList","context":[["SL := TStringList.Create;",291],["sl := TStringList.Create;",627],["sl: TStringList;",542],["Result := TStringList.Create;",290],["List := TStringList.Create;",256],["with TStringList.Create do",249],["List: TStringList;",188],["s := TStringList.Create;",187],["SL: TStringList;",229],["sl:=TStringList.Create;",138]],"useCount":13500},{"word":"TStrings","context":[["procedure HeadersToList(const Value: TStrings);",46],["procedure ParseParameters(Value: string; const Parameters: TStrings);",46],["procedure ParseParametersEx(Value, Delimiter: string; const Parameters: TStrings);",46],["procedure ListToHeaders(const Value: TStrings);",46],["LCols : TStrings;",50],["list: TStrings;",60],["function IndexByBegin(Value: string; const List: TStrings): integer;",46],["aList: TStrings;",46],["procedure SplitRegExpr (const ARegExpr, AInputStr : RegExprString; APieces : TStrings);",46],["s : TStrings;",90]],"useCount":5169},{"word":"TSuperObject","context":[["Result := TSuperObject.Create(stObject);",86],["Result := TSuperObject.Create(stNull);",72],["ParseString(PSOChar(path), true, False, self, [foCreatePath, foPutValue], TSuperObject.Create(Value));",84],["PutO(index, TSuperObject.Create(Value));",110],["TokRec^.current := TSuperObject.Create(stObject);",88],["TokRec^.current := TSuperObject.Create(stArray);",88],["PutO(k, TSuperObject.Create(Value));",110],["Result := Add(TSuperObject.Create(Data));",60],["Add(TSuperObject.Create(PtrInt(TVarRec(Args[j]).VPointer)));",66],["Result := TSuperObject.Create(stArray);",158]],"useCount":4198},{"word":"TSynHighlighterAttributes","context":[["fNumberAttri: TSynHighlighterAttributes;",189],["function GetTokenAttribute: TSynHighlighterAttributes; override;",244],["fSpaceAttri: TSynHighlighterAttributes;",219],["fCommentAttri: TSynHighlighterAttributes;",217],["fKeyAttri: TSynHighlighterAttributes;",203],["function GetDefaultAttribute(Index: integer): TSynHighlighterAttributes;",171],["fSymbolAttri: TSynHighlighterAttributes;",191],["fStringAttri: TSynHighlighterAttributes;",191],["fIdentifierAttri: TSynHighlighterAttributes;",210],["property KeyAttri: TSynHighlighterAttributes read fKeyAttri write fKeyAttri;",199]],"useCount":5302},{"word":"TToolButton","context":[["ToolButton6: TToolButton;",183],["ToolButton2: TToolButton;",308],["ToolButton5: TToolButton;",219],["ToolButton4: TToolButton;",255],["ToolButton10: TToolButton;",106],["ToolButton9: TToolButton;",122],["ToolButton8: TToolButton;",133],["ToolButton7: TToolButton;",160],["ToolButton1: TToolButton;",343],["ToolButton3: TToolButton;",273]],"useCount":3057},{"word":"TValue","context":[["const targetTypeInfo: PTypeInfo; const parameter: TValue): TValue;",102],["const targetTypeInfo: PTypeInfo; const parameter: TValue): TValue;",102],["function DoConvertTo(const value: TValue;",104],["LValue: TValue;",125],["TValue.Make(nil, TypeInfo, Value);",166],["const parameter: TValue): TValue; override;",101],["const parameter: TValue): TValue; override;",101],["Result := TValue.Empty;",94],["v: TValue;",322],["outValue: TValue;",588]],"useCount":5061},{"word":"Tag","context":[["Tag := 0;",95],["edPaySumm.Tag := 1;",61],["property Tag;",51],["Tag := 0;                       //îáíóëÿåì ñêîëüêî ïðîøëî",50],["property Tag: Integer read FTag write FTag;",65],["FStream.ReadBuffer(Tag, 1);",78],["case Tag of",121],["Dest.Write(@Tag, 4);",54],["Tag: Byte;",57],["edPaySumm.Tag := 0;",61]],"useCount":3273},{"word":"Tdebug","context":[["{$IFDEF UDEBUG}var _udebug: Tdebug;{$ENDIF}",4582],["{$IFDEF UDEBUG}_udebug: Tdebug;{$ENDIF}",1404],["//{$IFDEF UDEBUG}var _udebug: Tdebug;{$ENDIF}",530],["//{$IFDEF UDEBUG}_udebug: Tdebug;{$ENDIF}",46]],"useCount":6562},{"word":"Temp","context":[["inc(Temp);",119],["Temp: string;",125],["Temp := fToIdent;",118],["Temp: Integer;",115],["Result := Temp;",113],["Temp := '';",103],["if mHashTable[Temp^] <> mHashTable[aKey[i]] then",69],["Temp := (FState[2] and $FFFF) or 2;",49],["Temp.Free;",126],["Temp: PChar;",133]],"useCount":3496},{"word":"Test","context":[["This unit contains a skeleton test case class generated by the Test Case Wizard.",121],["Delphi DUnit Test Case",150],["{$IFDEF CLR}[Test]{$ENDIF}",309],["[Test]",1552],["Test := Test.Next;",78],["while Test <> nil do",78],["Test := Test.Next;",78],["Test := FStart;",78],["if ItemsEqual(Item, Test.Value) then",78],["procedure Test;",86]],"useCount":4268},{"word":"Text","context":[["ParamByName('ID_PERSONA').AsString := JVidentificacionCod.Text;",143],["Text := '';",602],["Result := Text;",180],["var Text: string);",179],["Text: string;",163],["property Text;",157],["if Text <> '' then",91],["System.Text,",106],["memOrder.Text := Responses.OrderText;",139],["ParamByName('ID_PERSONA').AsString := JvDocumento.Text;",147]],"useCount":19785},{"word":"The","context":[["The error recorded in 'err' can be retrieved by calling",138],["// The types declared in this file were generated from data read from a",172],["* - For Mac OS X, some modifications were made by The Creative CAT, denoted as CAT",191],["{ The project web site is located on:                     }",137],["{ The source code of the ZEOS Libraries and packages are  }",137],["The source code of the BESEN ecmascript engine library and helper tools are",296],["The number of items in the collection",166],["* The Original Code is TurboPower Abbrevia",595],["* The Initial Developer of the Original Code is",774],["| The Initial Developer of the Original Code is Lukas Gebauer (Czech Republic).|",325]],"useCount":25316},{"word":"Then","context":[["if i and (1 shl (ord(aLoop))) > 0 Then",219],["Then Begin",107],["If Result Then",145],["If Assigned(FDCLForm) Then",106],["If Assigned(Result) Then",104],["Then",217],["if not (IsEmpty) Then",270],["If ActiveCircuit <> Nil Then",275],["if (dsCadastro.DataSet.State in [dsInsert, dsEdit]) Then",306],["If not (IsEmpty) Then",615]],"useCount":10775},{"word":"This","context":[["This source is only used to compile and install the package.",230],["This file is part of Dev-C++",155],["// (This object is used by the IDE's Property Inspector to allow editing",274],["* This file is part of FFmpeg.",156],["{ This file is a part of Map editor for VCMI project",186],["// This unit is part of the GLScene Project, http://glscene.org",578],["* This is a part of Pascal porting of ffmpeg.",191],["{ This file was automatically created by Lazarus. Do not edit!",209],["This file is part of the Free Pascal run time library.",213],["This file is part of the Indy (Internet Direct) project, and is offered",1100]],"useCount":17114},{"word":"Timeout","context":[["Timeout := Timeout - integer(TickDelta(ti, GetTick));",72],["if Timeout <= 0 then",74],["Timeout := Timeout - integer(TickDelta(ti, GetTick));",72],["RecvStreamSize(Stream, Timeout, x);",74],["s := RecvPacket(Timeout);",74],["property Timeout;",87],["TimeV.tv_sec := Timeout div 1000;",96],["TimeV.tv_usec := (Timeout mod 1000) * 1000;",96],["if Timeout = -1 then",97],["x := RecvInteger(Timeout);",111]],"useCount":3388},{"word":"To","context":[["For I := 1 To Ub1 Do",40],["For I:=0 To Pred(_BoneCount) Do",51],["For j:=1 To n Do",35],["For X := 0 To Count-1 do",36],["For J:=0 To 2 Do",57],["For i:=1 To n Do",54],["For I:=0 To Pred(Count) Do",54],["For I:=0 To Pred(_ChildrenCount) Do",53],["For I:=0 To Pred(_GroupCount) Do",52],["For i := 1 To Ub1 Do",46]],"useCount":2661},{"word":"ToIndex","context":[["NewMap.FEntries[ToIndex] := FEntries[ToIndex];",88],["Dec(ToIndex);",176],["InitializeArrayAfterMove(List, FromIndex, ToIndex, Count);",117],["Count := ToIndex - FromIndex;",117],["if FromIndex < ToIndex then",298],["if FromIndex > ToIndex then",273],["if (ToIndex - FromIndex) < Count then",216],["if (FromIndex - ToIndex) < Count then",216],["ToIndex := BinarySearch(ToKey);",176],["Move(List[FromIndex], List[ToIndex], Count * SizeOf(List[0]));",121]],"useCount":4145},{"word":"ToVisit","context":[["for Counter:=0 to length(TBESENASTNodeFunctionBody(ToVisit).Statements)-1 do begin",30],["BESENFreeAndNil(ToVisit);",164],["Code.GenLocation(ToVisit.Location);",160],["for Counter:=0 to length(TBESENASTNodeCallExpression(ToVisit).Arguments)-1 do begin",38],["if assigned(TBESENASTNodeFunctionDeclaration(ToVisit).Container) then begin",37],["for Counter:=0 to length(TBESENASTNodeVariableStatement(ToVisit).Declarations)-1 do begin",30],["for Counter:=0 to length(TBESENASTNodeBlockStatement(ToVisit).Statements)-1 do begin",30],["for Counter:=0 to length(TBESENASTNodeSwitchStatement(ToVisit).CaseStatements)-1 do begin",30],["for Counter:=0 to length(TBESENASTNodeVariableExpression(ToVisit).Declarations)-1 do begin",30],["for Counter:=0 to length(TBESENASTNodeCaseStatement(ToVisit).Statements)-1 do begin",26]],"useCount":3414},{"word":"TokRec","context":[["TokRec^.state := TokRec^.saved_state;",110],["if (TokRec^.current = nil) and (foCreatePath in options) then",110],["TokRec^.current := nil;",110],["TokRec^.current := TokRec^.parent.AsObject.GetO(tok.pb.Fbuf);",110],["TokRec^.state := TokRec^.saved_state;",110],["TokRec := @tok.stack[tok.depth];",132],["TokRec^.state := tsIdentifier;",154],["TokRec^.obj := nil;",154],["TokRec^.saved_state := tsFinish;",220],["TokRec^.state := tsEatws;",484]],"useCount":5719},{"word":"Top","context":[["//Show Cat in Top Left Mod",55],["glTexCoord2f(1, 0); glVertex2f(Rec.Right, Rec.Top);",84],["Top := 0;",283],["Top := 1;",137],["glTexCoord2f(0, 0); glVertex2f(Rec.Left,  Rec.Top);",100],["gui_Clip_Rect              : (Left:94; Top:75; Right:398; Bottom:410);",85],["btnCancel.Top := btnOk.Top;",59],["btnCancel.Top := btnOk.Top;",59],["Y := (ARect.Top + ARect.Bottom - FHeight) div 2;",60],["if (ARect.Top <= VIntersect) and (VIntersect < ARect.Bottom) then begin",60]],"useCount":10298},{"word":"Transaction","context":[["Transaction.StartTransaction;",1207],["Transaction.CommitRetaining;",130],["IBOtros.Transaction.RollbackRetaining;",193],["IBSQL1.Transaction.Rollback;",122],["Tabla.Transaction.CommitRetaining;",96],["IBSQL1.Transaction.Commit;",74],["Qry.Transaction := FTransaction;",63],["if Transaction.InTransaction then",1090],["Transaction.Rollback;",1825],["Transaction.Commit;",1254]],"useCount":7221},{"word":"True","context":[["Found := True;",641],["gui_Visible                : True",616],["result := True;",656],["gui_Enabled                : True;",661],["Result:=True;",721],["Handled := True;",607],["Result := True",758],["Result := True;",24834],["while True do",1452],["Exit(True);",804]],"useCount":79836},{"word":"Try","context":[["{:Try resolve name to all possible IP address. i.e. If you pass as name",20],["{:Try set timeout for all sending operations, if socket provider can do it.",20],["{Try to feed a small block sequentially: Get the sequential feed block pool}",29],["{Try the next size (up to two sizes larger)}",29],["{:Try resolve name to primary IP address. i.e. If you pass as name result of",20],["{Try the next size}",29],["{Try all groups greater than this group}",46],["{:Try resolve symbolic port name to port number. (i.e. 'Echo' to 8)}",20],["{Try again}",255],["Try",3404]],"useCount":4164},{"word":"TtkTokenKind","context":[["function GetTokenID: TtkTokenKind;",224],["fTokenID: TtkTokenKind;",96],["TIdentFuncTableFunc = function: TtkTokenKind of object;",95],["function Func57: TtkTokenKind;",71],["function Func52: TtkTokenKind;",71],["function Func102: TtkTokenKind;",67],["function AltFunc: TtkTokenKind;",101],["function Func48: TtkTokenKind;",67],["function IdentKind(MayBe: PChar): TtkTokenKind;",120],["FTokenID: TtkTokenKind;",126]],"useCount":6936},{"word":"Type","context":[["Type",2678],["// Type Library. If this type library is explicitly or indirectly (via",172],["// 'Refresh' command of the Type Library Editor activated while editing the",172],["// Type Library, the contents of this file will be regenerated and all",172],["// Declaration of CoClasses defined in Type Library",158],["// Declaration of Enumerations defined in Type Library",95],["//   Hint: Symbol 'Type' renamed to 'type_'",63],["* Type of codec implemented by the hardware accelerator.",35],["add ebx, Type(TSmallBlockType)",34],["//   Type Libraries     : LIBID_xxxx",178]],"useCount":4616},{"word":"TypeInfo","context":[["DynArraySetLength(p, TypeInfo, 1, @i);",42],["DynArrayClear(p, TypeInfo);",42],["TValue.Make(nil, TypeInfo, Value);",166],["locSerializer.Put('sessionKey', TypeInfo(UnicodeString), sessionKey);",137],["locSerializer.Put('group_id', TypeInfo(integer), group_id);",112],["pInfo := TypeInfo(T);",57],["TypeData := GetTypeData(TypeInfo);",47],["TypeInfo(AnsiString));",46],["TypeInfo(WideString));",44],["TypeInfo(string));",46]],"useCount":3750},{"word":"Types","context":[["DeHL.Types,",107],["FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,",73],["Types;",73],["SysUtils, Types, Classes, Variants, QTypes, QGraphics, QControls, QForms,",60],["DN.Types,",75],["FMX.Types, FMX.Graphics, FMX.Controls, FMX.Forms, FMX.Dialogs, FMX.StdCtrls,",75],["System.Types,",235],["System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,",315],["Types,",1318],["{$REGION 'Internal Types'}",52]],"useCount":3364},{"word":"U","context":[["F4 := ((F2 and $7F7F7F7F) shl 1) xor ((U - (U shr 7)) and $1B1B1B1B);",48],["F2 := ((F9 and $7F7F7F7F) shl 1) xor ((U - (U shr 7)) and $1B1B1B1B);",48],["F8 := ((F4 and $7F7F7F7F) shl 1) xor ((U - (U shr 7)) and $1B1B1B1B);",48],["F2 := ((F9 and $7F7F7F7F) shl 1) xor ((U - (U shr 7)) and $1B1B1B1B);",48],["U := F4 and $80808080;",48],["F4 := ((F2 and $7F7F7F7F) shl 1) xor ((U - (U shr 7)) and $1B1B1B1B);",48],["U := F2 and $80808080;",48],["F8 := ((F4 and $7F7F7F7F) shl 1) xor ((U - (U shr 7)) and $1B1B1B1B);",48],["case StrToIntDef(Piece(DEAFailStr,U,1),0) of",56],["SortByPiece(TStringList(RPCBrokerV.Results), U, 2);",81]],"useCount":7035},{"word":"UDEBUG","context":[["{$IFDEF UDEBUG}var _udebug: Tdebug;{$ENDIF}",4582],["{$IFDEF UDEBUG}_udebug: Tdebug;{$ENDIF}",1404],["{$IFDEF UDEBUG}if _udebug <> nil then _udebug.Destroy;{$ENDIF}",6613],["//{$IFDEF UDEBUG}if _udebug <> nil then _udebug.Destroy;{$ENDIF}",426],["//{$IFDEF UDEBUG}debugUnregisterUnit(DEBUG_unit_ID);{$ENDIF}",212],["{$IFDEF UDEBUG}",178],["then begin {$IFDEF UDEBUG}if _udebug <> nil then _udebug.Destroy;{$ENDIF} Exit; end;",19],["//{$IFDEF UDEBUG}_udebug: Tdebug;{$ENDIF}",46],["{$IFDEF UDEBUG}Debugging := False;",96],["//{$IFDEF UDEBUG}var _udebug: Tdebug;{$ENDIF}",530]],"useCount":14159},{"word":"UNICODE","context":[["{$ELSE UNICODE}",29],["//  String types are UNICODE.",30],["#ifdef UNICODE",62],["{$ENDIF} // !UNICODE",84],["{$ifndef UNICODE}",138],["{$endif UNICODE}",23],["{$IFDEF UNICODE}",2873],["{$ifdef UNICODE}",1573],["{$IFNDEF UNICODE}",390],["{$ENDIF UNICODE}",547]],"useCount":5866},{"word":"UNITVERSIONING","context":[["{$ENDIF UNITVERSIONING}",1279],["{$IFDEF UNITVERSIONING}",1287]],"useCount":2566},{"word":"UNIX","context":[["{$IFNDEF UNIX} stdcall {$ELSE} cdecl {$ENDIF};",88],["{$ELSEIF Defined(UNIX)}",54],["{$IFNDEF UNIX}",133],["{$ifdef UNIX}",139],["{$IFDEF UNIX} cdecl; {$ELSE} stdcall; {$ENDIF}",169],["{$IFDEF UNIX} cdecl {$ELSE} stdcall {$ENDIF};",369],["{$ENDIF UNIX}",625],["{$ENDIF}{$IFDEF UNIX} cdecl;",1033],["{$IFDEF UNIX}",2074],["{$ENDIF}{$IFDEF UNIX}cdecl;",241]],"useCount":5406},{"word":"USA","context":[["Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.",146],["{ no endereço 59 Temple Street, Suite 330, Boston, MA 02111-1307 USA.          }",95],["{    59 Temple Place, Suite 330, Boston, MA 02111-1307 USA                                    }",101],["Temple Place, Suite 330, Boston, MA\t02111-1307, USA. Ou acesse o site do",118],["* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA",157],["USA",300],["MA 02111-1307, USA.",367],["Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",379],["* Boston, MA 02110-1301, USA.",563],["Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.",667]],"useCount":3476},{"word":"USE_INLINE","context":[["{$IFDEF USE_INLINE}inline;{$ENDIF}",1407],["{$IFDEF USE_INLINE} inline; {$ENDIF}",1172],["{$IFDEF USE_INLINE}",72],["{$IFDEF USE_INLINE} inline;{$ENDIF}",17],[") : TManyValuePropRecordData;overload;{$IFDEF USE_INLINE}inline;{$ENDIF}",15],["const ALen : Integer) : String;  {$IFDEF USE_INLINE}inline;{$ENDIF}",12],["//{$IFDEF USE_INLINE} inline; {$ENDIF}",11]],"useCount":2706},{"word":"Update","context":[["Update;",832],["procedure Update; reintroduce;",41],["{Update the sequential feed parameters}",46],["procedure Update(Item: TCollectionItem); override;",53],["procedure TDemoScene.Update(const DeltaTimeSec: Single);",70],["procedure Update;",209],["StatusBar1.Update;",43],["procedure Update(const DeltaTimeSec: Single); override;",84],["Update();",144],["procedure Update; override;",88]],"useCount":3290},{"word":"V","context":[["V",6306],["V\\u000a\\u000a",431],["V,",594],["V'",634],["V=",869],["V)",945],["V(",1169],["V:",1664],["V;",2114],["V\\u000a",2363]],"useCount":22428},{"word":"VAR","context":[["VAR Key: CHAR;",46],["VAR R: TRect;",16],["VAR CharPointer: INTEGER;",18],["VAR TempString: Str20;",20],["VAR Band: BandType;",22],["VAR I:INTEGER;",60],["VAR TempString: Str80;",35],["VAR Valid:BOOLEAN;",25],["VAR FileRead: TEXT;",23],["VAR",3898]],"useCount":4347},{"word":"VMIndex","context":[["LVMOffset := (MaxFakeVMTEntries - VMIndex) * SizeOf(Pointer) + vmtParent + SizeOf(Pointer);",12],["VMIndex := 0;",17],["VMIndex: Integer;",17],["Inc(VMIndex); Inc(VMIndex); Inc(VMIndex); Inc(VMIndex); Inc(VMIndex);",680],["Inc(VMIndex); Inc(VMIndex); Inc(VMIndex); Inc(VMIndex); Inc(VMIndex);",680],["Inc(VMIndex); Inc(VMIndex); Inc(VMIndex); Inc(VMIndex); Inc(VMIndex);",680],["Inc(VMIndex); Inc(VMIndex); Inc(VMIndex); Inc(VMIndex); Inc(VMIndex);",680],["Inc(VMIndex); Inc(VMIndex); Inc(VMIndex); Inc(VMIndex); Inc(VMIndex);",680]],"useCount":3446},{"word":"Val","context":[["(Expr: B_ITEMSLOT      ; Val: $00000025),",139],["(Expr: B_ITEMSTACK     ; Val: $0000003E),",139],["(Expr: LISTEND         ; Val: $00000000)",142],["(Expr: B_SHOPNEXT      ; Val: $00000044),",141],["(Expr: B_CONTX         ; Val: $00000034),",137],["(Expr: F_EVPROPERTY    ; Val: $00000001),",138],["(Expr: F_EXTSTAT       ; Val: $00000001),",139],["(Expr: B_ITEMTYPE      ; Val: $00000038),",139],["(Expr: F_MACROMAP      ; Val: $00000001),",140],["(Expr: B_STATWEIGHT    ; Val: $00000038),",139]],"useCount":5859},{"word":"Valid","context":[["Result := (FOwnTree = ItrObj.FOwnTree) and (FCursor = ItrObj.FCursor) and (Valid = ItrObj.Valid);",52],["Result := (FOwnTree = ItrObj.FOwnTree) and (FCursor = ItrObj.FCursor) and (Valid = ItrObj.Valid);",52],["Valid := True;",465],["if Valid then",776],["Valid:=FALSE;",66],["Result := (FOwnList = ItrObj.FOwnList) and (FCursor = ItrObj.FCursor) and (Valid = ItrObj.Valid);",78],["Result := (FOwnList = ItrObj.FOwnList) and (FCursor = ItrObj.FCursor) and (Valid = ItrObj.Valid);",78],["if Valid and (FCursor <> nil) then",78],["UNTIL Valid=TRUE;",148],["Valid := False;",439]],"useCount":2706},{"word":"Value","context":[["procedure SetHint(const Value: WideString);",266],["procedure SetCapacity(Value: Integer); override;",375],["Value: Integer;",315],["if Value <> nil then",302],["inherited SetCapacity(Value);",293],["Value := 0;",290],["case Value of",408],["Result := FCursor.Value",390],["Result := Value;",601],["if Value then",818]],"useCount":68288},{"word":"Var","context":[["Var ibuf : TByteArray;",56],["Var i:Integer;",65],["Var i : Integer;",117],["Var I : Integer;",163],["Var",14886],["Var i: integer;",51],["Var Data: TXLSBlob;",51],["Var I: Integer;",45],["Var  ReplaceIndex: boolean;",34],["Var term: ArbInt);",33]],"useCount":16255},{"word":"Variants","context":[["Variants,",383],["Windows, Messages, SysUtils, Variants, Classes, Graphics,",110],["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes,",68],["SysUtils, Variants, Classes, Graphics, Controls, Forms,",62],["SysUtils, Types, Classes, Variants, QTypes, QGraphics, QControls, QForms,",60],["System.Variants,",143],["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,",150],["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,",781],["Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,",5455],["System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,",315]],"useCount":8203},{"word":"Vcl","context":[["Vcl.Controls,",90],["Vcl.Forms,",120],["{%CLASSGROUP 'Vcl.Controls.TControl'}",114],["Vcl.Graphics,",100],["System.Classes, Vcl.Graphics,",84],["Vcl.Dialogs,",72],["Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs,",67],["Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs,",67],["Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs,",67],["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,",781]],"useCount":4505},{"word":"Version","context":[["Version 308",455],["Version:      SQL_VERSION_ANSI;",301],["Version  Date      Author      Modification",260],["// Anti-Grain Geometry - Version 2.4 Release Milano 3 (AggPas 2.4 RM3)",168],["Version: 500);",320],["Date Created: Sept 18, 1997 (Version 1.1)",148],["Version: 0.1",118],["*  Version 2.0.0.0                                     *",101],["Current Release: Version 1.1 Patch 47 (Jun. 17, 2008))",101],["* Version: MPL 1.1",974]],"useCount":7412},{"word":"Visible","context":[["ComboBox62.Visible := True;",184],["Visible := true;",104],["Visible := True;",253],["ComboBox62.Visible := False;",109],["Visible:=false;",144],["pnlLeftBottom.Visible := false;",171],["if Visible then",227],["property Visible;",905],["Visible := false;",185],["Visible := False;",398]],"useCount":15039},{"word":"W","context":[["W := (W shl S) or (W shr (32 - S));",72],["W := (W shl S) or (W shr (32 - S));",72],["InflateRect(R, -W, -W);",68],["InflateRect(R, -W, -W);",68],["W := 0;",66],["W: Word;",64],["W, H: Integer;",185],["TZipMaster VCL originally by Chris Vleghert, Eric W. Engler.",148],["W := (W shl S) or (W shr (32 - S));",72],["W: Integer;",136]],"useCount":5711},{"word":"W0","context":[["T1[1] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[0] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[3] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[2] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["W0 := ForwardTable[Byte(T0[3])]; W1 := ForwardTable[Byte(T0[0] shr 8)];",54],["T1[2] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T1[0] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T1[3] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["W0 := ForwardTable[Byte(T0[2])]; W1 := ForwardTable[Byte(T0[3] shr 8)];",54],["T0[1] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144]],"useCount":2808},{"word":"W1","context":[["T1[1] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[2] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[0] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[1] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[1] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T1[1] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T1[2] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[0] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T1[0] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T1[0] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144]],"useCount":4283},{"word":"W2","context":[["T1[1] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T1[3] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T1[0] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[0] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T1[1] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[0] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T1[3] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[1] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[3] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T1[2] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144]],"useCount":4263},{"word":"W3","context":[["W2 := ForwardTable[Byte(T1[3] shr 16)]; W3 := ForwardTable[Byte(T1[0] shr 24)];",45],["W2 := ForwardTable[Byte(T1[0] shr 16)]; W3 := ForwardTable[Byte(T1[1] shr 24)];",45],["W2 := ForwardTable[Byte(T0[3] shr 16)]; W3 := ForwardTable[Byte(T0[0] shr 24)];",54],["W2 := ForwardTable[Byte(T0[0] shr 16)]; W3 := ForwardTable[Byte(T0[1] shr 24)];",54],["W2 := InverseTable[Byte(T0[3] shr 16)]; W3 := InverseTable[Byte(T0[2] shr 24)];",54],["W2 := InverseTable[Byte(T0[0] shr 16)]; W3 := InverseTable[Byte(T0[3] shr 24)];",54],["W2 := InverseTable[Byte(T0[2] shr 16)]; W3 := InverseTable[Byte(T0[1] shr 24)];",54],["W2 := ForwardTable[Byte(T0[2] shr 16)]; W3 := ForwardTable[Byte(T0[3] shr 24)];",54],["W2 := InverseTable[Byte(T0[1] shr 16)]; W3 := InverseTable[Byte(T0[0] shr 24)];",54],["W2 := ForwardTable[Byte(T0[1] shr 16)]; W3 := ForwardTable[Byte(T0[2] shr 24)];",54]],"useCount":3564},{"word":"WARN","context":[["{$WARN SYMBOL_DEPRECATED OFF}",197],["{$WARN SYMBOL_PLATFORM OFF}",649],["{$WARN UNIT_PLATFORM OFF}",158],["{$WARN IMPLICIT_STRING_CAST OFF}",148],["{$WARN SYMBOL_PLATFORM ON}",141],["{$WARN IMPLICIT_STRING_CAST_LOSS OFF}",140],["{$WARN UNSAFE_CODE OFF}",122],["{$WARN UNSAFE_TYPE OFF}",121],["{$WARN UNSAFE_CAST OFF}",93],["{$WARN SYMBOL_DEPRECATED ON}",85]],"useCount":3166},{"word":"WIN32","context":[["//    {$IFDEF WIN32}",21],["{$ifdef WIN32}",95],["AddDefine('WIN32');",12],["{$IF DEFINED(WIN32)}",12],["{$IFDEF WIN32} stdcall; {$ELSE} cdecl; {$ENDIF} external cryptlibname;",174],["{$ENDIF WIN32}",174],["{$IFNDEF WIN32}",253],["{$IFDEF WIN32}",2151]],"useCount":2892},{"word":"WideString","context":[["function Get_Name: WideString; safecall;",284],["property Name: WideString read Get_Name write Set_Name;",166],["property Caption: WideString read GetCaption write SetCaption;",168],["property Hint: WideString read GetHint write SetHint;",168],["procedure SetCaption(const Value: WideString);",179],["function GetCaption: WideString;",184],["function GetName: WideString; override; safecall;",195],["S: WideString;",263],["procedure SetHint(const Value: WideString);",266],["function GetHint: WideString;",268]],"useCount":16424},{"word":"Width","context":[["Pen.Width := 1;",192],["Width: LongWord;",203],["for X := 0 to Width - 1 do",93],["Width,",142],["property Width;",103],["CodeSite.SendFmtMsg('IMgr.Width     = [%d]',[ IMgr.Width ] );",92],["CodeSite.SendFmtMsg('IMgr.Width     = [%d]',[ IMgr.Width ] );",92],["Width: Integer;",92],["rect.Width,",86],["Width := 0;",83]],"useCount":11294},{"word":"Winapi","context":[["Winapi.Windows, Winapi.Messages,",75],["Winapi.Windows, Winapi.Messages,",75],["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,",150],["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,",150],["Winapi.Windows,",248],["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,",781],["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,",781],["Winapi.Messages,",70],["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes,",68],["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes,",68]],"useCount":2679},{"word":"Windows","context":[["Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,",781],["{$IFDEF Windows}",186],["* - Originally by Victor Zinetz for Delphi and Free Pascal on Windows.",191],["Windows,",2724],["Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,",5455],["Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,",2688],["*    Windows:          in qtmlClient.lib 3.0 and later",1388],["Winapi.Windows,",248],["Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms,",325],["Windows;",598]],"useCount":20601},{"word":"Word","context":[["procedure FormKeyUp(Sender: TObject; var Key: Word;",136],["function Seek(Offset: Longint; Origin: Word): Longint; override;",164],["if (Word(Value) = CodePage) or (Value < 0) then Break;",126],["procedure FormKeyUp(Sender: TObject; var Key: Word; Shift: TShiftState);",100],["procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);",572],["procedure KeyDown(var Key: Word; Shift: TShiftState); override;",246],["var Key: Word; Shift: TShiftState);",462],["procedure FormKeyDown(Sender: TObject; var Key: Word;",486],["CP: Word;",81],["ColumnNumber: Word;",80]],"useCount":10660},{"word":"Write","context":[["if(Write(pb, indent, escape, 0) < 0) then",88],["function Write(const Buffer; Count: Longint): Longint; override;",320],["Stream.Write(Buf[0], SizeBuf);",270],["Done := Dest.Write(TempOut, SizeOf(TempOut));",90],["BytesWrite:=Filestream.Write(DrumP,1);",176],["DemoStream.Write( DData, Sizeof(DData));",111],["Frames[FrameIndex].Stream.Write(DataByte, 1);",74],["Write(' ');",57],["procedure Write( const oprot: IProtocol);",102],["Frames[FrameIndex].Stream.Write(Data, 1);",98]],"useCount":7409},{"word":"Writeln","context":[["Writeln;",842],["Writeln('');",56],["Writeln(FWorkingFileHandle);",50],["Writer.Writeln('');",57],["Writeln(OutFile);",66],["Writeln(Impressora);",75],["Writeln('FALHOU');",114],["Writeln('OK')",122],["Writeln(IMPRESSORA);",337],["Writeln(F);",407]],"useCount":4016},{"word":"X","context":[["X, Y: Integer;",564],["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework [32-bit only] but deprecated in 10.4",541],["*    Mac OS X:         in version 10.0 and later in Carbon.framework",609],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework",652],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only]",821],["X, Y: Integer);",851],["Button: TMouseButton; Shift: TShiftState; X, Y: Integer);",1556],["*    Mac OS X:         in version 10.0 and later in QuickTime.framework",1970],["Shift: TShiftState; X, Y: Integer);",3931],["*  Mac OS X threading:",3794]],"useCount":47292},{"word":"Y","context":[["Shift: TShiftState; X, Y: Integer);",3931],["procedure MouseMove(Shift: TShiftState; X, Y: Integer); override;",179],["Button: TMouseButton; Shift: TShiftState; X, Y: Integer;",239],["Shift: TShiftState; X, Y: Integer; Layer: TCustomLayer);",253],["X, Y: NativeUInt;",260],["X, Y: Integer;",564],["X, Y: Integer);",851],["Y := 0;",241],["Button: TMouseButton; Shift: TShiftState; X, Y: Integer);",1556],["Y: Integer);",1203]],"useCount":30322},{"word":"Z","context":[["Z.AvailableInput := N;",100],["Result := InflateFlush(S, Z, R);",70],["Z.NextInput := P;",100],["Inc(Z.TotalInput, Cardinal(P) - Cardinal(Z.NextInput));",100],["Inc(Z.TotalInput, Cardinal(P) - Cardinal(Z.NextInput));",100],["( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 486),",87],["'_', '0'..'9', 'a'..'z', 'A'..'Z': Identifiers[I] := True;",75],["'Z', 'z':",74],["( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 373),",69],["( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 305),",82]],"useCount":5450},{"word":"_","context":[["|      / /   / /__    / / ___  / /_/ / / /____                                |",69],["( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 548),",69],["( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 305),",82],["( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 430),",69],["( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 373),",69],["( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 486),",87],["'_', '0'..'9', 'a'..'z', 'A'..'Z': Identifiers[I] := True;",75],["/_____/   /______/ /______/ /_/ /_/ /______/                                  |",69],["/_____/   /______/ /______/ /_/ /_/ /______/                                  |",69],["{*_* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",106]],"useCount":3691},{"word":"__IPHONE_NA","context":[["(* __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_5, __IPHONE_NA, __IPHONE_NA) *)",131],["(* __OSX_AVAILABLE_STARTING(__MAC_10_0, __IPHONE_NA) *)",165],["(* __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0,__MAC_10_4,__IPHONE_NA,__IPHONE_NA) *)",172],["(* __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_8, __IPHONE_NA, __IPHONE_NA) *)",459],["(* __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0,__MAC_10_4,__IPHONE_NA,__IPHONE_NA) *)",172],["(* __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_8, __IPHONE_NA, __IPHONE_NA) *)",459],["(* __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_5, __IPHONE_NA, __IPHONE_NA) *)",131],["(* __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_4, __IPHONE_NA, __IPHONE_NA) *)",326],["(* __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_4, __IPHONE_NA, __IPHONE_NA) *)",326],["(* __OSX_AVAILABLE_STARTING(__MAC_10_1,__IPHONE_NA) *)",190]],"useCount":4292},{"word":"__arm__","context":[["{$setc __arm__ := 0}",457],["{$elifc defined __arm__ and __arm__}",457],["{$setc __arm__ := 1}",457],["{$error __ppc__ nor __ppc64__ nor __i386__ nor __x86_64__ nor __arm__ is defined.}",457],["{$elifc defined __arm__ and __arm__}",457],["{$ifc not defined __arm__ and defined CPUARM}",457]],"useCount":2742},{"word":"__i386__","context":[["{$ifc not defined __i386__ and defined CPUI386}",457],["{$elifc defined __i386__ and __i386__}",457],["{$elifc defined __i386__ and __i386__}",457],["{$setc __i386__ := 1}",457],["{$error Conflicting definitions for __ppc__ and __i386__}",457],["{$ifc defined __ppc__ and __ppc__ and defined __i386__ and __i386__}",457],["{$error __ppc__ nor __ppc64__ nor __i386__ nor __x86_64__ nor __arm__ is defined.}",457],["{$ifc defined __ppc__ and __ppc__ and defined __i386__ and __i386__}",457],["{$setc __i386__ := 0}",457]],"useCount":4113},{"word":"__ppc64__","context":[["{$ifc not defined __ppc64__ and defined CPUPOWERPC64}",457],["{$setc __ppc64__ := 1}",457],["{$elifc defined __ppc64__ and __ppc64__}",457],["{$error __ppc__ nor __ppc64__ nor __i386__ nor __x86_64__ nor __arm__ is defined.}",457],["{$elifc defined __ppc64__ and __ppc64__}",457],["{$setc __ppc64__ := 0}",457]],"useCount":2742},{"word":"__ppc__","context":[["{$setc __ppc__ := 0}",457],["{$error Conflicting definitions for __ppc__ and __i386__}",457],["{$ifc not defined __ppc__ and defined CPUPOWERPC32}",457],["{$error __ppc__ nor __ppc64__ nor __i386__ nor __x86_64__ nor __arm__ is defined.}",457],["{$setc __ppc__ := 1}",457],["{$ifc defined __ppc__ and __ppc__}",457],["{$ifc defined __ppc__ and __ppc__ and defined __i386__ and __i386__}",457],["{$ifc defined __ppc__ and __ppc__ and defined __i386__ and __i386__}",457],["{$ifc defined __ppc__ and __ppc__}",457]],"useCount":4113},{"word":"__x86_64__","context":[["{$ifc not defined __x86_64__ and defined CPUX86_64}",457],["{$error __ppc__ nor __ppc64__ nor __i386__ nor __x86_64__ nor __arm__ is defined.}",457],["{$elifc defined __x86_64__ and __x86_64__}",457],["{$setc __x86_64__ := 1}",457],["{$elifc defined __x86_64__ and __x86_64__}",457],["{$setc __x86_64__ := 0}",457]],"useCount":2742},{"word":"_udebug","context":[["{$IFDEF UDEBUG}_udebug: Tdebug;{$ENDIF}",1404],["{$IFDEF UDEBUG}var _udebug: Tdebug;{$ENDIF}",4582],["begin {$IFDEF UDEBUG}if _udebug <> nil then _udebug.Destroy;{$ENDIF} Exit; end;",19],["begin {$IFDEF UDEBUG}if _udebug <> nil then _udebug.Destroy;{$ENDIF} Exit; end;",19],["//{$IFDEF UDEBUG}if _udebug <> nil then _udebug.Destroy;{$ENDIF}",426],["//{$IFDEF UDEBUG}_udebug: Tdebug;{$ENDIF}",46],["//{$IFDEF UDEBUG}var _udebug: Tdebug;{$ENDIF}",530],["{$IFDEF UDEBUG}if _udebug <> nil then _udebug.Destroy;{$ENDIF}",6613],["{$IFDEF UDEBUG}if _udebug <> nil then _udebug.Destroy;{$ENDIF}",6613],["//{$IFDEF UDEBUG}if _udebug <> nil then _udebug.Destroy;{$ENDIF}",426]],"useCount":20746},{"word":"a","context":[["a(g189",1639],["a(g111",2985],["a(g343",1074],["a(g222",787],["a(g135",467],["a(g198",2131],["a(g18",3429],["a(g339",4932],["a(g185",7456],["{ GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou          }",620]],"useCount":96753},{"word":"abstract","context":[["function release(): Integer; virtual; abstract;",64],["):HResult; virtual; stdcall; abstract;",524],["):ID3DX11EffectVariable; virtual; stdcall; abstract;",216],["virtual; abstract;",180],["function GetCount: Integer; virtual; abstract;",38],["procedure addRef(); virtual; abstract;",64],["function IsValid:LongBool; virtual; stdcall; abstract;",64],["abstract;",68],["procedure Clear; virtual; abstract;",95],["):ID3D10EffectVariable; virtual; stdcall; abstract;",176]],"useCount":4268},{"word":"act","context":[["( sym: -3; act: 289 ),",65],["( sym: 271; act: 22 ),",66],["( sym: 380; act: 292 ),",60],["( sym: 385; act: 235 ),",70],["( sym: 384; act: 234 ),",76],["( sym: 379; act: 14 ),",169],["( sym: -10; act: 285 ),",58],["( sym: -126; act: 277 ),",58],["( sym: 381; act: 160 ),",84],["( sym: 418; act: 161 ),",69]],"useCount":7291},{"word":"add","context":[["add eax, ecx",130],["add esp, 8",130],["add eax, edx",178],["add ('var');",121],["add('');",155],["add ('begin');",149],["add ('end.');",122],["add esp, 12",101],["add rax, 16;",100],["add rax, rdx",134]],"useCount":10058},{"word":"address","context":[["address, EMail address and any comment you like to say.",162],["{:Connects socket to remote IP address and PORT. The same rules as with",40],["Are you missing properties for specify server address and port? Look to",44],["inguy := @s; //assign address of s to inguy",45],["address: ptruint;",45],["{Store the next sequential feed block address}",46],["// EAX contains address of V",48],["// EAX contains address of V1",72],["// EDX contains address of V2",72],["address, EMail address and any comment you like to say.",162]],"useCount":3915},{"word":"after","context":[["* It will return only after finishing all tasks.",64],["* subtitles are correctly displayed after seeking.",63],["CheckEquals(16, FZip.Count, 'after count wrong');",42],["i := SectionIndex + 1;           // first line after the section name",64],["{Invalid handlers to catch MM operations after uninstall}",34],["* if f is non-NULL, returns the next registered input format after f",74],["(* Delay after an RCC peripheral clock enabling *)",78],["<li>22/04/10 - Yar - Fixes after GLState revision",135],["property FileName; {must be after OnLoad}",35],["but we must reload the local copies after a successful fill. }",150]],"useCount":3117},{"word":"al","context":[["mov MediumBlocksLocked, al",94],["neg al",248],["MessageDlg('Error al Buscar Deuda',mtError,[mbcancel],0);",86],["MessageDlg('Error al Obtener valor de Corto Plazo',mtError,[mbcancel],0);",215],["and al,cl",160],["mov [edi], al",144],["setb al",72],["setz al",78],["mov al, byte ptr HexTable[eax]",136],["mov [edi], al               //Store digit out to memory",126]],"useCount":2867},{"word":"all","context":[["* Seeking will be done so that the point from which all active streams",63],["'Could not extract all files');",62],["* essential for some types of subtitle streams to ensure that all",63],["{ Copy all items in }",53],["{Step through all the large blocks}",60],["* Active streams are all streams that have AVStream.discard < AVDISCARD_ALL.",63],["* It will return only after finishing all tasks.",64],["// Type Library, the contents of this file will be regenerated and all",172],["{Step through all the medium block pools}",111],["if all then",74]],"useCount":9472},{"word":"allocated","context":[["* explicitly allocated as well!",36],["*         When returning an error, pkt must not have been allocated",38],["* @return Pointer to the allocated block, NULL if the block cannot",37],["* be allocated.",37],["* assume the buffer was allocated by avcodec_default_get_buffer.",37],["* Size of private data so that it can be allocated in the wrapper.",38],["* Required number of additionally allocated bytes at the end of the input bitstream for decoding.",38],["* size of private data so that it can be allocated in the wrapper",38],["* This might be different from the first allocated byte",43],["Out: OutBuf = ptr to newly allocated buffer containing decompressed data",70]],"useCount":3528},{"word":"also","context":[["provided that you also meet, for each linked independent module, the terms",365],["{ you also meet, for each linked independent module,      }",154],["also IPv6 support, include files now in sub-directory",75],["* function also computes the real framerate in case of MPEG-2 repeat",64],["* recovery point SEI in H.264 and match_time_delta in NUT. It is also",63],["AVCOL_PRI_BT470BG     = 5, ///< also ITU-R BT601-6 625 / ITU-R BT1358 625 / ITU-R BT1700 625 PAL & SECAM",38],["* Read one packet and put it in 'pkt'. pts and flags are also",38],["AVCOL_PRI_SMPTE170M   = 6, ///< also ITU-R BT601-6 525 / ITU-R BT1358 525 / ITU-R BT1700 NTSC",38],["AVCOL_PRI_BT709       = 1, ///< also ITU-R BT1361 / IEC 61966-2-4 / SMPTE RP177 Annex B",38],["*    also meant semantically, i.e., a demuxer should not knowingly produce",38]],"useCount":2843},{"word":"an","context":[["{    This code is distributed as part of the FREE!ship project. FREE!ship is an               }",100],["See if an item is already in the list. returns -1 if not in the list",166],["a product, an acknowledgment in the product documentation would be",246],["{ independent modules to produce an executable,           }",154],["err (IN/OUT) - error handle. If there is an error, it is",140],["//  this function, even for an error.",100],["{Is it an upsize or a downsize?}",126],["* pointer to an AVClass struct.",92],["Expect(bCaughtException, 'Should have raised an exception');",83],["* @param avcl A pointer to an arbitrary struct of which the first field is a",116]],"useCount":12287},{"word":"ancestor","context":[["{@prop Visible = ancestor /}",100],["{@prop FriendlyName = ancestor /}",100],["{@prop Font = ancestor /}",100],["{@prop Borders = ancestor /}",100],["{@prop ParentColor = ancestor /}",90],["{@prop RealBounds = ancestor /}",100],["{@prop Transparent = ancestor /}",100],["{@prop ParentFont = ancestor /}",85],["{@prop Color = ancestor /}",90],["{create the ancestor}",85]],"useCount":2788},{"word":"and","context":[["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only]",821],["*    CarbonLib:        in CarbonLib 1.0 and later",5337],["*    CarbonLib:        in CarbonLib 1.1 and later",1009],["This file is part of the Indy (Internet Direct) project, and is offered",1100],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework",652],["*    Mac OS X:         in version 10.0 and later in Carbon.framework",609],["*    Non-Carbon CFM:   in QuickTimeLib 2.5 and later",1102],["*    Non-Carbon CFM:   in InterfaceLib 7.1 and later",1185],["*    Windows:          in qtmlClient.lib 3.0 and later",1388],["*    Mac OS X:         in version 10.0 and later in QuickTime.framework",1970]],"useCount":145882},{"word":"any","context":[["// call prior to any access via the property. These items have been disabled",39],["Please report any bugs to <gpc@microbizz.nl>",455],["// Register any test cases with the test runner",180],["address, EMail address and any comment you like to say.",162],["$   Accept any PAYPAL DONATION $$$  ",117],["// BkColorNum = background color reference, if > -1, replaces the column background color if any",48],["3. Mail me  (bsalsa@gmail.com) any code change in the unit",43],["{Are there any available blocks of a suitable size?}",46],["errors and/or any another type of suggestion, please send me a mail to:",44],["{ none\t\t\t\t\tany \t\t\t\t                                                           }",38]],"useCount":4830},{"word":"application","context":[["application.unlock;",104],["* otherwise the application might crash randomly or strange bugs (not",62],["{ The application and scene will automatically be freed on shutdown }",73],["application.processmessages;",81],["2. In your application, add credits to \"Embedded Web Browser\"",92],["application.Terminate;",50],["application.lock;",104],["application.createform(tmainfo,mainfo);",118],["application.run;",134],["application.ProcessMessages;",168]],"useCount":3269},{"word":"are","context":[["The source code of the BESEN ecmascript engine library and helper tools are",296],["// GUIDS declared in the TypeLibrary. Following prefixes are used:",178],["are not obligated to do so. If you do not wish to do so, delete this exception",297],["Contributors to the SynEdit and mwEdit projects are listed in the",350],["{$error Neither FPC_BIG_ENDIAN nor FPC_LITTLE_ENDIAN are defined.}",457],["(* Check if linked versions are supported *)",163],["Contributors to the SynEdit project are listed in the Contributors.txt file.",145],["{ The source code of the ZEOS Libraries and packages are  }",137],["{ of the library, but you are not obligated to do so.     }",137],["are met:",124]],"useCount":15206},{"word":"array","context":[["TDatArr = array of array of TDat;",270],["TDatArr = array of array of TDat;",270],["TBufArr = array of TBuf;",270],["fProcTable: array[#0..#255] of TProcTableProc;",154],["Identifiers: array[#0..#255] of ByteBool;",129],["LErrorMessageTitle: array[0..1023] of AnsiChar;",120],["mHashTable: array[#0..#255] of Integer;",100],["///  <param name=\"AArray\">An array to copy elements from.</param>",94],["const Args: array of const);",81],["VData: array of TDoublePoint;",81]],"useCount":14063},{"word":"as","context":[["2. Altered source versions must be plainly marked as such, and must not be",327],["and partly as employee : http://www.batpro.com                          |",572],["SelectNext((Sender as TwinControl),True,True);",167],["locCallContext := Self as ICallContext;",172],["LContext := ASender.Context as TIdFTPServerContext;",190],["of this <code>ResultSet</code> object as",271],["2. Altered source versions must be plainly marked as such, and",217],["* - For Mac OS X, some modifications were made by The Creative CAT, denoted as CAT",191],["partly as freelance: http://www.mars42.com                          |",572],["*    Non-Carbon CFM:   available as macro/inline",947]],"useCount":21013},{"word":"asm","context":[["asm ROR BYTE PTR [BitRun], 1 end;",355],["asm",16176],["new buffer position. Note: The 32-bit asm version only supports numbers up to",13],["asm add esp,12",25],["asm inc ebx",117],["asm call setitem",37],["//asm",13],["asm sub ebp, 4 end;",14],["if not ExpectedType.Used then asm int 3; end;",18],["assembler asm",22]],"useCount":16846},{"word":"assigned","context":[["if not ((ThisArgument.ValueType=bvtOBJECT) and assigned(TBESENObject(ThisArgument.Obj))) then begin",177],["while assigned(hp) do",112],["if assigned(alabel[2]) then",100],["if(assigned(Node)) then",97],["if assigned(imageAttributes) then nimageAttributes := imageAttributes.nativeImageAttr else nimageAttributes := nil;",96],["if assigned(AudioCriticalSection) then begin",81],["if assigned(callback) then",617],["if not assigned(FSsl) then",122],["if assigned(DataCriticalSection) then begin",337],["if assigned(TBESENObject(ThisArgument.Obj)) and (TBESENObject(ThisArgument.Obj) is TBESENObjectDate) then begin",132]],"useCount":10051},{"word":"at","context":[["* removed at will.",169],["CheckTrue(it.Next, 'Iterator should not be at end');",73],["Follow \"support\" link at http://www.overbyte.be for subscription.",186],["{ APILIB home page, located at http://jedi-apilib.sourceforge.net              }",231],["located at http://SynEdit.SourceForge.net",492],["* The DUnit group at SourceForge <http://dunit.sourceforge.net>",84],["// RegisterFTPListParser can be called correctly at program startup...",79],["|          (Found at URL: http://www.ararat.cz/synapse/)                       |",328],["{ For further information / comments, visit our WEB site at            }",444],["{   http://zeos.firmos.at  (FORUM)                        }",137]],"useCount":9860},{"word":"author","context":[["to the author. Use a nice stamp and mention your name, street",161],["@author(Johannes Berg <johannes@sipsolutions.de>)",57],["@author  Miha-R",72],["The initial author of this file is Michal Domagala.",55],["@author  gabr",938],["///<author>Primoz Gabrijelcic</author>",94],["///<author>Primoz Gabrijelcic</author>",94],["@author  Lee_Nover",96],["@author   (Evaldo)",115],["@author Xavier Martinez (cadetill)",116]],"useCount":2681},{"word":"av__codec","context":[["//  cdecl; external av__codec;",30],["cdecl; external av__codec; overload;",126],["cdecl; external av__codec;",3945],["cdecl; external av__codec; deprecated;",511]],"useCount":4612},{"word":"av__format","context":[["external av__format;",25],["cdecl; external av__format; deprecated;",455],["cdecl; external av__format;",3548]],"useCount":4028},{"word":"available","context":[["*    Non-Carbon CFM:   not available",3490],["*    CarbonLib:        not available",2016],["*    Non-Carbon CFM:   available as macro/inline",947],["*    CarbonLib:        not available in CarbonLib 1.x, is available on Mac OS X version 10.3 and later",197],["*    CarbonLib:        not available in CarbonLib 1.x, is available on Mac OS X version 10.3 and later",197],["*\tNon-Carbon CFM:   not available",205],["*\tCarbonLib:\t\tnot available",205],["*    CarbonLib:        not available in CarbonLib 1.x, is available on Mac OS X version 10.2 and later",259],["*    CarbonLib:        not available in CarbonLib 1.x, is available on Mac OS X version 10.2 and later",259],["*    Mac OS X:         not available",488]],"useCount":11609},{"word":"b","context":[["s.bitb := b;",315],["if b then",368],["<b>History : </b><font size=-1><ul>",521],["<b>History : </b><font size=-1><ul>",521],["b := False;",139],["b: Byte;",178],["b := 0;",226],["b: byte;",236],["b: boolean;",256],["b: Boolean;",264]],"useCount":19172},{"word":"be","context":[["2. Altered source versions must be plainly marked as such, and must not be",327],["{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers.",177],["// Type Library, the contents of this file will be regenerated and all",172],["// manual modifications will be lost.",172],["Follow \"support\" link at http://www.overbyte.be for subscription.",186],["<francois.piette@overbyte.be>",192],["2. Altered source versions must be plainly marked as such, and must not be",327],["a product, an acknowledgment in the product documentation would be",246],["2. Altered source versions must be plainly marked as such, and",217],["in the product documentation would be appreciated but is",217]],"useCount":33362},{"word":"been","context":[["Source Code from Carlo Kok has been used to implement various sections of",51],["* @return 0 if the value has been set, or an AVERROR code in case of",39],["// call prior to any access via the property. These items have been disabled",39],["* Number of frames that have been demuxed during av_find_stream_info()",38],["//   (*) KeyName refers to a key that has been installed in the Crypto Service",69],["{Check that the block has not been modified since being freed}",68],["its primary key has been deleted",60],["key if it has been imported",60],["{Header has been corrupted}",51],["* reordered pos from the last AVPacket that has been input into the decoder",40]],"useCount":3417},{"word":"before","context":[["(* Const before type ignored *)",395],["// programmatically created via a method of the appropriate CoClass before",39],["// under ARC, convert a weak reference to a strong reference before working with it",158],["Note we do *not* do INPUT_SYNC before calling fill_input_buffer,",150],["* - decoding: Set by libavcodec. (before get_buffer() call)).",62],["* translated to Pascal to our bug tracker (please join our IRC chat before",62],["re-read the flags since it could have changed before we could lock the",46],["waiting for read before call this function for avoid deadlock!",40],["{Get the size of the free block just before this one}",46],["CoInitialize must be called before using this function.",38]],"useCount":3704},{"word":"begin","context":[["0: begin",793],["2: begin",807],["1: begin",1142],["if Result then begin",1143],["begin;",1578],["begin",2121223],["end else begin",35621],["else begin",29767],["then begin",8813],["//begin",1657]],"useCount":2310787},{"word":"binary","context":[["* Redistribution and use in source and binary forms, with or without",250],["data_type: Integer;   // best guess about the data type: ascii or binary",27],["{:If string is binary string (contains non-printable characters), then is",24],["{:Dump binary buffer stored in a string to a file with DumpFile filename. All",23],["// Redistribution and use in source and binary forms, with or without",104],["* Redistribution and use in source and binary forms, with or without modification,",29],["///Redistribution and use in source and binary forms, with or without modification,",92],["Redistribution and use in source and binary forms, with or without modification,",287],["| Redistribution and use in source and binary forms, with or without           |",321],["Redistribution and use in source and binary forms, with or without",325]],"useCount":2587},{"word":"bit","context":[["*    Mac OS X:         in version 10.4 and later in Carbon.framework [32-bit only]",131],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.5",156],["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework [32-bit only] but deprecated in 10.5",158],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.5",349],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.4",459],["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework [32-bit only] but deprecated in 10.4",541],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only]",821],["*    Mac OS X:         in version 10.2 and later in Carbon.framework [32-bit only]",138],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.4",100],["*    Mac OS X:         in version 10.5 and later in Carbon.framework [32-bit only]",89]],"useCount":7678},{"word":"bits","context":[["{DUMPBITS(t^.bits);}",50],["b := b shr t^.bits;",50],["bits := bits shr 3;",32],["case bits of",35],["//stop bits",35],["Dec(k, t^.bits);",36],["dwFlags: DWORD;            (* various bits (see DMUS_PMSGF_FLAGS enumeration) *)",52],["* Return codec bits per sample.",53],["* @return Number of bits per sample or zero if unknown for the given codec.",53],["* bits at once and could read over the end.",60]],"useCount":2968},{"word":"block","context":[["{Unlock the block type}",208],["{Set the size and flags for this block}",138],["{Allocate the new block}",109],["{Get the next large block}",111],["{Attempt to grab the block type}",133],["{Step through all the medium block pools}",111],["{Couldn't grab the block type - sleep and try again}",116],["{Free the old block}",114],["{Split the block in two}",109],["{Do we need to lock the block type?}",104]],"useCount":17292},{"word":"blocks","context":[["{Unlock medium blocks}",239],["{Lock the medium blocks}",169],["{Unlock the medium blocks}",143],["{Do we need to lock the medium blocks?}",116],["{Increment the number of used blocks}",46],["{Get the bin in the group with free blocks}",63],["{Step through all the large blocks}",60],["{Get the available size inside blocks of this type.}",46],["since medium blocks that are in use are not allowed to be",46],["{Get the bin number for this block size. Get the bin that holds blocks of at",46]],"useCount":4250},{"word":"boolean","context":[["Saved: boolean;",132],["procedure FormCloseQuery(Sender: TObject; var CanClose: boolean);",131],["function isKnownName(name : String) : boolean; override;",127],["function HasData: boolean; override;",115],["function ParseInput(PressedKey: cardinal; CharCode: UCS4Char; PressedDown: boolean): boolean; override;",159],["function ParseInput(PressedKey: cardinal; CharCode: UCS4Char; PressedDown: boolean): boolean; override;",159],["ok: boolean;",161],["b: boolean;",256],["): boolean;",262],["bo1: boolean;",611]],"useCount":22923},{"word":"break","context":[["#0, #10, #13: break;",125],["break; //repeat",151],["else break;",105],["#13: break;",100],["break",467],["break;",18445],["#10: break;",100],["if FLine[Run + 1] = '.' then break;",85],["break; //while",78],["* for that version as they otherwise most probably will break USDX.",62]],"useCount":20973},{"word":"buf","context":[["buf := @Value.Value;",120],["buf := System.BitConverter.GetBytes(value.Value);",120],["function Append(buf: PSOChar; Size: Integer): Integer; override;",87],["* @param buf buffer",76],["function Append(buf: PSOChar): Integer; override;",66],["buf := System.BitConverter.GetBytes(x);",61],["buf, SizeOf(Value.Value));",136],["buf: TMemory;",178],["buf := @x;",61],["buf: {const} PByteArray;",59]],"useCount":6699},{"word":"buffer","context":[["comando := FormataTX(buffer, 3, 0, 0, 0, 0);",239],["FreeMem(buffer);",138],["buffer := @intVal;",132],["tmpBuffer := buffer;",127],["attributeBuffer := buffer;",115],["buffer, tmpBuffer, attributeBuffer : PByte;",101],["buffer: Pointer;",86],["buffer  := buffer + Chr(13) + Chr(10);",83],["buffer  := buffer + Chr(13) + Chr(10);",83],["* @param size buffer size",76]],"useCount":12035},{"word":"but","context":[["but we must reload the local copies after a successful fill. }",150],["{ of the library, but you are not obligated to do so.     }",137],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.5",156],["CheckEquals(FExpectedString, FActualString, Format('Expected %s but got %s.',",602],["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework [32-bit only] but deprecated in 10.5",158],["in the product documentation would be appreciated but is",217],["appreciated but is not required.",323],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.5",349],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.4",459],["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework [32-bit only] but deprecated in 10.4",541]],"useCount":7673},{"word":"by","context":[["under the MPL, indicate your decision by deleting the provisions above and",493],["* - encoding: Set by user.",3185],["* - decoding: Set by libavcodec.",1024],["* - Changes and updates by the UltraStar Deluxe Team",291],["* - decoding: Read by user.",295],["{ under the MPL, indicate your decision by deleting  the provisions above and  }",338],["// clients wishing to automate the CoClass objects exposed by the",927],["* - encoding: Set by libavcodec.",385],["* - encoding: Set by user",402],["* - decoding: Set by user.",908]],"useCount":32863},{"word":"byte","context":[["cmp byte ptr [ECX + TOpcodeAddress_offset + TOpcodeConst.FKind], ckValue",164],["const AZoom: byte;",406],["case byte of",326],["b: byte;",236],["{$PACKENUM 4}    (* use 4-byte enums *)",201],["{$MINENUMSIZE 4} (* use 4-byte enums *)",201],["mov al, byte ptr HexTable[eax]",136],["{ make a byte available.",150],["const AZoom: byte",175],["cmp byte ptr [R8 + TOpcodeAddress_offset + TOpcodeConst.FKind], ckValue",166]],"useCount":11482},{"word":"bytes","context":[["addopcode(bytes,j);",130],["SmallBlockDownsizeCheckAdder bytes}",46],["{-Encrypt ILen bytes from ptp^ to ctp^ in CTR mode, update OMACs}",48],["{Are there another 16 bytes to move?}",48],["{Are there another 8 bytes to move?}",48],["* the actual read bytes because some optimized bitstream readers read 32 or 64",60],["* @return On error a negative value is returned, otherwise the number of bytes",70],["length : Number of bytes in the buffer",64],["OutBytes = number of bytes in OutBuf   }",70],["InBytes = number of bytes in InBuf",89]],"useCount":6975},{"word":"c","context":[["CheckEquals(True,c.MoveNext());",446],["c: Char;",241],["c: char;",293],["c := 0;",364],["case c of",510],["CheckEquals(False,c.MoveNext());",166],["inc(c);",167],["c := ls.getCursor();",169],["c.Reset();",211],["Inc(c);",203]],"useCount":22121},{"word":"call","context":[["call FastGetMem",147],["call Sleep",150],["call FastFreeMem",120],["call System.Move",116],["a pointer to RPCBrokerV.Results, so the data must be used BEFORE the next broker call! }",108],["call LockMediumBlocks",145],["Modify the generated code to correctly setup and call the methods from the unit",121],["call InsertMediumBlockIntoBin",156],["{: Do not call this directly. It is used internally by @link(TTCPBlockSocket)!",140],["call RemoveMediumFreeBlock",144]],"useCount":6468},{"word":"callback","context":[["callback(sender, veInvalidLength, objpath);",88],["imageAttributes: TGPImageAttributes = nil; callback: DrawImageAbort = nil;",36],["callback,",96],["callback(sender, veRuleMalformated, objpath);",88],["callback(sender, veRuleMalformated, '');",110],["callback(sender, veInvalidDataType, objpath);",154],["if assigned(callback) then",617],["callback(sender, veInvalidRange, objpath);",88],["if Assigned(callback) then",44],["callback: ENUMERATEMETAFILEPROC; callbackData: Pointer;",36]],"useCount":2800},{"word":"called","context":[["<code>insertRow</code> methods are called to Set the database.",39],["//  can be called to make a duplicate.",70],["* @param Sender has called method",71],["// RegisterFTPListParser can be called correctly at program startup...",79],["<code>insertRow</code> methods are called to update the database.",95],["// functions like this one, called so many times",39],["///  <remarks>This method is usually called by compiler-generated code. Its purpose is to create an enumerator",39],["CoInitialize must be called before using this function.",38],["*                  called to free the user supplied buffer).",39],["{$ifdef DEBUG_VTV}Logger.SendError([lcOle],'Ole function called in Linux');{$endif}",216]],"useCount":3131},{"word":"can","context":[["//   (*) In order to create a KeyFile, you can use the sn.exe (Strong Name) utility.",69],["//  can be called to make a duplicate.",70],["* - encoding: Set by user, can be NULL.",76],["cmp ebp, 0\t//this can happen when there are no stack frames",78],["// RegisterFTPListParser can be called correctly at program startup...",79],["{*  Latest version can be downloaded from:                                    *}",95],["@link(LineBuffer) and you can combine this function freely with other",120],["The error recorded in 'err' can be retrieved by calling",138],["* - decoding: Set by libavcodec, user can override.",141],["* New fields can be added to the end with minor version bumps.",170]],"useCount":11289},{"word":"cardinal","context":[["Done: cardinal;",60],["function ParseInput(PressedKey: cardinal; CharCode: UCS4Char; PressedDown: boolean): boolean; override;",159],["nBufSize:                       cardinal",120],["size_t = cardinal;",74],["_nBufSize:        cardinal",60],["group_index: cardinal;",52],["i: cardinal;",47],["cardinal );",47],["x: cardinal;",45],["FileHandleLockID: cardinal): cardinal; cdecl;",40]],"useCount":3093},{"word":"case","context":[["case Integer of",1226],["case Key of",929],["case Index of",874],["case TokenID of",867],["case I of",646],["case FLine[Run] of",568],["case integer of",562],["case c of",510],["case i of",448],["case FLine[Run + 1] of",459]],"useCount":46857},{"word":"cdecl","context":[["cdecl; external sw__scale;",595],["cdecl; external av__format; deprecated;",455],["cdecl; external av__codec; deprecated;",511],["cdecl; external LUA_LIB_NAME;",708],["{$ENDIF}{$IFDEF UNIX} cdecl;",1033],["SetLastError = False, CallingConvention= CallingConvention.cdecl,",1088],["cdecl;",1171],["cdecl; external av__util;",1746],["cdecl; external av__format;",3548],["cdecl; external av__codec;",3945]],"useCount":26191},{"word":"char","context":[["ans: char;",52],["ch : char;",55],["c: char;",293],["c : char;",104],["ch: char;",100],["c:char;",54],["risp:char;",80],["procedure FormKeyPress(Sender: TObject; var Key: char);",77],["then inc (regparse); // Skip extra char ('?')",75],["var ans: char;",63]],"useCount":3698},{"word":"char1","context":[["(unicode : 111; char1 : 111; char2 : 0),",20],["(unicode : 62; char1 : 62; char2 : 0),",20],["(unicode : 13; char1 : 13; char2 : 0),",20],["(unicode : 99; char1 : 99; char2 : 0),",20],["(unicode : 46; char1 : 46; char2 : 0),",20],["(unicode : 30; char1 : 30; char2 : 0),",20],["(unicode : 107; char1 : 107; char2 : 0),",20],["(unicode : 44; char1 : 44; char2 : 0),",20],["(unicode : 32; char1 : 32; char2 : 0),",20],["(unicode : 105; char1 : 105; char2 : 0),",20]],"useCount":2606},{"word":"char2","context":[["(unicode : 70; char1 : 70; char2 : 0),",20],["(unicode : 104; char1 : 104; char2 : 0),",20],["(unicode : 88; char1 : 88; char2 : 0),",20],["(unicode : 83; char1 : 83; char2 : 0),",20],["(unicode : 59; char1 : 59; char2 : 0),",20],["(unicode : 105; char1 : 105; char2 : 0),",20],["(unicode : 100; char1 : 100; char2 : 0),",20],["(unicode : 57; char1 : 57; char2 : 0),",20],["(unicode : 122; char1 : 122; char2 : 0),",20],["(unicode : 60; char1 : 60; char2 : 0),",20]],"useCount":2606},{"word":"check","context":[["///  <param name=\"AValue\">The value to check.</param>",53],["// check the file signature and get its format",40],["{Insert this block back into the bins: Size check not required here,",46],["// check special keys",188],["// check normal keys",180],["// check",55],["{check for programming error}",49],["if l > 0 then  // check is empty ele",60],["///  <param name=\"APredicate\">The predicate to check for each element.</param>",62],["// check input",66]],"useCount":3221},{"word":"cinfo","context":[["ERREXIT(j_common_ptr(cinfo), JERR_NOT_COMPILED);",62],["cinfo^.mem^.alloc_small (j_common_ptr(cinfo), JPOOL_IMAGE,",123],["cinfo^.mem^.alloc_small (j_common_ptr(cinfo), JPOOL_IMAGE,",123],["compptr := cinfo^.cur_comp_info[ci];",64],["ERREXIT1(j_common_ptr(cinfo), JERR_BAD_STATE, cinfo^.global_state);",70],["ERREXIT1(j_common_ptr(cinfo), JERR_BAD_STATE, cinfo^.global_state);",70],["for ci := 0 to pred(cinfo^.comps_in_scan) do",61],["if (not datasrc^.fill_input_buffer(cinfo)) then",150],["compptr := jpeg_component_info_ptr(cinfo^.comp_info);",99],["for ci := 0 to pred(cinfo^.num_components) do",120]],"useCount":2937},{"word":"cint","context":[["stream_index: cint;",81],["priv_data_size: cint;",201],["flags: cint): cint;",77],["flags: cint): cint;",77],["key_frame: cint;",73],["width, height: cint;",70],["debug: cint;",68],["avpkt: PAVPacket): cint;",66],["bit_rate: cint;",64],["flags: cint;",277]],"useCount":18047},{"word":"cint64","context":[["pts: cint64;",53],["start_time: cint64;",100],["duration: cint64;",74],["reordered_opaque: cint64;",73],["pos: cint64;",69],["last_dts: cint64;",62],["convergence_duration: cint64;",62],["pts:          cint64;",61],["dts:          cint64;",61],["max_ts:       cint64;",45]],"useCount":3521},{"word":"class","context":[["// OLE Server Proxy class declaration",321],["TfrmMain = class(TForm)",319],["class",330],["TForm1 = class(TForm)",2022],["TMainForm = class(TForm)",487],["///  <summary>Creates a new instance of this class.</summary>",434],["{/@class}",388],["class function Name: string; override;",373],["class function PreferredMIMEName: string; override;",254],["class constructor Create;",257]],"useCount":22122},{"word":"close","context":[["query.close;",197],["self.close;",71],["db_CtaReceber.close;",58],["close(vgafile);",52],["close(ft);",50],["if active then close;",112],["close(input);",148],["close(output);",151],["close;",1727],["close(f);",375]],"useCount":4537},{"word":"cmp","context":[["cmp ecx, 1                  //Any non-zero digit yet ?",112],["cmp byte ptr [R8 + TOpcodeAddress_offset + TOpcodeConst.FKind], ckValue",166],["if (cmp < 0) then",164],["cmp := 0;",90],["cmp := 1 else",92],["if (cmp = 0) then",99],["cmp byte ptr [ECX + TOpcodeAddress_offset + TOpcodeConst.FKind], ckValue",164],["cmp edx, MinimumMediumBlockSize",143],["cmp dl, 1",120],["cmp := -1;",115]],"useCount":4705},{"word":"code","context":[["@return <code>true</code> if so; <code>false</code> otherwise",440],["* @code",442],["@return <code>true</code> if so; <code>false</code> otherwise",440],["@return <code>true</code> if so; <code>false</code> otherwise",440],["@return the column value; if the value is SQL <code>NULL</code>, the",264],["@return the column value; if the value is SQL <code>NULL</code>, the",264],["of this <code>ResultSet</code> object as",271],["The source code of the BESEN ecmascript engine library and helper tools are",296],["@return <code>true</code> if so; <code>false</code> otherwise",440],["of this <code>ResultSet</code> object as",271]],"useCount":18127},{"word":"codec","context":[["* @param avctx the codec context",255],["* @param[in] codec_id the codec",53],["dwMinHwCodecStretch: DWORD;    // minimum hardware codec stretch factor multiplied by 1000, eg 1000 == 1.0, 1300 == 1.3",46],["dwMaxHwCodecStretch: DWORD;    // maximum hardware codec stretch factor multiplied by 1000, eg 1000 == 1.0, 1300 == 1.3",46],["* Number of packets to buffer for codec probing",42],["* Return codec bits per sample.",53],["* @param avctx     codec context",46],["* if (!codec)",47],["* retrieving a codec.",47],["* @return Number of bits per sample or zero if unknown for the given codec.",53]],"useCount":4541},{"word":"col","context":[["SQL.Add('\"col$colocacion\".FECHA_INTERES,');",124],["SQL.Add('\"col$colocacion\".AMORTIZA_CAPITAL,');",89],["SQL.Add('\"col$colocacion\".VALOR_CUOTA,');",91],["SQL.Add('\"col$colocacion\".AMORTIZA_INTERES,');",93],["SQL.Add('\"col$colocacion\".ID_PERSONA,');",100],["SQL.Add('\"col$colocacion\".FECHA_CAPITAL,');",124],["SQL.Add('\"col$colocacion\".ID_IDENTIFICACION,');",100],["IBSQL3.SQL.Add('from \"col$codigospuc\" where \"col$codigospuc\".ID_CLASIFICACION = :ID_CLASIFICACION and ');",86],["IBSQL3.SQL.Add('\"col$codigospuc\".ID_GARANTIA = :ID_GARANTIA and \"col$codigospuc\".ID_CATEGORIA = :ID_CATEGORIA');",86],["SQL.Add('\"col$colocacion\".ID_COLOCACION,');",120]],"useCount":10846},{"word":"colocacion","context":[["ParamByName('ID_COLOCACION').AsString := colocacion;",118],["SQL.Add('\"col$colocacion\".FECHA_INTERES,');",124],["SQL.Add('\"col$colocacion\".ID_PERSONA,');",100],["SQL.Add('\"col$colocacion\".ID_COLOCACION,');",120],["SQL.Add('\"col$colocacion\".FECHA_CAPITAL,');",124],["SQL.Add('\"col$colocacion\"');",85],["SQL.Add('\"col$colocacion\".AMORTIZA_CAPITAL,');",89],["SQL.Add('\"col$colocacion\".VALOR_CUOTA,');",91],["SQL.Add('\"col$colocacion\".AMORTIZA_INTERES,');",93],["SQL.Add('\"col$colocacion\".ID_IDENTIFICACION,');",100]],"useCount":3705},{"word":"color","context":[["// Map color to palette",43],["//      This is always a 32-bit ARGB color, independent of the source image",56],["// BkColorNum = background color reference, if > -1, replaces the column background color if any",48],["// BkColorNum = background color reference, if > -1, replaces the column background color if any",48],["* Set if the structure specifies a color key or color space which is to be",48],["* Set if the structure specifies a color key or color space which is to be",48],["dwCKeyCaps: DWORD;             // color key capabilities of the surface",46],["// skip maximum color value",46],["var color: TVector4f; var texPoint: TTexPoint);",45],["* @param palette    array with [256] entries, which must match color arrangement (RGB or BGR) of src",40]],"useCount":3615},{"word":"column","context":[["The <code>updateXXX</code> methods are used to update column values in the",98],["{Get first column and enter in loop}",112],["{Move to next column}",126],["@param x the new column value",127],["@return the column value; if the value is SQL <code>NULL</code>, the",264],["// ColNum = column reference, default between left and right margins",72],["@param columnIndex the first column is 1, the second is 2, ...",366],["{column} CLF_VarPlusPlus(column),",55],["{column} CLF_VarPlusPlus(column),",55],["Gets the value of the designated column in the current row",277]],"useCount":2845},{"word":"com","context":[["{ Autor: Adriano Zanini -  zanini@r7.com                                           }",620],["{ \"LICENCA.txt\", junto com esse programa.                                          }",620],["**  E-MAIL................: zanini@r7.com                                         **",620],["partly as freelance: http://www.mars42.com                          |",572],["and partly as employee : http://www.batpro.com                          |",572],["Contact: gilles.doutre@batpro.com                                           |",572],["{ http://www.TeamCoherence.com                                         }",441],["{           http://www.finalbuilder.com                                     }",283],["{           vincent@finalbuilder.com                                        }",242],["//          mcseemagg@yahoo.com",168]],"useCount":11691},{"word":"const","context":[["function  EncodeChar(const Ch: WideChar): AnsiChar; override;",526],["const AIdent: string;",543],["const AZoom: byte;",406],["//const",414],["const AProjection: IProjection;",426],["function  DecodeChar(const P: AnsiChar): WideChar; override;",526],["const AXY: TPoint;",576],["const ALanguageManager: ILanguageManager;",651],["const ACancelNotifier: INotifierOperation;",679],["const",67890]],"useCount":191870},{"word":"constructor","context":[["constructor create(aowner: tcomponent); override;",354],["constructor Create; virtual;",887],["constructor Create; override;",1787],["constructor Create(",2347],["constructor Create(AOwner: TComponent); override;",5003],["constructor Create;",8068],["constructor Create; overload;",684],["constructor Create(AInstance:TObject); overload; override;",477],["constructor create;",478],["constructor Create();",533]],"useCount":33662},{"word":"contains","context":[["This unit contains a skeleton test case class generated by the Test Case Wizard.",121],["///  <returns>A new collection that contains only the pairs that satisfy the relationship.</returns>",60],["//       Provider (CSP) on your machine. KeyFile refers to a file which contains",69],["// EDX contains address of V2",72],["// EAX contains address of V1",72],["+ will be expanded if it contains % signs and soExpandEnvStrings is set",45],["// EAX contains address of V",48],["* contains the total size of the buffer for all channels.",40],["///  <returns>A new collection that contains the elements that were not skipped.</returns>",42],["///  <returns>An Enex collection that contains the values associated with this key.</returns>",44]],"useCount":2720},{"word":"context","context":[["* @param avctx     codec context",46],["* @param s context to free",42],["*           array is composed by only one context, such context can contain",38],["priv_class: {const} PAVClass; ///< AVClass for the private context",50],["{-initialize HMAC context with key}",62],["* Format I/O context.",38],["{-initialize HMAC context with skey}",62],["{-initialize context}",189],["* @param avctx the codec context",255],["{-update context with Msg data}",280]],"useCount":4945},{"word":"continue","context":[["RETURN : TRUE = continue recording, FALSE = stop",31],["continue; // ok to reconsume directly since we are emitting a character",36],["// continue parsing with contents of Parser",39],["continue. If value in Timeout is -1, run is breaked and waiting for read",40],["{ Do da dew and continue! }",44],["{ Do the dew and continue }",51],["continue",95],["if fastkeypressed then goto continue;",98],["continue;",3713],["{                          continue support for Delphi Kylix and FreePascal.   }",26]],"useCount":4734},{"word":"copy","context":[["// copy payload",51],["and to copy and distribute the resulting executable under terms of your choice,",302],["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",52],["tmp := copy(tmp,pos(';',tmp)+1,length(tmp));",62],["to copy and distribute the resulting executable under terms of your choice,",63],["@param Source object to copy content",67],["// copy header",80],["///  <param name=\"AArray\">An array to copy elements from.</param>",94],["use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies",169],["{ modules, and to copy and distribute the resulting       }",154]],"useCount":3599},{"word":"count","context":[["count := 0;",456],["for int1:= 0 to count - 1 do begin",335],["inc(count);",232],["Inc(count);",213],["for i := 0 to count - 1 do",179],["count: Integer): GPSTATUS; stdcall;",170],["count: integer;",151],["count: Integer;",135],["if count > 0 then",131],["for I := 0 to count - 1 do",126]],"useCount":8849},{"word":"crDefault","context":[["screen.cursor := crDefault;",55],["screen.Cursor := crDefault;",58],["Cursor := crDefault;",67],["Screen.Cursor:=crDefault;",117],["Screen.Cursor:= crDefault;",29],["Screen.Cursor := crDefault;",2572],["Cursor:=crDefault;",27],["if Screen.Cursor = crDefault then",24],["//Screen.Cursor := crDefault;",16],["Made changes to cursor dependent on current cursor being crDefault so",12]],"useCount":2977},{"word":"create","context":[["inherited create(aowner);",156],["inherited create;",513],["constructor create;",478],["constructor create(aowner: tcomponent); override;",354],["inherited create();",165],["inherited create(op);",160],["result := TFHIRParameters.create;",120],["SearchForm := TSearchForm.create(nil);",104],["{create the ancestor}",85],["constructor create(aowner:tcomponent);override;",83]],"useCount":6058},{"word":"created","context":[["* \\param[out] item The item to create. This can either be a wrapper created using",41],["Note: If you call this on non-created socket, then socket is created",40],["Note: If you call this on non-created socket, then socket is created",40],["{ This file was automatically created by Lazarus. Do not edit!",209],["{created delimited string to pass to broker}",63],["Instance of this class will be created for each @link(TTCPBlockSocket).",49],["//  ppMesh      The mesh object which will be created",48],["{ The Initial Developer of the Original Code is Petr Vones. Portions created by Petr Vones are     }",48],["@created  (2016.04.19)",45],["@created  (2016.04.20)",42]],"useCount":2655},{"word":"ctx","context":[["hmac_final(ctx, mac);",98],["hmac_updateXL(ctx, data, dlen);",42],["* Convert all the metadata sets from ctx according to the source and",43],["ctx := TRttiContext.Create;",49],["Return := ctx.ToJson(v, index);",63],["if ctx = nil then",66],["ctx := TSuperRttiContext.Create;",76],["with ctx do begin",148],["ctx.Free;",91],["{-Clears ctx fields bLen and Flag, encrypt IV}",40]],"useCount":3861},{"word":"current","context":[["TokRec^.current := nil;",110],["TokRec^.current := TokRec^.parent.AsObject.GetO(tok.pb.Fbuf);",110],["current row or the insert row.  The <code>updateXXX</code> methods do not",97],["sm(TokRec^.gparent, TokRec^.obj, TokRec^.current);",88],["TokRec^.current := TSuperObject.Create(stArray);",88],["TokRec^.current := TSuperObject.Create(stObject);",88],["Gets the value of the designated column in the current row",277],["if (TokRec^.current = nil) and (foCreatePath in options) then",110],["TokRec^.current := TokRec^.parent.AsArray.GetO(TokRec^.parent.AsArray.FLength - 1);",66],["TokRec^.parent.AsArray.Add(TokRec^.current);",66]],"useCount":5675},{"word":"d","context":[["d := 0;",103],["d: TSynaOption;",241],["DelayedOption(d);",221],["d := TSynaOption.Create;",221],["inc(d);",158],["CodeSite.SendFmtMsg('MaxWidth = [%d]',[MaxWidth]);",92],["CodeSite.SendFmtMsg('IMgr.LfEdge    = [%d]',[ IMgr.LfEdge ] );",92],["CodeSite.SendFmtMsg('Curs     = [%d]',[Curs]);",92],["CodeSite.SendFmtMsg('IMgr.Width     = [%d]',[ IMgr.Width ] );",92],["CodeSite.SendFmtMsg('IMgr.ClipWidth = [%d]',[ IMgr.ClipWidth ] );",92]],"useCount":9528},{"word":"data","context":[["a pointer to RPCBrokerV.Results, so the data must be used BEFORE the next broker call! }",108],["data: Pointer;",133],["// The types declared in this file were generated from data read from a",172],["{Move the data across}",218],["{-update context with Msg data}",280],["if data <> nil then",96],["In: InBuf = ptr to compressed data",89],["// prefetch data...",80],["uReportInstruction := #13#10 + 'Retrieving data...';",73],["{-end data input, calculate HMAC digest}",72]],"useCount":20326},{"word":"de","context":[["Rue de Grady 24, 4053 Embourg, Belgium.",99],["Rue de Grady 24, 4053 Embourg, Belgium. Fax: +32-4-365.74.56",104],["GARANTIA; sem mesmo a garantia implicita de COMERCIALIZACAO ou de",168],["{ É um poderoso gerador de relatórios disponível como um pacote de componentes }",95],["{ NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU      }",95],["GARANTIA; sem mesmo a garantia implicita de COMERCIALIZACAO ou de",168],["Este programa e distribuido na expectativa de ser util, mas SEM QUALQUER",168],["MessageDlg('Error al Obtener valor de Corto Plazo',mtError,[mbcancel],0);",215],["//Gestion du cycle de vie",339],["{ GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou          }",620]],"useCount":7145},{"word":"dec","context":[["dec( WorkY );",162],["dec(n);",130],["dec(count);",125],["dec(Count);",124],["dec(i);",464],["dec(j);",232],["dec ecx",195],["dec( WorkX );",162],["dec   ecx",121],["dec(int1);",99]],"useCount":6842},{"word":"declarations","context":[["{ Published declarations }",391],["{ Protected declarations }",564],["{ private declarations }",1543],["{ public declarations }",1584],["{ Public declarations }",9806],["{ Private declarations }",9957],["// Private declarations",56],["{ protected declarations }",55],["// Public declarations",94],["{ Forward declarations }",47]],"useCount":24346},{"word":"decoding","context":[["* - decoding: unused.",105],["* - decoding: Set by libavcodec.",1024],["* - decoding: Set by libavcodec, user can override.",141],["* - decoding: set by libavcodec.",75],["* - decoding: set by libavcodec. *)",78],["* - decoding: set by libavcodec, read by user.",104],["* - decoding: Set by libavcodec",284],["* - decoding: unused",2824],["* - decoding: Read by user.",295],["* - decoding: Set by user.",908]],"useCount":8444},{"word":"default","context":[["{$IFNDEF BUGGY_DEFAULT_INDEXED_PROP} default; {$ENDIF ~BUGGY_DEFAULT_INDEXED_PROP}",88],["// ColNum = column reference, default between left and right margins",72],["default True;",75],["default;",72],["property ParentColor default False;",79],["///  <remarks>The default rule set is requested.</remarks>",91],["(* default: false *)",98],["property TabStop default True;",111],["///  <remarks>The default type object is requested.</remarks>",118],["default False;",173]],"useCount":8815},{"word":"define","context":[["{ was #define dname def_expr }",65],["{ will require compiler define when/if other Apple devices with ARM cpus ship }",457],["// define tag",51],["{$define ClearLargeBlocksBeforeReturningToOS}",48],["// create a new section and define the margins",42],["{$define DEBUG_PERFORMANCE}",42],["{$define PurePascal}",40],["{$define Delphi4or5}",66],["* to define it.",76],["//old Delphi does not have MSWINDOWS define.",77]],"useCount":3015},{"word":"defined","context":[["{$ifc not defined USE_CFSTR_CONSTANT_MACROS}",457],["{$ifc defined cpu64}",457],["{$ifc not defined __x86_64__ and defined CPUX86_64}",457],["{$ifc defined FPC_BIG_ENDIAN}",457],["{$ifc defined(iphonesim)}",457],["{$ifc not defined __x86_64__ and defined CPUX86_64}",457],["{$ifc not defined __i386__ and defined CPUI386}",457],["{$elifc defined __x86_64__ and __x86_64__}",457],["{$ifc not defined __i386__ and defined CPUI386}",457],["{$ifc not defined MACOSALLINCLUDE or not MACOSALLINCLUDE}",904]],"useCount":17988},{"word":"deprecated","context":[["cdecl; external av__format; deprecated;",455],["*    Mac OS X:         in version 10.0 and later in QuickTime.framework but deprecated in 10.5",113],["cdecl; external av__util; deprecated;",154],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.5",156],["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework [32-bit only] but deprecated in 10.5",158],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.5",349],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.4",459],["cdecl; external av__codec; deprecated;",511],["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework [32-bit only] but deprecated in 10.4",541],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.4",100]],"useCount":4812},{"word":"dest","context":[["procedure _memcpy(dest, source: Pointer; count: Integer); cdecl;",53],["FZip.ZipFileName := dest;",366],["// helper registers for the mt1, mt2 and dest pointers",140],["SetZipFile(FZip, dest, 'Simple1.zip');",102],["if FileExists(dest) then",96],["SetZipFile(FZip, dest, 'Tst_Cpy_1.zip');",90],["dst := dest;",238],["Move(source^, dest^, count);",66],["DeleteFile(dest);",55],["mov ecx, dest;",52]],"useCount":3401},{"word":"destructor","context":[["destructor Destroy; override;",21409],["destructor  Destroy; override;",2134],["destructor destroy; override;",819],["destructor Destroy(); override;",705],["destructor Destroy;override;",432],["destructor Destroy;",263],["destructor Destroy; Override;",260],["destructor Destroy;  override;",254],["class destructor Destroy;",193],["destructor destroy;override;",95]],"useCount":28625},{"word":"dfm","context":[["{$R *.dfm}",9449]],"useCount":9449},{"word":"dispid","context":[["property Application: Application readonly dispid 1;",210],["property baseName: WideString readonly dispid 34;",156],["property nextSibling: IXMLDOMNode readonly dispid 11;",156],["property parsed: WordBool readonly dispid 31;",156],["property nodeName: WideString readonly dispid 2;",156],["property parentNode: IXMLDOMNode readonly dispid 6;",156],["property _NewEnum: IUnknown readonly dispid -4;",175],["property UserData: Integer dispid 3;",202],["property Parent: _IVSQLDMOStdObject readonly dispid 2;",202],["property TypeOf: SQLDMO_OBJECT_TYPE readonly dispid 4;",202]],"useCount":11321},{"word":"distribution","context":[["* file distributed with this source distribution.",563],["documentation and/or other materials provided with the distribution.",207],["*       documentation and/or other materials provided with the distribution.",230],["distribution.",275],["| and/or other materials provided with the distribution.                       |",321],["| History: see HISTORY.HTM from distribution package                           |",322],["See the file COPYING.MSE, included in this distribution,",329],["See the file COPYING.FPC, included in this distribution,",372],["and/or other materials provided with the distribution.",384],["See the file COPYING.modifiedLGPL, included in this distribution,",427]],"useCount":3902},{"word":"div","context":[["CompPos := (HiPos + LoPos) div 2;",228],["TimeV.tv_sec := Timeout div 1000;",96],["X := (ARect.Left + ARect.Right - FWidth) div 2;",60],["Y := (ARect.Top + ARect.Bottom - FHeight) div 2;",60],["X := (BR.Left + BR.Right) div 2;",58],["X := (Left + Right) div 2;",53],["Y := (R.Top + R.Bottom) div 2;",51],["LBinGroupNumber := LBinNumber div 32;",51],["Y := (Top + Bottom - StockImgList.Height) div 2;",49],["X := (R.Left + R.Right) div 2;",47]],"useCount":7354},{"word":"dm","context":[["dm.sqlsisAdimin.Rollback(TD); //on failure, undo the changes}",281],["dm.cds_parametro.Close;",649],["dm.sqlsisAdimin.StartTransaction(TD);",519],["dm.c_6_genid.Close;",507],["dm.sqlsisAdimin.Commit(TD);",495],["dm.cds_parametro.Open;",460],["dm.c_6_genid.Open;",260],["if dm.c_6_genid.Active then",247],["dm.ExecSQL(",203],["dm.sqlsisAdimin.ExecuteDirect(strSql);",154]],"useCount":9983},{"word":"do","context":[["on E: Exception do",2552],["for I := 0 to Count - 1 do",1675],["while True do",1452],["while not Eof do",807],["do",1298],["for i := 0 to Count - 1 do",1241],["with Handle do",1083],["while It.HasNext do",988],["with TRegExpr.Create do",843],["with Canvas do",807]],"useCount":179036},{"word":"does","context":[["//old Delphi does not have MSWINDOWS define.",77],["//       (2) If the KeyName does not exist and the KeyFile does exist, the key",69],["//       (2) If the KeyName does not exist and the KeyFile does exist, the key",69],["*       we do not waste time getting stuff the user does not need.",64],["raise Exception.Create('TOmniValue does not contain an array');",63],["* in many cases it does not. The USDX team does NOT PROVIDE ANY SUPPORT",62],["* in many cases it does not. The USDX team does NOT PROVIDE ANY SUPPORT",62],["* This field has no meaning if the packet does not have AV_PKT_FLAG_KEY",60],["// Storing interface reference as a pointer does not update reference",55],["* available, to avpkt. The output packet does not necessarily contain data for",45]],"useCount":2815},{"word":"done","context":[["until done;",118],["raise Exception.Create('not done yet');",69],["if not done then",73],["done:",75],["done: boolean;",106],["goto done;",113],["done:=true;",121],["done := false;",123],["done := true;",132],["done:=false;",135]],"useCount":3419},{"word":"double","context":[["function  Filter(x: double): double; override;",45],["function SetVariable(const Name: string; var value: double): boolean; override;",47],["function GetVariable(const Name: string; var value: double): boolean; override;",47],["TBESENObjectDate(TBESENObject(ThisArgument.Obj)).Value:=double(pointer(@BESENDoubleNaN)^);",48],["X: double;",49],["result:=double(pointer(@BESENDoubleNaN)^);",51],["ResultValue:=BESENNumberValue(double(pointer(@BESENDoubleNaN)^));",60],["d: double;",86],["8: writeln('(double)');",106],["function  MaxSupport: double; override;",45]],"useCount":3151},{"word":"downto","context":[["for j := uSelectedItems.Count - 1 downto 0 do",48],["for i := (h*w-1) downto 0 do",48],["for Index := ANode.ChildrenCount - 1 downto 0 do",52],["for Index := FCursor.ChildrenCount - 1 downto 0 do",52],["for n := FDelayedOptions.Count - 1 downto 0 do",60],["for i := Count-1 downto 0 do",65],["for I := Count-1 downto 0 do",74],["for i := Count - 1 downto 0 do",115],["for I := FSize - 1 downto 0 do",156],["for I := Count - 1 downto 0 do",339]],"useCount":2956},{"word":"dwFlags","context":[["dwFlags: DWORD; lpDDOverlayFx: PDDOverlayFX): HResult; stdcall;",50],["function GetBltStatus(dwFlags: DWORD): HResult; stdcall;",50],["function UpdateOverlayDisplay(dwFlags: DWORD): HResult; stdcall;",50],["dwFlags: DWORD;            (* various bits (see DMUS_PMSGF_FLAGS enumeration) *)",52],["dwFlags :DWORD):BOOL ; stdcall;",63],["dwFlags     :DWORD;",84],["dwFlags: DWORD): BOOL; stdcall;",88],["dwFlags: DWORD): HResult; stdcall;",155],["dwFlags :DWORD;",269],["dwFlags: DWORD;",497]],"useCount":3380},{"word":"dword","context":[["mov dword ptr CodeBegin,offset @CodeBegin",253],["or edx,dword ptr [edi+TBESENValue.Num]",64],["Add(#$8d#$97); // lea edx,dword ptr [edi+RegisterOfs]",68],["Add(#$41#$89#$86); // mov dword ptr [r14+RegisterOfs+TBESENValue.Bool],eax",76],["Add(#$89#$87); // mov dword ptr [edi+RegisterOfs+TBESENValue.Bool],eax",76],["x: dword;",77],["Add(#$41#$c7#$86); // mov dword ptr [r14+RegisterOfs+TBESENValue.ValueType],bvtBOOLEAN",84],["Add(#$c7#$87); // mov dword ptr [edi+RegisterOfs+TBESENValue.ValueType],bvtBOOLEAN",84],["{Store the size of the second split as the second last dword}",90],["mov dword ptr CodeEnd,offset @CodeEnd",253]],"useCount":3630},{"word":"e","context":[["on e: Exception do FbException.catchException(status, e);",213],["//on e: Exception do FbException.catchException(status, e);",213],["//on e: Exception do FbException.catchException(status, e);",213],["e: TEditor;",246],["on e: Exception do FbException.catchException(nil, e);",297],["//on e: Exception do FbException.catchException(nil, e);",297],["//on e: Exception do FbException.catchException(nil, e);",297],["on e: Exception do FbException.catchException(nil, e);",297],["on e: exception do",310],["on e: Exception do",531]],"useCount":16775},{"word":"each","context":[["// write page number and total of pages on each page",45],["provided that you also meet, for each linked independent module, the terms",365],["// (NOTE: Here we map each CoClass to its Default Interface)",158],["{ you also meet, for each linked independent module,      }",154],["end; //for each voxel",71],["///  <param name=\"APredicate\">The predicate to check for each element.</param>",62],["Instance of this class will be created for each @link(TTCPBlockSocket).",49],["* For planar audio, each channel has a separate data pointer, and",40],["* linesize[0] contains the size of each channel buffer.",40],["* Maximum amount of memory in bytes to use for the index of each stream.",38]],"useCount":3742},{"word":"eax","context":[["test eax, eax",208],["mov eax, $100",208],["mov eax, esi",238],["pop eax",243],["mov eax, edx",274],["push eax",316],["sbb eax,eax",320],["sbb eax,eax",320],["xor eax, eax",450],["xor eax, eax",450]],"useCount":18625},{"word":"ebp","context":[["//mov ebp, esp",141],["pop ebp",739],["push [ebp+8]",372],["push [ebp+12]",315],["push [ebp+16]",199],["//push ebp",141],["mov esp, ebp",106],["push [ebp+20]",105],["cmp ebp, 0\t//this can happen when there are no stack frames",78],["mov ebp, eax",68]],"useCount":3282},{"word":"ebx","context":[["push    ebx",116],["asm inc ebx",117],["lock cmpxchg TSmallBlockType([ebx]).BlockTypeLocked, ah",102],["mov TSmallBlockType[ebx].BlockTypeLocked, False",85],["pop ebx;",80],["push  ebx",144],["pop     ebx",156],["pop   ebx",164],["push ebx",333],["pop ebx",755]],"useCount":6273},{"word":"ecx","context":[["mul ecx",250],["add eax, ecx",130],["dec ecx",195],["mov ecx, edx",186],["or ecx, eax                 //Accumulate next digit",112],["cmp ecx, 1                  //Any non-zero digit yet ?",112],["mov eax, ecx",113],["dec   ecx",121],["push ecx",291],["pop ecx",330]],"useCount":12734},{"word":"edi","context":[["sbb edi, -1",119],["mov [edi], al               //Store digit out to memory",126],["sbb edi, -1                 //Yes->increment ptr, No->keep old ptr",126],["pop   edi",135],["mov [edi], al",144],["push edi",257],["pop edi",359],["push  edi",114],["Add(#$dd#$87); // fld qword ptr [edi+RegisterOfs+TBESENValue.Num]",92],["Add(#$c7#$87); // mov dword ptr [edi+RegisterOfs+TBESENValue.ValueType],bvtBOOLEAN",84]],"useCount":5787},{"word":"edx","context":[["movzx edx, dl",309],["mov eax, edx",274],["pop edx",255],["push edx",252],["lea edx, [edx + OPCODE]",198],["lea edx, [edx + OPCODE]",198],["mov ecx, edx",186],["sub eax, edx",184],["add eax, edx",178],["cmp edx, MinimumMediumBlockSize",143]],"useCount":13278},{"word":"element","context":[["///  <summary>Returns the biggest element.</summary>",39],["{ Select the first element as comparison base }",70],["///  <param name=\"APredicate\">The predicate to check for each element.</param>",62],["///  <param name=\"AIndex\">The index from which to return the element.</param>",56],["///  <summary>Returns the element at a given position.</summary>",56],["case element of",47],["///  <returns>The element at the specified position.</returns>",39],["///  <summary>Returns the smallest element.</summary>",39],["* @param[in] obj A pointer to a struct whose first element is a",39],["///  <summary>Returns the last element.</summary>",36]],"useCount":2682},{"word":"else","context":[["else begin",29767],["else inherited;",351],["end else",29362],["{$else}",13159],["{$else .CPUX64}",855],["else Result := 0;",529],["else Result := nil;",380],["else Result := '';",363],["else",277148],["end else begin",35621]],"useCount":420495},{"word":"elsec","context":[["{$elsec}",4764]],"useCount":4764},{"word":"empty","context":[["//I think the DECLARE_STACK_OF macro is empty",139],["{Flag this bin as empty}",121],["{Flag the group as empty}",58],["if l > 0 then  // check is empty ele",60],["{Flag this group as empty}",63],["{Is this bin now empty?}",75],["{Is this bin now empty? If the previous and next free block pointers are",75],["{Was this bin empty?}",75],["///  <exception cref=\"Collections.Base|ECollectionEmptyException\">The collection is empty.</exception>",94],["*** empty log message ***",352]],"useCount":3377},{"word":"encoding","context":[["* - encoding: Set by libavcodec. for coded_picture (and set by user for input).",68],["* - encoding: set by",68],["* - encoding: Set by user, can be NULL.",76],["* - encoding: Set by user via AVOptions (NO direct access)",124],["* - encoding: MUST be set by user.",125],["* - encoding: set by user.",151],["* - encoding: Set by libavcodec.",385],["* - encoding: Set by user",402],["* - encoding: unused",1870],["* - encoding: Set by user.",3185]],"useCount":8557},{"word":"end","context":[["end",167003],["end;",2643087],["//  end;",1028],["//end;",2064],["end);",2093],["end;}",2129],["end ;",3369],["end else",29362],["end else begin",35621],["end.",60233]],"useCount":2988470},{"word":"endc","context":[["{$endc} {not TARGET_OS_IPHONE}",12],["{$endc} {!TARGET_OS_IPHONE && !TARGET_IPHONE_SIMULATOR}",14],["{$endc} { TARGET_OS_MAC }",17],["{$endc}  { !OTKERNEL }",17],["{$endc} {TARGET_CPU_64}",22],["{$endc} { GL_GLEXT_FUNCTION_POINTERS }",102],["{$endc} {TARGET_OS_MAC}",314],["{$endc} {not TARGET_CPU_64}",453],["{$endc} {not MACOSALLINCLUDE}",907],["{$endc}",7402]],"useCount":9260},{"word":"endif","context":[["{$ifdef mswindows}{$apptype gui}{$endif}",114],["{$endif x86_64}",149],["end; { endif }",159],["{$ifdef DEBUG_VTV}Logger.SendCallStack([lcOle],'Stack');{$endif}",216],["{$ifdef DEBUG_VTV}Logger.SendError([lcOle],'Ole function called in Linux');{$endif}",216],["#endif",323],["{$ifdef UseInline} inline; {$endif}",528],["{$ifdef DLL} stdcall; {$endif}",902],["{$ifdef FPC}{$mode objfpc}{$h+}{$endif}",1131],["{$endif}",38303]],"useCount":47440},{"word":"err","context":[["if err <> SIDEX_SUCCESS then",186],["FLastError := err;",242],["if err<>0 then begin",96],["err := UNZ_ERRNO;",109],["The error recorded in 'err' can be retrieved by calling",138],["goto err;",138],["err (IN/OUT) - error handle. If there is an error, it is",140],["if err <> TML_SUCCESS then",142],["recorded in 'err' and this function returns OCI_ERROR.",147],["err: integer;",196]],"useCount":5201},{"word":"error","context":[["* @return 0 if OK, AVERROR_xxx on error",118],["The error recorded in 'err' can be retrieved by calling",138],["err (IN/OUT) - error handle. If there is an error, it is",140],["err (IN/OUT) - error handle. If there is an error, it is",140],["{$error Conflicting initial definitions for FPC_BIG_ENDIAN and FPC_LITTLE_ENDIAN}",457],["{$error Neither FPC_BIG_ENDIAN nor FPC_LITTLE_ENDIAN are defined.}",457],["{$error Conflicting definitions for __ppc__ and __i386__}",457],["{$error Conflicting initial definitions for CPUPOWERPC and CPUI386}",457],["{$error __ppc__ nor __ppc64__ nor __i386__ nor __x86_64__ nor __arm__ is defined.}",457],["goto error;",957]],"useCount":13324},{"word":"esi","context":[["push  esi",82],["push esi",258],["pop esi;",61],["inc   esi",64],["push esi;",65],["pop     esi",66],["mov esi, eax",67],["pop esi",462],["pop   esi",97],["mov eax, esi",238]],"useCount":4537},{"word":"except","context":[["These should now compile except for Socks server.  IPVersion has to be a",41],["not use or distribute this file except in compliance with the",43],["except on EConvertError do",58],["except on Exception do",59],["except;",66],["except on exception do",76],["except on E: Exception do",255],["except end;",314],["//except",530],["except",36816]],"useCount":39304},{"word":"exception","context":[["on e: exception do",310],["///  <exception cref=\"DeHL.Exceptions|ENilArgumentException\"><paramref name=\"AType\"/> is <c>nil</c>.</exception>",111],["on e:exception do begin",113],["///  <exception cref=\"SysUtils|EArgumentNilException\"><paramref name=\"ACollection\"/> is <c>nil</c>.</exception>",116],["///  <exception cref=\"SysUtils|EArgumentNilException\"><paramref name=\"ACollection\"/> is <c>nil</c>.</exception>",116],["// @exception ESAXException Any SAX exception.",125],["// @exception ESAXException Any SAX exception.",125],["{ If you do not wish to do so, delete this exception      }",137],["on e:exception do",153],["are not obligated to do so. If you do not wish to do so, delete this exception",297]],"useCount":6725},{"word":"exit","context":[["exit;",46986],["exit",1133],["exit(false);",374],["exit(true);",255],["exit(False);",233],["exit(HAL_OK);",222],["exit ;",210],["exit(True);",194],["else exit;",193],["if not mainform.UserAccessGranted(1) then exit;",189]],"useCount":58399},{"word":"external","context":[["cdecl; external av__format;",3548],["cdecl; external av__codec;",3945],["cdecl; external av__util;",1746],["cdecl; external LUA_LIB_NAME;",708],["external GdiPlusDll;",596],["cdecl; external sw__scale;",595],["cdecl; external av__codec; deprecated;",511],["cdecl; external av__format; deprecated;",455],["cdecl; external '';",387],["): NTSTATUS; stdcall; {$IFNDEF RTDL}external ntdll;{$ENDIF}",365]],"useCount":20269},{"word":"f","context":[["f: TRttiField;",111],["closefile(f);",141],["Rewrite(f);",144],["f: TextFile;",148],["Reset(f);",158],["rewrite(f);",189],["f.Free;",217],["reset(f);",287],["close(f);",375],["CloseFile(f);",452]],"useCount":10911},{"word":"fIdentFuncTable","context":[["for I := Low(fIdentFuncTable) to High(fIdentFuncTable) do begin",66],["pF := PIdentFuncTableFunc(@fIdentFuncTable);",99],["for I := Low(fIdentFuncTable) to High(fIdentFuncTable) do begin",66],["for i := Low(fIdentFuncTable) to High(fIdentFuncTable) do",60],["for i := Low(fIdentFuncTable) to High(fIdentFuncTable) do",60],["fIdentFuncTable[57] := Func57;",55],["fIdentFuncTable[52] := Func52;",52],["fIdentFuncTable[69] := Func69;",49],["fIdentFuncTable[62] := Func62;",48],["fIdentFuncTable[59] := Func59;",48]],"useCount":4987},{"word":"fLine","context":[["if fLine[Run] = #10 then",72],["case fLine[Run] of",439],["until fLine[Run] in [#0, #10, #13];",214],["fProcTable[fLine[Run]];",187],["fTokenID := IdentKind((fLine + Run));",162],["fLine: PChar;",156],["fLine := PChar(NewValue);",153],["while Identifiers[fLine[Run]] do inc(Run);",83],["if not (fLine[Run] in [#0, #10, #13]) then",73],["if fLine[Run + 1] = '/' then",69]],"useCount":2760},{"word":"fTokenID","context":[["Result := fTokenID = tkNull;",103],["fTokenID := tkSymbol;",1758],["fTokenID := tkSpace;",659],["fTokenID := tkComment;",539],["fTokenID := tkString;",376],["fTokenID := tkNull;",219],["fTokenID := tkNumber;",215],["fTokenID := IdentKind((fLine + Run));",162],["case fTokenID of",130],["fTokenID := tkUnknown;",347]],"useCount":5318},{"word":"false","context":[["assert (false)",346],["exit(false);",374],["@return <code>true</code> if so; <code>false</code> otherwise",440],["result := false",474],["until false;",888],["Result:=false;",1139],["result:=false;",2288],["result := false;",3436],["result:= false;",1081],["Result := false;",5673]],"useCount":40569},{"word":"field","context":[["/// A body text field.",70],["* The purpose of this field is to allow seeking in streams that have no",63],["* @param[in] avc a pointer to an arbitrary struct of which the first field is",62],["* This field has no meaning if the packet does not have AV_PKT_FLAG_KEY",60],["* This field is internal to libavformat and access from outside is not allowed.",58],["/// A text field displayed in a column and row.",54],["* @deprecated this field is unused",54],["(* this field should always be 0. *)",52],["* @param avcl A pointer to an arbitrary struct of which the first field is a",116],["* Code outside libavcodec should access this field using:",250]],"useCount":4003},{"word":"fields","context":[["* Removal, reordering and changes to existing fields require a major",177],["* New fields can be added to the end with minor version bumps.",170],["* New public fields should be added right above.",169],["* No fields below this line are part of the public API. They",88],["* All fields below this line are not part of the public API. They",81],["{clear fields(properties) of class}",56],["{ sets fields to pieces passed from server:  TYP ^ Code ^ Category ^ Narrative ^ Qty ^ Prov }",42],["{-Clears ctx fields bLen and Flag, encrypt IV}",40],["// fields",38],["// check to see if interaction necessary to get required fields",38]],"useCount":3344},{"word":"file","context":[["This file is part of the Indy (Internet Direct) project, and is offered",1100],["See the file COPYING.modifiedLGPL, included in this distribution,",427],["See the file COPYING.FPC, included in this distribution,",372],["Contributors.txt file.",350],["{ If you wish to allow use of your version of this file only under the terms   }",338],["See the file COPYING.MSE, included in this distribution,",329],["(see the file copying.txt) with the following modification:",296],["* along with this program; see the file COPYING. If not, write to",563],["* file distributed with this source distribution.",563],["If you wish to allow use of your version of this file only under the terms",576]],"useCount":18570},{"word":"finalization","context":[["finalization",4080],["{Called in FastMM4BCB.cpp, should contain codes of original \"finalization\" section}",15],["// The bitmap is deleted in the finalization section of the unit.",11]],"useCount":4106},{"word":"finally","context":[["finally CloseKey; end;",80],["//  finally",68],["finally r.Free;",63],["//finally",62],["finally oteInternalLock.Release; end;",55],["{prepare for the try..finally}",54],["finally {TRegistry.}Free; end;",48],["try // finally",120],["finally Unlock; end;",194],["finally",94233]],"useCount":96415},{"word":"first","context":[["{ Select the first element as comparison base }",70],["// Draw the first frame palette",72],["* @param b first rational",72],["{Remove the first block from the linked list (LIFO)}",75],["Remove the indexth item. The first item is index 0.",86],["first;",99],["first := True;",103],["{Get first column and enter in loop}",112],["* @param avcl A pointer to an arbitrary struct of which the first field is a",116],["@param columnIndex the first column is 1, the second is 2, ...",366]],"useCount":7454},{"word":"flag","context":[["flag: Boolean;",32],["flag := false;",35],["(unicode : 65535; flag : umf_unused; reserved: 0),",148],["if flag then",66],["lChannel: Integer;            \t// BASS_BFX_CHANxxx flag/s",50],["{The next block is in use: flag its previous block as free}",46],["flag := true;",41],["* similarly, '-' unsets a flag.",39],["* This flag is reserved to the very rare category of codecs which have a",37],["* scalars or named flags separated by '+' or '-'. Prefixing a flag",39]],"useCount":5855},{"word":"flags","context":[["flags: Integer;",58],["flags: DWORD;",69],["{Drop the flags}",57],["flags: cint;",277],["{Set the size and flags for this block}",138],["flags : integer;",129],["{Store the size of the block as well as the flags}",91],["flags: cint): cint;",77],["//      D3DX_FILTER flags controlling how the image is filtered.",56],["flagp := flagp or flags and SPSTART;",52]],"useCount":7234},{"word":"following","context":[["(see the file copying.txt) with the following modification:",296],["//       following processing occurs:",69],["is furnished to do so, subject to the following conditions:",77],["{Mark this block as used in the block following it}",92],["furnished to do so, subject to the following conditions:",93],["{ with the following  modification:                       }",137],["so, subject to the following conditions:",169],["Bugs?:      For bug reports, consult the following page on",199],["and redistribute it freely, subject to the following",211],["freely, subject to the following restrictions:",336]],"useCount":3266},{"word":"for","context":[["{$error Conflicting initial definitions for FPC_BIG_ENDIAN and FPC_LITTLE_ENDIAN}",457],["{$error Conflicting definitions for __ppc__ and __i386__}",457],["for i:=1 to n do",462],["for Index := 0 to FSize - 1 do",492],["for J := 0 to ColsCount - 1 do",540],["for I := 0 to RowsCount - 1 do",540],["for I := 0 to Bucket.Size - 1 do",567],["for I := 0 to FCapacity - 1 do",682],["for i := 0 to Count - 1 do",1241],["for I := 0 to Count - 1 do",1675]],"useCount":129650},{"word":"format","context":[["* Find the best pixel format to convert to given a certain source pixel",50],["* @return The best pixel format to convert to or -1 if none was found.",50],["format: cint;",64],["* @param[in] has_alpha Whether the source pixel format alpha channel is used.",73],["* if f is non-NULL, returns the next registered input format after f",74],["* Descriptive name for the format, meant to be more human-readable",76],["* Guess the file format.",81],["//      format.  Alpha is significant, and should usually be set to FF for",56],["(* if year is 0 then date is in day-of-week format, otherwise",56],["* @param[in] src_pix_fmt source pixel format",60]],"useCount":7401},{"word":"found","context":[["found:=false;",100],["found: Boolean;",89],["found: boolean;",108],["if not found then",110],["found := false;",156],["found := False;",89],["found := true;",126],["if found then",125],["found:=true;",123],["// found",112]],"useCount":5461},{"word":"frame","context":[["frame: {const} PAVFrame; got_packet_ptr: Pcint): cint;",43],["* presentation timestamp in time_base units (time when frame should be shown to user)",42],["* @param stream the stream which the frame is part of",42],["* Tell user application that palette has changed from previous frame.",43],["* of which frame timestamps are represented. For fixed-fps content,",43],["* frame mode.",64],["// Draw the first frame palette",72],["* decoders would then just decode the first frame. In this case,",44],["GameObjects[i].frame := 0;",45],["* the very first frame or from this keyframe.",63]],"useCount":7146},{"word":"framework","context":[["*    Mac OS X:         in version 10.0 and later in QuickTime.framework",1970],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only]",821],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework",652],["*    Mac OS X:         in version 10.0 and later in Carbon.framework",609],["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework [32-bit only] but deprecated in 10.4",541],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.4",459],["*    Mac OS X:         in version 10.4 and later in vecLib.framework",256],["*    Mac OS X:         in version 10.4 (or QuickTime 7.0) and later in QuickTime.framework",287],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.5",349],["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework",446]],"useCount":9801},{"word":"free","context":[["des.free;",64],["free;",1323],["result.free;",499],["p.free;",108],["mdTmpIds.FieldByName('free').AsInteger := 0;",82],["* Hedgewars, a free turn based strategy game",79],["{Is this bin now empty? If the previous and next free block pointers are",75],["{Get the bin in the group with free blocks}",63],["stream1.free;",61],["reg.free;",59]],"useCount":8876},{"word":"from","context":[["{ from or based on this library. If you modify this       }",137],["IBSQL3.SQL.Add('from \"con$puc\"');",174],["IBSQL3.SQL.Add('select NOMBRE from \"con$puc\" where CODIGO = :CODIGO');",192],["which is not derived from or based on this library. If you modify this",297],["// The types declared in this file were generated from data read from a",172],["// The types declared in this file were generated from data read from a",172],["| History: see HISTORY.HTM from distribution package                           |",322],["statement from your version.",299],["catalog; null means drop catalog name from the selection criteria",150],["{ statement from your version.                            }",137]],"useCount":19429},{"word":"function","context":[["function  EncodeChar(const Ch: WideChar): AnsiChar; override;",526],["function  DecodeChar(const P: AnsiChar): WideChar; override;",526],["function Size: Integer;",556],["function GetCount: Integer;",958],["function IsEmpty: Boolean;",565],["function GetName: string;",501],["function CreateEmptyContainer: TJclAbstractContainerBase; override;",499],["function MoveNext: Boolean;",393],["class function Name: string; override;",373],["function Write(const Buffer; Count: Longint): Longint; override;",320]],"useCount":168246},{"word":"functions","context":[["//--------------- end local functions ---------------------------------------",68],["high-level functions.",100],["// 3DES functions",114],["<li>23/08/10 - Yar - Added OpenGLTokens to uses, replaced OpenGL1x functions to OpenGLAdapter",139],["(* packet functions *)",44],["//--------------- local functions -------------------------------------------",67],["(* === run-time registration functions === *)",67],["(* === compile-time registration functions === *)",65],["// Some pascal equalents of C++ class functions & operators",64],["* The functions avcodec_find_decoder_by_name(), avcodec_find_encoder_by_name(),",47]],"useCount":3817},{"word":"g","context":[["g := 0;",49],["[g.D1, g.D2, g.D3,",36],["if assigned(g) then gpx := g.nativeGraphics else gpx := nil;",48],["g.Free;",48],["if assigned(g) then gpx := g.nativeGraphics else gpx := nil;",48],["*    E.g., key=Author5, key=Author6. In this example, all authors must be",38],["* Pause a network-based stream (e.g. RTSP stream).",38],["g: byte;",50],["*    want to store, e.g., the email address of the child of producer Alice",38],["* Start playing a network-based stream (e.g. RTSP stream) at the",38]],"useCount":4244},{"word":"g111","context":[["g111",15],["a(g111",2985]],"useCount":3000},{"word":"g18","context":[["g18",34],["a(g18",3429]],"useCount":3463},{"word":"g185","context":[["a(g185",7456]],"useCount":7456},{"word":"g339","context":[["a(g339",4932]],"useCount":4932},{"word":"gen","context":[["SQL.Add('\"gen$persona\".NOMBRE,');",138],["SQL.Add('\"gen$persona\".PRIMER_APELLIDO,');",167],["SQL.Add('\"gen$empleado\".SEGUNDO_APELLIDO,');",38],["SQL.Add('\"gen$empleado\".PRIMER_APELLIDO,');",39],["SQL.Add('\"gen$direccion\".\"ID_PERSONA\" = :\"ID_PERSONA\" and');",40],["SQL.Add('\"gen$direccion\".\"ID_IDENTIFICACION\" = :\"ID_IDENTIFICACION\"');",40],["sql.Add('select PRIMER_APELLIDO, SEGUNDO_APELLIDO, NOMBRE from \"gen$empleado\"');",42],["SQL.Add('select * from \"gen$direccion\"');",66],["sql.Add('where \"gen$empleado\".\"ID_EMPLEADO\" =:\"ID_EMPLEADO\"');",47],["SQL.Add('\"gen$persona\".SEGUNDO_APELLIDO,');",158]],"useCount":2691},{"word":"get","context":[["SysUtils, // to get rid of compiler hint \"not inlined\" on Delphi 2010.",31],["* Read packets of a media file to get stream information. This",64],["case get of",33],["* This isn't used by libavcodec unless the default get/release_buffer() is used.",34],["* not decoded, for example to get the codec parameters in MPEG",35],["// under ARC, all weak references to a freed object get nil'ed automatically",50],["//get rest of FBuffer or incomming new data...",37],["// check to see if interaction necessary to get required fields",38],["// check the file signature and get its format",40],["{There is a suitable group with space: get the bin number}",46]],"useCount":3005},{"word":"given","context":[["* Return a positive value if the given filename has one of the given",38],["* Tell if a given file has a chance of being parsed as this format.",38],["* the given pixel formats should be used to suffer the least amount of loss.",50],["* Return a positive value if the given filename has one of the given",38],["* Seek to a given timestamp relative to the frames in",38],["* @return Number of bits per sample or zero if unknown for the given codec.",53],["///  <summary>Returns the element at a given position.</summary>",56],["* @param timestamp timestamp in the timebase of the given stream",36],["* Initialize the AVCodecContext to use the given AVCodec. Prior to using this",47],["* Find the best pixel format to convert to given a certain source pixel",50]],"useCount":3349},{"word":"goto","context":[["goto redo_char;",594],["goto 667;",83],["goto out;",505],["goto error;",957],["goto 666;",210],["goto err;",138],["goto 1;",131],["if not lrOK then goto 666;",123],["goto done;",113],["if fastkeypressed then goto continue;",98]],"useCount":5462},{"word":"group","context":[["for j := 0 to ElementCount(group) - 1 do begin",88],["IBSQL3.SQL.Add('group by \"con$puc\".SALDOINICIAL');",87],["e := ElementByIndex(group, j);",84],["* The DUnit group at SourceForge <http://dunit.sourceforge.net>",84],["layer := ElementByIndex(group, 0);",114],["group := ElementByName(npcrecord, 'Tint Layers');",80],["{Log the allocation group}",68],["{Get the bin in the group with free blocks}",63],["{Flag this group as empty}",63],["layer := ElementAssign(group, HighInteger, nil, False);",2844]],"useCount":4955},{"word":"h","context":[["h := 0;",131],["FPath[FDepth] := h;",138],["if (h = nil) then",154],["for i := 0 to h do",217],["{$ifdef FPC}{$mode objfpc}{$h+}{$endif}",1131],["*    On success, noErr is returned. See MacErrors.h for possible error",105],["{$ifdef FPC}{$mode objfpc}{$h+}{$INTERFACES CORBA}{$endif}",103],["h: TSuperAvlEntry;",110],["h := h.FGt;",117],["h := h.FGt;",117]],"useCount":11465},{"word":"handle","context":[["hSession: CK_SESSION_HANDLE;        {/* the session's handle */}",35],["raise ExceptionXL.Create(handle);",37],["// Bitmap\tThe handle of the source bitmap.",39],["err (IN/OUT) - error handle. If there is an error, it is",140],["* @param ic media file handle",64],["* @param s media file handle",255],["env (IN/OUT) - OCI environment handle initialized in object mode",53],["if handle = nil then",45],["//  hTheme              - theme data handle",43],["handle: THandle;",42]],"useCount":3064},{"word":"has","context":[["//   (*) KeyName refers to a key that has been installed in the Crypto Service",69],["{Header has been corrupted}",51],["Source Code from Carlo Kok has been used to implement various sections of",51],["// parentheses already has.",52],["* This field has no meaning if the packet does not have AV_PKT_FLAG_KEY",60],["its primary key has been deleted",60],["key if it has been imported",60],["* packet to the point at which the output from the decoder has converged",63],["{Check that the block has not been modified since being freed}",68],["* @param Sender has called method",71]],"useCount":5948},{"word":"have","context":[["* The purpose of this field is to allow seeking in streams that have no",63],["Expect(bCaughtException, 'Should have raised an exception');",83],["//old Delphi does not have MSWINDOWS define.",77],["* Active streams are all streams that have AVStream.discard < AVDISCARD_ALL.",63],["* older header files. The Pascal headers have to be adjusted to those changes,",62],["* This field has no meaning if the packet does not have AV_PKT_FLAG_KEY",60],["// whole r.e. have Idx=0.",48],["// string. First subexpr. have Idx=1, last - MatchCount,",48],["If we have to reallocate and move medium blocks, we grow by at",46],["re-read the flags since it could have changed before we could lock the",46]],"useCount":5309},{"word":"header","context":[["header.status := Result;",137],["(* Min. supported version by this header *)",108],["(* Max. supported version by this header *)",93],["header.index := InterlockedIncrement(IndexGenerator);",157],["header: THookedMethodHeader;",155],["header.threadid := GetCurrentThreadId;",154],["QueryPerformanceCounter(header.cstart);",154],["QueryPerformanceCounter(header.cstop);",154],["header.timestamp := Now;",154],["strm.WriteHeader(header);",154]],"useCount":4877},{"word":"height","context":[["height: cint;",60],["* width and height of the video frame",40],["* height, as they normally need to be rounded up to the next multiple of 16.",45],["pix_fmt: TAVPixelFormat; width: cint; height: cint): cint;",49],["AVFMT_NODIMENSIONS  = $0800; (**< Format does not need width/height *)",37],["// for y := 0 to height - 1:",116],["// for y := 0 to height - 1;",60],["height,",93],["width, height: cint;",70],["height));",65]],"useCount":2597},{"word":"high","context":[["for int1:= 0 to high(fprops) do begin",56],["{:Note: This is high-level receive function. It using internal",120],["for int1:= 0 to high(fitems) do begin",118],["high-level functions.",100],["for int1:= 0 to high(result) do begin",93],["for int1:= 0 to high(fwidgets) do begin",59],["for i := 0 to high(result) do",37],["for I := low(I) to high(I) do",41],["arraySliceIndices(high(a), slice1, slice2);",55],["for int1:= 0 to high(ar1) do begin",350]],"useCount":2581},{"word":"http","context":[["* http://www.mozilla.org/MPL/",1018],["// This unit is part of the GLScene Project, http://glscene.org",578],["partly as freelance: http://www.mars42.com                          |",572],["and partly as employee : http://www.batpro.com                          |",572],["(http://www.indyproject.org/)",1100],["{* http://sasgis.org                                                          *}",3129],["http://www.mozilla.org/MPL/",572],["located at http://SynEdit.SourceForge.net",492],["{ http://www.TeamCoherence.com                                         }",441],["{ http://www.mozilla.org/MPL/MPL-1.1.html                                      }",385]],"useCount":16592},{"word":"i","context":[["i: Integer;",17629],["i:=0;",1415],["i := 1;",1452],["i:integer;",2254],["i : integer;",3082],["i := 0;",3213],["i : Integer;",3275],["Inc(i);",3508],["inc(i);",3631],["i: integer;",15371]],"useCount":173733},{"word":"iCount","context":[["for iCount := 1 to iSpeciesCount do",69],["inc(iCount);",53],["iCount := iCount + 1;",48],["iCount := iCount + 1;",48],["for iCount := 1 to iSiteCount do",74],["iCount := 0;",125],["Inc(iCount);",125],["iCount : integer;",520],["SiteArr.rtnValue(iCount,pSite);",45],["for iCount := 1 to iFeatureCount do",70]],"useCount":2965},{"word":"idx","context":[["if(idx < 0) then",130],["if(idx >= 0) then",172],["Inc(idx);",176],["if idx < 0 then",199],["if idx >= 0 then",221],["idx := -1;",229],["idx := 0;",280],["inc(idx);",376],["idx: Integer;",461],["idx: integer;",877]],"useCount":6410},{"word":"if","context":[["if Transaction.InTransaction then",1090],["if ACollection = nil then",1094],["if Bucket <> nil then",1103],["if Result then begin",1143],["if IsCurrentToken(KeyWords[Index]) then",1795],["if not Result then",2113],["if ReadOnly then",3246],["{$IFDEF UDEBUG}if _udebug <> nil then _udebug.Destroy;{$ENDIF}",6613],["if Result then",6624],["if FThreadSafe then",12444]],"useCount":472458},{"word":"ifc","context":[["{$ifc USE_CFSTR_CONSTANT_MACROS}",593],["{$ifc not defined MACOSALLINCLUDE or not MACOSALLINCLUDE}",904],["{$ifc not defined __x86_64__ and defined CPUX86_64}",457],["{$ifc defined FPC_BIG_ENDIAN}",457],["{$ifc not defined __ppc__ and defined CPUPOWERPC32}",457],["{$ifc not defined __arm__ and defined CPUARM}",457],["{$ifc defined __ppc__ and __ppc__}",457],["{$ifc defined CPUPOWERPC and defined CPUI386}",457],["{$ifc defined __ppc__ and __ppc__ and defined __i386__ and __i386__}",457],["{$ifc not TARGET_CPU_64}",476]],"useCount":9140},{"word":"ifdef","context":[["{$ifdef UseInline} inline; {$endif}",528],["{$ifdef CMLL17_LINK_INDEXED}",541],["{$ifdef DXGETTEXTDEBUG}",788],["{$ifdef DLL} stdcall; {$endif}",902],["{$ifdef FPC}",1006],["{$ifdef CPUX86}",1119],["{$ifdef FPC}{$mode objfpc}{$h+}{$endif}",1131],["{$ifdef UNICODE}",1573],["{$ifdef MSWINDOWS}",564],["{$ifdef FullDebugMode}",561]],"useCount":33187},{"word":"ifndef","context":[["{$ifndef BIT16}",217],["{$ifndef AssumeMultiThreaded}",570],["{$ifndef FullDebugMode}",444],["{$ifndef OPCODE_FASTEST}",357],["{$ifndef NoMessageBoxes}",340],["{$ifndef FPC}",309],["{$ifndef LINUX}",144],["{$ifndef Align16Bytes}",167],["{$ifndef LCL}",170],["{$ifndef GEOMETRY_NO_ASM}",299]],"useCount":6948},{"word":"implementation","context":[["//your implementation here",94],["implementation",56174],["///  <exception cref=\"DeHL.Exceptions|ESerializationException\">Default implementation.</exception>",22],["// Asserts used to catch 'strange bugs' in TRegExpr implementation (when something goes",22],["SSL implementation includes code written by Arno Garrels,",23],["* Name of the codec implementation.",23],["// Design and implementation by",27],["BASS_SAMPLE_FX          = 128; // old implementation of DX8 effects",28],["This function is defined in the implementation part of this unit.",32],["* the default implementation will execute the parts serially.",64]],"useCount":56867},{"word":"in","context":[["*    Mac OS X:         in version 10.0 and later in QuickTime.framework",1970],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework",652],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only]",821],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only]",821],["*    CarbonLib:        in CarbonLib 1.1 and later",1009],["*    Non-Carbon CFM:   in QuickTimeLib 2.5 and later",1102],["*    Non-Carbon CFM:   in InterfaceLib 7.1 and later",1185],["*    Windows:          in qtmlClient.lib 3.0 and later",1388],["*    Mac OS X:         in version 10.0 and later in QuickTime.framework",1970],["*    CarbonLib:        in CarbonLib 1.0 and later",5337]],"useCount":104817},{"word":"inc","context":[["{$I switches.inc}",587],["inc(i);",3631],["inc(Run);",3290],["inc(p);",1530],["inc(j);",1067],["inc(Run, 2);",999],["{$i IdCompilerDefines.inc}",870],["inc(pos);",615],["inc(po1);",563],["{$I terra.inc}",562]],"useCount":55764},{"word":"index","context":[["inc(index);",215],["index: integer;",409],["property ConstKeyword: string index taConstKeyword read GetTypeAttribute write SetTypeAttribute stored False;",122],["// No index",130],["property TypeName: string index taTypeName read GetTypeAttribute write SetTypeAttribute stored False;",134],["index:=0;",136],["Inc(index);",150],["header.index := InterlockedIncrement(IndexGenerator);",157],["index: Integer;",196],["index := 0;",202]],"useCount":11601},{"word":"info","context":[["fillchar(info,sizeof(info),0);",58],["{* info@sasgis.org                                                            *}",3129],["include(info.eventstate,es_processed);",66],["{Is the debug info surrounding the block valid?}",73],["var info: celleventinfoty);",91],["fillchar(info,sizeof(info),0);",58],["//  ppAdjacency Returns a buffer containing adjacency info.  Can be NULL.",48],["{  no Yahoo Groups https://groups.yahoo.com/neo/groups/fortesreport/info       }",95],["if not (es_processed in info.eventstate) then begin",114],["with info do begin",287]],"useCount":6404},{"word":"information","context":[["//       documentation for more information on this.",69],["(*** helper information ***)",60],["* @todo Let the user decide somehow what information is needed so that",64],["* Read packets of a media file to get stream information. This",64],["// Microsoft .NET Framework documentation for more information on assembly signing.",69],["[^]: Changes since v. 1.7.0. Fore more information, please see 'README.md'",71],["contact us for more information",85],["//* For more information visit: http://www.degsoft.com.ar                      *",87],["* distributed with this work for additional information",145],["{ For further information / comments, visit our WEB site at            }",444]],"useCount":4104},{"word":"inherited","context":[["inherited;",56937],["inherited Create;",15290],["inherited Create(AInstance);",499],["inherited create;",513],["inherited Assign(Source);",764],["{:See @inherited}",494],["inherited Notification(AComponent, Operation);",421],["inherited Create();",985],["inherited Create(AOwner);",4382],["inherited Destroy;",12321]],"useCount":115623},{"word":"initialization","context":[["{ These routines take care of any system-dependent initialization and",19],["{ initialization }",20],["initialization code what modify this variable.}",20],["* Do global initialization of network components. This is optional,",31],["* Undo the initialization done by avformat_network_init.",31],["These flags can be passed in AVCodecContext.flags before initialization.",32],["// initialization",59],["initialization",9743],["{ causes page to be visible and conditionally executes initialization code }",19],["initialization. (Thanks to M. Skloff.)",17]],"useCount":10143},{"word":"inline","context":[["{$IFDEF USE_INLINE}inline;{$ENDIF}",1407],["{$IFDEF USEINLINE} inline; {$ENDIF}",73],["{$IFDEF USE_INLINE} inline; {$ENDIF}",1172],["{$inline on}",506],["{$ifdef UseInline} inline; {$endif}",528],["*    Non-Carbon CFM:   available as macro/inline",947],["{$IFDEF SUPPORTS_INLINE} inline; {$ENDIF}",266],["{$IFDEF USEINLINE}inline;{$ENDIF}",179],["inline(",121],["// inline",80]],"useCount":6981},{"word":"input","context":[["assign(input, 'input.txt');",80],["assign(input, 'input.txt');",80],["Close(input);",82],["////////// InputIndex : InputIndex of existing input",84],["close(input);",148],["reset(input);",169],["// not found in input string.",78],["* if f is non-NULL, returns the next registered input format after f",74],["{-end data input, calculate HMAC digest}",72],["* @param[in] avpkt The input AVPacket containing the input buffer.",69]],"useCount":5717},{"word":"int","context":[["dxDst       : int;",55],["dxSrc       : int;",55],["x: int;",58],["i : int;",158],["inc(ptrcomp(y ) ,sizeof(int ) );",81],["inc(ptrcomp(x ) ,sizeof(int ) );",81],["ci : int;",78],["int 10h",74],["int 21h",72],["err : int;",63]],"useCount":3885},{"word":"int1","context":[["int1,int2: integer;",637],["if int1 > 0 then begin",104],["result:= int1;",117],["for int1:= 0 to high(fitems) do begin",118],["inc(int1);",138],["int1,int2,int3: integer;",167],["int1:= 0;",172],["for int1:= 0 to count - 1 do begin",335],["for int1:= 0 to high(ar1) do begin",350],["int1: integer;",3273]],"useCount":7823},{"word":"integer","context":[["i, j: integer;",1043],["x: integer;",1102],["var i: integer;",1326],["): integer; stdcall;",954],["n: integer;",1781],["i:integer;",2254],["i : integer;",3082],["int1: integer;",3273],["I: integer;",3600],["i: integer;",15371]],"useCount":99786},{"word":"interface","context":[["(*** Added in the V3 interface ***)",35],["(*** Added in the v2 interface ***)",81],["interface",56642],["// Set interface font",62],["// Storing interface reference as a pointer does not update reference",55],["// create instances of the default interface IXMLDOMDocument2 exposed by",54],["pGraph: IDirectMusicGraph; (* tool graph interface pointer *)",52],["pTool: IDirectMusicTool;   (* tool interface pointer *)",52],["// create instances of the default interface IMXWriter exposed by",42],["end;//interface",52]],"useCount":58682},{"word":"into","context":[["SQL.Add('insert into \"col$extractodet\" values (');",41],["* reordered pos from the last AVPacket that has been input into the decoder",40],["sql.Add('insert into \"con$comprobante\" (\"con$comprobante\".\"ID_COMPROBANTE\",');",39],["//Put FPC into Delphi mode",43],["{Insert this block back into the bins: Size check not required here,",46],["// compile a regular expression into internal code",50],["SQL.Add('insert into \"cap$extracto\" values(');",55],["///  <param name=\"AStartIndex\">The index into the array at which the copying begins.</param>",61],["//           in the KeyFile is installed into the CSP and used.",69],["SQL.Add('insert into \"con$auxiliar\" values (');",70]],"useCount":3982},{"word":"is","context":[["This file is part of the Indy (Internet Direct) project, and is offered",1100],["This file is part of the Indy (Internet Direct) project, and is offered",1100],["* The Initial Developer of the Original Code is",774],["| The Initial Developer of the Original Code is Lukas Gebauer (Czech Republic).|",325],["* The Original Code is TurboPower Abbrevia",595],["// This unit is part of the GLScene Project, http://glscene.org",578],["* UltraStar Deluxe is the legal property of its developers, whose names",563],["{$error __ppc__ nor __ppc64__ nor __i386__ nor __x86_64__ nor __arm__ is defined.}",457],["@param columnIndex the first column is 1, the second is 2, ...",366],["@param columnIndex the first column is 1, the second is 2, ...",366]],"useCount":81530},{"word":"it","context":[["purpose, including commercial applications, and to alter it",211],["including commercial applications, and to alter it and redistribute it",336],["including commercial applications, and to alter it and redistribute it",336],["and redistribute it freely, subject to the following",211],["// under ARC, convert a weak reference to a strong reference before working with it",158],["{           mauriziodm@levantesw.it                                         }",141],["err (IN/OUT) - error handle. If there is an error, it is",140],["{Is it an upsize or a downsize?}",126],["{log it}",114],["{Is it a small block?}",92]],"useCount":17922},{"word":"item","context":[["Remove the indexth item. The first item is index 0.",86],["See if an item is already in the list. returns -1 if not in the list",166],["item: T;",142],["item: TSource;",57],["for item in source do",57],["Result := item;",58],["for item in Self do",69],["Remove the indexth item. The first item is index 0.",86],["item",109],["for item in collection do",52]],"useCount":3886},{"word":"its","context":[["* UltraStar Deluxe is the legal property of its developers, whose names",563],["// (NOTE: Here we map each CoClass to its Default Interface)",158],["authors, maintainers and developers of its code:",85],["code and neither those names nor the names of its authors or",85],["its primary key has been deleted",60],["{The next block is in use: flag its previous block as free}",46],["*  we WILL change its arguments and name a few times! *)",46],["// Returns TRUE if its OK to delete from the store.",42],["//  For CryptDecodeObject(), the pbEncoded is the \"to be signed\" plus its",40],["// check the file signature and get its format",40]],"useCount":2708},{"word":"j","context":[["j:=0;",421],["inc(j);",1067],["i, j: integer;",1043],["i,j:integer;",384],["i, j: Integer;",933],["j := 0;",787],["Inc(j);",644],["j: integer;",552],["j: Integer;",544],["i,j: integer;",470]],"useCount":28435},{"word":"k","context":[["inc(k);",451],["PutO(k, TSuperObject.Create(Value));",110],["k:=1;",112],["i, j, k: integer;",148],["obj := GetO(k);",153],["a.k.a.: Master Lucky",168],["Inc(k);",275],["s.bitk := k;",315],["k:=0;",324],["k := 0;",393]],"useCount":10001},{"word":"key","context":[["if (key = #13) Then",90],["key := #0;",687],["key:=#0;",591],["If not( key in['0'..'9',#8, #13] ) then",368],["key := 0;",298],["if (key = #13) then",237],["case key of",224],["key:= #0;",136],["if key = #13 then",131],["key  := #0;",102]],"useCount":11627},{"word":"l","context":[["l: Integer;",500],["l := Length(s);",136],["inc(l);",149],["l.Free;",158],["for i := 0 to l do",190],["i, l: Integer;",214],["SetLength(Result, l);",223],["Inc(l);",227],["l: integer;",238],["l := 0;",350]],"useCount":13012},{"word":"last","context":[["lastdisassembledata.parameters:=modrm(memory,prefix2,1,0,last);",50],["* or NULL if f is the last one.",76],["lastdisassembledata.parametervalue:=memory[last];",75],["{Store the size of the second split as the second last dword}",90],["lastdisassembledata.parameters:=xmm(memory[2])+','+modrm(memory,prefix2,2,4,last);",132],["inc(offset,last-1);",488],["// last cmd",60],["lastdisassembledata.parameters:=mm(memory[2])+','+modrm(memory,prefix2,2,3,last);",58],["lastdisassembledata.parameters:=lastdisassembledata.parameters+inttohexs(memory[last],2);",53],["textbackground(last[i,j]);",48]],"useCount":5156},{"word":"later","context":[["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework [32-bit only] but deprecated in 10.4",541],["*    CarbonLib:        in CarbonLib 1.1 and later",1009],["*    Mac OS X:         in version 10.0 and later in Carbon.framework",609],["*    Mac OS X:         in version 10.0 and later in QuickTime.framework",1970],["*    CarbonLib:        in CarbonLib 1.0 and later",5337],["*    Windows:          in qtmlClient.lib 3.0 and later",1388],["*    Non-Carbon CFM:   in InterfaceLib 7.1 and later",1185],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework",652],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only]",821],["*    Non-Carbon CFM:   in QuickTimeLib 2.5 and later",1102]],"useCount":25676},{"word":"layer","context":[["layer := ElementAssign(group, HighInteger, nil, False);",2844],["CreateTintLayer(layer, 6, slTintColors, '', 90, '5-20'); //MaleHead_Cheeks2",36],["CreateTintLayer(layer, 5, slTintColors, '', 90, '5-20'); //MaleHead_Cheeks",36],["CreateTintLayer(layer, 3, slTintColors, '', 90, '5-20'); //MaleLowerEyeSocket",36],["CreateTintLayer(layer, 10, slTintColors, '', 90, '5-20'); //MaleHeadHuman_ForeHead",36],["CreateTintLayer(layer, 7, slTintColors, '', 90, '5-20'); //MaleHead_FrownLines",36],["layer := ElementByIndex(group, 0);",114],["CreateTintLayer(layer, 12, slTintColors, '', 90, '5-20'); //MaleHeadHuman_Neck",36],["CreateTintLayer(layer, 11, slTintColors, '', 90, '5-20'); //MaleHeadHuman_Chin",36],["CreateTintLayer(layer, 2, slTintColors, '', 90, '5-20'); //MaleUpperEyeSocket",36]],"useCount":3963},{"word":"lea","context":[["Add(#$8d#$87); // lea eax,dword ptr [edi+RegisterOfs]",60],["lea edi, [MediumBlockBins + ecx * 8]",34],["lea ecx, [edx + IsMediumBlockFlag + IsFreeBlockFlag]",51],["Add(#$49#$8d#$86); // lea rax,qword ptr [r14+RegisterOfs]",60],["lea rax, MediumBlocksLocked",36],["lea rdx, [rdx + OPCODE]",198],["lea edx, [edx + OPCODE]",198],["Add(#$8d#$97); // lea edx,dword ptr [edi+RegisterOfs]",68],["lea r8, MediumBlockBinBitmaps",60],["lea esi, S + StartPos -1",55]],"useCount":2610},{"word":"left","context":[["left := left + width;",97],["case left.location.loc of",46],["// left",46],["typecheckpass(left);",51],["location_copy(location,left.location);",57],["// ColNum = column reference, default between left and right margins",72],["IBSQL3.SQL.Add('left join \"con$saldoscuenta\" ON (\"con$puc\".ID_AGENCIA = \"con$saldoscuenta\".ID_AGENCIA and ');",87],["left := left + width;",97],["left:=nil;",99],["secondpass(left);",114]],"useCount":2771},{"word":"len","context":[["len : Integer;",112],["for i := 0 to len - 1 do",87],["for i := 1 to len do",98],["inc(len);",88],["Dec(len);",76],["len : integer;",122],["len := 0;",186],["len: integer;",204],["if len > 0 then",211],["len: Integer;",236]],"useCount":6672},{"word":"length","context":[["while length(S)<3 do begin",147],["length,",71],["if CountFixups>=length(Fixups) then begin",76],["for i:=1 to length(s) do",93],["if (length(uosPlayers) > 0) and (PlayerIndex +1 <= length(uosPlayers)) then",96],["if (length(uosPlayers) > 0) and (PlayerIndex +1 <= length(uosPlayers)) then",96],["for i := 1 to length(s) do",103],["if (length(piece(uHState,';',2)) > 0) then",161],["{ Check length }",139],["for i:=0 to length(mainform.devices)-1 do",82]],"useCount":11544},{"word":"level","context":[["* @param level The importance level of the message, lower values signifying",92],["* Codec supports frame-level multithreading.",34],["level : int;",36],["function deflateInit_(var strm: TZStreamRec; level: Integer; version: PChar;",43],["level: integer;",45],["// the lowest level",52],["* @param level The importance level of the message, lower values signifying",92],["inc(level);",33],["high-level functions.",100],["{:Note: This is high-level receive function. It using internal",120]],"useCount":2729},{"word":"lib","context":[["staticClibprefix : 'lib';",51],["sharedlibprefix : 'lib';",38],["*    Windows:          in qtmlClient.lib version 10.4 (or QuickTime 7.0) and later",66],["*    Windows:          in qtmlClient.lib 6.0 and later",87],["*    Windows:          in QTVR.lib 2.1 and later",93],["*    Windows:          in QTSClient.lib 4.0 and later",148],["*    Windows:          in qtmlClient.lib 4.0 and later",186],["/// @lib",813],["*    Windows:          in qtmlClient.lib 5.0 and later",66],["*    Windows:          in qtmlClient.lib 3.0 and later",1388]],"useCount":3304},{"word":"libavcodec","context":[["* Code outside libavcodec should access this field using:",250],["* - encoding: Set by libavcodec, user can override.",64],["* - encoding: Set by libavcodec. for coded_picture (and set by user for input).",68],["* - decoding: set by libavcodec.",75],["* - decoding: set by libavcodec. *)",78],["* - decoding: set by libavcodec, read by user.",104],["* - decoding: Set by libavcodec.",1024],["* - decoding: Set by libavcodec, user can override.",141],["* - encoding: Set by libavcodec.",385],["* - decoding: Set by libavcodec",284]],"useCount":4004},{"word":"library","context":[["which is not derived from or based on this library. If you modify this",297],["The source code of the BESEN ecmascript engine library and helper tools are",296],["This file is part of the Free Pascal run time library.",213],["// another type library referring to this type library) re-imported, or the",172],["{ from or based on this library. If you modify this       }",137],["{ of the library, but you are not obligated to do so.     }",137],["// another type library referring to this type library) re-imported, or the",172],["// Type Library. If this type library is explicitly or indirectly (via",172],["A file in Amiga system run time library.",93],["Home: https://github.com/WiRL-library",101]],"useCount":3188},{"word":"line","context":[["whole, or line-by-line, and many other useful tools to ease writting and",69],["line := '';",67],["i := SectionIndex + 1;           // first line after the section name",64],["{ The next line will trigger an exception in case of failure }",46],["// line width",40],["whole, or line-by-line, and many other useful tools to ease writting and",69],["* All fields below this line are not part of the public API. They",81],["* No fields below this line are part of the public API. They",88],["line: string;",100],["// next line:",128]],"useCount":3947},{"word":"link","context":[["@link(LastError) is set to WSAETIMEDOUT and result have value 0.}",40],["Follow \"support\" link at http://www.overbyte.be for subscription.",186],["result.link;",295],["{: Do not call this directly. It is used internally by @link(TTCPBlockSocket)!",140],["@link(LineBuffer) and you can combine this function freely with other",120],["// RLebeau 2/14/09: this forces C++Builder to link to this unit so",85],["1. In your website, add a link to \"http://www.bsalsa.com\"",80],["parent @link(TSynaClient) too!}",71],["link         : nil;",56],["Instance of this class will be created for each @link(TTCPBlockSocket).",49]],"useCount":4341},{"word":"list","context":[["list: TStringList;",81],["* @param tags list of supported codec_id-codec_tag pairs, as stored",76],["list.Free;",225],["Support:      Use the mailing list twsocket@elists.org",185],["See if an item is already in the list. returns -1 if not in the list",166],["See if an item is already in the list. returns -1 if not in the list",166],["list := TStringList.Create;",120],["Procedure GetChildrenByName(child_name : string; list : TFHIRObjectList); override;",120],["FList := list;",95],["Remove All Items from the list",86]],"useCount":8759},{"word":"longint","context":[["{-reverse byte order in longint}",58],["x : longint;",63],["tritontags[tindex].ti_Data := longint(gadid);",66],["var Counter:longint;",74],["i:longint;",80],["var i,j:longint;",91],["L: longint;",115],["i : longint;",193],["var i:longint;",232],["i: longint;",684]],"useCount":5945},{"word":"ls","context":[["CheckEquals(3,ls.size());",108],["CheckEquals(0,ls.size());",222],["ls : ISDODataObjectList;",197],["CheckEquals(1,ls.size());",171],["c := ls.getCursor();",169],["ls.append(VAL_1);",164],["ls.delete();",156],["ls.delete(0);",148],["ls.append(VAL_2);",129],["CheckEquals(2,ls.size());",124]],"useCount":3366},{"word":"m","context":[["if (m = 0) then",85],["m := m + 1;",195],["m := m + 1;",195],["m := 0;",81],["for i:=1 to m do",106],["srch[m] := s;",98],["srch[m] := 0;",96],["l:= s_box[m and $1FF]; r:= LRot32(r,5);",96],["t:= r and $1f; m:= LRot32(m,t);",96],["t:= r and $1f; m:= LRot32(m,t);",96]],"useCount":5267},{"word":"medium","context":[["{Unlock the medium blocks}",143],["{Do we need to lock the medium blocks?}",116],["{Get the size of the available medium block in edi}",58],["{Is this a medium block or a large block?}",63],["{Free the medium block pool}",51],["{Next medium block}",77],["{Get the next medium block pool}",94],["{Step through all the medium block pools}",111],["{Unlock medium blocks}",239],["{Lock the medium blocks}",169]],"useCount":3792},{"word":"memory","context":[["lastdisassembledata.parametervalue:=memory[last];",75],["lastdisassembledata.parameters:=mm(memory[2])+','+modrm(memory,prefix2,2,3,last);",58],["lastdisassembledata.parameters:=mm(memory[2])+','+modrm(memory,prefix2,2,3,last);",58],["lastdisassembledata.parameters:=lastdisassembledata.parameters+inttohexs(memory[last],2);",53],["mov [edi], al               //Store digit out to memory",126],["lastdisassembledata.parameters:=xmm(memory[2])+','+modrm(memory,prefix2,2,4,last);",132],["lastdisassembledata.parameters:=xmm(memory[2])+','+modrm(memory,prefix2,2,4,last);",132],["{Map a view of the memory}",47],["dwVidMemTotal: DWORD;          // total amount of video memory",47],["lastdisassembledata.parameters:=modrm(memory,prefix2,1,0,last);",50]],"useCount":7541},{"word":"message","context":[["procedure CMExit(var Message: TCMExit); message CM_EXIT;",74],["procedure WMEraseBkgnd(var Message: TWMEraseBkgnd); message WM_ERASEBKGND;",67],["{Show the message}",68],["*** empty log message ***",352],["procedure CMFontChanged(var Message: TMessage); message CM_FONTCHANGED;",144],["procedure WMSize(var Message: TWMSize); message WM_SIZE;",117],["* @param level The importance level of the message, lower values signifying",92],["procedure CMMouseLeave(var Message: TMessage); message CM_MOUSELEAVE;",90],["procedure WMPaint(var Message: TWMPaint); message WM_PAINT;",81],["procedure CMEnabledChanged(var Message: TMessage); message CM_ENABLEDCHANGED;",73]],"useCount":6365},{"word":"method","context":[["// TODO: Validate method results",88],["if this method is supported and how!}",200],["///  <summary>Internal method. Do not call directly!</summary>",90],["* @param Sender has called method",71],["Assign method copies the contents of another similar object.",81],["method: TRttiMethod;",78],["{/@method}",68],["// TODO: Setup method call parameters",58],["///  <param name=\"AAggregator\">The aggregator method.</param>",56],["class method Main;",42]],"useCount":5581},{"word":"methods","context":[["public {methods}",215],["// override methods",159],["// assign methods",149],["// custom methods",144],["Modify the generated code to correctly setup and call the methods from the unit",121],["<code>insertRow</code> methods are called to update the database.",95],["current row or the insert row.  The <code>updateXXX</code> methods do not",97],["{ Property access methods }",98],["The <code>updateXXX</code> methods are used to update column values in the",98],["protected {methods}",103]],"useCount":3371},{"word":"mod","context":[["y := x mod 256;",43],["TimeV.tv_usec := (Timeout mod 1000) * 1000;",96],["Index:=(Index+1) mod Face.NumberOfpoints;",108],["if (Size mod 8)<> 0 then",38],["n2:=Number mod 100;",36],["//eoa TimeBar mod",35],["//TimeBar mod",35],["if (Size mod 16)<> 0 then",34],["timeval.tv_usec:=(Value.Value mod 1000) * 1000;",32],["BitOfs := Bit mod 8;",32]],"useCount":2653},{"word":"mode","context":[["{$mode objfpc}{$H+}",5240],["{$ifdef FPC}{$mode objfpc}{$h+}{$endif}",1131],["{$mode delphi}",483],["{$mode macpas}",459],["{$mode objfpc}",368],["case mode of",240],["{$mode delphi}{$H+}",112],["{$ifdef FPC}{$mode objfpc}{$h+}{$INTERFACES CORBA}{$endif}",103],["{$mode Delphi}{$H+}",67],["* frame mode.",64]],"useCount":12908},{"word":"more","context":[["for more details.",171],["* misdetect some more or less valid parts as errors.",40],["dwCaps2: DWORD;                // more driver specific capabilites",46],["-Completed more features necessary for servers",47],["// Microsoft .NET Framework documentation for more information on assembly signing.",69],["//       documentation for more information on this.",69],["* Descriptive name for the format, meant to be more human-readable",76],["contact us for more information",85],["//* For more information visit: http://www.degsoft.com.ar                      *",87],["[^]: Changes since v. 1.7.0. Fore more information, please see 'README.md'",71]],"useCount":3794},{"word":"mov","context":[["mov EAX, [EAX]",317],["mov ecx, edx",186],["mov EAX, [EAX+$04]",314],["mov EAX, [EBP+$08]",309],["mov eax, edx",274],["mov dword ptr CodeBegin,offset @CodeBegin",253],["mov dword ptr CodeEnd,offset @CodeEnd",253],["mov eax, esi",238],["mov rcx, rsi",216],["mov eax, $100",208]],"useCount":20731},{"word":"must","context":[["// In order to sign your assembly you must specify a key to use. Refer to the",69],["2. Altered source versions must be plainly marked as such, and must not be",327],["2. Altered source versions must be plainly marked as such, and must not be",327],["2. Altered source versions must be plainly marked as such, and",217],["{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers.",177],["but we must reload the local copies after a successful fill. }",150],["// The resulting string must be freed by calling cef_string_userfree_free().",123],["a pointer to RPCBrokerV.Results, so the data must be used BEFORE the next broker call! }",108],["* @param dump_payload True if the payload must be displayed, too.",76],["equal, they must point to the bin.}",75]],"useCount":9697},{"word":"n","context":[["inc(n);",266],["if n > 0 then",220],["n: integer;",1781],["readln(n);",289],["z.avail_in := n;",322],["Inc(n);",420],["n := 0;",435],["for i := 1 to n do",445],["for i:=1 to n do",462],["n: Integer;",852]],"useCount":23255},{"word":"name","context":[["For unit name changes.",156],["name: string;",305],["*     * Neither the name of the <organization> nor the",222],["///  <exception cref=\"SysUtils|EArgumentNilException\"><paramref name=\"ACollection\"/> is <c>nil</c>.</exception>",116],["function isKnownName(name : String) : boolean; override;",127],["@param catalog a catalog name; \"\" retrieves those without a",130],["catalog; null means drop catalog name from the selection criteria",150],["/// <param name=\"x\"></param>",152],["to the author. Use a nice stamp and mention your name, street",161],["name: PAnsiChar;",244]],"useCount":16344},{"word":"need","context":[["{Do we need to lock the medium blocks?}",116],["(** see below. they need to be hard coded.",110],["{Do we need to lock the block type?}",104],["*       we do not waste time getting stuff the user does not need.",64],["{:Add MIME part as subpart of PartParent. If you need set root MIME part,",48],["* between input and output, these need to be fed with avpkt->data=NULL,",46],["{It's a downsize. Do we need to allocate a smaller block? Only if the new",46],["{Can we combine this block with the previous free block? We need to",46],["{Do we need to store the requested size? Only large blocks store the",46],["* height, as they normally need to be rounded up to the next multiple of 16.",45]],"useCount":3520},{"word":"net","context":[["located at http://SynEdit.SourceForge.net",492],["{ APILIB home page, located at http://jedi-apilib.sourceforge.net              }",231],["{   http://www.sourceforge.net/projects/zeoslib.          }",137],["{   http://sourceforge.net/p/zeoslib/tickets/ (BUGTRACKER)}",134],["{   svn://svn.code.sf.net/p/zeoslib/code-0/trunk (SVN)    }",134],["* (https://sourceforge.net/projects/tcycomponents/).",124],["{*    http://sourceforge.net/projects/delphi-dx9sdk                           *}",86],["http://imaginglib.sourceforge.net",84],["* The DUnit group at SourceForge <http://dunit.sourceforge.net>",84],["* Juanco Añez <juanco@users.sourceforge.net>",77]],"useCount":3130},{"word":"new","context":[["///  <summary>Creates a new instance of this class.</summary>",434],["@param x the new column value",127],["{Allocate the new block}",109],["new(pSite);",85],["new(t);",84],["new(temp);",81],["* The only safe way to support new versions of FFmpeg is to add the changes",62],["* Add a new stream to a media file.",60],["///  <returns>A new collection that contains only the pairs that satisfy the relationship.</returns>",60],["This function returns the new surface, or NULL if there was an error.",52]],"useCount":7568},{"word":"next","context":[["next;",236],["// next line:",128],["{Move to next column}",126],["or ecx, eax                 //Accumulate next digit",112],["* if f is non-NULL, returns the next registered input format after f",74],["{Is this bin now empty? If the previous and next free block pointers are",75],["{Get the next medium block pool}",94],["Result := MatchPrim (next);",100],["a pointer to RPCBrokerV.Results, so the data must be used BEFORE the next broker call! }",108],["{Get the next large block}",111]],"useCount":7628},{"word":"nil","context":[["if FCursor <> nil then",750],["Result := nil;",13384],["{$IFDEF UDEBUG}if _udebug <> nil then _udebug.Destroy;{$ENDIF}",6613],["layer := ElementAssign(group, HighInteger, nil, False);",2844],["result := nil;",1743],["if Bucket <> nil then",1103],["if ACollection = nil then",1094],["nil,",965],["result:=nil;",930],["if Result = nil then",906]],"useCount":126432},{"word":"no","context":[["{  no Yahoo Groups https://groups.yahoo.com/neo/groups/fortesreport/info       }",95],["// AValue. If AValue = ADefault, and WriteOnDefault = False, no subnode will be added.",90],["result:= true; //no procs",93],["a result of zero means that there is no limit or the limit is not known",198],["ComboBox62.Items.Add('no SA');",187],["MessageDlg('Erro no sistema, parametro não foi gravado.', mtError,",113],["no := LoopStackIdx;",104],["{ têm funções específicas no fluxo de impressão. Você definir agrupamentos     }",95],["{ no endereço 59 Temple Street, Suite 330, Boston, MA 02111-1307 USA.          }",95],["if sep in [no, perhaps] then",92]],"useCount":10645},{"word":"node","context":[["// set the next-pointer at the end of a node chain",52],["node: TTreeNode;",63],["// dig the \"next\" pointer out of a node",52],["Result := node;",50],["next : PRegExprChar; // Next node.",50],["scan : PRegExprChar; // Current node.",50],["// clone a node",44],["while node <> nil do",40],["node:TTreeNode;",37],["Patternname := node.text;",35]],"useCount":2813},{"word":"non","context":[["cmp ecx, 1                  //Any non-zero digit yet ?",112],["* Codec is experimental and is thus avoided in favor of non experimental",37],["AVSEEK_FLAG_ANY      = 4; ///< seek to any frame, even non-keyframes",37],["* @param filename if non-NULL checks if filename terminates with the",38],["* @param short_name if non-NULL checks if short_name matches with the",38],["* @param mime_type if non-NULL checks if mime_type matches with the",38],["Note: If you call this on non-created socket, then socket is created",40],["*                            output packet is non-empty, and to 0 if it is",45],["// non-inline",60],["* if f is non-NULL, returns the next registered input format after f",74]],"useCount":3148},{"word":"nor","context":[["{$error __ppc__ nor __ppc64__ nor __i386__ nor __x86_64__ nor __arm__ is defined.}",457],["{$error __ppc__ nor __ppc64__ nor __i386__ nor __x86_64__ nor __arm__ is defined.}",457],["// then SubExprMatchCount=0, if no subexpressions nor whole",26],["// neither tile nor tne",24],["{$error Neither FPC_BIG_ENDIAN nor FPC_LITTLE_ENDIAN are defined.}",457],["{$error __ppc__ nor __ppc64__ nor __i386__ nor __x86_64__ nor __arm__ is defined.}",457],["*   3. Neither the name of STMicroelectronics nor the names of its contributors",26],["code and neither those names nor the names of its authors or",85],["{$error __ppc__ nor __ppc64__ nor __i386__ nor __x86_64__ nor __arm__ is defined.}",457],["*     * Neither the name of the <organization> nor the",222]],"useCount":2710},{"word":"not","context":[["while not Eof do begin",547],["If not (IsEmpty) Then",615],["{$endc} {not MACOSALLINCLUDE}",907],["* along with this program; see the file COPYING. If not, write to",563],["{$ifc not defined MACOSALLINCLUDE or not MACOSALLINCLUDE}",904],["{$ifc not defined MACOSALLINCLUDE or not MACOSALLINCLUDE}",904],["while not Eof do",807],["*    Non-Carbon CFM:   not available",3490],["if not Result then",2113],["*    CarbonLib:        not available",2016]],"useCount":97737},{"word":"now","context":[["- nothing now",64],["(* libavutil/common.h *) // until now MKTAG and MKBETAG is all from common.h KMS 19/5/2010",35],["Should now compile.",38],["These should now compile except for Socks server.  IPVersion has to be a",41],["{Is this bin now empty? If the previous and next free block pointers are",75],["{ For now, assume/hope/pray that we will succeed. }",127],["also IPv6 support, include files now in sub-directory",75],["{Is this bin now empty?}",75],["{Is the group now entirely empty?}",34],["You can also right-click the parent file and select 'Run Custom Tool' to update it now. }",34]],"useCount":2627},{"word":"number","context":[["{Log the allocation number}",68],["{Get the bin number in ecx}",58],["The number of items in the collection",166],["result := 0; // number of results",95],["result:=0; // number of results",95],["InBytes = number of bytes in InBuf",89],["OutBytes = number of bytes in OutBuf   }",70],["* @param log2_phase_count log2 of the number of entries in the polyphase filterbank",59],["* @param count the number of things to execute",64],["* @return On error a negative value is returned, otherwise the number of bytes",70]],"useCount":8663},{"word":"o","context":[["e := names.AsObject.Search(o.AsString);",88],["//========== Criar o objeto principal ==========================================",84],["if ObjectIsType(o, stString) then",70],["{  Para mais informações você pode consultar o site www.fortesreport.com.br ou }",95],["o := p['inherit'];",88],["Temple Place, Suite 330, Boston, MA\t02111-1307, USA. Ou acesse o site do",118],["*    Non-Carbon CFM:   in CarbonAccessors.o 1.0 and later",106],["o: ISuperObject;",235],["case ObjectGetType(o) of",220],["Result := Result and CheckRange(o, p, objpath);",154]],"useCount":7018},{"word":"obj","context":[["obj: ISuperObject;",520],["obj := GetO(index);",109],["obj: TObject;",118],["obj := Create_Field();",171],["obj : ISDOField;",171],["obj.Free;",208],["case ObjectGetType(obj) of",354],["obj := GetO(k);",153],["TokRec^.obj := nil;",154],["if obj <> nil then",550]],"useCount":11350},{"word":"object","context":[["raise EBESENTypeError.Create('Not a date object');",108],["///  <remarks>The default type object is requested.</remarks>",118],["of object;",192],["raise EBESENTypeError.Create('Null this object');",261],["of this <code>ResultSet</code> object as",271],["// (This object is used by the IDE's Property Inspector to allow editing",274],["TProcTableProc = procedure of object;",157],["TIdentFuncTableFunc = function: TtkTokenKind of object;",95],[") of object;",94],["Assign method copies the contents of another similar object.",81]],"useCount":6420},{"word":"objfpc","context":[["{$MODE objfpc}{$H+}",23],["{$mode objfpc}{$h+}",60],["{$ifdef FPC}{$mode objfpc}{$h+}{$INTERFACES CORBA}{$endif}",103],["{$mode objfpc}",368],["{$ifdef FPC}{$mode objfpc}{$h+}{$endif}",1131],["{$mode objfpc}{$H+}",5240],["{$ifdef FPC}{$mode objfpc}{$h+}{$interfaces corba}{$endif}",55],["{$mode objfpc} {$H+}",26],["//{$mode objfpc}",24],["{$MODE objfpc}",80]],"useCount":7154},{"word":"of","context":[["case Integer of",1226],["This file is part of the Indy (Internet Direct) project, and is offered",1100],["case Key of",929],["// server of this typelibrary.",927],["If you wish to allow use of your version of this file only under the terms",576],["// This unit is part of the GLScene Project, http://glscene.org",578],["case I of",646],["case Index of",874],["* The Initial Developer of the Original Code is",774],["case TokenID of",867]],"useCount":138338},{"word":"offset","context":[["offset: integer;",62],["* If < 0 then normal ratecontrol will be done (q= -normal_q*factor+offset).",64],["Ram.WriteByte(offset + 1, Ord(r1));",61],["mov dword ptr CodeEnd,offset @CodeEnd",253],["mov dword ptr CodeBegin,offset @CodeBegin",253],["inc(offset,last-1);",488],["offset := 0;",84],["inc(offset);",139],["mov rax,offset @CodeBegin",181],["mov rax,offset @CodeEnd",181]],"useCount":5354},{"word":"ok","context":[["ok := TRUE;",82],["ok := false;",183],["ok := True;",325],["ok := true;",190],["ok: boolean;",161],["CheckEquals(True,ok);",104],["ok : Boolean;",181],["if not ok then",84],["if ok then",258],["ok := False;",308]],"useCount":2978},{"word":"on","context":[["on e: Exception do",531],["{$warnings on}",321],["*  Returns:  0 on success, 1 if not successful.",345],["{$macro on}",497],["on E: Exception do begin",514],["on EConvertError do",530],["on E: Exception do",2552],["under the dual-licensing agreement described on the Indy website.",1100],["on E : Exception do",544],["{$inline on}",506]],"useCount":29562},{"word":"one","context":[["// functions like this one, called so many times",39],["* Read one packet and put it in 'pkt'. pts and flags are also",38],["* @return An encoder if one was found, NULL otherwise.",62],["* or NULL if f is the last one.",76],["* For packed audio, there is just one data pointer, and linesize[0]",40],["* to exactly one of the values provided by the user through AVCodecContext.reordered_opaque",40],["* scalar. Behavior with more than one scalar and +- infix operators",39],["* @return A decoder if one was found, NULL otherwise.",62],["// one alternative of an | operator",52],["{Get the size of the free block just before this one}",46]],"useCount":5176},{"word":"only","context":[["{ If you wish to allow use of your version of this file only under the terms   }",338],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.5",156],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only]",821],["If you wish to allow use of your version of this file only under the terms",576],["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework [32-bit only] but deprecated in 10.4",541],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.4",459],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.5",349],["This source is only used to compile and install the package.",230],["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework [32-bit only] but deprecated in 10.5",158],["*    Mac OS X:         in version 10.2 and later in Carbon.framework [32-bit only]",138]],"useCount":12253},{"word":"options","context":[["{$INCLUDE \"options.inc\"}",76],["* @param opt_flags Find only options with all the specified flags set (AV_OPT_FLAG).",39],["partial: boolean; const this: ISuperObject; options: TSuperFindOptions;",42],["if (foPutValue in options) then",44],["* @deprecated use encoder private options instead",58],["property options;",87],["* AV_OPT_SEARCH_FAKE_OBJ for examining options.",126],["if (TokRec^.current = nil) and (foCreatePath in options) then",110],["if (foDelete in options) and (evalstack = 0) then",66],["if (foPutValue in options) and (evalstack = 0) then",88]],"useCount":3870},{"word":"or","context":[["Redistribution and use in source and binary forms, with or without",325],["or contact:",297],["if (AR^.Debito <> 0) or",368],["and/or other materials provided with the distribution.",384],["{$ifc not defined MACOSALLINCLUDE or not MACOSALLINCLUDE}",904],["*    Mac OS X:         in version 10.4 (or QuickTime 7.0) and later in QuickTime.framework",287],["which is not derived from or based on this library. If you modify this",297],["| and/or other materials provided with the distribution.                       |",321],["| Redistribution and use in source and binary forms, with or without           |",321],["or",452]],"useCount":58916},{"word":"ord","context":[["if ord(value) = 0 then",56],["ord('='):begin",57],["assert(ord(a) < 32);",219],["ord('0')..ord('9'):begin",76],["ord('0')..ord('9'):begin",76],["assert(ord(aLoop) < 32);",219],["if i and (1 shl (ord(aLoop))) > 0 Then",219],["result := result + 1 shl (ord(a));",219],["stBoolean: Result := ord(FO.c_boolean);",65],["raise tevalnamedexception.create(uc(ord(rcsevaltype)),",54]],"useCount":4473},{"word":"order","context":[["// Specify AParent in order to store references to parent methods and",48],["wc.AddProperty('TabOrder', TPropertyInteger, 'The tab order');",96],["order: GPMATRIXORDER): GPSTATUS; stdcall;",85],["// In order to sign your assembly you must specify a key to use. Refer to the",69],["//   (*) In order to create a KeyFile, you can use the sn.exe (Strong Name) utility.",69],["{-reverse byte order in longint}",58],["case order of",54],["SQL.Add('order by ID_CLASIFICACION,ID_GARANTIA,ID_EDAD');",46],["sql.Add('order by \"col$extracto\".FECHA_EXTRACTO DESC');",50],["m_order:=order;",54]],"useCount":3257},{"word":"org","context":[["{           http://www.spring4d.org                                         }",328],["updates: http://www.delphizip.org",227],["http://www.freepascal.org/bugs.html",212],["{ http://www.mozilla.org/MPL/MPL-1.1.html                                      }",385],["http://www.mozilla.org/MPL/",572],["// This unit is part of the GLScene Project, http://glscene.org",578],["* http://www.mozilla.org/MPL/",1018],["(http://www.indyproject.org/)",1100],["{* info@sasgis.org                                                            *}",3129],["{* http://sasgis.org                                                          *}",3129]],"useCount":13822},{"word":"other","context":[["* deleting the provisions above and replace them with the notice and other",126],["| and/or other materials provided with the distribution.                       |",321],["// and/or other materials provided with the distribution.",93],["///  and/or other materials provided with the distribution.",95],["@link(LineBuffer) and you can combine this function freely with other",120],["*       documentation and/or other materials provided with the distribution.",230],["documentation and/or other materials provided with the distribution.",207],["mwEdit component suite by Martin Waldenburg and other developers, the Initial",185],["and/or other materials provided with the distribution.",384],["{ will require compiler define when/if other Apple devices with ARM cpus ship }",457]],"useCount":5513},{"word":"otherwise","context":[["////////// AlsoBuf : The filter alter buffer aswell ( otherwise, only result is filled in fft.data )",52],["* @return 0 if OK, AVERROR_xxx otherwise",45],["(* if year is 0 then date is in day-of-week format, otherwise",56],["* @return A decoder if one was found, NULL otherwise.",62],["* for that version as they otherwise most probably will break USDX.",62],["* otherwise the application might crash randomly or strange bugs (not",62],["* @return An encoder if one was found, NULL otherwise.",62],["* @return On error a negative value is returned, otherwise the number of bytes",70],["* @return zero if successful, a negative value otherwise",96],["@return <code>true</code> if so; <code>false</code> otherwise",440]],"useCount":3289},{"word":"out","context":[["out ByteCount: Integer);",114],["goto out;",505],["mov [edi], al               //Store digit out to memory",126],["out   ppErrors:                   PResultList): HResult; stdcall;",67],["out ppMesh: ID3DXMesh;",72],["{Fill out the structure}",83],["out ppEffect: ID3DXEffect;",84],["out ByteCount: Integer); override;",94],["function GetDevice(out ppDevice: IDirect3DDevice9): HResult; stdcall;",96],["function QueryInterface(const IID: TGUID; out Obj): HResult; stdcall;",118]],"useCount":11978},{"word":"output","context":[["assign(output, 'output.txt');",80],["Close(output);",84],["output('');",105],["close(output);",151],["rewrite(output);",164],["//       relative to the project output directory, which in Oxygene by default is the",65],["Result := output;",47],["assign(output, 'output.txt');",80],["* packet to the point at which the output from the decoder has converged",63],["writeln(output);",64]],"useCount":5777},{"word":"overload","context":[["constructor Create; overload;",684],["constructor Create(AInstance:TObject); overload; override;",477],["); overload;",464],["overload;",461],["IAqDBSQLComposedCondition; overload;",204],["constructor Create; overload; override;",182],["constructor Create(); overload;",139],["cdecl; external av__codec; overload;",126],["procedure load(params : TParseMap); overload; override;",114],["procedure load(params : TFHIRParameters); overload; override;",114]],"useCount":9561},{"word":"override","context":[["destructor Destroy; override;",21409],["constructor Create(AOwner: TComponent); override;",5003],["override;",2185],["destructor  Destroy; override;",2134],["constructor Create; override;",1787],["procedure Assign(Source: TPersistent); override;",1461],["procedure Execute; override;",1458],["procedure SetUp; override;",1292],["procedure TearDown; override;",1188],["procedure AfterConstruction; override;",1148]],"useCount":123317},{"word":"p","context":[["inc(p);",1530],["Inc(p);",1457],["z.next_in := p;",322],["p: Integer;",282],["p: integer;",217],["p: Pointer;",214],["p.Free;",206],["p: PChar;",204],["case p^ of",203],["p := nil;",185]],"useCount":21157},{"word":"packet","context":[["* @param pkt packet to dump",76],["* available, to avpkt. The output packet does not necessarily contain data for",45],["*                            output packet is non-empty, and to 0 if it is",45],["packet.Skip(1);",52],["* @param st AVStream that the packet belongs to",58],["* This field has no meaning if the packet does not have AV_PKT_FLAG_KEY",60],["*            You can create such packet with av_init_packet() and by then setting",60],["* packet to the point at which the output from the decoder has converged",63],["* @param pkt packet",282],["*                            packet can be assumed to be invalid, and the",45]],"useCount":3963},{"word":"para","context":[["///</para><para>",93],["{ para Delphi. Em FortesReport, os relatórios são constituídos por bandas que  }",95],["///<remarks><para>",99],["///   </para>",113],["///   <para>",113],["{ para maiores detalhes.                                                           }",620],["///</para><para>",93],["///</para></remarks>",89],["//========== Critério para campos ==============================================",84],["///\t  <para>",77]],"useCount":3046},{"word":"param","context":[["* @param s media file handle",255],["* @param avctx the codec context",255],["/// <param name=\"x\"></param>",152],["/// <param name=\"x\"></param>",152],["@param catalog a catalog name; \"\" retrieves those without a",130],["* @param pkt packet",282],["@param x the new column value",127],["///\t</param>",594],["/// </param>",570],["@param columnIndex the first column is 1, the second is 2, ...",366]],"useCount":27294},{"word":"parameter","context":[["user   : The 'user' parameter value given when calling BASS_StreamCreate",35],["* If the decoder parameter is non-NULL, av_find_best_stream will find the",35],["* @param fmt If non-NULL, this parameter forces a specific input format.",35],["@param Index the target parameter index",34],["@param parameterIndex the first parameter is 1, the second is 2, ...",31],["*          This parameter can be one of the following values:",36],["*                 On return this parameter will be destroyed and replaced with a dict containing",66],["*          kEventParamTabletEventType parameter contains",40],["const targetTypeInfo: PTypeInfo; const parameter: TValue): TValue;",102],["const parameter: TValue): TValue; override;",101]],"useCount":2921},{"word":"parameters","context":[["if parameters=2 then",164],["lua_pop(L, parameters);",415],["parameters:=lua_gettop(L);",524],["parameters: integer;",408],["if parameters=1 then",262],["end else lua_pop(L, parameters);",229],["// TODO: Setup method call parameters",58],["lastdisassembledata.parameters:=mm(memory[2])+','+modrm(memory,prefix2,2,3,last);",58],["var parameters: integer;",125],["lastdisassembledata.parameters:=xmm(memory[2])+','+modrm(memory,prefix2,2,4,last);",132]],"useCount":4622},{"word":"part","context":[["This file is part of Emballo.",113],["# This unit is part of the Delphinus project hosted on  #",121],["* This is a part of the Pascal port of ffmpeg.",128],["This file is part of Dev-C++",155],["* This file is part of FFmpeg.",156],["{ This file is a part of Map editor for VCMI project",186],["* This is a part of Pascal porting of ffmpeg.",191],["This file is part of the Free Pascal run time library.",213],["// This unit is part of the GLScene Project, http://glscene.org",578],["This file is part of the Indy (Internet Direct) project, and is offered",1100]],"useCount":7602},{"word":"path","context":[["$I path change",47],["path := IncludeTrailingPathDelimiter(path) + 'media';",47],["path := IncludeTrailingPathDelimiter(path) + 'media';",47],["SetCurrentDirUTF8(path);",49],["path: string;",130],["path: UTF8String;",53],["if (((SOIChar(v) < 256) and (AnsiChar(v) in path)) or (SOIChar(v) >= 256)) then",63],["ParseString(PSOChar(path), true, False, self, [foCreatePath, foPutValue], TSuperObject.Create(Value));",84],["path := ExtractFilePath(ParamStrUTF8(0));",49],["obj := GetO(path);",109]],"useCount":4643},{"word":"pb","context":[["tok.pb.Append(@v, 1);",294],["tok.pb.Reset;",330],["pb := p;",53],["pb.Free;",178],["TokRec^.current := TokRec^.parent.AsObject.GetO(tok.pb.Fbuf);",110],["if tok.pb.FBPos > 0 then",88],["if(Write(pb, indent, escape, 0) < 0) then",88],["pb: TSuperWriterString;",44],["tok.pb.FBuf[tok.st_pos] := #0;",44],["pb: PByte;",46]],"useCount":2859},{"word":"po1","context":[["inc(po1);",563],["po1:= datapo;",194],["if po1 <> nil then begin",180],["po1: pchar;",102],["if po1 = nil then begin",90],["po1: pointer;",80],["with po1^ do begin",80],["po1: pmoduleinfoty;",78],["po1: pointty;",68],["po2:= po1;",64]],"useCount":2575},{"word":"pointer","context":[["extraptr: pointer",321],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.ValueType))-ptruint(pointer(@v))));",316],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.ValueType))-ptruint(pointer(@v))));",316],["AddDWord(ptruint(Operands^[1]*sizeof(TBESENValue))+(ptruint(pointer(@v.Num))-ptruint(pointer(@v))));",172],["AddDWord(ptruint(Operands^[1]*sizeof(TBESENValue))+(ptruint(pointer(@v.Num))-ptruint(pointer(@v))));",172],["priv_data: pointer;",171],["p: pointer;",119],["ptrItem: pointer;",146],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.Bool))-ptruint(pointer(@v))));",168],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.Bool))-ptruint(pointer(@v))));",168]],"useCount":14411},{"word":"pool","context":[["{Get the next medium block pool}",94],["pool: PAprPool): PSvnError; cdecl;",183],["{Remove this medium block pool from the linked list}",51],["{Free the medium block pool}",51],["{Set this medium pool up as the new sequential feed pool:",46],["{Insert this as the first partially free pool for the block size}",46],["{Is this the sequential feed pool? If so, stop sequential feeding}",46],["{Set this medium pool up as the new sequential feed pool:",46],["{Increment the number of used blocks in the sequential feed pool}",46],["{Is the entire medium block pool free, and there are other free blocks",46]],"useCount":2861},{"word":"pop","context":[["pop ebp",739],["pop   ebx",164],["{$pop}",198],["pop edi",359],["pop eax",243],["pop edx",255],["pop rax",302],["pop ecx",330],["pop esi",462],["pop ebx",755]],"useCount":6122},{"word":"pos","context":[["pos: cint64;",69],["tmp := copy(tmp,pos(';',tmp)+1,length(tmp));",62],["Append(str + start_offset, pos - start_offset);",135],["(pos (nextch, fLineSeparators) <= 0)",50],["start_offset := pos;",135],["Inc(pos);",149],["case pos of",176],["pos := 0;",543],["inc(pos);",615],["if(pos - start_offset > 0) then",179]],"useCount":4165},{"word":"position","context":[["* current position.",38],["* @return new position or AVERROR.",37],["AVSEEK_FLAG_BYTE     = 2; ///< seeking based on position in bytes",38],["///  <returns>The element at the specified position.</returns>",39],["position:=i;",55],["///  <summary>Returns the element at a given position.</summary>",56],["* The logical file position is not changed by this function;",64],["// set position and dimension",127],["// Horiz = horizontal position in column (cnLeft,cnCenter,cnRight)",36],["if position=-1 then exit;",37]],"useCount":3492},{"word":"private","context":[["private",65686],["strict private",3114],["* @deprecated use encoder private options instead",58],["private class var",58],["private var",70],["// Assigning private members",74],["private const",167],["protected {private}",275],["private type",314],["{ private declarations }",1543]],"useCount":72726},{"word":"procedure","context":[["procedure Assign(Source: TPersistent); override;",1461],["procedure Clear;",3163],["procedure FormShow(Sender: TObject);",4327],["procedure Execute; override;",1458],["procedure Button1Click(Sender: TObject);",1843],["procedure FormDestroy(Sender: TObject);",2362],["procedure Register;",2864],["procedure FormClose(Sender: TObject; var Action: TCloseAction);",2924],["procedure SetUp; override;",1292],["procedure FormCreate(Sender: TObject);",7938]],"useCount":216360},{"word":"project","context":[["{ The project web site is located on:                     }",137],["Contributors to the SynEdit project are listed in the Contributors.txt file.",145],["{ This file is a part of Map editor for VCMI project",186],["//       located in the project directory, you would specify the AssemblyKeyFile",69],["(http://cran.r-project.org). The project is coordened by José Cláudio Faria",69],["// #### This file is part of the mathematics library project, and is",70],["This file is part of the Indy (Internet Direct) project, and is offered",1100],["{    This code is distributed as part of the FREE!ship project. FREE!ship is an               }",100],["This unit is part of the fpGUI Toolkit project.",112],["# This unit is part of the Delphinus project hosted on  #",121]],"useCount":3081},{"word":"prop","context":[["{@prop AutoSize = ancestor /}",80],["{@prop Font = ancestor /}",100],["{@prop ParentFont = ancestor /}",85],["{@prop ParentColor = ancestor /}",90],["{@prop Color = ancestor /}",90],["{@prop RealBounds = ancestor /}",100],["{@prop FriendlyName = ancestor /}",100],["{@prop Borders = ancestor /}",100],["{@prop Transparent = ancestor /}",100],["{@prop Visible = ancestor /}",100]],"useCount":2714},{"word":"property","context":[["property Visible;",905],["property Enabled;",695],["property Count: Integer read GetCount;",715],["property Align;",741],["property Font;",753],["property OnMouseUp;",611],["property ShowHint;",624],["property OnMouseDown;",625],["property OnClick;",660],["property Anchors;",681]],"useCount":85289},{"word":"protected","context":[["strict protected",992],["protected",39286],["protected type",24],["protected {private}",275],["{$IFDEF VERD2007up}strict{$ENDIF} protected",28],["protected {methods}",103],["protected {properties}",75],["protected {events}",41],["{$REGION 'protected methods'}",69],["{ protected declarations }",55]],"useCount":41146},{"word":"provided","context":[["*       documentation and/or other materials provided with the distribution.",230],["provided with Rgui. It provides syntax-highlighting, submission of code in",69],["// and/or other materials provided with the distribution.",93],["and/or other materials provided with the distribution.",384],["provided that you also meet, for each linked independent module, the terms",365],["///  and/or other materials provided with the distribution.",95],["{ executable under terms of your choice, provided that    }",154],["documentation and/or other materials provided with the distribution.",207],["| and/or other materials provided with the distribution.                       |",321],["*                  function, but if the size of the user-provided data is not",45]],"useCount":2815},{"word":"ptr","context":[["cmp byte ptr [R8 + TOpcodeAddress_offset + TOpcodeConst.FKind], ckValue",166],["cmp byte ptr [ECX + TOpcodeAddress_offset + TOpcodeConst.FKind], ckValue",164],["mov al, byte ptr HexTable[eax]",136],["sbb edi, -1                 //Yes->increment ptr, No->keep old ptr",126],["mov qword ptr CodeEnd,rax",181],["sbb edi, -1                 //Yes->increment ptr, No->keep old ptr",126],["Inc(ptr);",115],["mov qword ptr CodeBegin,rax",181],["mov dword ptr CodeEnd,offset @CodeEnd",253],["mov dword ptr CodeBegin,offset @CodeBegin",253]],"useCount":8555},{"word":"ptruint","context":[["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.ValueType))-ptruint(pointer(@v))));",316],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.Bool))-ptruint(pointer(@v))));",168],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.ValueType))-ptruint(pointer(@v))));",316],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.ValueType))-ptruint(pointer(@v))));",316],["AddDWord(ptruint(Operands^[1]*sizeof(TBESENValue))+(ptruint(pointer(@v.Num))-ptruint(pointer(@v))));",172],["AddDWord(ptruint(Operands^[1]*sizeof(TBESENValue))+(ptruint(pointer(@v.Num))-ptruint(pointer(@v))));",172],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.Bool))-ptruint(pointer(@v))));",168],["AddDWord(ptruint(Operands^[1]*sizeof(TBESENValue))+(ptruint(pointer(@v.Num))-ptruint(pointer(@v))));",172],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.Bool))-ptruint(pointer(@v))));",168],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue)));",124]],"useCount":3726},{"word":"public","context":[["public type",85],["{$REGION 'public methods'}",63],["* New public fields should be added right above.",169],["public {properties}",135],["* No fields below this line are part of the public API. They",88],["public const",71],["* All fields below this line are not part of the public API. They",81],["public {methods}",215],["{ public declarations }",1584],["public",90644]],"useCount":93908},{"word":"published","context":[["// published",13],["//  published",40],["property Style; {Must be published before Items}",14],["///<remarks>Based on code by David J Taylor published in",16],["property Drawers: TFrmDrawers read GetDrawers; // Keep Drawers published",16],["Added published host and port properties.",28],["published {properties}",22],["published",13922]],"useCount":14071},{"word":"push","context":[["push ecx",291],["push [ebp+8]",372],["push ebx",333],["push eax",316],["push [ebp+12]",315],["push esi",258],["push edi",257],["push edx",252],["push rax",200],["push [ebp+16]",199]],"useCount":5667},{"word":"q","context":[["s.write := q;",362],["* If < 0 then normal ratecontrol will be done (q= -normal_q*factor+offset).",64],["q := s.window;",69],["q.ExecSQL;",70],["if ptr2int(q) < ptr2int(s.read) then",75],["q.Close;",78],["q.Free;",78],["Inc(q);",84],["q := s.write;",87],["q.Open;",215]],"useCount":3355},{"word":"qword","context":[["fistp qword ptr [edx + 24]",85],["fistp qword ptr [edx + 8]",85],["fistp qword ptr [edx]",85],["fild qword ptr [eax + 8]",85],["Add(#$dd#$87); // fld qword ptr [edi+RegisterOfs+TBESENValue.Num]",92],["mov qword ptr CodeEnd,rax",181],["mov qword ptr CodeBegin,rax",181],["fild qword ptr [eax + 16]",85],["fild qword ptr [eax + 24]",85],["fild qword ptr [eax]",86]],"useCount":2747},{"word":"r","context":[["r^.ValueType:=bvtBOOLEAN;",144],["inflate_blocks := inflate_flush(s,z,r);",147],["r:=@RegisterValues[Operands^[0]];",280],["Result := r;",136],["r := 0;",308],["r: Integer;",153],["r: TRect;",223],["var r:PBESENValue;",208],["r: TfpgRect;",168],["r: integer;",156]],"useCount":14771},{"word":"r1","context":[["Ram.WriteByte(offset + 1, Ord(r1));",61],["CodeGeneratorContext.DeallocateRegister(r1);",416],["r1:=-1;",336],["if r1<0 then begin",192],["GenGetValue(r1,r2);",156],["r2:=r1;",146],["if IsValueNumber(r1) then begin",116],["if IsValue(r1) or IsLocalVariableReference(r1) then begin",72],["if IsValue(r1) or IsLocalVariableReference(r1) then begin",72],["Code.GenOp(bopSTRICTCHECKREF,r1);",60]],"useCount":2723},{"word":"raise","context":[["raise EJclNoSuchElementError.Create('');",1061],["raise EJclOperationNotSupportedError.Create;",741],["raise EJclReadOnlyError.Create;",3629],["raise;",5973],["raise EJclOutOfBoundsError.Create;",494],["raise EAbNoArchive.Create;",301],["raise EBESENTypeError.Create('Null this object');",261],["raise",259],["raise ETMLError.Create(FLastMessage);",244],["raise EAbUserAbort.Create;",142]],"useCount":22931},{"word":"rax","context":[["push rax",200],["mov qword ptr CodeBegin,rax",181],["pop rax",302],["mov qword ptr CodeEnd,rax",181],["mov rax,offset @CodeBegin",181],["mov rax,offset @CodeEnd",181],["shr rax, 7",128],["add rax, rdx",134],["mov rax, rdx",150],["sub rax, rdx",125]],"useCount":5003},{"word":"rcx","context":[["mov rax, rcx",112],["mov rcx, rdx",58],["add rcx, rdx;",69],["mov rdx, [rcx - BlockHeaderSize]",72],["movdqa xmm1, [rcx + 16]",82],["mov rsi, rcx",84],["movdqa xmm0, [rcx]",117],["push rcx",120],["mov rcx, rsi",216],["mul rcx",248]],"useCount":3454},{"word":"rdx","context":[["movdqa [rdx + 16], xmm1",82],["add rcx, rdx;",69],["mov rdx, [rcx - BlockHeaderSize]",72],["xchg rdx, r8",85],["lea rdx, [rdx + OPCODE]",198],["movdqa [rdx], xmm0",117],["sub rax, rdx",125],["add rax, rdx",134],["mov rax, rdx",150],["lea rdx, [rdx + OPCODE]",198]],"useCount":3669},{"word":"read","context":[["property _NewEnum: IUnknown read Get__NewEnum;",184],["// The types declared in this file were generated from data read from a",172],["property Name: string read FName write FName;",174],["property Count: integer read GetCount;",175],["property Count: Integer read GetCount;",715],["property Name: string read FName;",186],["property OnChange: TNotifyEvent read FOnChange write FOnChange;",378],["property KeyAttri: TSynHighlighterAttributes read fKeyAttri write fKeyAttri;",199],["property Count: Integer read Get_Count;",209],["property Name: string read GetName;",236]],"useCount":38136},{"word":"readonly","context":[["property previousSibling: IXMLDOMNode readonly dispid 10;",156],["property Application: Application readonly dispid 1;",210],["property Parent: _IVSQLDMOStdObject readonly dispid 2;",202],["property TypeOf: SQLDMO_OBJECT_TYPE readonly dispid 4;",202],["property _NewEnum: IUnknown readonly dispid -4;",175],["property firstChild: IXMLDOMNode readonly dispid 8;",156],["property namespaceURI: WideString readonly dispid 32;",156],["property definition: IXMLDOMNode readonly dispid 23;",156],["property nodeTypeString: WideString readonly dispid 21;",156],["property specified: WordBool readonly dispid 22;",156]],"useCount":6603},{"word":"real","context":[["function GetPF(i_bcp:real; pp, hp, dt, ep: real): real; override;",45],["function GetPF(i_bcp:real; pp, hp, dt, ep: real): real; override;",45],["procedure Init(press: real); override;",45],["ColR, ColG, ColB: real;",58],["rtTime: TReferenceTime;    (* real time (in 100 nanosecond increments) *)",52],["a: array [1..10,1..10] of real;",51],["rea1: real;",50],["procedure SetAnimationProgress(Progress: real); override;",63],["* function also computes the real framerate in case of MPEG-2 repeat",64],["6: writeln('(real)');",106]],"useCount":3061},{"word":"record","context":[["Union: record",43],["TStreamInfo = record",41],["record",454],["{$PACKRECORDS C} (* C/C++-compatible record packing *)",199],["TByteChar = record",45],["TZStreamRec = packed record",47],["// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord",47],["swaptype = packed record",53],["Store: record",63],["end; { record }",121]],"useCount":7299},{"word":"reginput","context":[["if (nextch = #0) or (reginput^ = nextch) then begin",52],["inc (reginput, len);",50],["if (reginput^ = #0) or //!!!TinySet",52],["inc (reginput);",375],["//            save := reginput;",52],["if (reginput^ = #0)",52],["reginput := save + no;",52],["reginput := scan;",78],["reginput := save;",182],["save := reginput;",208]],"useCount":2807},{"word":"regparse","context":[["inc (regparse);",375],["do inc (regparse);",150],["NonGreedyCh := (regparse + 1)^ = '?'; //###0.940",104],["then inc (regparse); // Skip extra char ('?')",75],["p := regparse;",52],["regparse := exp;",52],["if regparse^ = #0 then begin",52],["if regparse^ <> ')' then begin",52],["case regparse^ of // r.e.extensions",52],["regparse := savedparse;",52]],"useCount":3123},{"word":"remarks","context":[["///\t<remarks>",117],["/// </remarks>",455],["/// <remarks>",428],["///  <remarks>The default type object is requested.</remarks>",118],["///  <remarks>The default type object is requested.</remarks>",118],["///\t</remarks>",117],["///<remarks><para>",99],["///  <remarks>The default rule set is requested.</remarks>",91],["///  <remarks>The default rule set is requested.</remarks>",91],["///</para></remarks>",89]],"useCount":3170},{"word":"repeat","context":[["BracesMax := regrepeat (opnd, BracesMax); // don't repeat more than BracesMax",25],["no := regrepeat (opnd, BracesMax); // don't repeat more than max_cnt",25],["if (i < Src.Count) and (Src[i][1] <> '~') then repeat",24],["repeat //###0.948",23],["// repeat exclusively",33],["Break;{out of repeat}",27],["repeat",21459],["break; //repeat",151],["* function also computes the real framerate in case of MPEG-2 repeat",64],["break //repeat",34]],"useCount":22065},{"word":"reserved","context":[["* This flag is reserved to the very rare category of codecs which have a",37],["dwReserved3: DWORD;            // reserved",46],["dwReserved1: DWORD;            // reserved",46],["dwReserved2: DWORD;            // reserved",46],["{ reserved.                                                                    }",32],["reserved: UInt32;               { fill with 0x00 }",31],["ME_X1,        ///< reserved for experiments",30],["(unicode : 65535; flag : umf_unused; reserved: 0),",148],["* This bit is reserved for internal use",30],["<LI> reserved for future use",30]],"useCount":3983},{"word":"result","context":[["result:=0;",1682],["result := false;",3436],["result := true;",2976],["result := 0;",2768],["result:=false;",2288],["result:=true;",2035],["result := nil;",1743],["result := '';",1576],["result:= false;",1081],["result := 1;",1007]],"useCount":64496},{"word":"ret","context":[["ret := EmitNode (COMMENT); // comment",75],["ret 8",118],["ret: Integer;",133],["ret",1297],["if (ret = -2) then",52],["ret := CleanPath(Cleaned, Good, False);",57],["ret 16",58],["ret 4",60],["ret 12",95],["Result := ret;",118]],"useCount":4486},{"word":"return","context":[["return result;",106],["@return <code>true</code> if so; <code>false</code> otherwise",440],["@return the column value; if the value is SQL <code>NULL</code>, the",264],["return MZ_FALSE;",151],["* @return 0 if OK, AVERROR_xxx on error",118],["* @return zero if successful, a negative value otherwise",96],["{ update pointers and return }",84],["locStrPrmName := 'return';",74],["* @return On error a negative value is returned, otherwise the number of bytes",70],["*                 On return this parameter will be destroyed and replaced with a dict containing",66]],"useCount":11288},{"word":"returned","context":[["You must release the returned value.",36],["///  the value in <paramref name=\"ADefault\"/> is returned.</remarks>",36],["* @param flags if AVSEEK_FLAG_BACKWARD then the returned index will correspond",38],["// subnode is not found, or cannot be converted, ADefault will be returned.",44],["// be returned.",50],["* @return On error a negative value is returned, on success zero or the number",58],["* @return On error a negative value is returned, otherwise the number of bytes",70],["value returned is <code>0</code>",103],["*    On success, noErr is returned. See MacErrors.h for possible error",105],["value returned is <code>null</code>",148]],"useCount":3367},{"word":"returns","context":[["///\t<returns>",165],["recorded in 'err' and this function returns OCI_ERROR.",147],["/// </returns>",389],["/// <returns>",330],["See if an item is already in the list. returns -1 if not in the list",166],["///\t</returns>",165],["* if f is non-NULL, returns the next registered input format after f",74],["/// <returns></returns>",136],["/// <returns></returns>",136],["returns Returns 0 on success, -1 on failure.",64]],"useCount":7960},{"word":"s","context":[["s : string;",497],["s:string;",525],["if s <> '' then",566],["CheckEquals(FExpectedString, FActualString, Format('Expected %s but got %s.',",602],["CheckEquals(FExpectedString, FActualString, Format('Expected %s but got %s.',",602],["s: AnsiString;",700],["s: String;",795],["s := '';",970],["* Contributor(s):",1027],["s: string;",4169]],"useCount":64050},{"word":"s1","context":[["s1, s2: string;",79],["if formuladebug then AddMessage('s1 = '+s1);",50],["if formuladebug then AddMessage('s1 = '+s1);",50],["Port := SeparateRight(s1, ':');",46],["s2 := pieces(s1,' ',2,99);",42],["if length(piece(s1,' ',2)) > 0 then",42],["s1 := Item1.SubItems[ix]",42],["inc(pchar(po1),s1);",52],["s1: string;",40],["s1 := '';",59]],"useCount":3637},{"word":"safe","context":[["*    Thread safe since version 10.4",89],["*\tThread safe",71],["*    Thread safe since version 10.5",143],["* The only safe way to support new versions of FFmpeg is to add the changes",62],["* @warning This function is not thread safe!",47],["*    Thread safe",154],["*    Thread safe since version 10.3",156],["*    Thread safe since version 10.2",172],["*    Thread safe since version 10.0",278],["*    Not thread safe",2666]],"useCount":4210},{"word":"safecall","context":[["function Get_Parent: _IVSQLDMOStdObject; safecall;",155],["function Get_Parent: IDispatch; safecall;",131],["function Get_UserData: Integer; safecall;",155],["function Get_TypeOf: SQLDMO_OBJECT_TYPE; safecall;",155],["procedure Set_UserData(pRetVal: Integer); safecall;",155],["function Get_Application: Application; safecall;",161],["function Get__NewEnum: IUnknown; safecall;",163],["function GetName: WideString; override; safecall;",195],["function Get_Count: Integer; safecall;",222],["function Get_Name: WideString; safecall;",284]],"useCount":7495},{"word":"sample","context":[["* audio sample format",32],["BASS_TAG_MUSIC_SAMPLE = $10300; // + sample #, MOD sample name : ANSI string",31],["* bits per sample/pixel from the demuxer (needed for huffyuv).",32],["* Bits per sample/pixel of internal libavcodec pixel/sample format.",32],["* Bits per sample/pixel of internal libavcodec pixel/sample format.",32],["* sample aspect ratio for the video frame, 0/1 if unknown/unspecified",33],["// Virtual Treeview sample form demonstrating following features:",37],["* @return Number of bits per sample or zero if unknown for the given codec.",53],["* Return codec bits per sample.",53],["* sample aspect ratio (0 if unknown)",70]],"useCount":2856},{"word":"samples","context":[["* @param[in] want_sample indicates if samples are wanted which exhibit this feature.",31],["*  X   X      3 4 X      X are luma samples,",35],["* This defines the location of chroma samples.",32],["* @param dst_size the amount of space in samples available in dst",31],["buffer : Buffer to write the samples in",31],["* @param sample_delta number of output samples which should be output less",31],["* message which tells the user how to report samples to the development",31],["* number of audio samples (per channel) described by this frame",36],["* This can be used to prevent truncation of the last audio samples.",37],["* here instead of 510 samples only 500 samples would be output",31]],"useCount":2761},{"word":"sasgis","context":[["{* info@sasgis.org                                                            *}",3129],["{* http://sasgis.org                                                          *}",3129]],"useCount":6258},{"word":"scan","context":[["inc (scan);",450],["reginput := scan;",78],["while scan <> nil do begin",78],["Include (FirstCharSet, (scan + REOpSz + RENextOffSz)^);",75],["FillFirstCharSet (scan + REOpSz + RENextOffSz);",75],["scan := regnext (scan);",75],["scan := regnext (scan);",75],["end; { of case scan^}",52],["scan := prog;",52],["end; { of while scan <> nil}",52]],"useCount":5008},{"word":"see","context":[["* @see av_opt_find().",127],["@see #getSearchStringEscape",66],["//   (*) Delay Signing is an advanced option - see the Microsoft .NET Framework",69],["[^]: Changes since v. 1.7.0. Fore more information, please see 'README.md'",71],["(** see below. they need to be hard coded.",110],["* Donations: see Donation section on Description.txt",124],["// see inherited @inherited",196],["(see the file copying.txt) with the following modification:",296],["| History: see HISTORY.HTM from distribution package                           |",322],["* along with this program; see the file COPYING. If not, write to",563]],"useCount":5256},{"word":"select","context":[["SQL.Add('select VALOR_TASA_EFECTIVA from ');",86],["SQL.Add('select CODIGO from \"col$codigospucbasicos\" where ID_CODIGOPUCBASICO = 1');",61],["SQL.Add('select * from \"gen$direccion\"');",66],["IBSQL3.SQL.Add('select * from VALOR_AGENCIA(:ID_AGENCIA,:MES,:CODIGO)');",69],["SQL.Add('select * from \"col$codigospuc\" where ');",69],["//========== Execute/select procedure procedure ================================",75],["SQL.Add('select ');",155],["IBSQL3.SQL.Add('select SUM(\"con$saldoscuenta\".DEBITO - \"con$saldoscuenta\".CREDITO) AS SALDO');",87],["IBSQL3.SQL.Add('select \"con$puc\".SALDOINICIAL AS SALDO');",87],["IBSQL3.SQL.Add('select NOMBRE from \"con$puc\" where CODIGO = :CODIGO');",192]],"useCount":2579},{"word":"self","context":[["self.Close;",152],["result := self;",163],["TranslateComponent(self);",125],["lstQualifierClick(self);",104],["FOnChange(self);",85],["FormResize(self);",86],["self.ParentWindow := GetDesktopWindow;",89],["frmProgreso := TfrmProgreso.Create(self);",91],["tvReportsClick(self);",103],["Parent := self;",96]],"useCount":9196},{"word":"server","context":[["Are you missing properties for specify server address and port? Look to",44],["// server of this typelibrary.",927],["{:SSL/TLS mode is used from first contact to server. Servers with full",28],["the GET method for URL document to an HTTP server. Returned document is in the",28],["{CC2: This is one of the few cases where the server can return only \"OK completed\"",35],["// Socks server replies on connect, this is the second part",37],["These should now compile except for Socks server.  IPVersion has to be a",41],["BASS_STREAM_STATUS      = $800000;// give server status info (HTTP/ICY tags) in DOWNLOADPROC",30],["{ sets fields to pieces passed from server:  TYP ^ Code ^ Category ^ Narrative ^ Qty ^ Prov }",42],["//  of the properties of this server)",274]],"useCount":2728},{"word":"set","context":[["// set proper transperancy",121],["* - encoding: MUST be set by user.",125],["// set position and dimension",127],["* - encoding: set by user.",151],["///  <remarks>The default rule set is requested.</remarks>",91],["* - decoding: set by libavcodec. *)",78],["FileMode := 2; //set to read/write",77],["* set.",75],["* - decoding: set by libavcodec.",75],["* - decoding: set by libavcodec, read by user.",104]],"useCount":14648},{"word":"setc","context":[["{$setc TARGET_OS_EMBEDDED := FALSE}",1824],["{$setc TARGET_IPHONE_SIMULATOR := FALSE}",2285],["{$setc TARGET_CPU_X86 := FALSE}",1828],["{$setc TARGET_CPU_ARM := FALSE}",1828],["{$setc TARGET_CPU_PPC64 := FALSE}",1828],["{$setc TARGET_CPU_PPC := FALSE}",1828],["{$setc TARGET_CPU_X86_64 := FALSE}",1828],["{$setc TARGET_OS_MAC := TRUE}",1828],["{$setc TARGET_OS_IPHONE := FALSE}",1828],["{$setc TARGET_OS_IPHONE := TRUE}",914]],"useCount":42468},{"word":"shl","context":[["T0[2] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["(FILE_DEVICE_FILE_SYSTEM shl 16) or (FILE_ANY_ACCESS shl 14) or",230],["(FILE_DEVICE_FILE_SYSTEM shl 16) or (FILE_ANY_ACCESS shl 14) or",230],["T1[3] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T1[0] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[0] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["shl bx, 2",192],["if i and (1 shl (ord(aLoop))) > 0 Then",219],["result := result + 1 shl (ord(a));",219],["T1[0] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144]],"useCount":12526},{"word":"should","context":[["(* this field should always be 0. *)",52],["Check(not Status, 'Status should be False');",51],["//      format.  Alpha is significant, and should usually be set to FF for",56],["Check(ReturnValue, 'ReturnValue should be True');",67],["//       When specifying the KeyFile, the location of the KeyFile should be",69],["CheckTrue(it.Next, 'Iterator should not be at end');",73],["* @param f The file stream pointer where the dump should be sent to.",76],["* than name. You should use the NULL_IF_CONFIG_SMALL() macro",76],["* New public fields should be added right above.",169],["* Code outside libavcodec should access this field using:",250]],"useCount":6309},{"word":"shr","context":[["GetBit := ((DrumP shr 2) and 1) = 1;",176],["GetBit := ((DrumP shr 7) and 1) = 1;",176],["GetBit := ((DrumP shr 1) and 1) = 1;",176],["GetBit := ((DrumP shr 5) and 1) = 1;",176],["I := (L + H) shr 1;",328],["Value := Integer(UNICONV_SUPPORTED_SBCS_HASH[NativeUInt(Value) shr 24]);",181],["GetBit := ((DrumP shr 3) and 1) = 1;",176],["GetBit := ((DrumP shr 0) and 1) = 1;",176],["GetBit := ((DrumP shr 6) and 1) = 1;",176],["GetBit := ((DrumP shr 4) and 1) = 1;",176]],"useCount":19872},{"word":"since","context":[["{Check that the block has not been modified since being freed}",68],["@since   2002-11-25",360],["*    Thread safe since version 10.2",172],["@since   2006-08-14",66],["[^]: Changes since v. 1.7.0. Fore more information, please see 'README.md'",71],["*    Thread safe since version 10.4",89],["*    Thread safe since version 10.5",143],["@since   2003-11-14",64],["*    Thread safe since version 10.0",278],["*    Thread safe since version 10.3",156]],"useCount":3799},{"word":"size","context":[["<b>History : </b><font size=-1><ul>",521],["size := 0;",128],["CheckEquals(2,ls.size());",124],["size: integer;",113],["CheckEquals(3,ls.size());",108],["CheckEquals(0,ls.size());",222],["vls.delete(RandomRange(0, ( vls.size() - 1 ) ));",208],["CheckEquals(1,ls.size());",171],["{Set the size and flags for this block}",138],["size: Integer;",103]],"useCount":18939},{"word":"sizeof","context":[["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.ValueType))-ptruint(pointer(@v))));",316],["AddDWord(ptruint(Operands^[1]*sizeof(TBESENValue))+(ptruint(pointer(@v.Num))-ptruint(pointer(@v))));",172],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.Bool))-ptruint(pointer(@v))));",168],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue)));",124],["move(tmp, Digest, sizeof(Digest));",96],["FillChar(strm, sizeof(strm), 0);",96],["AddDWord(ptruint(Operands^[1]*sizeof(TBESENValue)));",88],["AddDWord(ptruint(Operands^[2]*sizeof(TBESENValue))+(ptruint(pointer(@v.Num))-ptruint(pointer(@v))));",84],["inc(ptrcomp(y ) ,sizeof(int ) );",81],["inc(ptrcomp(x ) ,sizeof(int ) );",81]],"useCount":7497},{"word":"sl","context":[["smartext     : '.sl';",57],["sl.Free;",685],["sl : TStringList;",76],["sl.Clear;",87],["sl := TStringList.Create;",627],["for i := 0 to sl.Count - 1 do",93],["sl:=TStringList.Create;",138],["sl: TStringList;",542],["sl:TStringList;",49],["for i := 0 to sl.Count-1 do",44]],"useCount":3348},{"word":"so","context":[["{ If you do not wish to do so, delete this exception      }",137],["a pointer to RPCBrokerV.Results, so the data must be used BEFORE the next broker call! }",108],["this sort and so is using a Variant as a passthrough. }",97],["furnished to do so, subject to the following conditions:",93],["{ of the library, but you are not obligated to do so.     }",137],["@return <code>true</code> if so; <code>false</code> otherwise",440],["so, subject to the following conditions:",169],["are not obligated to do so. If you do not wish to do so, delete this exception",297],["are not obligated to do so. If you do not wish to do so, delete this exception",297],["// RLebeau 2/14/09: this forces C++Builder to link to this unit so",85]],"useCount":6882},{"word":"socket","context":[["Note: If you call this on non-created socket, then socket is created",40],["function SaveTo(socket: longint; indent: boolean = false; escape: boolean = true): integer; overload;",44],["{:Connects socket to remote IP address and PORT. The same rules as with",40],["{:Return value of socket type. For RAW and ICMP return SOCK_RAW.}",40],["Note: If you call this on non-created socket, then socket is created",40],["automatically created (socket handler is returned by this function as",34],["{:Waits until new incoming connection comes. After it comes a new socket is",34],["{:Sets socket to receive mode for new incoming connections. It is necessary",34],["SOCK_STREAM     = 1;               { stream socket }",33],["SOCK_DGRAM      = 2;               { datagram socket }",33]],"useCount":3378},{"word":"some","context":[["* misdetect some more or less valid parts as errors.",40],["<li>28/03/07 - DaStr - Renamed parameters in some methods",40],["* for some private data of the user",43],["-Fixed some bugs",47],["* This is used to work around some encoder bugs.",57],["* - For Mac OS X, some modifications were made by The Creative CAT, denoted as CAT",191],["* some other means.",75],["* essential for some types of subtitle streams to ensure that all",63],["* IMPORTANT: The official FFmpeg C headers change very quickly. Often some",62],["* the actual read bytes because some optimized bitstream readers read 32 or 64",60]],"useCount":3628},{"word":"source","context":[["2. Altered source versions must be plainly marked as such, and must not be",327],["Redistribution and use in source and binary forms, with or without",325],["| Redistribution and use in source and binary forms, with or without           |",321],["The source code of the BESEN ecmascript engine library and helper tools are",296],["Guard.CheckNotNull(Assigned(source), 'source');",243],["Guard.CheckNotNull(Assigned(source), 'source');",243],["* Redistribution and use in source and binary forms, with or without",250],["Redistribution and use in source and binary forms, with or without modification,",287],["source: IEnumerable<Integer>;",376],["* file distributed with this source distribution.",563]],"useCount":10227},{"word":"sql","context":[["sql.Add(' where ');",136],["sql.Add(texto);",831],["sql.Clear;",414],["query.sql.clear;",162],["sql: string;",138],["queryMySql(sql,LibHandle, mySQL_Res);",113],["execMySql(sql,LibHandle);",73],["sql.Add('update \"col$colocacion\" set ');",72],["TabelaArmazenar.sql.clear;",70],["sql.Add('where');",57]],"useCount":5223},{"word":"st","context":[["for st := Low( TZMQSocketType ) to High( TZMQSocketType ) do",49],["st: TZMQSocketType;",49],["st.Free;",83],["st: TSystemTime;",90],["st: string;",94],["st.day := 1;",56],["st := st + '\". Default is \"1\". Possible range 0-1.';",57],["st := st + '\". Default is \"1\". Possible range 0-1.';",57],["* @param st AVStream that the packet belongs to",58],["addmessage(st);",70]],"useCount":3614},{"word":"stack","context":[["and popped off the stack. Note that the stack size is limited, so every push",35],["cmp ebp, 0\t//this can happen when there are no stack frames",78],["// prolog - simulate stack",71],["{Add the current stack trace}",51],["///  <exception cref=\"Collections.Base|ECollectionEmptyException\">The stack is empty.</exception>",41],["and popped off the stack. Note that the stack size is limited, so every push",35],["{Allocation groups work in a stack like fashion. Group numbers are pushed onto",35],["@param Stack the stack object.",34],["_stack: stack;",113],["TokRec := @tok.stack[tok.depth];",132]],"useCount":2604},{"word":"start","context":[["if Prop.HasBorderStyle then {start of inline border}",60],["start := ReadCycles(HR);",186],["* you start working on it). Simply adjusting the max. versions is NOT a valid",62],["{Point eax to the start of the remainder}",45],["start := 0;",40],["{Get a pointer to the start of the actual block}",34],["// Set next start positon",38],["time_base: TAVRational;   ///< time base in which the start/end timestamps are specified",36],["//CCOW start",33],["start := MtxGetTime;",33]],"useCount":3180},{"word":"state","context":[["TokRec^.state := tsEatws;",484],["TokRec^.state := TokRec^.saved_state;",110],["state := stHour;",102],["<li>05/03/10 - DanB - More state added to TGLStateCache",95],["TokRec^.state := tsEvalArray;",88],["TokRec^.state := tsFinish;",88],["TokRec^.state := tsIdentifier;",154],["state := stGMTH;",136],["case state of",100],["FStack^.state := xsEatSpaces;",130]],"useCount":5955},{"word":"status","context":[["//on e: Exception do FbException.catchException(status, e);",213],["if (status <> Ok) then lastResult := status;",66],["function SetStatus(status: TStatus): TStatus;",72],["*    An operating system status code.",101],["result := status;",111],["status := kStatusNoError;",118],["header.status := Result;",137],["FbException.checkException(status);",211],["//\tFbException.checkException(status);",211],["on e: Exception do FbException.catchException(status, e);",213]],"useCount":3201},{"word":"stdcall","context":[["); stdcall;",717],["): NTSTATUS; stdcall;",616],["):HResult; virtual; stdcall; abstract;",524],["{$IFDEF UNIX} cdecl {$ELSE} stdcall {$ENDIF};",369],["):HResult; stdcall;",784],["): NTSTATUS; stdcall; {$IFNDEF RTDL}external ntdll;{$ENDIF}",365],["{$ifdef DLL} stdcall; {$endif}",902],["): integer; stdcall;",954],["{$IFDEF MSWINDOWS} stdcall;",1167],["stdcall;",1328]],"useCount":28404},{"word":"stored","context":[["property Hint: WideString read GetHint write SetHint stored IsHintStored;",96],["* @param[out] picture The AVFrame in which the decoded video frame will be stored.",36],["* the order in which these are stored can depend on the codec.",41],["stored False;",54],["* Can be AV_NOPTS_VALUE if it is not stored in the file.",70],["* @param tags list of supported codec_id-codec_tag pairs, as stored",76],["read GetAttr write SetAttr stored False;",101],["property ParameterName: string index taParameterName read GetTypeAttribute write SetTypeAttribute stored False;",110],["property ConstKeyword: string index taConstKeyword read GetTypeAttribute write SetTypeAttribute stored False;",122],["property TypeName: string index taTypeName read GetTypeAttribute write SetTypeAttribute stored False;",134]],"useCount":2578},{"word":"str","context":[["str: string;",331],["str:='';",147],["Append(str + start_offset, pos - start_offset);",135],["str := '';",110],["readln(str);",98],["str:string;",83],["l := Length(str);",82],["str.Free;",78],["for i := 1 to Length(str) do",72],["encoded := F_btInstance.FConverter.EncodeString(str);",66]],"useCount":4584},{"word":"stream","context":[["* Read packets of a media file to get stream information. This",64],["stream.Free;",311],["stream: TStream;",136],["stream := TMemoryStream.Create;",122],["* @param f The file stream pointer where the dump should be sent to.",76],["stream: TFileStream;",74],["* stream (only used by libavformat) *)",52],["{Saves the chunk to a stream}",54],["{Loads the chunk from a stream}",68],["* Add a new stream to a media file.",60]],"useCount":9334},{"word":"strict","context":[["if not strict then",21],["class function TSuperObject.ParseStream(stream: TStream; strict: Boolean;",21],["class function TSuperObject.ParseString(s: PSOChar; strict: Boolean; partial: boolean; const this: ISuperObject;",21],["ParseEx(tok, bufferw, size, strict, this, options, put, dt);",21],["{$IFDEF VERD2007up}strict{$ENDIF} private",26],["{$IFDEF VERD2007up}strict{$ENDIF} protected",28],["strict private type",54],["strict protected",992],["strict private",3114],["Result := ParseStream(stream, strict, partial, this, options, put, dt);",21]],"useCount":4450},{"word":"string","context":[["S: string;",1815],["s : string;",497],["function GetName: string;",501],["s:string;",525],["const AIdent: string;",543],["Name: string;",559],["FName: string;",700],["texto : string;",757],["x: string;",1213],["s: string;",4169]],"useCount":97476},{"word":"strm","context":[["strm: TStreamMethod;",154],["strm.next_out := OutBuf;",89],["strm.avail_in := InBytes;",89],["FillChar(strm, sizeof(strm), 0);",96],["FillChar(strm, sizeof(strm), 0);",96],["strm.Free;",181],["strm.WriteHeader(header);",154],["strm := TStreamMethod.Create;",154],["SendIpcMessage(PChar(UIBHOOKIPC), strm.Memory, strm.Size);",154],["SendIpcMessage(PChar(UIBHOOKIPC), strm.Memory, strm.Size);",154]],"useCount":3966},{"word":"structure","context":[["AVFMT_RAWPICTURE    = $0020; (**< Format wants AVPicture structure for",37],["// Internal structure.  Ignore.",38],["* This structure contains the data a format has to probe a file.",38],["* Stream structure.",38],["{ returns a table with following structure:",40],["dwSize: DWORD;                         // Size of this structure",44],["dwSize: DWORD;                 // size of the DDDRIVERCAPS structure",46],["* Set if the structure specifies a color key or color space which is to be",48],["{Fill out the structure}",83],["// Base structure.",137]],"useCount":2884},{"word":"sub","context":[["also IPv6 support, include files now in sub-directory",75],["sub bh, bh",192],["sub eax, edx",184],["sub rax, rdx",125],["sub rax, 128;",84],["sub eax, 128;",80],["sub ecx, iters;",76],["sub   ecx, edi",57],["sub ecx, BlockHeaderSize",58],["sub   bh,bh",64]],"useCount":3594},{"word":"success","context":[["* @return zero on success, a negative value on error",47],["*    A result code indicating success or failure.",54],["* @return 0 on success, a negative AVERROR on error.",56],["* @return >= 0 on success",57],["* @return On error a negative value is returned, on success zero or the number",58],["returns Returns 0 on success, -1 on failure.",64],["*    On success, noErr is returned. See MacErrors.h for possible error",105],["{ Assume success. }",171],["*  Returns:  0 on success, 1 if not successful.",345],["* @return 0 in case of success, a negative value corresponding to an",65]],"useCount":2896},{"word":"summary","context":[["///\t<summary>",1779],["/// </summary>",8142],["/// <summary>",7908],["///\t</summary>",1779],["///  <summary>Creates a new instance of this class.</summary>",434],["///  <summary>Creates a new instance of this class.</summary>",434],["///</summary>",107],["///  <summary>Internal method. Do not call directly!</summary>",90],["///  <summary>Internal method. Do not call directly!</summary>",90],["///<summary>",87]],"useCount":23801},{"word":"support","context":[["// Timestamp generation support:",74],["also IPv6 support, include files now in sub-directory",75],["//     e-mail: support@nika-soft.com",76],["-Full yarn support",120],["Follow \"support\" link at http://www.overbyte.be for subscription.",186],["* support for future versions of FFmpeg until the headers are revised by us",62],["* The only safe way to support new versions of FFmpeg is to add the changes",62],["Uupdates + Intercept support",58],["(* av_read_frame() support *)",57],["* Operation could not be carried out because there is no hardware support",48]],"useCount":4464},{"word":"supported","context":[["(* Check if linked version is supported *)",37],["* List of supported codec_id-codec_tag pairs, ordered by \"better",38],["* SI postfixes and some named scalars are supported.",39],["dwRops: Array [0..DD_ROP_SPACE-1] of DWORD;   // ROPS supported",42],["* @param tags list of supported codec_id-codec_tag pairs, as stored",76],["(* Max. supported version by this header *)",93],["(* Min. supported version by this header *)",108],["(* Check if linked versions are supported *)",163],["if this method is supported and how!}",200],["* @return -1 if not supported",40]],"useCount":2694},{"word":"surface","context":[["dwCaps: DWORD;         // capabilities of surface wanted",36],["* for the source surface.",24],["dwCKeyCaps: DWORD;             // color key capabilities of the surface",46],["* DirectDraw supports integer stretching (1x,2x,) of a surface",48],["* DirectDraw supports arbitrary shrinking of a surface along the",48],["* DirectDraw supports integer shrinking (1x,2x,) of a surface",48],["* Use the alpha information in the pixel format or the alpha channel surface",48],["* DirectDraw supports arbitrary stretching of a surface along the",48],["This function returns the new surface, or NULL if there was an error.",52],["{    open source surface-modelling program based on subdivision surfaces and intended for     }",101]],"useCount":4004},{"word":"sym","context":[["( sym: -10; act: 285 ),",58],["( sym: 379; act: 14 ),",169],["( sym: -126; act: 277 ),",58],["( sym: 380; act: 292 ),",60],["( sym: -3; act: 289 ),",65],["( sym: 271; act: 22 ),",66],["( sym: 418; act: 161 ),",69],["( sym: 385; act: 235 ),",70],["( sym: 384; act: 234 ),",76],["( sym: 381; act: 160 ),",84]],"useCount":7523},{"word":"t","context":[["FreeAndNil(t);",270],["s, t: string;",147],["t := 0;",121],["t: Integer;",113],["t: TfrView;",102],["t:= r and $1f; l:= LRot32(l,t);",96],["{Couldn't grab the block type - sleep and try again}",116],["t := _string;",119],["t.Free;",136],["t := '';",140]],"useCount":15786},{"word":"temp","context":[["temp: string;",101],["FZip.ExtrBaseDir := TestDir + 'temp\\';",98],["new(temp);",81],["Inc(temp);",77],["Read(f, temp);",44],["temp := '';",45],["ForceDirectories('e:\\temp\\Making\\');",46],["temp:=0;",52],["dispose(temp);",71],["temp.Free;",105]],"useCount":3479},{"word":"terms","context":[["If you wish to allow use of your version of this file only under the terms",576],["* version of this file under the terms of the MPL, indicate your decision by",126],["* use your version of this file under the terms of the MPL, indicate your",70],["This Source Code Form is subject to the terms of the Mozilla Public",123],["- This Source Code Form is subject to the terms of the Mozilla Public",90],["{ executable under terms of your choice, provided that    }",154],["* This is the fundamental unit of time (in seconds) in terms",70],["provided that you also meet, for each linked independent module, the terms",365],["{ If you wish to allow use of your version of this file only under the terms   }",338],["and to copy and distribute the resulting executable under terms of your choice,",302]],"useCount":2620},{"word":"test","context":[["test edx, edx",63],["test cl, cl",53],["test bl, bl",58],["test al, IsFreeBlockFlag",58],["test rax, rax",79],["test eax, eax",208],["// Register any test cases with the test runner",180],["// Register any test cases with the test runner",180],["This unit contains a skeleton test case class generated by the Test Case Wizard.",121],["[test]",81]],"useCount":3556},{"word":"text","context":[["// No show text only",72],["wc.AddProperty('FontDesc', TPropertyFontDesc, 'The font used for displaying the text');",69],["/// A body text field.",70],["text: string;",42],["TEdit(Sender).text:=s;",84],["/// A text field displayed in a column and row.",54],["{CC3: Added: Retrieve the text part of the message...}",49],["text:string;",43],["s:=TEdit(Sender).text;",84],["property text: WideString dispid 24;",156]],"useCount":3631},{"word":"than","context":[["else                                 {greater than}",42],["* than name. You should use the NULL_IF_CONFIG_SMALL() macro",76],["// Source's bottom side is greater than the dest.clip",40],["// Source's right side is greater than the dest.cliprect",40],["'=':                               {greater than or equal to}",42],["else                                 {less than}",42],["{Try all groups greater than this group}",46],["{Must be less than half the current size or we don't bother resizing.}",46],["shrunk smaller than MinimumMediumBlockSize}",46],["* @warning The input buffer must be FF_INPUT_BUFFER_PADDING_SIZE larger than",55]],"useCount":2883},{"word":"that","context":[["provided that you also meet, for each linked independent module, the terms",365],["{Check that the block has not been modified since being freed}",68],["a result of zero means that there is no limit or the limit is not known",198],["{ executable under terms of your choice, provided that    }",154],["Note that the source modules HTMLGIF1.PAS and DITHERUNIT.PAS",135],["{ For now, assume/hope/pray that we will succeed. }",127],["//   (*) KeyName refers to a key that has been installed in the Crypto Service",69],["Tinn-R is an extension of Tinn that provides additional tools to control R",69],["//       (1) If the KeyName can be found in the CSP, that key is used.",69],["* @todo Let the user decide somehow what information is needed so that",64]],"useCount":15994},{"word":"the","context":[["// This unit is part of the GLScene Project, http://glscene.org",578],["If you wish to allow use of your version of this file only under the terms",576],["* along with this program; see the file COPYING. If not, write to",563],["* UltraStar Deluxe is the legal property of its developers, whose names",563],["under the dual-licensing agreement described on the Indy website.",1100],["This file is part of the Indy (Internet Direct) project, and is offered",1100],["under the dual-licensing agreement described on the Indy website.",1100],["// clients wishing to automate the CoClass objects exposed by the",927],["// clients wishing to automate the CoClass objects exposed by the",927],["* The Initial Developer of the Original Code is",774]],"useCount":189882},{"word":"then","context":[["if ReadOnly then",3246],["then begin",8813],["then",9808],["if FThreadSafe then",12444],["if Result then",6624],["{$IFDEF UDEBUG}if _udebug <> nil then _udebug.Destroy;{$ENDIF}",6613],["if not Result then",2113],["if IsCurrentToken(KeyWords[Index]) then",1795],["If (GetBit) then",1532],["then EXIT;",1422]],"useCount":466017},{"word":"there","context":[["cmp ebp, 0\t//this can happen when there are no stack frames",78],["a result of zero means that there is no limit or the limit is not known",198],["expensive, there is a minimum upsize percentage to avoid unnecessary",63],["This function returns the new surface, or NULL if there was an error.",52],["* Operation could not be carried out because there is no hardware support",48],["{Are there another 8 bytes to move?}",48],["{Are there another 16 bytes to move?}",48],["{The next block is free and there is enough space to grow this",46],["{Is the entire medium block pool free, and there are other free blocks",46],["err (IN/OUT) - error handle. If there is an error, it is",140]],"useCount":3421},{"word":"this","context":[["See the file COPYING.modifiedLGPL, included in this distribution,",427],["See the file COPYING.FPC, included in this distribution,",372],["///  <summary>Creates a new instance of this class.</summary>",434],["* along with this program; see the file COPYING. If not, write to",563],["* file distributed with this source distribution.",563],["If you wish to allow use of your version of this file only under the terms",576],["{ If you wish to allow use of your version of this file only under the terms   }",338],["See the file COPYING.MSE, included in this distribution,",329],["are not obligated to do so. If you do not wish to do so, delete this exception",297],["// server of this typelibrary.",927]],"useCount":32836},{"word":"thread","context":[["CommandList := TStringList.create ;  // will be freed by the thread",51],["*    Not thread safe",2666],["{Get the old thread count}",30],["* @warning This function is not thread safe!",47],["Form1.Caption := 'Updated in a thread';",36],["* thread count",32],["//thread lock functions",32],["*    This API is thread safe only on Mac OS X 10.5 and later; see the",30],["- Made LogAllocatedBlocksToFile and ScanMemoryPoolForCorruptions thread",30],["* If defined, called on thread contexts when they are created.",29]],"useCount":3913},{"word":"threading","context":[["- Fixed a threading issue when the \"CheckHeapForCorruption\" option was",17],["* @name Frame-level threading support functions",24],["//threading start",13],["//threading end",13],["*  Mac OS X threading:",3794]],"useCount":3861},{"word":"time","context":[["(* === run-time registration functions === *)",67],["(* === compile-time registration functions === *)",65],["mtTime: TMusicTime;        (* music time *)",52],["* This is the fundamental unit of time (in seconds) in terms",70],["* @param t\t\tCurrent time (in frames or seconds).",82],["A file in Amiga system run time library.",93],["This file is part of the Free Pascal run time library.",213],["*       we do not waste time getting stuff the user does not need.",64],["//time",54],["rtTime: TReferenceTime;    (* real time (in 100 nanosecond increments) *)",52]],"useCount":4559},{"word":"tkIdentifier","context":[["if KeyComp('if') then Result := tkKey else Result := tkIdentifier;",43],["tkIdentifier,",61],["fTokenID := tkIdentifier;",96],["else Result := tkIdentifier;",126],["if KeyComp('do') then Result := tkKey else Result := tkIdentifier;",31],["TtkTokenKind = (tkComment, tkIdentifier, tkKey, tkNull, tkNumber, tkSpace,",33],["Result := tkIdentifier",140],["result:= tkIdentifier;",183],["tkIdentifier: Result := fIdentifierAttri;",195],["Result := tkIdentifier;",3775]],"useCount":5377},{"word":"tkKey","context":[["fTokenID := tkKey;",31],["if KeyComp('do') then Result := tkKey else Result := tkIdentifier;",31],["if KeyComp('return') then Result := tkKey else Result := tkIdentifier;",26],["if KeyComp('else') then Result := tkKey else Result := tkIdentifier;",27],["tkKey: Result := fKeyAttri;",199],["Result := tkKey",1753],["Result := tkKey;",469],["TtkTokenKind = (tkComment, tkIdentifier, tkKey, tkNull, tkNumber, tkSpace,",33],["if KeyComp('if') then Result := tkKey else Result := tkIdentifier;",43],["tkKey,",54]],"useCount":3437},{"word":"tmp","context":[["tmp := copy(tmp,pos(';',tmp)+1,length(tmp));",62],["tmp: integer;",64],["tmp: string;",345],["tmp: String;",153],["tmp.Free;",149],["tmp: THashDigest;",105],["Result := tmp;",65],["if tmp <> '' then",78],["move(tmp, Digest, sizeof(Digest));",96],["tmp := '';",96]],"useCount":3596},{"word":"to","context":[["for I := 0 to Count - 1 do",1675],["// clients wishing to automate the CoClass objects exposed by the",927],["for i := 0 to Count - 1 do",1241],["If you wish to allow use of your version of this file only under the terms",576],["for I := 0 to Bucket.Size - 1 do",567],["* along with this program; see the file COPYING. If not, write to",563],["for J := 0 to ColsCount - 1 do",540],["for I := 0 to FCapacity - 1 do",682],["for I := 0 to RowsCount - 1 do",540],["for Index := 0 to FSize - 1 do",492]],"useCount":168446},{"word":"tok","context":[["inc(tok.depth);",88],["tok.err := teDepth;",88],["inc(tok.st_pos);",88],["tok.ResetLevel(tok.depth);",110],["tok.ResetLevel(tok.depth);",110],["TokRec^.current := TokRec^.parent.AsObject.GetO(tok.pb.Fbuf);",110],["TokRec := @tok.stack[tok.depth];",132],["TokRec := @tok.stack[tok.depth];",132],["tok.pb.Append(@v, 1);",294],["tok.pb.Reset;",330]],"useCount":4469},{"word":"true","context":[["result:=true;",2035],["Result:=true;",1143],["Result := true;",4933],["result := true;",2976],["@return <code>true</code> if so; <code>false</code> otherwise",440],["result := true",362],["Result := true",270],["result:= true;",935],["while true do",727],["while true do begin",540]],"useCount":37917},{"word":"try","context":[["//try",591],["Lock; try",117],["{Couldn't grab the block type - sleep and try again}",116],["//  try",105],["end{ \"try\" } ;",95],["{prepare for the try..finally}",54],["try // finally",120],["try",133790],["end; // del try",75],["end; // try",64]],"useCount":137525},{"word":"txt","context":[["txt: string;",153],["* Donations: see Donation section on Description.txt",124],["CheckEntryExists(idx, 'simple1\\file3.txt');",88],["assign(output, 'output.txt');",80],["assign(input, 'input.txt');",80],["and 'doc/README_SourceCode.txt' in https://github.com/dpradov/keynote-nf",73],["{ \"LICENCA.txt\", junto com esse programa.                                          }",620],["Contributors.txt file.",350],["(see the file copying.txt) with the following modification:",296],["Contributors to the SynEdit project are listed in the Contributors.txt file.",145]],"useCount":3725},{"word":"type","context":[["// Type Library. If this type library is explicitly or indirectly (via",172],["///  <remarks>The default type object is requested.</remarks>",118],["{Attempt to grab the block type}",133],["// another type library referring to this type library) re-imported, or the",172],["// another type library referring to this type library) re-imported, or the",172],["{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers.",177],["{Unlock the block type}",208],["private type",314],["(* Const before type ignored *)",395],["type",87973]],"useCount":97009},{"word":"u000a","context":[["V\\u000a\\u000a",431],["V\\u000a\\u000a",431],["V\\u000a",2363]],"useCount":3225},{"word":"umf_noinfo","context":[["(unicode : 43; flag : umf_noinfo; reserved: 0),",20],["(unicode : 31; flag : umf_noinfo; reserved: 0),",20],["(unicode : 73; flag : umf_noinfo; reserved: 0),",20],["(unicode : 123; flag : umf_noinfo; reserved: 0),",20],["(unicode : 86; flag : umf_noinfo; reserved: 0),",20],["(unicode : 50; flag : umf_noinfo; reserved: 0),",20],["(unicode : 1; flag : umf_noinfo; reserved: 0),",20],["(unicode : 122; flag : umf_noinfo; reserved: 0),",20],["(unicode : 36; flag : umf_noinfo; reserved: 0),",20],["(unicode : 6; flag : umf_noinfo; reserved: 0),",20]],"useCount":3000},{"word":"under","context":[["* version of this file under the terms of the MPL, indicate your decision by",126],["// #### offered under the licence agreement described on",136],["{ executable under terms of your choice, provided that    }",154],["under the MPL, indicate your decision by deleting the provisions above and",493],["{ under the MPL, indicate your decision by deleting  the provisions above and  }",338],["If you wish to allow use of your version of this file only under the terms",576],["under the dual-licensing agreement described on the Indy website.",1100],["{ If you wish to allow use of your version of this file only under the terms   }",338],["// under ARC, convert a weak reference to a strong reference before working with it",158],["and to copy and distribute the resulting executable under terms of your choice,",302]],"useCount":5135},{"word":"unicode","context":[["(unicode : 119; char1 : 119; char2 : 0),",20],["(unicode : 65535; flag : umf_unused; reserved: 0),",148],["{      http://www.tntware.com/delphicontrols/unicode/                         }",108],["if not unicode then",42],["(unicode : 11; char1 : 11; char2 : 0),",20],["unicode := true;",21],["unicode := false;",21],["//    VALUE_INDEX   - 16 bits (unicode character index)",22],["//* Set unicode flag",24],["unicode: boolean;",29]],"useCount":6186},{"word":"unit","context":[["For unit name changes.",156],["// This unit is part of the GLScene Project, http://glscene.org",578],["unit Main;",317],["unit uMain;",249],["unit",204],["unit Unit2;",193],["unit UserScript;",138],["unit main_mfm;",126],["unit Unit1;",1110],["unit main;",421]],"useCount":8009},{"word":"until","context":[["until WorkY = 0;",162],["until False;",1161],["until false;",888],["until not ExecNext;",281],["until (False);",250],["until I > J;",247],["until fLine[Run] in [#0, #10, #13];",214],["until I >= R;",171],["until WorkX = 0;",162],["until FindNext(sr) <> 0;",154]],"useCount":11258},{"word":"unused","context":[["('unused',         '', ''),",138],["* - encoding: unused",1870],["* - decoding: unused",2824],["* - decoding: unused.",105],["* @deprecated this field is unused",54],["// AParam1, AParam2: unused",57],["* Set to INT_MIN when dts_sync_point unused. Otherwise, it must",64],["* encoding: unused",32],["* - encoding: Set by user; unused for constant quantizer encoding.",64],["* - encoding: unused.",61]],"useCount":5655},{"word":"up","context":[["{Set up the block pool}",46],["Check(ElemCache = 0, 'Nothing should have be cleaned up yet!');",37],["* height, as they normally need to be rounded up to the next multiple of 16.",45],["{Set this medium pool up as the new sequential feed pool:",46],["{Set it up for sequential block serving}",46],["Cleaned up warnings",61],["// ...                                                      // up to TinySetLen",52],["{Round up to the nearest block size granularity}",46],["{Round up to the next medium block size}",46],["rounded up to the next bin size.}",46]],"useCount":2625},{"word":"update","context":[["SQL.Add('update \"col$tablaliquidaciontmp\" ');",59],["update;",74],["// Storing interface reference as a pointer does not update reference",55],["sql.Add('update \"col$colocacion\" set ');",72],["SQL.Add('update \"col$tablaliquidacion\" ');",80],["{ update pointers and return }",84],["<code>insertRow</code> methods are called to update the database.",95],["update the underlying database; instead the <code>updateRow</code> or",95],["{-update context with Msg data}",280],["The <code>updateXXX</code> methods are used to update column values in the",98]],"useCount":3097},{"word":"use","context":[["If you wish to allow use of your version of this file only under the terms",576],["Modified for use with Free Pascal",455],["{ If you wish to allow use of your version of this file only under the terms   }",338],["Redistribution and use in source and binary forms, with or without",325],["| Redistribution and use in source and binary forms, with or without           |",321],["Redistribution and use in source and binary forms, with or without modification,",287],["* Redistribution and use in source and binary forms, with or without",250],["{$PACKENUM 4}    (* use 4-byte enums *)",201],["{$MINENUMSIZE 4} (* use 4-byte enums *)",201],["use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies",169]],"useCount":12894},{"word":"used","context":[["{Mark this block as used in the block following it}",92],["The <code>updateXXX</code> methods are used to update column values in the",98],["// Use the attributes below to control which key is used for signing.",69],["//           in the KeyFile is installed into the CSP and used.",69],["* @param[in] has_alpha Whether the source pixel format alpha channel is used.",73],["// (This object is used by the IDE's Property Inspector to allow editing",274],["This source is only used to compile and install the package.",230],["// GUIDS declared in the TypeLibrary. Following prefixes are used:",178],["{: Do not call this directly. It is used internally by @link(TTCPBlockSocket)!",140],["a pointer to RPCBrokerV.Results, so the data must be used BEFORE the next broker call! }",108]],"useCount":12251},{"word":"user","context":[["* - encoding: Set by user.",3185],["* - decoding: Set by user.",908],["* - encoding: Set by user",402],["* - decoding: Read by user.",295],["* - encoding: set by user.",151],["* - decoding: Set by libavcodec, user can override.",141],["* Demuxing: Set by user.",127],["* - decoding: set by libavcodec, read by user.",104],["* - encoding: Set by user via AVOptions (NO direct access)",124],["* - encoding: MUST be set by user.",125]],"useCount":10269},{"word":"uses","context":[["uses SysUtils;",309],["uses Classes;",109],["uses Unit1;",127],["<li>23/08/10 - Yar - Added OpenGLTokens to uses, replaced OpenGL1x functions to OpenGLAdapter",139],["uses ComObj;",151],["uses Windows;",157],["uses",65394],["uses crt;",264],["//uses ...",206],["uses SysUtils,",185]],"useCount":71329},{"word":"using","context":[["* \\param[out] item The item to create. This can either be a wrapper created using",41],["* Code outside libavcodec should access this field using AVOptions",45],["//  Its value is an IA5_STRING. CryptDecodeObject/CryptEncodeObject using",70],["* Initialize the AVCodecContext to use the given AVCodec. Prior to using this",47],["this sort and so is using a Variant to set the property instead. }",48],["{ Unit archived using Team Coherence                                   }",441],["* Code outside libavcodec should access this field using:",250],["{:Note: This is high-level receive function. It using internal",120],["this sort and so is using a Variant as a passthrough. }",97],["DummyInt := i;   // just to suppress warning about not using I",74]],"useCount":4575},{"word":"v","context":[["AddDWord(ptruint(Operands^[1]*sizeof(TBESENValue))+(ptruint(pointer(@v.Num))-ptruint(pointer(@v))));",172],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.Bool))-ptruint(pointer(@v))));",168],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.Bool))-ptruint(pointer(@v))));",168],["AddDWord(ptruint(Operands^[1]*sizeof(TBESENValue))+(ptruint(pointer(@v.Num))-ptruint(pointer(@v))));",172],["v := 0;",205],["case v of",265],["tok.pb.Append(@v, 1);",294],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.ValueType))-ptruint(pointer(@v))));",316],["AddDWord(ptruint(Operands^[0]*sizeof(TBESENValue))+(ptruint(pointer(@v.ValueType))-ptruint(pointer(@v))));",316],["v: TValue;",322]],"useCount":10970},{"word":"val","context":[["val(tok.pb.FBuf, numi, code);",43],["val := TValue.Empty;",48],["val: ISuperObject;",44],["val := items[ItemNo];",34],["val, num, den: cint64;",37],["* The exact value of the fractional number is: 'val + num / den'.",38],["val: PPSVariant;",40],["f.val := i.Value;",42],["val.ExtractRawData(pb);",42],["val (VarStr, Item, ErrCode);",94]],"useCount":3128},{"word":"valid","context":[["* @return 1 if a valid numbered sequence string, 0 otherwise",38],["* AVERROR(EINVAL) if the value is not valid",39],["* misdetect some more or less valid parts as errors.",40],["5:  TX_INFO := TX_EXP_DETOX1 + Piece(DEAFailStr,U,2) + TX_EXP_DETOX2;  //valid detox#, but expired DEA#",45],["{Is this a valid large block?}",46],["// valid line?",33],["*        NULL, then *decoder_ret is guaranteed to be set to a valid AVCodec.",35],["* exported by demuxers isn't checked to be valid UTF-8 in most cases.",38],["* you start working on it). Simply adjusting the max. versions is NOT a valid",62],["{Is the debug info surrounding the block valid?}",73]],"useCount":3151},{"word":"value","context":[["Gets the value of the designated column in the current row",277],["if value <> '' then",218],["buf := System.BitConverter.GetBytes(value.Value);",120],["value: string;",111],["function DoConvertTo(const value: TValue;",104],["@return the column value; if the value is SQL <code>NULL</code>, the",264],["@return the column value; if the value is SQL <code>NULL</code>, the",264],["value returned is <code>null</code>",148],["(const value: TString);",127],["@param x the new column value",127]],"useCount":21595},{"word":"values","context":[["//   (*) If the KeyFile and the KeyName values are both specified, the",69],["{ Change VERSION and LIBVERSION to proper values }",51],["* default values.",70],["SQL.Add('insert into \"con$auxiliar\" values (');",70],["The <code>updateXXX</code> methods are used to update column values in the",98],["* @param level The importance level of the message, lower values signifying",92],["///  <param name=\"AValueRules\">The rule set describing the values.</param>",57],["///  <param name=\"AValueType\">The type object describing the values.</param>",47],["values: string;",45],["SQL.Add('insert into \"cap$extracto\" values(');",55]],"useCount":5610},{"word":"var","context":[["procedure FormKeyPress(Sender: TObject; var Key: Char);",644],["{$IFDEF UDEBUG}var _udebug: Tdebug;{$ENDIF}",4582],["var",394927],["procedure FormClose(Sender: TObject; var Action: TCloseAction);",2924],["var Key: Char);",2063],["var i: integer;",1326],["var i: Integer;",1180],["var Action: TCloseAction);",1110],["//var",1055],["var i:integer;",946]],"useCount":475373},{"word":"version","context":[["{ If you wish to allow use of your version of this file only under the terms   }",338],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.5",349],["*    Mac OS X:         in version 10.0 and later in Carbon.framework [32-bit only]",821],["*    Mac OS X:         in version 10.0 and later in QuickTime.framework",1970],["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework",446],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.4",459],["*    Mac OS X:         in version 10.0 and later in ApplicationServices.framework [32-bit only] but deprecated in 10.4",541],["*    Mac OS X:         in version 10.0 and later in CoreServices.framework",652],["If you wish to allow use of your version of this file only under the terms",576],["*    Mac OS X:         in version 10.0 and later in Carbon.framework",609]],"useCount":18100},{"word":"video","context":[["* For video, this should simply point to data[].",40],["* necessarily related to video or audio due to buffer overflows etc.) might",62],["dwMaxLiveVideoStretch: DWORD;  // maximum live video stretch factor multiplied by 1000, eg 1000 == 1.0, 1300 == 1.3",46],["* width and height of the video frame",40],["dwMinLiveVideoStretch: DWORD;  // minimum live video stretch factor multiplied by 1000, eg 1000 == 1.0, 1300 == 1.3",46],["dwVidMemFree: DWORD;           // amount of free video memory",47],["* Forced video codec_id.",38],["* provide them). pkt->pts can be AV_NOPTS_VALUE if the video format",38],["* @param[out] picture The AVFrame in which the decoded video frame will be stored.",36],["dwVidMemTotal: DWORD;          // total amount of video memory",47]],"useCount":2774},{"word":"virtual","context":[["procedure Clear; virtual; abstract;",95],["overload; virtual;",89],["// Criar uma Query virtual",82],["):ID3D10EffectVariable; virtual; stdcall; abstract;",176],["virtual; abstract;",180],["):ID3DX11EffectVariable; virtual; stdcall; abstract;",216],["procedure Clear; virtual;",289],["virtual;",449],["constructor Create; virtual;",887],["):HResult; virtual; stdcall; abstract;",524]],"useCount":13030},{"word":"w","context":[["w, h: Integer;",55],["w := 0;",168],["WorkX := Src.w;",162],["// for x := 0 to w - 1;",152],["(x: NTPX; y:    0; w:    1; h:    1),",84],["if smallint( Dest.w ) < 1 then",80],["glVertex2f(x+w, y);",53],["(x: NTPX; y:    0; w:    1; h:    1)",74],["const w, h: TG2Float;",55],["w: integer;",72]],"useCount":5327},{"word":"was","context":[["* @return A decoder if one was found, NULL otherwise.",62],["types do not match. Delphi was unable to generate a property of",145],["{ The initial developer of this Pascal code was :                              }",46],["* to know how the duration was estimated.",50],["* @return The best pixel format to convert to or -1 if none was found.",50],["This function returns the new surface, or NULL if there was an error.",52],["* @return An encoder if one was found, NULL otherwise.",62],["* the problem was an unsupported version of FFmpeg. So we decided to disable",62],["{ was #define dname def_expr }",65],["{ This file was automatically created by Lazarus. Do not edit!",209]],"useCount":5411},{"word":"we","context":[["* the problem was an unsupported version of FFmpeg. So we decided to disable",62],["*       we do not waste time getting stuff the user does not need.",64],["{Do we need to lock the block type?}",104],["{It's a downsize. Do we need to allocate a smaller block? Only if the new",46],["If we have to reallocate and move medium blocks, we grow by at",46],["{Do we need to lock the medium blocks?}",116],["{ For now, assume/hope/pray that we will succeed. }",127],["Note we do *not* do INPUT_SYNC before calling fill_input_buffer,",150],["but we must reload the local copies after a successful fill. }",150],["// (NOTE: Here we map each CoClass to its Default Interface)",158]],"useCount":5003},{"word":"when","context":[["-Bug fix for shutdown of servers when connections still existed (AV)",44],["* Initialized when AVCodecParserContext.dts_sync_point >= 0 and",42],["{ will require compiler define when/if other Apple devices with ARM cpus ship }",457],["cmp ebp, 0\t//this can happen when there are no stack frames",78],["* Set to INT_MIN when dts_sync_point unused. Otherwise, it must",64],["* even when user did not explicitly ask for subtitles.",38],["* This allows forcing a specific decoder, even when there are multiple with",40],["* last packet in packet_buffer for this stream when muxing.",42],["* presentation timestamp in time_base units (time when frame should be shown to user)",42],["// fix ambiguous warnings when compiled on Delphi.net and earlier versions of Delphi.win32",52]],"useCount":7177},{"word":"where","context":[["IBSQL3.SQL.Add('from \"col$codigospuc\" where \"col$codigospuc\".ID_CLASIFICACION = :ID_CLASIFICACION and ');",86],["SQL.Add('where');",231],["SQL.Add('where ');",228],["IBSQL3.SQL.Add('select NOMBRE from \"con$puc\" where CODIGO = :CODIGO');",192],["FTBLOutrasFuncoes.SQL.Add('  where                         ');",158],["sql.Add(' where ');",136],["SQL.Add('where ID_SOLICITUD = :ID_SOLICITUD');",101],["SQL.Add('where ID_PERSONA = :ID_PERSONA and ID_IDENTIFICACION = :ID_IDENTIFICACION');",88],["IBSQL3.SQL.Add('where \"con$puc\".CODIGO = :CODIGO');",87],["* @param f The file stream pointer where the dump should be sent to.",76]],"useCount":3914},{"word":"which","context":[["{ An independent module is a module which is not derived  }",154],["//       Provider (CSP) on your machine. KeyFile refers to a file which contains",69],["// Use the attributes below to control which key is used for signing.",69],["* @param avcl A pointer to an arbitrary struct of which the first field is a",116],["//       relative to the project output directory, which in Oxygene by default is the",65],["* Seeking will be done so that the point from which all active streams",63],["* packet to the point at which the output from the decoder has converged",63],["module which is not derived from or based on this library. If you modify",63],["* @param[in] avc a pointer to an arbitrary struct of which the first field is",62],["which is not derived from or based on this library. If you modify this",297]],"useCount":7106},{"word":"while","context":[["end; // while",320],["while True do",1452],["while Current <> nil do",292],["while It.HasNext do",988],["while L <= H do",331],["while true do begin",540],["while not Eof do begin",547],["while true do",727],["while Count > 0 do",728],["while not Eof do",807]],"useCount":32768},{"word":"width","context":[["for i := 0 to width - 1 do",43],["left := left + width;",97],["width, height: cint;",70],["width  : 16;",69],["mov r10, width;",68],["width: cint;",60],["pix_fmt: TAVPixelFormat; width: cint; height: cint): cint;",49],["* avcodec_align_dimensions2() should be used to find the required width and",45],["width,",144],["* stride= mb_width = (width+15)>>4",41]],"useCount":3479},{"word":"will","context":[["{ will require compiler define when/if other Apple devices with ARM cpus ship }",457],["// manual modifications will be lost.",172],["// Type Library, the contents of this file will be regenerated and all",172],["* removed at will.",169],["{ For now, assume/hope/pray that we will succeed. }",127],["// AValue. If AValue = ADefault, and WriteOnDefault = False, no subnode will be added.",90],["// HexDig will cause Error if bad hex digit found",78],["{ The application and scene will automatically be freed on shutdown }",73],["//  LastError will be updated with E_INVALIDARG.",70],["*                 On return this parameter will be destroyed and replaced with a dict containing",66]],"useCount":11709},{"word":"with","context":[["with Result do",653],["with Handle do",1083],["with TRegExpr.Create do",843],["with Canvas do",807],["with QrAux do",806],["* file distributed with this source distribution.",563],["* along with this program; see the file COPYING. If not, write to",563],["with Param^ do",557],["{ will require compiler define when/if other Apple devices with ARM cpus ship }",457],["Modified for use with Free Pascal",455]],"useCount":68852},{"word":"without","context":[["Redistribution and use in source and binary forms, with or without modification,",287],["* Redistribution and use in source and binary forms, with or without",250],["| Redistribution and use in source and binary forms, with or without           |",321],["Redistribution and use in source and binary forms, with or without",325],["{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers.",177],["@param catalog a catalog name; \"\" retrieves those without a",130],["without a schema",112],["*                  demuxers with or without AVFMT_NOFILE are probed.",107],["// Redistribution and use in source and binary forms, with or without",104],["///Redistribution and use in source and binary forms, with or without modification,",92]],"useCount":3627},{"word":"word","context":[["procedure   HandleMouseMove(x, y: integer; btnstate: word; shiftstate: TShiftState); override;",62],["w:word;",40],["WorkX, WorkY : word;",40],["wYear, wMonth, wDay: word;",93],["i: word;",89],["procedure   HandleKeyPress(var keycode: word; var shiftstate: TShiftState; var consumed: boolean); override;",85],["tmpWord: array[0..10] of word;",80],["W: word;",62],["var i : word;",57],["L: word;",47]],"useCount":3689},{"word":"write","context":[["write fCommentAttri;",160],["property Name: string read FName write FName;",174],["property KeyAttri: TSynHighlighterAttributes read fKeyAttri write fKeyAttri;",199],["s.write := q;",362],["property OnChange: TNotifyEvent read FOnChange write FOnChange;",378],["* along with this program; see the file COPYING. If not, write to",563],["property Caption: WideString read GetCaption write SetCaption;",168],["property Hint: WideString read GetHint write SetHint;",168],["property Name: WideString read Get_Name write Set_Name;",166],["write fSpaceAttri;",160]],"useCount":23307},{"word":"writeln","context":[["writeln('term=', term: 2);",81],["writeln('    ');",91],["writeln(' FALSE');",99],["writeln('Ответ');",100],["4: writeln('(single)');",106],["8: writeln('(double)');",106],["6: writeln('(real)');",106],["writeln(yyout);",110],["writeln();",141],["writeln;",3217]],"useCount":8451},{"word":"www","context":[["partly as freelance: http://www.mars42.com                          |",572],["and partly as employee : http://www.batpro.com                          |",572],["(http://www.indyproject.org/)",1100],["* http://www.mozilla.org/MPL/",1018],["http://www.mozilla.org/MPL/",572],["{ http://www.TeamCoherence.com                                         }",441],["{ http://www.mozilla.org/MPL/MPL-1.1.html                                      }",385],["|          (Found at URL: http://www.ararat.cz/synapse/)                       |",328],["{           http://www.spring4d.org                                         }",328],["{           http://www.finalbuilder.com                                     }",283]],"useCount":9991},{"word":"x","context":[["x: integer;",1102],["x, y: integer;",270],["x: string;",1213],["inc(x);",289],["x := 0;",792],["x: Integer;",589],["if x > 0 then",449],["Inc(x);",369],["on x: Exception do Fail(x);",313],["on x: Exception do Fail(x);",313]],"useCount":46895},{"word":"x1","context":[["glVertex2f(x1, y1);",70],["x:=x1;",69],["x1 := 0;",64],["x1 := x2;",59],["glVertex2f(x1, y2);",58],["x1 := data[i];",52],["x := x + x1 + x2;",45],["x1: integer;",39],["if x1 > x2 then",38],["x1 := piece(x,' ',1);",37]],"useCount":2721},{"word":"xmm0","context":[["addsd xmm0, xmm1;",60],["addpd xmm0, xmm2;",66],["movupd xmm2, xmm0;",72],["addpd xmm0, xmm3;",74],["addpd xmm0, xmm1;",178],["movlhps xmm0, xmm1;",158],["movdqa [rdx], xmm0",117],["movdqa xmm0, [rcx]",117],["movapd xmm2, xmm0;",80],["Add(#$f2#$41#$0f#$10#$86); // movsd xmm0,qword ptr [r14+RegisterOfs+TBESENValue.Num]",76]],"useCount":3651},{"word":"xor","context":[["T0[0] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["xor eax, eax",450],["T0[0] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[3] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[2] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[1] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[1] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T1[1] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T0[3] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144],["T1[1] := (W0 xor ((W1 shl 8) or (W1 shr 24)) xor ((W2 shl 16) or (W2 shr 16))",144]],"useCount":16561},{"word":"y","context":[["// loop y end",128],["mx:=x; my:=y;",132],["y := 0;",381],["x, y: integer;",270],["inc(y);",264],["graphwriteln(x,y,'');",206],["x, y: Integer;",187],["y:=0;",169],["if y > 0 then",152],["y,",149]],"useCount":18022},{"word":"you","context":[["{ If you do not wish to do so, delete this exception      }",137],["provided that you also meet, for each linked independent module, the terms",365],["{ If you wish to allow use of your version of this file only under the terms   }",338],["are not obligated to do so. If you do not wish to do so, delete this exception",297],["which is not derived from or based on this library. If you modify this",297],["address, EMail address and any comment you like to say.",162],["{ of the library, but you are not obligated to do so.     }",137],["{ from or based on this library. If you modify this       }",137],["{ you also meet, for each linked independent module,      }",154],["If you wish to allow use of your version of this file only under the terms",576]],"useCount":9917},{"word":"your","context":[["If you wish to allow use of your version of this file only under the terms",576],["under the MPL, indicate your decision by deleting the provisions above and",493],["{ under the MPL, indicate your decision by deleting  the provisions above and  }",338],["{ executable under terms of your choice, provided that    }",154],["{ statement from your version.                            }",137],["* above. If you wish to allow use of your version of this file only under the",126],["to the author. Use a nice stamp and mention your name, street",161],["statement from your version.",299],["{ If you wish to allow use of your version of this file only under the terms   }",338],["and to copy and distribute the resulting executable under terms of your choice,",302]],"useCount":5512},{"word":"z","context":[["inflate_blocks := inflate_flush(s,z,r);",147],["z.avail_in := n;",322],["z.next_in := p;",322],["Inc(z.total_in, ptr2int(p)-ptr2int(z.next_in));",113],["Inc(z.total_in, ptr2int(p)-ptr2int(z.next_in));",113],["inflate_codes := inflate_flush(s,z,r);",108],["z := 0;",103],["( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 486),",87],["( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 305),",82],["'_', '0'..'9', 'a'..'z', 'A'..'Z': Identifiers[I] := True;",75]],"useCount":7641},{"word":"zero","context":[["* used or zero if no frame could be decompressed.",41],["@@Start: test S, S; jz @@zero // check S length",39],["{Large blocks are already zero filled}",46],["* @return zero on success, a negative value on error",47],["* @return Number of bits per sample or zero if unknown for the given codec.",53],["* @return On error a negative value is returned, on success zero or the number",58],["l := 0; // fill zero",71],["* @return zero if successful, a negative value otherwise",96],["cmp ecx, 1                  //Any non-zero digit yet ?",112],["a result of zero means that there is no limit or the limit is not known",198]],"useCount":2603},{"word":"Ïëàíåòà","context":[["{* SAS.Planet (SAS.Ïëàíåòà)                                                   *}",3126]],"useCount":3126}]