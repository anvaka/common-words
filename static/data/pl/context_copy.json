[{"word":"0x00","context":[["movdqu\t@XMM[0], 0x00($out)\t# write output",514],["pxor\t0x00(%rsp), @XMM[0]\t# ^= tweak[]",168],["&data_byte(0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a);",143],["vpclmulqdq\t\\$0x00,$Hkey,$Ii,$Xlo",136],["&data_byte(0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b);",136],["vmovdqa\t$t0,0x00(%rsp)",125],["vpclmulqdq\t\\$0x00,$Hkey,$Ij,$Xlo",119],["vpclmulqdq\t\\$0x00,$HK,$T1,$Xmi",119],["vpclmulqdq\t\\$0x00,$Hkey,$Ij,$Zlo",102],["movdqu\t0x00($inp), @XMM[0]\t# load input",99]]},{"word":"0x10","context":[["movdqu\t@XMM[1], 0x10($out)",478],["movups\t$inout1,0x10($out)",268],["&movups\t(&QWP(0x10,$out),$inout1);",252],["movaps\t%xmm7,0x10(%rsp)",202],["pxor\t0x10(%rsp), @XMM[1]",168],["&data_byte(0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f);",143],["sub\t\t\\$0x10,$len",139],["&data_byte(0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2);",136],["movaps\t0x10(%rsp),%xmm7",109],["#        call mcount  (offset: 0x10)",102]]},{"word":"0x20","context":[["movdqu\t@XMM[6], 0x20($out)",228],["movups\t$inout2,0x20($out)",218],["&movups\t(&QWP(0x20,$out),$inout2);",204],["movdqu\t@XMM[4], 0x20($out)",189],["&data_byte(0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20);",143],["&data_byte(0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b);",136],["movaps\t%xmm8,0x20(%rsp)",132],["movdqu\t0x20($inp), @XMM[2]",99],["movaps\t0x20(%rsp),%xmm8",97],["movaps\t%xmm0,0x20(%rsp)",86]]},{"word":"A","context":[["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",7175],["# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.",4849],["MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",2778],["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the",2306],["# A colon can be substituted for the equals sign, and anything to the left of",2251],["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU",1084],["#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",1005],["FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE",642],["# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License",628],["1*A>=0,",583]]},{"word":"ADD","context":[["operator => \"ADD\",",206],["operator => \"ADD\"",84],["ADD `cn_suffix` VARCHAR(10) DEFAULT NULL AFTER `cn_item`,",78],["ADD `materials` VARCHAR(10) DEFAULT NULL AFTER `ccode`,",78],["ADD `cn_sort` VARCHAR(30) DEFAULT NULL AFTER `cn_source`,",78],["ADD `ccode` VARCHAR(10) DEFAULT NULL AFTER `cn_sort`,",78],["ADD `cn_item` VARCHAR(10) DEFAULT NULL AFTER `cn_class`,",78],["ADD `cn_sort` VARCHAR(30) DEFAULT NULL AFTER `cn_suffix`,",78],["ADD `cn_class` VARCHAR(30) DEFAULT NULL AFTER `cn_source`,",78],["ADD COLUMN holdallowed tinyint(1) NULL",78]]},{"word":"ALTER","context":[["$dbh->do(\"ALTER TABLE deleteditems",152],["$dbh->do(\"ALTER TABLE import_batches",141],["ALTER TABLE aqorders",116],["$dbh->do(\"ALTER TABLE items",114],["ALTER TABLE `aqbudgets`",108],["$dbh->do(\"ALTER TABLE aqbooksellers CHANGE name name mediumtext NOT NULL\");",78],["$dbh->do(\"ALTER TABLE `deletedbiblioitems`",76],["#ALTER TABLE `aqbudgets`",72],["$dbh->do(\"ALTER TABLE `borrowers` ADD `privacy` INTEGER NOT NULL DEFAULT 1;\");",70],["$dbh->do(\"ALTER TABLE subscriptionroutinglist",68]]},{"word":"AND","context":[["THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",645],["CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT",643],["\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",643],["LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS",642],["=head1 COPYRIGHT AND LICENSE",533],["# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE",342],["# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE",326],["# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"",322],["=head1 BUGS AND LIMITATIONS",285],["# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE",263]]},{"word":"ANY","context":[["# but WITHOUT ANY WARRANTY; without even the implied warranty of",8483],["# Koha is distributed in the hope that it will be useful, but WITHOUT ANY",4849],["but WITHOUT ANY WARRANTY; without even the implied warranty of",3080],["# WITHOUT ANY WARRANTY; without even the implied warranty of",2637],["# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",2499],["#    but WITHOUT ANY WARRANTY; without even the implied warranty of",1043],["tipo_documento => 'ANY',",670],["# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY",669],["ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE",643],["\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",643]]},{"word":"ARABIC","context":[["0FD6D\tARABIC LIGATURE SHEEN WITH MEEM WITH MEEM INITIAL FORM",11],["006B3\tARABIC LETTER GUEH",11],["0FBE5\tARABIC LETTER E FINAL FORM",11],["0FD1E\tARABIC LIGATURE JEEM WITH YEH FINAL FORM",11],["006DE\tARABIC START OF RUB EL HIZB",11],["0FC72\tARABIC LIGATURE TEH WITH MEEM FINAL FORM",11],["0FCA1\tARABIC LIGATURE TEH WITH JEEM INITIAL FORM",11],["0FC40\tARABIC LIGATURE LAM WITH HAH ISOLATED FORM",11],["FE7E\t\tARABIC SPACING SUKUN",11],["FEF5\t\tGLYPH FOR ISOLATE ARABIC MADDAH ON LIGATURE LAM ALEF",11]]},{"word":"ARGV","context":[["shift @ARGV;",1766],["if (!$::Driver) { use FindBin; exec(\"$FindBin::Bin/bootstrap.pl\", @ARGV, $0); die; }",594],["while (@ARGV) {",535],["foreach (@ARGV) {",501],["if ($#ARGV < 0) {",493],["shift(@ARGV);",483],["if (@ARGV) {",471],["foreach my $file (@ARGV) {",377],["for my $filename (@ARGV) {",319],["unless (@ARGV) {",289]]},{"word":"AS","context":[["# distributed under the License is distributed on an \"AS IS\" BASIS,",2592],["\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",643],["#  distributed under the License is distributed on an \"AS IS\" BASIS,",515],["# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",353],["# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"",322],["## distributed under the License is distributed on an \"AS IS\" BASIS,",271],["% Software distributed under the License is distributed on an \"AS IS\"",244],["my $sth_search = $dbh->prepare(\"SELECT count(*) AS total",242],["distributed under the License is distributed on an \"AS IS\" BASIS,",194],["# Software distributed under the License is distributed on an \"AS IS\"",193]]},{"word":"Add","context":[["# Add the actors to the renderer, set the background and size",231],["# Add \"libtool --mode-execute\" before the test to execute",185],["# Add name of the exe before args",147],["# Add test data for timezone - this is just a subset, on a real",147],["# Add valgrind options, can be overriden by user",146],["# Add arguments that should not go into the MYSQL_TEST env var",145],["# Add the mysql system tables initial data",145],["# Add the offical mysql system tables",145],["# Add the path to the library to be used",138],["# Add the path where libndbclient can be found",129]]},{"word":"All","context":[["All rights reserved.",856],["# All rights reserved.",776],["# All Rights Reserved.",366],["# All the others need spaces both sides.",303],["# Copyright 2016, Google Inc. All Rights Reserved.",249],["# All checks completed",238],["# Copyright 2012, Google Inc. All Rights Reserved.",163],["return 1; # All ports free",119],["# All completed",119],["mtr_print( \"All servers exited\" );",119]]},{"word":"Any","context":[["# Any changes made here will be lost!",2921],["# database, Version 6.1.0.  Any changes made here will be lost!",2613],["# database, Version 6.0.0.  Any changes made here will be lost!",1994],["# database, Version 6.2.0.  Any changes made here will be lost!",1762],["# database, Version 5.2.0.  Any changes made here will be lost!",1670],["# database, Version 6.3.0.  Any changes made here will be lost!",1161],["# database, Version 7.0.0.  Any changes made here will be lost!",405],["# Any use must be runtime checked with $^V",158],["# Any other process exited?",116],["Any known bugs and limitations will be listed here.",77]]},{"word":"Auth","context":[["use C4::Auth;",5322],["C4::AR::Auth::output_html_with_http_headers($template, $t_params, $session);",566],["use C4::AR::Auth;",528],["C4::AR::Auth::print_header($session);",356],["use C4::Auth qw(get_template_and_user);",197],["use C4::Auth qw/:DEFAULT get_session/;",145],["use C4::Auth qw(:DEFAULT get_session);",106],["use C4::Auth qw/check_cookie_auth/;",104],["use C4::Auth;    # get_template_and_user",101],["use C4::Auth;    # checkauth, getborrowernumber.",93]]},{"word":"Author","context":[["Author:        Jan Wielemaker",1204],["Author:        Jan Wielemaker and Anjo Anjewierden",788],["# Author: Daniel \"Trizen\" È˜uteu",336],["#  Author: DWS Systems Inc.",331],["# Author: H. Carvey, keydet89@yahoo.com",219],["## Author     : ian.sealy@sanger.ac.uk",201],["# Author: David Torres <api.davidtorres@gmail.com>",153],["##  Author:",128],["#    Author : David Gonzalez, david.gonzalez@crg.eu",127],["# Author: Slaven Rezic",108]]},{"word":"B","context":[["=item B<--help>",799],["=item B<--man>",648],["1*B>=0,",535],["verifier_error(A,B,C) :-",508],["1*A+ -1*B=0,",484],["B=1,",460],["B=0,",460],["1*B=0,",452],["=item B<-help>",403],["1*B=1,",359]]},{"word":"BAMUM","context":[["168C7\tBAMUM LETTER PHASE-C NSUOT NGOM",11],["1697E\tBAMUM LETTER PHASE-E MAEM",11],["168D7\tBAMUM LETTER PHASE-C NDAM",11],["169C3\tBAMUM LETTER PHASE-E MIEE",11],["16987\tBAMUM LETTER PHASE-E MGBA",11],["16813\tBAMUM LETTER PHASE-A KEUKEUTNDA",11],["1694B\tBAMUM LETTER PHASE-D TAE",11],["16898\tBAMUM LETTER PHASE-C GBAYI",11],["168E3\tBAMUM LETTER PHASE-C MBAA PICKET",11],["16864\tBAMUM LETTER PHASE-B NTIEE SHEUOQ",11]]},{"word":"BEGIN","context":[["BEGIN {",4278],["BEGIN DSSUBRECORD",916],["BEGIN",884],["BEGIN=REGISTER",512],["BEGIN { push(@INC, \"..\"); };",350],["# ***** BEGIN LICENSE BLOCK *****",314],["BEGIN{",264],["% BEGIN LICENSE BLOCK",245],["#  == BEGIN LICENSE ==",117],["BEGIN { $| = 1; print \"1..1\\n\"; }",109]]},{"word":"BOLD","context":[["print( BOLD, GREEN, \"\\n--\\n\", RESET );",16],["print BOLD, WHITE \"[*] Critical\\n\", RESET;",14],["1D774\tMATHEMATICAL SANS-SERIF BOLD SMALL EPSILON",11],["1D6B1\tMATHEMATICAL BOLD CAPITAL KAPPA",11],["1D65C\tMATHEMATICAL SANS-SERIF BOLD ITALIC SMALL G",11],["1D57D\tMATHEMATICAL BOLD FRAKTUR CAPITAL R",11],["1D4D8\tMATHEMATICAL BOLD SCRIPT CAPITAL I",11],["1D77D\tMATHEMATICAL SANS-SERIF BOLD SMALL XI",11],["1D4EC\tMATHEMATICAL BOLD SCRIPT SMALL C",11],["1D410\tMATHEMATICAL BOLD CAPITAL Q",11]]},{"word":"BUILDROOT","context":[["chdir(\"$BUILDROOT\");",106],["$ret=`rm -fr $BUILDROOT/$PROJECT.tmp`;",70],["$cmd=\"cp -pr \\\"$BUILDROOT/$PROJECT\\\" \\\"$BUILDROOT/$PROJECT.tmp\\\"\";",70],["print \"Copy $BUILDROOT/$PROJECT to $BUILDROOT/$PROJECT.tmp\\n\";",70],["print \"Copy $BUILDROOT/$PROJECT to $BUILDROOT/$PROJECT.tmp\\n\";",70],["$cmd=\"cp -pr \\\"$BUILDROOT/$PROJECT\\\" \\\"$BUILDROOT/$PROJECT.tmp\\\"\";",70],["print \"Go to directory $BUILDROOT\\n\";",69],["mkdir \"$BUILDROOT\";",58],["print \"Delete directory $BUILDROOT\\n\";",51],["print \"Clean $BUILDROOT\\n\";",50]]},{"word":"Basename","context":[["use File::Basename;",7899],["use File::Basename qw(dirname);",218],["use File::Basename qw(basename);",181],["use File::Basename qw( fileparse );",93],["use File::Basename qw(basename dirname);",67],["use File::Basename qw( dirname );",64],["my $script_dir = &File::Basename::dirname($0);",53],["use File::Basename qw(fileparse);",52],["use File::Basename ();",43],["use File::Basename qw(dirname basename);",37]]},{"word":"Bin","context":[["use FindBin qw($Bin);",1473],["use lib \"$FindBin::Bin/../lib\";",854],["if (!$::Driver) { use FindBin; exec(\"$FindBin::Bin/bootstrap.pl\", @ARGV, $0); die; }",594],["use lib \"$FindBin::Bin\";",367],["eval { require \"$FindBin::Bin/../kohalib.pl\" };",306],["use FindBin qw( $Bin );",256],["use lib (\"$FindBin::Bin/../PerlLib\");",225],["use lib $FindBin::Bin;",205],["use lib \"$Bin\";",189],["use lib \"$Bin/../lib\";",182]]},{"word":"Bio","context":[["use Bio::SeqIO;",1291],["use Bio::EnsEMBL::Registry;",899],["use Bio::EnsEMBL::DBSQL::DBAdaptor;",773],["use Bio::KBase::CDMI::CDMIClient;",649],["use Bio::KBase::Utilities::ScriptThing;",483],["while (my @tuples = Bio::KBase::Utilities::ScriptThing::GetBatch($ih, undef, $column)) {",453],["my $geO = Bio::KBase::CDMI::CDMIClient->new_get_entity_for_script(\"c=i\"\t\t=> \\$column,",306],["use Bio::Seq;",249],["my $registry = 'Bio::EnsEMBL::Registry';",186],["use Bio::AlignIO;",180]]},{"word":"Boston","context":[["# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",3797],["# Suite 330, Boston, MA  02111-1307 USA",1248],["Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",1198],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA",701],["Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA",594],["# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",529],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA",351],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",282],["# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.",208],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.",203]]},{"word":"Bug","context":[["#use warnings; FIXME - Bug 2505",1565],["# Bug#27636 tests fails if LC_* variables set to *_*.UTF-8",149],["# Remove this if/when Bug #58421 fixes this in the server",117],["# Workaround for Bug #50627: drop any debug opt",114],["# $dbh->do(\"DELETE FROM `systempreferences` WHERE variable='HomeOrHoldingBranch'\"); # Bug #2752",39],["of the bugs and their resolution. Bug reports can be submitted via the",38],["print \"Upgrade to $DBversion done (Bug 2576 : Add OPACFinesTab syspref)\\n\";",38],["print \"Upgrade to $DBversion done (Bug 1172 : Add OPACPatronDetails syspref)\\n\";",38],["print \"Upgrade to $DBversion done (Bug 5186: allow GST rate to be set to 0)\\n\";",34],["print \"Upgrade to $DBversion done (Bug 2142: maxItemsInSearchResults syspref resurrected)\\n\";",34]]},{"word":"C","context":[["1*C>=0,",647],["C=1.",557],["Copyright (C): 1985-2002, University of Amsterdam",547],["verifier_error(A,B,C) :-",508],["1*C=0,",457],["-1*C>= -1,",451],["[ 'call_regexp_common'  , 'C'      ],",397],["# Copyright (C) 2009-2015 Grupo de desarrollo de Meran CeSPI-UNLP",385],["# Copyright (C) 2009-2013 Grupo de desarrollo de Meran CeSPI-UNLP",369],["$type = 'C';",369]]},{"word":"C4","context":[["if (C4::Context->preference(\"Version\") < TransformToNum($DBversion)) {",11887],["use C4::Output;",5752],["use C4::Context;",5685],["use C4::Auth;",5322],["my $dbh = C4::Context->dbh;",3666],["if ( C4::Context->preference(\"Version\") < TransformToNum($DBversion) ) {",2830],["use C4::Koha;",2199],["use C4::Biblio;",2109],["use C4::Members;",1624],["use C4::Items;",1347]]},{"word":"CANADIAN","context":[["01545\tCANADIAN SYLLABICS RAAI",11],["01577\tCANADIAN SYLLABICS NUNAVIK HO",11],["01475\tCANADIAN SYLLABICS WEST-CREE KWE",11],["014A5\tCANADIAN SYLLABICS MI",11],["0141D\tCANADIAN SYLLABICS Y-CREE W",11],["0167B\tCANADIAN SYLLABICS WOODS-CREE THWOO",11],["0161D\tCANADIAN SYLLABICS CARRIER JJO",11],["0159D\tCANADIAN SYLLABICS WOODS-CREE THO",11],["0161F\tCANADIAN SYLLABICS CARRIER JJEE",11],["01566\tCANADIAN SYLLABICS THA",11]]},{"word":"CAPITAL","context":[["0055 0308 ; [.1833.0021.0008.00DC] # LATIN CAPITAL LETTER U WITH DIAERESIS",14],["01D5      ; [.1833.0021.0008.00DC][.0000.005B.0002.0304] # LATIN CAPITAL LETTER U WITH DIAERESIS AND MACRON",14],["01D9      ; [.1833.0021.0008.00DC][.0000.0041.0002.030C] # LATIN CAPITAL LETTER U WITH DIAERESIS AND CARON",14],["01DB      ; [.1833.0021.0008.00DC][.0000.0035.0002.0300] # LATIN CAPITAL LETTER U WITH DIAERESIS AND GRAVE",14],["01D7      ; [.1833.0021.0008.00DC][.0000.0032.0002.0301] # LATIN CAPITAL LETTER U WITH DIAERESIS AND ACUTE",14],["00DC      ; [.1833.0021.0008.00DC] # LATIN CAPITAL LETTER U WITH DIAERESIS",14],["0044 0335 ; [.15E4.0021.0008.0110] # LATIN CAPITAL LETTER D WITH STROKE",12],["0110      ; [.15E4.0021.0008.0110] # LATIN CAPITAL LETTER D WITH STROKE",12],["0055 030B ; [.1833.0022.0008.0170] # LATIN CAPITAL LETTER U WITH DOUBLE ACUTE",12],["0170      ; [.1833.0022.0008.0170] # LATIN CAPITAL LETTER U WITH DOUBLE ACUTE",12]]},{"word":"CGI","context":[["use CGI;",6556],["my $input = new CGI;",1973],["use CGI qw ( -utf8 );",1666],["my $query = new CGI;",1638],["my $cgi = new CGI;",740],["=head1 CGI PARAMETERS",343],["use CGI::Carp qw(fatalsToBrowser);",342],["use CGI qw(:standard);",304],["my $input=new CGI;",237],["use CGI::Session;",196]]},{"word":"COPYRIGHT","context":[["=head1 COPYRIGHT",2143],["THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",645],["COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,",640],["=head1 COPYRIGHT AND LICENSE",533],["# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"",322],["# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",268],["# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",179],["=head1 LICENSE AND COPYRIGHT",138],["# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE",110],["# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT",81]]},{"word":"CUNEIFORM","context":[["120E3\tCUNEIFORM SIGN GA2 TIMES SAL",11],["1206A\tCUNEIFORM SIGN DAG KISIM5 TIMES SI",11],["121F8\tCUNEIFORM SIGN LIL",11],["120F0\tCUNEIFORM SIGN GAD",11],["12311\tCUNEIFORM SIGN U2",11],["12320\tCUNEIFORM SIGN UM TIMES SHA3",11],["121DB\tCUNEIFORM SIGN LAGAB TIMES NE",11],["120AD\tCUNEIFORM SIGN EZEN TIMES KASKAL SQUARED",11],["12275\tCUNEIFORM SIGN NUNUZ AB2 TIMES NE",11],["12326\tCUNEIFORM SIGN UN",11]]},{"word":"Can","context":[["or warn \"$P: Can't find a readable $configuration_file file $!\\n\";",193],["mtr_error(\"Can't use --extern with --embedded-server\");",147],["mtr_error(\"Can't use --mem and --vardir at the same time \")",147],["mtr_error(\"Can't use --extern when using debugger\");",147],["mtr_error(\"Can't use --mem and --tmpdir at the same time \")",147],["or die \"Can't open $filename ($!).\\n\";",135],["GetOptions(%options) or usage(\"Can't read options\");",126],["build-thread=#        Can be set in environment variable MTR_BUILD_THREAD.",119],["or mtr_error(\"Can't write to $path_config_file: $!\");",119],["or mtr_error(\"Can't read experimental file: $exp_file\");",118]]},{"word":"Check","context":[["#  1 Check failed",387],["# Check operator spacing.",303],["# Check for switch () and associated case and default",303],["# Check for }<nl>else {, these must be at the same",303],["# Check for wrappage within a valid hunk of the file",303],["# Check for potential 'bare' types",300],["# Check for any sort of function declaration.",300],["# Check the post-context.",299],["# Check for bitwise tests written as boolean",299],["# Check the pre-context.",299]]},{"word":"CommonObject","context":[["$CommonObject{LogObject}->Log(",777],["%CommonObject,",587],["$CommonObject{EncodeObject} = Kernel::System::Encode->new(%CommonObject);",517],["$CommonObject{EncodeObject} = Kernel::System::Encode->new(%CommonObject);",517],["$CommonObject{LogObject}    = Kernel::System::Log->new(",509],["$CommonObject{ConfigObject} = Kernel::Config->new();",464],["my %CommonObject = ();",279],["my %CommonObject;",270],["$CommonObject{MainObject} = Kernel::System::Main->new(%CommonObject);",251],["$CommonObject{MainObject} = Kernel::System::Main->new(%CommonObject);",251]]},{"word":"Config","context":[["use Kernel::Config;",576],["use Config;",566],["$CommonObject{ConfigObject} = Kernel::Config->new();",464],["my $config = new Vyatta::Config;",310],["use OpenBib::Config;",253],["use Vyatta::Config;",208],["use Config::Simple;",203],["use Config::IniFiles;",192],["use Config::Tiny;",129],["# Config file to use as template for all tests",119]]},{"word":"Context","context":[["if (C4::Context->preference(\"Version\") < TransformToNum($DBversion)) {",11887],["use C4::Context;",5685],["my $dbh = C4::Context->dbh;",3666],["if ( C4::Context->preference(\"Version\") < TransformToNum($DBversion) ) {",2830],["if (C4::Context->preference('Version') < TransformToNum($DBversion)){",517],["if ( C4::Context->preference('Version') < TransformToNum($DBversion) ) {",467],["if (C4::Context->preference('ExtendedPatronAttributes')) {",307],["my $userenv = C4::Context->userenv;",283],["my $dbh = C4::Context->dbh();",282],["authnotrequired => ( C4::Context->preference(\"OpacPublic\") ? 1 : 0 ),",279]]},{"word":"Copyright","context":[["# Copyright 2000-2002 Katipo Communications",2903],["# Copyright [1999-2015] Wellcome Trust Sanger Institute and the EMBL-European Bioinformatics Institute",996],["Copyright (C): 1985-2002, University of Amsterdam",547],["# Copyright [2016] EMBL-European Bioinformatics Institute",501],["# Copyright (C) 2009-2015 Grupo de desarrollo de Meran CeSPI-UNLP",385],["# Copyright (C) 2009-2013 Grupo de desarrollo de Meran CeSPI-UNLP",369],["# Copyright 1997-2005 by Open Source Technology Group. See README",359],["# Copyright 2003 by Wilson Snyder. This program is free software; you can",328],["#  Copyright 2015 Electric Cloud, Inc.",311],["# Copyright [1999-2014] Wellcome Trust Sanger Institute and the EMBL-European Bioinformatics Institute",268]]},{"word":"D","context":[["1*D+ -1*E=0,",527],["1*D>=0,",497],["# -D Ruth Bavousett",398],["1*D=0,",337],["possible($1, \"D:\" . $s);",297],["'CHRvar'(D),",281],["1*D=2,",241],["mov\t$D,12($ctx)",180],["add\t12($ctx),$D",180],["close(D);",172]]},{"word":"DATA","context":[["LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER",643],["DATA",559],["print <<DATA;",544],["while (<DATA>) {",361],["# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER",207],["# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE",182],["pod2usage(-verbose => 1,  -input=>\\*DATA);",180],["# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",150],["close DATA;",131],["# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY",125]]},{"word":"DB","context":[["use Kernel::System::DB;",532],["my $reader = getObject('Slash::DB', { db_type => 'reader' });",290],["# called by delete_confirm, used to effectively confirm deletion of data in DB",262],["# called by default form, used to confirm deletion of data in DB",262],["# called by add_form, used to insert/modify data in DB",258],["use MediaWords::DB;",225],["use Lacuna::DB;",222],["out('Loading DB');",185],["my $db = MediaWords::DB::connect_to_db;",162],["use Bio::DB::Fasta;",157]]},{"word":"DBI","context":[["use DBI;",5022],["{ PrintError => 0}) || die $DBI::errstr;",571],["$dbh = DBI->connect(\"DBI:mysql:$opt_db:$opt_host\",",487],["$dbh = DBI->connect(\"DBI:mysql:$opt_db:$opt_host\",",487],["my $dbh = DBI->connect(",223],["use DBI qw(:sql_types);",152],["or die $DBI::errstr;",141],["or die \"Couldn't connect to database: \" . DBI->errstr;",125],["$sth->execute || die $DBI::errstr;",112],["die \"DBI error with prepare:\", $sth->errstr unless $sth;",104]]},{"word":"DBversion","context":[["SetVersion ($DBversion);",13328],["if (C4::Context->preference(\"Version\") < TransformToNum($DBversion)) {",11887],["SetVersion($DBversion);",7872],["if ( CheckVersion($DBversion) ) {",4790],["if ( C4::Context->preference(\"Version\") < TransformToNum($DBversion) ) {",2830],["if (C4::Context->preference('Version') < TransformToNum($DBversion)){",517],["if ( C4::Context->preference('Version') < TransformToNum($DBversion) ) {",467],["if(CheckVersion($DBversion)) {",405],["if (CheckVersion($DBversion)) {",273],["if(C4::Context->preference(\"Version\") < TransformToNum($DBversion) ) {",97]]},{"word":"DEFAULT","context":[[") ENGINE=InnoDB DEFAULT CHARSET=utf8\");",1057],[") ENGINE=InnoDB DEFAULT CHARSET=utf8;",757],[") ENGINE=InnoDB DEFAULT CHARSET=utf8",632],[") ENGINE=InnoDB DEFAULT CHARSET=utf8;\");",321],["################## DEFAULT ##################################",201],["} else { # DEFAULT",169],["} #---- END $OP eq DEFAULT",167],[") ENGINE=InnoDB  DEFAULT CHARSET=utf8;",165],[") ENGINE=InnoDB DEFAULT CHARSET=utf8 \");",157],["use C4::Auth qw/:DEFAULT get_session/;",145]]},{"word":"DESCRIPTION","context":[["=head1 DESCRIPTION",9185],["# DESCRIPTION: Verilator: Verilog Test driver/expect definition",589],["# DESCRIPTION:                                              |",174],["DESCRIPTION",164],["# DESCRIPTION",142],["#   DESCRIPTION",133],["#  DESCRIPTION:",112],["DESCRIPTION:",85],["%%% DESCRIPTION",71],["=head2 DESCRIPTION",66]]},{"word":"DIGIT","context":[["print \"NON DIGIT VALUE FOUND AT $value\\n\";",21],["01949\tLIMBU DIGIT THREE",11],["2784\t\tCIRCLED SANS-SERIF DIGIT FIVE",11],["0A8E7\tCOMBINING DEVANAGARI DIGIT SEVEN",11],["00AE6\tGUJARATI DIGIT ZERO",11],["0A9D6\tJAVANESE DIGIT SIX",11],["00776\tARABIC LETTER FARSI YEH WITH EXTENDED ARABIC-INDIC DIGIT THREE ABOVE",11],["024F9\tDOUBLE CIRCLED DIGIT FIVE",11],["00BE9\tTAMIL DIGIT THREE",11],["1D7EF\tMATHEMATICAL SANS-SERIF BOLD DIGIT THREE",11]]},{"word":"DIR","context":[["closedir(DIR);",1828],["closedir DIR;",1153],["closedir( DIR );",212],["closedir (DIR);",208],["close DIR;",166],["vardir=DIR            The directory where files generated from the test run",149],["tmpdir=DIR            The directory where temporary files are stored",149],["variable MTR_MEM=[DIR]",147],["my @files = readdir(DIR);",143],["close(DIR);",128]]},{"word":"DO","context":[["# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!",12534],["close(DO);",122],["#* Upper this line, this part is controlled by PVCS VM. DO NOT MODIFY!!",95],["#* Below this line, this part is controlled by PVCS VM. DO NOT MODIFY!!",87],["while (<DO>) {",71],["## II. DO THE SEARCH AND GET THE RESULTS",57],["# EXTREME NETWORKS. PLEASE CONTACT EXTREME NETWORKS IF YOU DO NOT HAVE A COPY OF THE",54],["print OUT \"/* This file is automatically generated.  DO NOT EDIT!\\n\";",53],["// MACHINE GENERATED BY THE COMMAND ABOVE; DO NOT EDIT",52],["=head1 TO DO",52]]},{"word":"DWP","context":[["&xor\t($s1,&DWP(4,$key));",282],["&xor\t($s2,&DWP(8,$key));",282],["&xor\t($s3,&DWP(12,$key));",282],["&mov\t(&DWP(4,$key),$s1);",204],["&mov\t(&DWP(12,$key),$s3);",204],["&mov\t(&DWP(8,$key),$s2);",204],["&mov\t($s3,&DWP(12,$acc));",164],["&mov\t($s2,&DWP(8,$acc));",164],["&mov\t($s1,&DWP(4,$acc));",164],["&mov\t(&DWP(4,$acc),$s1);",164]]},{"word":"Data","context":[["use Data::Dumper;",11488],["#use Data::Dumper;",459],["# use Data::Dumper;",191],["use Data::Dumper qw(Dumper);",182],["use Data::Uniqid qw(uniqid);",170],["$Data::Dumper::Indent = 1;",161],["use Data::Printer;",148],["item(X, I, K, Data),",123],["use autouse 'Data::Dumper' => qw(Dumper);",109],["require Data::Dumper;",108]]},{"word":"Don","context":[["# name or existence of this file are subject to change without notice.  Don't",6892],["# Don't use it directly.",3636],["# Don't run the example if the file is being included.",449],["# Don't force email to have quotes",192],["# Don't delete anything if starting dirty",143],["# Don't repeat if test was skipped",119],["print-testcases       Don't run the tests but print details about all the",119],["$tests= {}; # Don't need the tests list in child",119],["# Don't allow that to happen",119],["return \"\"; # Don't care about mysqlslap",118]]},{"word":"Dumper","context":[["use Data::Dumper;",11488],["#use Data::Dumper;",459],["# use Data::Dumper;",191],["use Data::Dumper qw(Dumper);",182],["use Data::Dumper qw(Dumper);",182],["$Data::Dumper::Indent = 1;",161],["use autouse 'Data::Dumper' => qw(Dumper);",109],["use autouse 'Data::Dumper' => qw(Dumper);",109],["require Data::Dumper;",108],["$Data::Dumper::Sortkeys = 1;",105]]},{"word":"E","context":[["$type = 'E';",1783],["E-mail:        jan@swi.psy.uva.nl",798],["1*D+ -1*E=0,",527],["1*E=1,",502],["E-mail:        J.Wielemaker@vu.nl",495],["1*E>=0,",361],["E: 1",316],["1*E=0,",315],["$c = 'E';",303],["my $prev_values = 'E';",299]]},{"word":"EDIT","context":[["# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!",12534],["print OUT \"/* This file is automatically generated.  DO NOT EDIT!\\n\";",53],["// MACHINE GENERATED BY THE COMMAND ABOVE; DO NOT EDIT",52],["// MACHINE GENERATED BY THE ABOVE COMMAND; DO NOT EDIT",46],["\"# DO NOT EDIT THIS FILE DIRECTLY; edit Recipe or mkfiles.pl instead.\\n\";",35],["* !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!",32],["\"/* Automatically generated by subst.pl --- DO NOT EDIT!!! */\\n\\n\",",25],["$text .= \"// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\\n\\n\";",25],["=head1 EDIT HISTORY",25],["* THIS FILE WAS AUTOMATICALLY GENERATED, DO NOT EDIT.",23]]},{"word":"EGYPTIAN","context":[["1341D\tEGYPTIAN HIEROGLYPH AA015",11],["13184\tEGYPTIAN HIEROGLYPH H006",11],["131B6\tEGYPTIAN HIEROGLYPH M007",11],["13116\tEGYPTIAN HIEROGLYPH F022",11],["1326D\tEGYPTIAN HIEROGLYPH O019",11],["133B2\tEGYPTIAN HIEROGLYPH W003A",11],["130EB\tEGYPTIAN HIEROGLYPH E021",11],["1302A\tEGYPTIAN HIEROGLYPH A037",11],["1308A\tEGYPTIAN HIEROGLYPH D020",11],["1333A\tEGYPTIAN HIEROGLYPH U006B",11]]},{"word":"END","context":[["END",18269],["return <<'END';",12483],["END DSSUBRECORD",916],["print F <<END",654],["END {",548],["our $usage = <<'END';",546],["print <<END;",527],["END=REGISTER",512],["inputText => <<'END',",382],["END=MCU",338]]},{"word":"ENV","context":[["$VTK_DATA = $ENV{VTK_DATA};",486],["my $verbose = $ENV{VERBOSE};",346],["@ENV{qw(LANGUAGE LANG LC_ALL)} = ('C') x 3;",341],["my $save_temps = $ENV{DEBUG};",277],["foreach my $path (split(/:/, \".:$ENV{HOME}:.scripts\")) {",235],["$ENV{'VALGRIND_TEST'}= $opt_valgrind;",149],["$ENV{'UMASK'}=              \"0660\"; # The octal *string*",149],["split(':', $ENV{'DYLD_LIBRARY_PATH'}) : ());",149],["$ENV{'DYLD_LIBRARY_PATH'} ?",149],["$ENV{'LC_ALL'}=             \"C\";",149]]},{"word":"EOF","context":[["EOF",20802],["print <<EOF;",4245],["rules           => <<EOF",2150],["rules\t\t=> <<EOF",1490],["print FC <<EOF;",728],["print <<EOF",693],["print <<\"EOF\";",606],["print FH <<\"EOF\";",355],["description => <<EOF,",354],["print OUT <<\"EOF\";",333]]},{"word":"ERROR","context":[["if (ERROR(\"SPACING\",",1920],["ERROR(\"SPACING\",",1817],["ERROR(\"TRAILING_STATEMENTS\",",772],["ERROR(\"OPEN_BRACE\",",551],["die \"ERROR: unknown $section state: $state. Stopped\";",363],["sub ERROR {",305],["if ($name ne 'EOF' && $name ne 'ERROR') {",250],["print \"**** ERROR **** \",",238],["ERROR(\"trailing statements should be on next line\\n\" . $herecurr);",218],["if (ERROR(\"OPEN_BRACE\",",218]]},{"word":"EnsEMBL","context":[["use Bio::EnsEMBL::Registry;",899],["use Bio::EnsEMBL::DBSQL::DBAdaptor;",773],["my $registry = 'Bio::EnsEMBL::Registry';",186],["Bio::EnsEMBL::Registry->load_all( $registry_file );",168],["use Bio::EnsEMBL::Compara::DBSQL::DBAdaptor;",159],["use Bio::EnsEMBL::Variation::DBSQL::DBAdaptor;",139],["use Bio::EnsEMBL::Utils::Exception qw(throw warning);",137],["use Bio::EnsEMBL::Analysis;",110],["my $reg = 'Bio::EnsEMBL::Registry';",108],["use Bio::EnsEMBL::Utils::Exception qw(warning throw verbose);",97]]},{"word":"Error","context":[["print STDERR \"Error: Could not open $file\\n\";",194],["&Error(",184],["die \"Error, cmd: $cmd died with ret $ret\";",151],["mtr_error(\"Error executing mysqld --bootstrap\\n\" .",145],["|| die \"Error:\\n$command\\nerror\";",120],["qr/^Error:|\\[ERROR\\]/,",119],["qr/InnoDB: Warning|InnoDB: Error/,",119],["Error,",110],["use Error qw(:try);",108],["or die(\"Error in command line arguments\\n\");",91]]},{"word":"F","context":[["close(F);",2562],["close F;",1856],["while (<F>) {",1367],["1*F>=0,",658],["print F <<END",654],["print F \"\\n\";",603],["-1*F>= -1,",581],["1*F=1,",474],["'F',",471],["while(<F>) {",441]]},{"word":"FH","context":[["close FH;",1454],["close(FH);",1170],["while (<FH>) {",514],["print FH <<\"EOF\";",355],["local *FH;",308],["close $FH;",244],["# FH -> autoflush(1);",229],["close (FH);",176],["open $FH, '>', $filename",135],["foreach my $line (<FH>) {",130]]},{"word":"FILE","context":[["# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!",12534],["close(FILE);",3848],["close FILE;",3666],["while (<FILE>) {",1530],["print FILE pack (\"L\", hex (\"0\")) ;",923],["close (FILE);",637],["while(<FILE>) {",536],["close($FILE);",386],["fclose(FILE);",369],["my $FILE;",337]]},{"word":"FITNESS","context":[["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",7175],["# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR",4860],["MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",2778],["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the",2306],["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU",1084],["#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",1005],["LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS",642],["# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License",628],["#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",522],["#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",459]]},{"word":"FOR","context":[["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",7175],["# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR",4860],["MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",2778],["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the",2306],["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU",1084],["#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",1005],["FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE",642],["COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,",640],["# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License",628],["#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",522]]},{"word":"FORM","context":[["</FORM>",116],["$FORM = new CGI;",49],["$FORM{$name} .= \"\\0\"\t\t\tif(defined($FORM{$name}));",48],["$FORM{$name} .= $value;",48],["$FORM{$name} .= \"\\0\"\t\t\tif(defined($FORM{$name}));",48],["$sNewFolderName = $FORM{'NewFolderName'};",34],["if($FORM{'NewFolderName'} ne \"\") {",34],["$FORM{$name} = $value;",33],["cgi => $FORM,",32],["'55' => 'GENRE/FORM'",27]]},{"word":"FROM","context":[["FROM",1087],["# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",253],["# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM",210],["#  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON",158],["# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN",118],["\"DELETE FROM mysql.user where user= '';\\n\");",118],["FROM default_branch_circ_rules",100],["SELECT * FROM tables",85],["FROM aqorders",82],["FROM subscription",80]]},{"word":"Fifth","context":[["# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",3797],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA",701],["Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA",594],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA",351],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",282],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.",203],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA",182],["Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,",175],["51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",139],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,",99]]},{"word":"File","context":[["use File::Basename;",7899],["use File::Spec;",2865],["use File::Copy;",2259],["use File::Find;",1678],["use File::Path;",1599],["use IO::File;",1521],["use File::Slurp;",649],["#     printf $log_fh \"%d: File %s already exists\\n\", __LINE__, $outfnm if ( -e $outfnm);",510],["use File::Temp;",467],["use File::stat;",443]]},{"word":"Find","context":[["use File::Find;",1678],["# Find out what is on the end of the line after the",595],["# Find out how long the conditional actually is.",588],["# Find the real next line.",280],["'full_path'     => $File::Find::name,",188],["'directory'     => $File::Find::dir,",188],["# Find out default storage engine being used(if any)",149],["# Find the absolute path to the test directory",149],["# Find out type of logging that are being used",147],["# Find the end of the macro and limit our statement",124]]},{"word":"FindBin","context":[["use FindBin;",4826],["use FindBin qw($Bin);",1473],["use FindBin qw($RealBin);",1101],["use lib \"$FindBin::Bin/../lib\";",854],["if (!$::Driver) { use FindBin; exec(\"$FindBin::Bin/bootstrap.pl\", @ARGV, $0); die; }",594],["if (!$::Driver) { use FindBin; exec(\"$FindBin::Bin/bootstrap.pl\", @ARGV, $0); die; }",594],["use lib \"$FindBin::Bin\";",367],["eval { require \"$FindBin::Bin/../kohalib.pl\" };",306],["use FindBin qw( $Bin );",256],["use lib (\"$FindBin::Bin/../PerlLib\");",225]]},{"word":"Floor","context":[["# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",3797],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA",701],["Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA",594],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA",351],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",282],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.",203],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA",182],["Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,",175],["51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",139],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,",99]]},{"word":"For","context":[["# CRYPTOGAMS licenses depending on where you obtain it. For further",1012],["\"Use of CONFIG_EXPERIMENTAL is deprecated. For alternatives, see https://lkml.org/lkml/2012/10/23/580\\n\");",256],["For example:",243],["# For debugging purposes only",189],["=head2 For more information:",176],["# version.  For a full list including contact information of contributors,",164],["# For details, please see",149],["# is the parent directory of the \"mysql-test\" directory. For source",145],["use IO::Scalar;                # For print_help subfunction",127],["mysql_install_db($mysqld); # For versional testing",118]]},{"word":"Foundation","context":[["# Foundation; either version 2 of the License, or (at your option) any later",4705],["# with Koha; if not, write to the Free Software Foundation, Inc.,",3538],["# the Free Software Foundation; either version 3 of the License, or",3443],["# the Free Software Foundation, either version 3 of the License, or",2555],["as published by the Free Software Foundation; either version 2",1860],["# the Free Software Foundation; either version 2 of the License, or",1507],["# Koha; if not, write to the Free Software Foundation, Inc., 59 Temple Place,",1254],["Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",1198],["# as published by the Free Software Foundation; either version 2",803],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA",701]]},{"word":"Frame","context":[["% Frame number: 350",245],["% Frame number: 339",245],["% Frame number: 335",245],["% Frame number: 338",245],["% Frame number: 324",245],["% Frame number: 341",245],["% Frame number: 300",245],["% Frame number: 332",245],["% Frame number: 322",245],["% Frame number: 349",245]]},{"word":"Franklin","context":[["# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",3797],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA",701],["Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA",594],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA",351],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",282],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.",203],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA",182],["Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,",175],["51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",139],["$rawline =~ /\\b51\\s+Franklin\\s+St/i) {",100]]},{"word":"Free","context":[["# terms of the GNU General Public License as published by the Free Software",5003],["# with Koha; if not, write to the Free Software Foundation, Inc.,",3538],["# the Free Software Foundation; either version 3 of the License, or",3443],["# along with this program; if not, write to the Free Software",3345],["# the Free Software Foundation, either version 3 of the License, or",2555],["as published by the Free Software Foundation; either version 2",1860],["License along with this library; if not, write to the Free Software",1762],["compiled with a Free Software compiler, to produce an executable, this",1583],["# the Free Software Foundation; either version 2 of the License, or",1507],["# Koha; if not, write to the Free Software Foundation, Inc., 59 Temple Place,",1254]]},{"word":"G","context":[["1*G+ -1*H=0,",404],["1*G>=0,",363],["1*G=2,",359],["$line !~ /\\G(?:",294],["1*G=1,",273],["1*G=0,",155],["-1*G>= -1,",148],["close(G);",133],["add\t$SZ*6($ctx),$G",98],["mov\t$G,$SZ*6($ctx)",98]]},{"word":"GNU","context":[["# GNU General Public License for more details.",9259],["# You should have received a copy of the GNU General Public License",8214],["# it under the terms of the GNU General Public License as published by",5449],["# terms of the GNU General Public License as published by the Free Software",5003],["# You should have received a copy of the GNU General Public License along",4990],["# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.",4849],["GNU General Public License for more details.",2781],["# under the terms of the GNU General Public License as published by",2021],["modify it under the terms of the GNU General Public License",1862],["the GNU General Public License.",1583]]},{"word":"General","context":[["# GNU General Public License for more details.",9259],["# You should have received a copy of the GNU General Public License",8214],["# it under the terms of the GNU General Public License as published by",5449],["# terms of the GNU General Public License as published by the Free Software",5003],["# You should have received a copy of the GNU General Public License along",4990],["# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.",4849],["GNU General Public License for more details.",2781],["# under the terms of the GNU General Public License as published by",2021],["modify it under the terms of the GNU General Public License",1862],["the GNU General Public License.",1583]]},{"word":"Get","context":[["# Get and check command line options",454],["# Get AdWords Client, credentials will be read from ~/adwords.properties.",448],["# Get the full operator variant.",296],["# Get options",291],["# Get the args needed for the embedded server",238],["help                  Get this help text",149],["$Kernel::OM->Get('Kernel::System::Log')->Log(",120],["# Get diff and check if dynamic switch is possible",119],["# Get log from server identified from its $proc object, from named test",119],["input => 'Get MySQL Stats',",88]]},{"word":"GetOptions","context":[["GetOptions(",7171],["GetOptions (",935],["&GetOptions(",409],["my $result = GetOptions(",392],["GetOptions",310],["use Getopt::Long qw(GetOptions);",284],["GetOptions(\\%opts,",176],["&GetOptions ( 'h' => \\$help_flag,",153],["Getopt::Long::GetOptions(",127],["GetOptions(%options) or usage(\"Can't read options\");",126]]},{"word":"Getopt","context":[["use Getopt::Long;",18087],["use Getopt::Std;",4065],["use Getopt::Long qw(:config no_auto_abbrev);",391],["use Getopt::Long qw(:config no_ignore_case);",332],["use Getopt::Long qw(GetOptions);",284],["Getopt::Long::Configure('bundling');",273],["use Getopt::Long qw(:config no_ignore_case bundling);",225],["Getopt::Long::Configure(\"pass_through\");",197],["Getopt::Long::Configure (\"bundling\");",192],["use Getopt::Long::Descriptive;",174]]},{"word":"H","context":[["1*G+ -1*H=0,",404],["1*H=2,",367],["# Author: H. Carvey, keydet89@yahoo.com",219],["1*H=1,",211],["arg(B, F, H),",144],["'--format=\"GitCommit: %H%n' .",132],["1*H>=0,",129],["-H, --hostname=HOST",129],["1*H=0,",121],["-1*H>= -3,",119]]},{"word":"HANGUL","context":[["03209\tPARENTHESIZED HANGUL CHIEUCH",11],["0117E\tHANGUL JUNGSEONG YEO-U",11],["011EB\tHANGUL JONGSEONG PANSIOS",11],["3211\t\tPARENTHESIZED HANGUL LA",11],["0D7B1\tHANGUL JUNGSEONG O-O-I",11],["321C\t\tPARENTHESIZED HANGUL JU",11],["3176\t\tHANGUL LETTER BIEUB JIEUJ",11],["0110A\tHANGUL CHOSEONG SSANGSIOS",11],["3170\t\tHANGUL LETTER BIEUB BAN CHI EUM",11],["011C9\tHANGUL JONGSEONG NIEUN-THIEUTH",11]]},{"word":"HIEROGLYPH","context":[["130CA\tEGYPTIAN HIEROGLYPH D067A",11],["13280\tEGYPTIAN HIEROGLYPH O032",11],["13064\tEGYPTIAN HIEROGLYPH C008",11],["13370\tEGYPTIAN HIEROGLYPH V005",11],["1333B\tEGYPTIAN HIEROGLYPH U007",11],["13074\tEGYPTIAN HIEROGLYPH C023",11],["132F3\tEGYPTIAN HIEROGLYPH S028",11],["130A3\tEGYPTIAN HIEROGLYPH D042",11],["13223\tEGYPTIAN HIEROGLYPH NL004",11],["13079\tEGYPTIAN HIEROGLYPH D004",11]]},{"word":"HTML","context":[["use HTML::Entities;",402],["<HTML>",221],["</HTML>",214],["HTML",203],["use HTML::Template;",196],["use HTML::TreeBuilder;",191],["# Output:       HTML",184],["(END ERROR HTML)",182],["print <<\"(END ERROR HTML)\";",178],["[ 'call_regexp_common'  , 'HTML'   ], ],",132]]},{"word":"HTTP","context":[["use HTTP::Request;",255],["use HTTP::Request::Common;",222],["use HTTP::Cookies;",209],["use HTTP::OAI;",202],["use HTTP::Tiny;",116],["use HTTP::Response;",88],["use HTTP::Request::Common qw(POST);",76],["use HTTP::Headers;",71],["return \"failed starting HTTP server\";",68],["&write_data(\"HTTP/1.0 302 Moved Temporarily\\r\\n\");",62]]},{"word":"I","context":[["1*I>=0,",322],["1*I=2,",322],["-1*I>= -1,",294],["1*I=1,",259],["close I;",235],["1*I=0,",169],["I1 is I + 1,",160],["I2 is I + 1,",135],["I1 is I+1,",125],["item(X, I, K, Data),",123]]},{"word":"IMPLIED","context":[["\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",643],["LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS",642],["# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",352],["# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE",342],["# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE",326],["# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY",184],["#  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF",158],["#  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF",158],["# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",155],["# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR",141]]},{"word":"IN","context":[["close IN;",4549],["while (<IN>) {",3399],["close(IN);",3237],["while(<IN>) {",1121],["while(<IN>){",860],["while (<IN>)",654],["LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN",643],["CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT",643],["FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE",642],["close (IN);",586]]},{"word":"INCLUDING","context":[["LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN",643],["\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",643],["INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,",643],["# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",352],["# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE",326],["# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY",205],["# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR",185],["# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY",184],["# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF",166],["#  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF",158]]},{"word":"INSERT","context":[["$dbh->do(\"INSERT INTO `systempreferences` (variable,value,options,explanation,type)",360],["INSERT INTO permissions (module_bit, code, description) VALUES",197],["INSERT INTO `letter`",174],["INSERT IGNORE INTO systempreferences (variable,value,explanation,options,type)",154],["INSERT IGNORE INTO",145],["$dbh->do(\"INSERT INTO `letter` (module, code, name, title, content, is_html)",124],["$dbh->do(\"INSERT INTO `systempreferences` ( `variable` , `value` , `options` , `explanation` , `type` )",114],["INSERT INTO `letter` (`module`, `code`, `name`, `title`, `content`) VALUES",101],["INSERT INTO",92],["$dbh->do(\"INSERT INTO permissions (module_bit, code, description) VALUES",91]]},{"word":"INTERNAL","context":[["# !!!!!!!   INTERNAL PERL USE ONLY   !!!!!!!",9514],["#### INTERNAL MODULES",94],["=head1 INTERNAL METHODS",54],["=head3 IMPORTANT INTERNAL VARIABLES",22],["'O|output-charset=s'\t\t=> \\$charset_out,\t# INTERNAL",13],["'po-mode'\t\t\t\t=> \\$po_mode_p,\t\t# INTERNAL",13],["'disable-fuzzy'\t\t\t=> \\$disable_fuzzy_p,\t# INTERNAL",13],["'charset=s'\t=> sub { $charset_in = $charset_out = $_[1] },\t# INTERNAL",13],["'I|input-charset=s'\t\t\t=> \\$charset_in,\t# INTERNAL",13],["or ReportError(Ts('Cannot write %s', $file) . \": $!\", '500 INTERNAL SERVER ERROR');",11]]},{"word":"INTO","context":[["$dbh->do(\"INSERT INTO `systempreferences` (variable,value,options,explanation,type)",360],["INSERT INTO permissions (module_bit, code, description) VALUES",197],["INSERT INTO `letter`",174],["INSERT IGNORE INTO systempreferences (variable,value,explanation,options,type)",154],["INSERT IGNORE INTO",145],["$dbh->do(\"INSERT INTO `letter` (module, code, name, title, content, is_html)",124],["$dbh->do(\"INSERT INTO `systempreferences` ( `variable` , `value` , `options` , `explanation` , `type` )",114],["INSERT INTO `letter` (`module`, `code`, `name`, `title`, `content`) VALUES",101],["INSERT INTO",92],["$dbh->do(\"INSERT INTO language_descriptions(subtag, type, lang, description)",91]]},{"word":"IO","context":[["use IO::File;",1521],["use IO::Socket;",925],["use IO::Handle;",744],["use IO::Socket::INET;",549],["use IO::Select;",487],["my $F= IO::File->new($path_current_testlog)",238],["my $server = new IO::Socket::INET",238],["use IO::Handle;         #autoflush",236],["my $Ferr = IO::File->new($error_log)",155],["my $IN = new IO::File $file, \"r\";",148]]},{"word":"IS","context":[["# distributed under the License is distributed on an \"AS IS\" BASIS,",2592],["THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",645],["\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",643],["#  distributed under the License is distributed on an \"AS IS\" BASIS,",515],["# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",353],["# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",353],["# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"",322],["# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"",322],["## distributed under the License is distributed on an \"AS IS\" BASIS,",271],["% Software distributed under the License is distributed on an \"AS IS\"",244]]},{"word":"Ident","context":[["qr{${Ident}_handler_fn},",301],["qr{union\\s+$Ident},",301],["qr{enum\\s+$Ident},",301],["qr{struct\\s+$Ident},",301],["qr{${Ident}_handler},",301],["qr{${Ident}_t},",301],["} elsif ($cur =~ /^($Ident|$Constant)/o) {",300],["while ($line =~ /($Ident)\\s+\\(/g) {",299],["$prevline =~ /^.\\s*(?:typedef\\s+)?(enum|union|struct)(?:\\s+$Ident)?\\s*$/) {",299],["if ($s =~ /$Ident:\\*$/s) {",297]]},{"word":"If","context":[["# along with this program.  If not, see <http://www.gnu.org/licenses/>.",1805],["# along with Meran.  If not, see <http://www.gnu.org/licenses/>.",754],["# License, v. 2.0. If a copy of the MPL was not distributed with this",416],["line would contain the id. If some other column contains the id,",386],["# Guestimate if this is a continuing comment.  If this",303],["# the context looking for a comment \"edge\".  If this",300],["# If we are about to drop off the end, pull in more",300],["# If we have no input at all, then there is nothing to report on",299],["# If the condition carries leading newlines, then count those as offsets.",298],["# If this whole things ends with a type its most",298]]},{"word":"In","context":[["# In mailback mode only produce a report in the negative, for",300],["# to try and find and validate the current printk.  In summary the current",285],["# In the RPM case, binaries and libraries are installed in the",149],["# In most cases, the base directory we find everything relative to,",149],["# In particular, this should not be used as an example of modern Perl",123],["user-args             In combination with start* and no test name, drops",118],["# In these cases we may want valgrind report from normal termination",115],["close(In),",111],["get_code(In, C1),",100],["# In accordance with the original license, this code and all its",78]]},{"word":"Inc","context":[["# with Koha; if not, write to the Free Software Foundation, Inc.,",3538],["# Koha; if not, write to the Free Software Foundation, Inc., 59 Temple Place,",1254],["Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",1198],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA",701],["Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA",594],["# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",529],["#  an die Free Software Foundation, Inc., 675 Mass Ave, Cambridge,",391],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA",351],["# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.",346],["#  Author: DWS Systems Inc.",331]]},{"word":"It","context":[["# Circulation and User's Management. It's written in Perl, and uses Apache2",754],["# It is, so see if the prefix is acceptable.",280],["# It's not mysqltest that has exited, kill it",236],["# (It may become useful if the test is moved to ./t subdirectory.)",155],["# It is an effect of setting 'pass_through' in option processing",149],["# group below.  It could be that the tables will match the same set of code",145],["do a proper clean-up. It could also be caused by the previous test run",118],["# or should it be fixed width column parsing? It does not",111],["file.  It's your fault if there's no backup or git",93],["# This file is for internal use by core Perl only.  It is retained for",63]]},{"word":"J","context":[["E-mail:        J.Wielemaker@vu.nl",495],["1*J=2,",413],["1*J+ -1*K=0,",394],["E-mail:        J.Wielemaker@cs.vu.nl",217],["E-mail:        J.Wielemaker@uva.nl",199],["1*J=0,",182],["1*J=1,",140],["verify_wrap(I1, I0, J0, J1, I, J),",114],["1*J>=0,",108],["(   J=[K|_]",100]]},{"word":"K","context":[["1*J+ -1*K=0,",394],["1*K=1,",222],["1*K=2,",166],["item(X, I, K, Data),",123],["(   J=[K|_]",100],["if($ishelf) {print CSH \"awk '{print \\$2,\\$1}' $shelf_file |psxy $J $R $Wshelf -K -O -P -V >> $psfile\\n\"}",94],["print CSH \"awk '{print \\$1,\\$2}' $evefile |psxy -N $J $R -K -O -P -V $src >> $psfile\\n\";",94],["print CSH \"awk '\\$1 == \\\"R\\\" {print \\$2,\\$3}' $recfile |psxy -N $J $R -K -O -P -V $rec >> $psfile\\n\";",90],["print CSH \"awk '\\$1 == \\\"R\\\" {print \\$2,\\$3}' $recfile |psxy -N $J $R -K -O -V $rec >> $psfile\\n\";",84],["1*K=0,",83]]},{"word":"KEY","context":[["--debug KEY=[0|1]          turn on/off debugging of KEY, where KEY is one of",280],["--debug KEY=[0|1]          turn on/off debugging of KEY, where KEY is one of",280],["--debug KEY=[0|1]          turn on/off debugging of KEY, where KEY is one of",280],["'vars' => {'KEY' => 'testtest', 'HMAC_KEY' => 'hmactest',",142],["PRIMARY KEY (id),",126],["KEY `borrowernumber` (`borrowernumber`),",124],["KEY `message_transport_type` (`message_transport_type`),",117],["PRIMARY KEY  (`id`)",105],["'KEY        testtest'",103],["PRIMARY KEY (`id`),",82]]},{"word":"Kernel","context":[["use Kernel::Config;",576],["use Kernel::System::Log;",563],["use Kernel::System::Main;",562],["use lib dirname($RealBin) . '/Kernel/cpan-lib';",561],["use Kernel::System::Encode;",551],["use Kernel::System::DB;",532],["$CommonObject{EncodeObject} = Kernel::System::Encode->new(%CommonObject);",517],["$CommonObject{LogObject}    = Kernel::System::Log->new(",509],["$CommonObject{ConfigObject} = Kernel::Config->new();",464],["use Kernel::System::Time;",452]]},{"word":"Koha","context":[["# This file is part of Koha.",6644],["# Koha is distributed in the hope that it will be useful, but WITHOUT ANY",4849],["# Koha is free software; you can redistribute it and/or modify it under the",4845],["# with Koha; if not, write to the Free Software Foundation, Inc.,",3538],["use C4::Koha;",2199],["# Koha is distributed in the hope that it will be useful, but",1925],["# Koha is free software; you can redistribute it and/or modify it",1914],["# along with Koha; if not, see <http://www.gnu.org/licenses>.",1906],["# Koha; if not, write to the Free Software Foundation, Inc., 59 Temple Place,",1254],["use Koha::DateUtils;",558]]},{"word":"L","context":[["print FILE pack (\"L\", hex (\"0\")) ;",923],["L<The SEED Project|http://www.theseed.org>",662],["1*L>=0,",373],["##print \"C<$c>L<$level><$open$close>O<$off>\\n\";",302],["} elsif ($opv eq ':C' || $opv eq ':L') {",296],["$av_pend_colon = 'L';",296],["if ($av_pend_colon eq 'C' || $av_pend_colon eq 'L') {",296],["-1*L>= -1,",276],["# check for %L{u,d,i} in strings",256],["if ($string =~ /(?<!%)%L[udi]/) {",256]]},{"word":"LATIN","context":[["01D8      ; [.1833.0021.0002.00FC][.0000.0032.0002.0301] # LATIN SMALL LETTER U WITH DIAERESIS AND ACUTE",14],["01DC      ; [.1833.0021.0002.00FC][.0000.0035.0002.0300] # LATIN SMALL LETTER U WITH DIAERESIS AND GRAVE",14],["01D6      ; [.1833.0021.0002.00FC][.0000.005B.0002.0304] # LATIN SMALL LETTER U WITH DIAERESIS AND MACRON",14],["01D7      ; [.1833.0021.0008.00DC][.0000.0032.0002.0301] # LATIN CAPITAL LETTER U WITH DIAERESIS AND ACUTE",14],["01D5      ; [.1833.0021.0008.00DC][.0000.005B.0002.0304] # LATIN CAPITAL LETTER U WITH DIAERESIS AND MACRON",14],["01DA      ; [.1833.0021.0002.00FC][.0000.0041.0002.030C] # LATIN SMALL LETTER U WITH DIAERESIS AND CARON",14],["0055 0308 ; [.1833.0021.0008.00DC] # LATIN CAPITAL LETTER U WITH DIAERESIS",14],["01DB      ; [.1833.0021.0008.00DC][.0000.0035.0002.0300] # LATIN CAPITAL LETTER U WITH DIAERESIS AND GRAVE",14],["0075 0308 ; [.1833.0021.0002.00FC] # LATIN SMALL LETTER U WITH DIAERESIS",14],["00DC      ; [.1833.0021.0008.00DC] # LATIN CAPITAL LETTER U WITH DIAERESIS",14]]},{"word":"LEFT","context":[["LEFT JOIN borrowers USING(borrowernumber)",79],["LEFT JOIN biblioitems ON (biblioitems.biblioitemnumber=items.biblioitemnumber)",73],["LEFT JOIN",72],["LEFT JOIN borrowers ON borrowers.borrowernumber=old_issues.borrowernumber",50],["LEFT JOIN biblio ON reserves.biblionumber=biblio.biblionumber",40],["LEFT JOIN items ON items.biblionumber=reserves.biblionumber",40],["LEFT JOIN biblioitems USING (biblionumber)",38],["LEFT JOIN aqbudgets  ON (aqorders.budget_id = aqbudgets.budget_id )",37],["LEFT JOIN issuingrules ON",34],["LEFT JOIN biblioitems ON (aqorders.biblionumber = biblioitems.biblionumber)",33]]},{"word":"LETTER","context":[["0055 0308 ; [.1833.0021.0008.00DC] # LATIN CAPITAL LETTER U WITH DIAERESIS",14],["01D6      ; [.1833.0021.0002.00FC][.0000.005B.0002.0304] # LATIN SMALL LETTER U WITH DIAERESIS AND MACRON",14],["01D7      ; [.1833.0021.0008.00DC][.0000.0032.0002.0301] # LATIN CAPITAL LETTER U WITH DIAERESIS AND ACUTE",14],["01D8      ; [.1833.0021.0002.00FC][.0000.0032.0002.0301] # LATIN SMALL LETTER U WITH DIAERESIS AND ACUTE",14],["01DA      ; [.1833.0021.0002.00FC][.0000.0041.0002.030C] # LATIN SMALL LETTER U WITH DIAERESIS AND CARON",14],["01DC      ; [.1833.0021.0002.00FC][.0000.0035.0002.0300] # LATIN SMALL LETTER U WITH DIAERESIS AND GRAVE",14],["0075 0308 ; [.1833.0021.0002.00FC] # LATIN SMALL LETTER U WITH DIAERESIS",14],["01DB      ; [.1833.0021.0008.00DC][.0000.0035.0002.0300] # LATIN CAPITAL LETTER U WITH DIAERESIS AND GRAVE",14],["01D9      ; [.1833.0021.0008.00DC][.0000.0041.0002.030C] # LATIN CAPITAL LETTER U WITH DIAERESIS AND CARON",14],["01D5      ; [.1833.0021.0008.00DC][.0000.005B.0002.0304] # LATIN CAPITAL LETTER U WITH DIAERESIS AND MACRON",14]]},{"word":"LICENSE","context":[["#      http://www.apache.org/licenses/LICENSE-2.0",1764],["=head1 LICENSE",1429],["#     http://www.apache.org/licenses/LICENSE-2.0",1020],["=head1 COPYRIGHT AND LICENSE",533],["# ***** END LICENSE BLOCK *****",315],["# ***** BEGIN LICENSE BLOCK *****",314],["# in the file LICENSE in the source distribution or at",262],["# http://www.apache.org/licenses/LICENSE-2.0",258],["##    http://www.apache.org/licenses/LICENSE-2.0",246],["% BEGIN LICENSE BLOCK",245]]},{"word":"LV","context":[["'LV',",52],["C0C8\t\tLV",22],["C1A8\t\tLV",22],["BDB8\t\tLV",22],["D478\t\tLV",22],["C3BC\t\tLV",22],["B648\t\tLV",22],["B9AC\t\tLV",22],["C624\t\tLV",22],["B204\t\tLV",22]]},{"word":"LVT","context":[["'LVT',",52],["B46D\tB487\tLVT",20],["C775\tC78F\tLVT",20],["BE61\tBE7B\tLVT",20],["B07D\tB097\tLVT",20],["D6A9\tD6C3\tLVT",20],["B991\tB9AB\tLVT",20],["C57D\tC597\tLVT",20],["C721\tC73B\tLVT",20],["C18D\tC1A7\tLVT",20]]},{"word":"License","context":[["# GNU General Public License for more details.",9259],["# You should have received a copy of the GNU General Public License",8214],["# it under the terms of the GNU General Public License as published by",5449],["# terms of the GNU General Public License as published by the Free Software",5003],["# You should have received a copy of the GNU General Public License along",4990],["# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.",4849],["# Foundation; either version 2 of the License, or (at your option) any later",4705],["# the Free Software Foundation; either version 3 of the License, or",3443],["GNU General Public License for more details.",2781],["# distributed under the License is distributed on an \"AS IS\" BASIS,",2592]]},{"word":"List","context":[["--show-fields   List the available fields.",320],["--fields list   Choose a set of fields to return. List is a comma-separated list of strings.",320],["List the available fields.",306],["use List::Util qw(sum);",237],["use List::MoreUtils qw/uniq/;",225],["use List::MoreUtils qw(uniq);",212],["use List::Util qw[min max];",161],["use List::Util qw(first);",150],["use List::Util qw(min max);",144],["use List::Util qw(max);",126]]},{"word":"Log","context":[["$CommonObject{LogObject}->Log(",777],["use Kernel::System::Log;",563],["$CommonObject{LogObject}    = Kernel::System::Log->new(",509],["# Log SOAP XML request, response and API errors.",446],["if ($rawline =~ /^\\+.*\\$(Revision|Log|Id)(?:\\$|)/) {",295],["use Log::Log4perl qw(get_logger :levels);",255],["use C4::Log;",216],["log4perl.appender.LOGFILE=Log::Log4perl::Appender::File",202],["log4perl.appender.Screen.layout=Log::Log4perl::Layout::PatternLayout",201],["Log::Log4perl::init(\\$log4Perl_config);",201]]},{"word":"Long","context":[["use Getopt::Long;",18087],["use Getopt::Long qw(:config no_auto_abbrev);",391],["use Getopt::Long qw(:config no_ignore_case);",332],["use Getopt::Long qw(GetOptions);",284],["Getopt::Long::Configure('bundling');",273],["use Getopt::Long qw(:config no_ignore_case bundling);",225],["Getopt::Long::Configure(\"pass_through\");",197],["Getopt::Long::Configure (\"bundling\");",192],["use Getopt::Long::Descriptive;",174],["use Getopt::Long qw(:config no_ignore_case bundling pass_through);",164]]},{"word":"M","context":[["1*M+ -1*N=0,",383],["1*M=0,",234],["get(M, text_buffer, TB),",226],["input_module(M),",158],["1*M=2,",150],["1*M=1,",126],["M is N-1,",124],["-M --manager  specify alternate process manager",108],["push @opcode,0xc0|($2&7)|(($3&7)<<3);\t\t# ModR/M",107],["get(M, caret, Caret),",101]]},{"word":"MA","context":[["# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",3797],["# Suite 330, Boston, MA  02111-1307 USA",1248],["Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",1198],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA",701],["Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA",594],["# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",529],["#  MA 02139, USA.",391],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA",351],["# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.",346],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",282]]},{"word":"MATHEMATICAL","context":[["1D727\tMATHEMATICAL BOLD ITALIC CAPITAL MU",11],["1D45B\tMATHEMATICAL ITALIC SMALL N",11],["1D72B\tMATHEMATICAL BOLD ITALIC CAPITAL PI",11],["1D527\tMATHEMATICAL FRAKTUR SMALL J",11],["1D47A\tMATHEMATICAL BOLD ITALIC CAPITAL S",11],["1D725\tMATHEMATICAL BOLD ITALIC CAPITAL KAPPA",11],["1D788\tMATHEMATICAL SANS-SERIF BOLD SMALL OMEGA",11],["1D431\tMATHEMATICAL BOLD SMALL X",11],["1D4B5\tMATHEMATICAL SCRIPT CAPITAL Z",11],["1D787\tMATHEMATICAL SANS-SERIF BOLD SMALL PSI",11]]},{"word":"MERCHANTABILITY","context":[["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",7175],["# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR",4860],["MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",2778],["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the",2306],["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU",1084],["#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",1005],["# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY",669],["LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS",642],["#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",522],["#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",459]]},{"word":"My","context":[["my $proc= My::SafeProcess->new",594],["my $proc= My::SafeProcess->wait_any_timeout($timeout);",357],["my $res= My::SafeProcess->run",222],["my $tinfo = My::Test->new",218],["My::SafeProcess->run",214],["My::SafeProcess::shutdown( $opt_shutdown_timeout,",166],["use My::Platform;",133],["use My::SafeProcess;",122],["if ( My::SafeProcess->run",119],["my $test= My::Test::read_test($server);",119]]},{"word":"N","context":[["$type = 'N';",3589],["'N' => 2,",2512],["'N' => 1,",2041],["'N',",765],["'N' => 2.5,",676],["'N' => 1.5,",668],["-c N",496],["where N is the column (from 1) that contains the id.",386],["add\t%rax,$N[1]",384],["mov\t%rdx,$N[0]",384]]},{"word":"NAME","context":[["=head1 NAME",10375],["client-debugger=NAME  Start mysqltest in the selected debugger",145],["debugger=NAME         Start mysqld in the selected debugger",145],["NAME",116],["--dbname, db_name=NAME              database name NAME",96],["--dbname, db_name=NAME              database name NAME",96],["-C, --community=COMMUNITY NAME",89],["#       AUTHOR: YOUR NAME (),",68],["'NAME' => 'v',",60],["KERNEL==\"ttyUSB0\", NAME=\"visor\"",52]]},{"word":"NOT","context":[["# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!",12534],["\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",643],["BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;",643],["#     Note that contrary to what you might expect, the above is NOT the same",512],["# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",352],["null    => 'NOT NULL',",339],["# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE",326],["`borrowernumber` int(11) NOT NULL,",306],["# it is NOT alive",305],["borrowernumber int(11) NOT NULL,",209]]},{"word":"NULL","context":[["null    => 'NULL',",826],["null    => 'NOT NULL',",339],["mov\t%rcx,56(%rsp)\t\t# arg8, (NULL)",331],["`borrowernumber` int(11) NOT NULL,",306],["return NULL;",292],["borrowernumber int(11) NOT NULL,",209],["`id` int(11) NOT NULL auto_increment,",201],["if ($line =~ /^.$Type\\s*$Ident\\s*(?:\\s+$Modifier)*\\s*=\\s*(0|NULL|false)\\s*;/) {",198],["`branchcode` varchar(10) default NULL,",198],["if ($line =~ /\\bstatic\\s.*=\\s*(0|NULL|false)\\s*;/) {",193]]},{"word":"Name","context":[["functor(Head, Name, Arity),",396],["functor(Head, Name, Arity).",114],["Name => 'otrs.Scheduler',",110],["atom(Name),",109],["# Name beginning with core, not ending in .gz",103],["functor(Term, Name, Arity),",90],["must_be(atom, Name),",84],["functor(Term, Name, Arity).",82],["print \"| $Structure{Name}->{Content}-$Structure{Version}->{Content}\\n\";",80],["=head1 Name",76]]},{"word":"No","context":[["'No',",612],["if ($realcnt != 0 && $line !~ m{^(?:\\+|-| |\\\\ No newline|$)}) {",300],["if ($line =~ /^\\+/ && defined $lines[$linenr] && $lines[$linenr] =~ /^\\\\ No newline at end of file/) {",300],["# No spaces for:",297],["resat:\"   No.\",",242],["pod2usage(\"$0: No files given.\") if ((@ARGV == 0) && (-t STDIN));",173],["#\t\t    print \"No studly caps, use _\\n\";",165],["mtr_error(\"No, don't remove the vardir when running with --extern\")",147],["mtr_verbose(\"No need to create '$opt_vardir' it already exists\");",146],["\"No #include in ...include/uapi/... should use a uapi/ path prefix\\n\" . $herecurr);",130]]},{"word":"O","context":[["$av_pend_colon = 'O';",888],["1*O=0,",387],["-1*O>= -1,",330],["close O;",305],["$c = 'O' if ($elements[$n + 2] eq '');",303],["$a = 'O' if ($elements[$n] eq '');",303],["##print \"C<$c>L<$level><$open$close>O<$off>\\n\";",302],["1*O>=0,",293],["if (($opv eq ':O' && $ca =~ /\\?$/) ||",200],["if ($^O eq 'MSWin32') {",199]]},{"word":"OF","context":[["# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",2499],["POSSIBILITY OF SUCH DAMAGE.",648],["ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE",643],["ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE",643],["ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE",643],["LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER",643],["BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;",643],["CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT",643],["LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS",642],["#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",516]]},{"word":"ON","context":[["CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT",643],["ON DELETE CASCADE ON UPDATE CASCADE",349],["ON DELETE CASCADE ON UPDATE CASCADE",349],["#  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON",158],["# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN",149],["ON DELETE CASCADE ON UPDATE CASCADE,",147],["ON DELETE CASCADE ON UPDATE CASCADE,",147],["# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT",145],["# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY",125],["ON DELETE SET NULL ON UPDATE SET NULL,",118]]},{"word":"ONLY","context":[["# !!!!!!!   INTERNAL PERL USE ONLY   !!!!!!!",9514],["#  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH",158],["#  AN \"AS-IS\" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,",158],["# AN \"AS-IS\" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,",54],["print \"TESTING MODE ONLY\\n    DOING NOTHING\\n===============\\n\";",44],["# SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH",41],["* SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH",37],["* AN \"AS-IS\" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,",37],["\"VC-CE\",   \"Microsoft eMbedded Visual C++ 3.0 - Windows CE ONLY\",",35],["\"VC-NT\",   \"Microsoft Visual C++ [4-6] - Windows NT ONLY\",",35]]},{"word":"OPTIONS","context":[["=head1 OPTIONS",3597],["=head1 COMMAND-LINE OPTIONS",845],["OPTIONS:",221],["#      OPTIONS: ---",166],["$0 [ OPTIONS ] [ TESTCASE ]",149],["# COMMAND LINE OPTIONS        |",147],["OPTIONS",139],["podselect({-sections => [\"SYNOPSIS|ARGUMENTS|OPTIONS|MORE\"]}, $0);",128],["# ADDITIONAL OPTIONS",101],["my $out = $$self{OPTIONS}{TextOut};",94]]},{"word":"OR","context":[["# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",2499],["\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",643],["LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN",643],["INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,",643],["LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN",643],["LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER",643],["LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER",643],["BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;",643],["COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,",640],["#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",516]]},{"word":"OUT","context":[["close OUT;",3600],["close(OUT);",2880],["print OUT \"\\n\";",1089],["ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE",643],["close (OUT);",514],["*STDOUT=*OUT;",407],["print OUT $_;",356],["open OUT,\"| \\\"$^X\\\" $xlate $flavour $output\";",345],["print OUT <<\"EOF\";",333],["print OUT;",295]]},{"word":"Options","context":[["Options:",3307],["# Options:",244],["print \"Options:\\n\";",179],["=head2 Command-Line Options",167],["# Options",150],["Options for debugging the product",149],["Options to control directories to use",149],["Options to run test on running server",149],["Options to control what test suites or cases to run",149],["Options that specify ports",149]]},{"word":"Output","context":[["use C4::Output;",5752],["# Output:",325],["# Output:       None",240],["use C4::Output qw(output_html_with_http_headers);",209],["# Output:\t\tNone",197],["# Output:       HTML",184],["# Output",118],["# Output like:",99],["Output:",98],["=head2 Output Format",95]]},{"word":"P","context":[["<P>",902],["my $P = $0;",426],["1*P+ -1*Q=0,",339],["1*P=1,",322],["die \"$P: $filename: open failed - $!\\n\";",301],["die \"$P: $filename: diff failed - $!\\n\";",300],["$P =~ s@.*/@@g;",299],["die \"$P: $root: --root does not point at a valid tree\\n\";",296],["Usage: $P [OPTION]... [FILE]...",282],["1*P=0,",270]]},{"word":"PARTICULAR","context":[["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",7175],["# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.",4849],["MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",2778],["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the",2306],["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU",1084],["#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",1005],["FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE",642],["# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License",628],["#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",522],["#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",459]]},{"word":"PERL","context":[["# !!!!!!!   INTERNAL PERL USE ONLY   !!!!!!!",9514],["# PIPE WITHIN PERL            |",128],["#!@PERL@ -w",77],["#!%PERL% -w",44],["#PERL USE",41],["#!%PERL%",38],["my @env = map { \"$_=\\\"$ENV{$_}\\\"\" } sort grep {/^PERL/} keys %ENV;",35],["$mkdir='$(PERL) util/mkdir-p.pl';",35],["(cd \\$(\\@D)/..; PERL=perl make -f Makefile asm/\\$(\\@F))",35],["$cp='$(PERL) util/copy.pl';",34]]},{"word":"PHASE","context":[["*       PHASE 1 ASSERTIONS\t*",15],["16910\tBAMUM LETTER PHASE-D NGKEURI",11],["16A0F\tBAMUM LETTER PHASE-F NDAA",11],["168FC\tBAMUM LETTER PHASE-D NGKUN",11],["16953\tBAMUM LETTER PHASE-D MU",11],["169E9\tBAMUM LETTER PHASE-E PUE",11],["16A0C\tBAMUM LETTER PHASE-F RIEE",11],["1696F\tBAMUM LETTER PHASE-E NSHUOP",11],["168E8\tBAMUM LETTER PHASE-C SHIQ",11],["16950\tBAMUM LETTER PHASE-D MEEEE",11]]},{"word":"PROJECT","context":[["print \"Copy $BUILDROOT/$PROJECT to $BUILDROOT/$PROJECT.tmp\\n\";",70],["print \"Copy $BUILDROOT/$PROJECT to $BUILDROOT/$PROJECT.tmp\\n\";",70],["$ret=`rm -fr $BUILDROOT/$PROJECT.tmp`;",70],["$cmd=\"cp -pr \\\"$BUILDROOT/$PROJECT\\\" \\\"$BUILDROOT/$PROJECT.tmp\\\"\";",70],["$cmd=\"cp -pr \\\"$BUILDROOT/$PROJECT\\\" \\\"$BUILDROOT/$PROJECT.tmp\\\"\";",70],["my $CUSTOM_MEMORYDEVICE_H_NAME  = \"mediatek/custom/$PROJECT/preloader/inc/custom_MemoryDevice.h\";",63],["print \"PROJECT = $project, pre_bin = $pre_bin\\n\";",53],["my $PROJECT               = $ARGV[3];",53],["&write_tag($PROJECT);",50],["$PROJECT = $ENV{PROJECT};",47]]},{"word":"PURPOSE","context":[["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",7175],["# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.",4849],["MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",2778],["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the",2306],["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU",1084],["#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",1005],["FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE",642],["# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License",628],["#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",522],["#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",459]]},{"word":"Path","context":[["use File::Path;",1599],["use File::Path qw(make_path);",294],["use File::Path qw(mkpath);",179],["my $Path = $_[0];",154],["client-libdir=PATH    Path to the directory where client libraries are located",147],["client-bindir=PATH    Path to the directory where client binaries are located",147],["use Path::Tiny;",128],["use My::File::Path; # Patched version of File::Path",119],["valgrind-path=<EXE>   Path to the valgrind executable",119],["use My::File::Path; # Patched version of File::Path",119]]},{"word":"Perl","context":[["# This file is for internal use by core Perl only.  The format and even the",5878],["# This file is for internal use by the Perl program only.  The format and even",4650],["use Modern::Perl;",1336],["# Circulation and User's Management. It's written in Perl, and uses Apache2",754],["it under the same terms as Perl itself.",663],["# Lesser General Public License Version 3 or the Perl Artistic License",597],["# find Koha's Perl modules",442],["# Einladen der benoetigten Perl-Module",307],["# modify it under the same terms as Perl itself.",203],["under the same terms as Perl itself.",199]]},{"word":"Print","context":[["Print a brief help message and exits.",484],["Print a brief help message and exit.",267],["Print this script's manual page and exit.",227],["Print debugging information.",203],["use Pod::Text;                 # Print POD doc as formatted text file",127],["use Pod::Select;               # Print subsections of POD documentation",127],["timestamp             Print timestamp before each test report line",119],["# Print the page",108],["# Print out.",83],["# Print desc wrapped",68]]},{"word":"Public","context":[["# GNU General Public License for more details.",9259],["# You should have received a copy of the GNU General Public License",8214],["# it under the terms of the GNU General Public License as published by",5449],["# terms of the GNU General Public License as published by the Free Software",5003],["# You should have received a copy of the GNU General Public License along",4990],["# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.",4849],["GNU General Public License for more details.",2781],["# under the terms of the GNU General Public License as published by",2021],["modify it under the terms of the GNU General Public License",1862],["by the GNU General Public License. This exception does not however",1583]]},{"word":"Q","context":[["1*P+ -1*Q=0,",339],["^.LIST_HEAD\\(\\Q$name\\E\\)|",276],["^.DECLARE_$Ident\\(\\Q$name\\E\\)|",276],["^.DEFINE_$Ident\\(\\Q$name\\E\\)|",276],["\\b\\Q$name\\E(?:\\s+$Attribute)*\\s*(?:;|=|\\[|\\()",262],["^.(?:$Storage\\s+)?$Type\\s*\\(\\s*\\*\\s*\\Q$name\\E\\s*\\)\\s*\\(|",262],["$sub_to =~ s/\\Q$from\\E/$to/;",204],["s@\\Q$sub_from\\E@$sub_to@;",204],["1*Q=0,",159],["if ($line =~ /\\bkfree\\(\\Q$expr\\E\\);/) {",155]]},{"word":"QWP","context":[["&movups\t(&QWP(0,$out),$inout0);",312],["&movups\t(&QWP(0x10,$out),$inout1);",252],["&movups\t(&QWP(0x20,$out),$inout2);",204],["&movups\t(&QWP(0x30,$out),$inout3);",156],["&movups\t(&QWP(16*0,$out),$inout0);\t# write output",144],["&movups\t(&QWP(16*1,$out),$inout1);",120],["&movdqa\t\t($T3,&QWP(0,$const));",114],["&movups\t(&QWP(0x40,$out),$inout4);",108],["&xorps\t($inout1,&QWP(16*1,\"esp\"));",96],["&$movekey\t($rndkey0,&QWP(0,$key));",96]]},{"word":"R","context":[["use Statistics::R;",513],["my $R = Statistics::R->new();",457],["my $R = Statistics::R->new();",457],["$R->stop();",345],["1*R=0,",297],["$R->run(q` library(ggplot2) `,",293],["1*R>=0,",247],["$R->run(q` data = data.frame() `);",220],["-1*R>= -1,",220],["$R->set('mechanism', $mechanism);",200]]},{"word":"Remove","context":[["$s =~ s/$;//g; \t# Remove any comments",582],["# Remove C99 comments.",301],["# Remove the old gdbinit file",300],["## \t\t\t# Remove any bracketed sections to ensure we do not",278],["# Remove the .err file the check generated",274],["# Remove the .result file the check generated",238],["# Remove the \"var\" dir",149],["# Remove var and any directories in var/ created by previous",149],["# Remove the directory which the link points at",149],["# Remove the entire \"var\" dir",149]]},{"word":"Run","context":[["# Guestimate if this is a continuing comment.  Run",300],["# Run test on running server",149],["mem                   Run testsuite in \"memory\" using tmpfs or ramdisk",149],["Run test cases which name are prefixed with PREFIX",149],["# Run include/check-testcase.test",149],["valgrind-mysqld       Run the \"mysqld\" executable with valgrind",145],["valgrind              Run the \"mysqltest\" and \"mysqld\" executables using",145],["valgrind-mysqltest    Run the \"mysqltest\" and \"mysql_client_test\" executable",145],["Run the program with minimal output.",139],["with-ndbcluster-only  Run only tests that include \"ndb\" in the filename",129]]},{"word":"S","context":[["'S' => 1",2768],["'S' => 0",2136],["'S' => 0.5",1292],["$to =~ s/^(\\S)/ $1/;",584],["'S' => 0 # 0",328],["1*S+ -1*T=0,",305],["if ($line =~ /}(?!(?:,|;|\\)))\\S/) {",302],["} elsif ($rawline =~ /^\\+.*\\S\\s+$/ || $rawline =~ /^\\+\\s+$/) {",299],["$cc =~ /^\\S+\\@\\S+>/) ||",296],["$cc =~ /^\\S+\\@\\S+>/) ||",296]]},{"word":"SELECT","context":[["SELECT",1192],["my $sth_search = $dbh->prepare(\"SELECT count(*) AS total",242],["SELECT *",170],["SELECT COUNT(*)",126],["SELECT * FROM tables",85],["# If we received artists from the SELECT, print them out",80],["SELECT DISTINCT",66],[") SELECT",57],["elsif ($sql !~ /^(SELECT)/i) {",54],["my $sth2 = $dbh->prepare(\"SELECT * FROM reserves WHERE borrowernumber=? AND itemnumber=? AND found='W'\");",49]]},{"word":"SET","context":[["SET",140],["ON DELETE SET NULL ON UPDATE SET NULL,",118],["ON DELETE SET NULL ON UPDATE SET NULL,",118],["ON DELETE SET NULL ON UPDATE SET NULL",79],["ON DELETE SET NULL ON UPDATE SET NULL",79],["$dbh->do('SET FOREIGN_KEY_CHECKS=0 ');",68],["$dbh->do('SET FOREIGN_KEY_CHECKS=1 ');",68],["SET maxissueqty = ?",64],["SET value = ''",60],["foreach $set (@SET) {",52]]},{"word":"SIGN","context":[["|\\x{00a9}\t# Unicode character COPYRIGHT SIGN",25],["my $SIGN = \"\";",14],["121C9\tCUNEIFORM SIGN LAGAB TIMES HAL",11],["12042\tCUNEIFORM SIGN BAG3",11],["121B3\tCUNEIFORM SIGN KUR",11],["122AD\tCUNEIFORM SIGN SHA",11],["12430\tCUNEIFORM NUMERIC SIGN FOUR SHARU",11],["017D1\tKHMER SIGN VIRIAM",11],["1103F\tBRAHMI VOWEL SIGN VOCALIC RR",11],["009CD\tBENGALI SIGN VIRAMA",11]]},{"word":"SMALL","context":[["0075 0308 ; [.1833.0021.0002.00FC] # LATIN SMALL LETTER U WITH DIAERESIS",14],["01DA      ; [.1833.0021.0002.00FC][.0000.0041.0002.030C] # LATIN SMALL LETTER U WITH DIAERESIS AND CARON",14],["01D6      ; [.1833.0021.0002.00FC][.0000.005B.0002.0304] # LATIN SMALL LETTER U WITH DIAERESIS AND MACRON",14],["00FC      ; [.1833.0021.0002.00FC] # LATIN SMALL LETTER U WITH DIAERESIS",14],["01DC      ; [.1833.0021.0002.00FC][.0000.0035.0002.0300] # LATIN SMALL LETTER U WITH DIAERESIS AND GRAVE",14],["01D8      ; [.1833.0021.0002.00FC][.0000.0032.0002.0301] # LATIN SMALL LETTER U WITH DIAERESIS AND ACUTE",14],["0111      ; [.15E4.0021.0002.0111] # LATIN SMALL LETTER D WITH STROKE",12],["0064 0335 ; [.15E4.0021.0002.0111] # LATIN SMALL LETTER D WITH STROKE",12],["0075 030B ; [.1833.0022.0002.0171] # LATIN SMALL LETTER U WITH DOUBLE ACUTE",12],["0171      ; [.1833.0022.0002.0171] # LATIN SMALL LETTER U WITH DOUBLE ACUTE",12]]},{"word":"SOFTWARE","context":[["THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",645],["ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE",643],["# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",353],["# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"",322],["# PERFORMANCE OF THIS SOFTWARE.",195],["# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY",184],["# THE SOFTWARE IS PROVIDED \"AS IS\" AND ISC DISCLAIMS ALL WARRANTIES WITH",182],["# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",179],["# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",173],["# SOFTWARE.",162]]},{"word":"START","context":[["# The format of the lines of this file is: START\\tSTOP\\twhere START is the",2478],["# The format of the lines of this file is: START\\tSTOP\\twhere START is the",2478],["elsif ($line eq 'START'){",119],["print $server \"START\\n\";",119],["\"----------SERVER LOG START-----------\\n\". join (\"\", @srv_lines) .",118],["START",103],["# CDDL HEADER START",50],["START => undef,",40],["$_->{START}->($_, $tinfo) if $_->{START};",36],["START => \\&mysql_server_start,",36]]},{"word":"STDERR","context":[["print STDERR \"\\n\";",1598],["print STDERR",963],["print STDERR <<EOF;",308],["print STDERR \"debug = 1\\n\\n\";",281],["close STDERR;",195],["print STDERR \"Error: Could not open $file\\n\";",194],["binmode STDERR, \":utf8\";",184],["print STDERR \"$message\\n\";",178],["print STDERR \"CMD: $cmd\\n\";",164],["print STDERR \"\\n\\n\";",163]]},{"word":"STDIN","context":[["while (<STDIN>) {",937],["while(<STDIN>) {",502],["$ih = \\*STDIN;",480],["open($FILE, '<&STDIN');",293],["<STDIN>;",231],["my $input = <STDIN>;",191],["$rc = <STDIN>; chomp($rc); if ($rc eq \"ERROR\") { exit; }",175],["pod2usage(\"$0: No files given.\") if ((@ARGV == 0) && (-t STDIN));",173],["binmode STDIN, \":utf8\";",170],["while(<STDIN>){",166]]},{"word":"STDOUT","context":[["close STDOUT;",1277],["open STDOUT,\">$output\";",509],["binmode STDOUT, \":utf8\";",414],["*STDOUT=*OUT;",407],["select(STDOUT);",353],["binmode(STDOUT, \":utf8\");",341],["select STDOUT;",324],["print STDOUT \"\\n\";",292],["close(STDOUT);",238],["binmode STDOUT, ':utf8';",236]]},{"word":"SYLLABICS","context":[["015E1\tCANADIAN SYLLABICS CARRIER THA",11],["0164C\tCANADIAN SYLLABICS CARRIER DZI",11],["01407\tCANADIAN SYLLABICS Y-CREE OO",11],["0160E\tCANADIAN SYLLABICS CARRIER YU",11],["015C6\tCANADIAN SYLLABICS CARRIER GHE",11],["01448\tCANADIAN SYLLABICS Y-CREE PWAA",11],["014C4\tCANADIAN SYLLABICS NO",11],["01645\tCANADIAN SYLLABICS CARRIER ZA",11],["01603\tCANADIAN SYLLABICS CARRIER NO",11],["014A3\tCANADIAN SYLLABICS ME",11]]},{"word":"SYLLABLE","context":[["0BB8 0BBF\tTAMIL SYLLABLE SI",11],["0A454\tYI SYLLABLE NYUOP",11],["0A608\tVAI SYLLABLE ME",11],["0BAE 0BC0\tTAMIL SYLLABLE MII",11],["012E4\tETHIOPIC SYLLABLE ZHEE",11],["0A269\tYI SYLLABLE NGO",11],["0A58D\tVAI SYLLABLE NJOO",11],["0A0F4\tYI SYLLABLE VUT",11],["01313\tETHIOPIC SYLLABLE GWAA",11],["0A26B\tYI SYLLABLE NGEX",11]]},{"word":"SYMBOL","context":[["--sym=SYMBOL      Unique symbol to use for RTCD initialization function",13],["1D72D\tMATHEMATICAL BOLD ITALIC CAPITAL THETA SYMBOL",11],["1F70C\tALCHEMICAL SYMBOL FOR VINEGAR-3",11],["1D716\tMATHEMATICAL ITALIC EPSILON SYMBOL",11],["033E9\tIDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TEN",11],["10058\tLINEAR B SYMBOL B064",11],["0104F\tMYANMAR SYMBOL GENITIVE",11],["0FBB2\tARABIC SYMBOL DOT ABOVE",11],["1D1A0\tMUSICAL SYMBOL ORNAMENT STROKE-6",11],["023CF\tEJECT SYMBOL",11]]},{"word":"SYNOPSIS","context":[["=head1 SYNOPSIS",8183],["podselect({-sections => [\"SYNOPSIS|MORE\"]}, $0);",128],["podselect({-sections => [\"SYNOPSIS|ARGUMENTS|OPTIONS|MORE\"]}, $0);",128],["SYNOPSIS",109],["#* SYNOPSIS",62],["# SYNOPSIS",55],["# print SYNOPSIS",54],["=head2 SYNOPSIS",34],["##  SYNOPSIS",34],["for $sect (qw(NAME SYNOPSIS DESCRIPTION OPTIONS ENVIRONMENT FILES",30]]},{"word":"SZ","context":[["$SZ=4;",108],["$SZ=8;",99],["add\t$SZ*0($ctx),$A",98],["add\t$SZ*3($ctx),$D",98],["add\t$SZ*2($ctx),$C",98],["mov\t$C,$SZ*2($ctx)",98],["mov\t$D,$SZ*3($ctx)",98],["mov\t$A,$SZ*0($ctx)",98],["mov\t$F,$SZ*5($ctx)",98],["add\t$SZ*1($ctx),$B",98]]},{"word":"See","context":[["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",7175],["# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.",4849],["MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",2778],["# See the License for the specific language governing permissions and",2505],["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the",2306],["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU",1084],["#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",1005],["# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License",628],["#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",522],["#  See the License for the specific language governing permissions and",516]]},{"word":"Set","context":[["# Set exe to debuggername",296],["# Set dummy worker id to align report with normal tests",176],["# Set defaults",171],["# Set special valgrind options unless options passed on command line",149],["# Set default message",149],["# Set valgrind_options to default unless already defined",143],["my $found_test= 0;\t\t# Set once we've found the log of this test",119],["# Set the \"var/\" directory, the base for everything else",119],["# Set variables in the ENV section",119],["$opt_max_save_core, set to 0 for no limit. Set",119]]},{"word":"SetVersion","context":[["SetVersion ($DBversion);",13328],["SetVersion($DBversion);",7872],["sub SetVersion {",47],["SetVersion($NewDBversion);",43],["=head2 SetVersion",34],["SetVersion($DBversion)",26]]},{"word":"Software","context":[["# terms of the GNU General Public License as published by the Free Software",5003],["# with Koha; if not, write to the Free Software Foundation, Inc.,",3538],["# the Free Software Foundation; either version 3 of the License, or",3443],["# along with this program; if not, write to the Free Software",3345],["# the Free Software Foundation, either version 3 of the License, or",2555],["as published by the Free Software Foundation; either version 2",1860],["License along with this library; if not, write to the Free Software",1762],["compiled with a Free Software compiler, to produce an executable, this",1583],["# the Free Software Foundation; either version 2 of the License, or",1507],["# Koha; if not, write to the Free Software Foundation, Inc., 59 Temple Place,",1254]]},{"word":"Spec","context":[["use File::Spec;",2865],["use File::Spec::Functions;",295],["#use File::Spec;",224],["#my $outFile_ge9 = File::Spec->catfile($outDir, join(\".\", @parts) . \"_ge9.\" . $ext);",217],["#    print_help (\"help\",  File::Spec->rel2abs($0) );",126],["#    print_help (\"usage\", File::Spec->rel2abs($0) );",126],["use File::Spec;                # Convert a relative path to an abosolute path",122],["my $input = File::Spec->catfile($indir, $file);",88],["use File::Spec::Functions qw/splitdir/;",83],["use File::Spec::Functions qw(rel2abs);",82]]},{"word":"Street","context":[["# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",3797],["Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA",594],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",282],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.",203],["Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,",175],["51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",139],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,",99],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA",80],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA",75],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA",56]]},{"word":"System","context":[["# Meran - MERAN UNLP is a ILS (Integrated Library System) wich provides Catalog,",754],["use Kernel::System::Log;",563],["use Kernel::System::Main;",562],["use Kernel::System::Encode;",551],["use Kernel::System::DB;",532],["$CommonObject{EncodeObject} = Kernel::System::Encode->new(%CommonObject);",517],["$CommonObject{LogObject}    = Kernel::System::Log->new(",509],["use Kernel::System::Time;",452],["$CommonObject{MainObject} = Kernel::System::Main->new(%CommonObject);",251],["use Kernel::System::ObjectManager;",249]]},{"word":"T","context":[["$type = 'T';",596],["'T',",496],["1*S+ -1*T=0,",305],["if (defined $2 && $type eq 'C' || $type eq 'T') {",292],["mov\t@T[0],4($ctx)",160],["add\t4($ctx),@T[0]",160],["vswp\t\t`&Dhi(\"@T[0]\")`,`&Dlo(\"@T[0]\")`",156],["vswp\t\t`&Dhi(\"@T[0]\")`,`&Dlo(\"@T[0]\")`",156],["and\t@T[1],@T[0]",124],["and\t@T[1],@T[0]",124]]},{"word":"T1","context":[["vpunpckhqdq\t$Ij,$Ij,$T1",238],["vpxor\t\t$Ij,$T1,$T1",204],["vpxor\t\t$Ij,$T1,$T1",204],["vpclmulqdq\t\\$0x00,$HK,$T1,$Xmi",119],["pxor\t\t$T1,$Xhi",105],["pxor\t\t$Xi,$T1\t\t\t#",97],["&pshufb\t\t($T1,$T3);",81],["&movdqu\t\t($T1,&QWP(0,$inp));\t# Ii",81],["pshufb\t\t$T3,$T1",77],["pshufd\t\t\\$0b01001110,$Xi,$T1",77]]},{"word":"TABLE","context":[["</TABLE>",193],["print TABLE \"",153],["$dbh->do(\"ALTER TABLE deleteditems",152],["$dbh->do(\"ALTER TABLE import_batches",141],["ALTER TABLE aqorders",116],["$dbh->do(\"ALTER TABLE items",114],["lea\t$TABLE(%rip),$Tbl",110],["ALTER TABLE `aqbudgets`",108],["vmovdqa\t$TABLE+`$SZ*2*$rounds`(%rip),$t3",97],["$dbh->do(\"ALTER TABLE aqbooksellers CHANGE name name mediumtext NOT NULL\");",78]]},{"word":"THE","context":[["THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",645],["ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE",643],["ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE",643],["FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE",642],["LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS",642],["# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",353],["# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",352],["# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE",326],["# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"",322],["# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE",263]]},{"word":"THIS","context":[["# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!",12534],["THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",645],["ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE",643],["# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"",322],["# PERFORMANCE OF THIS SOFTWARE.",195],["# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY",184],["# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",179],["# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",173],["#  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES",158],["# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF",124]]},{"word":"TO","context":[["BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;",643],["LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS",642],["# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",352],["# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE",326],["# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR",185],["# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY",184],["# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF",166],["#  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.",158],["#  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH",158],["#  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH",158]]},{"word":"Test","context":[["use Test::More;",735],["# DESCRIPTION: Verilator: Verilog Test driver/expect definition",589],["my $tinfo = My::Test->new",218],["# Test case authoring",149],["# Test case failure reported by mysqltest",145],["#  See the \"MySQL Test framework manual\" for more information",145],["use Test;",142],["# Test case had sideeffects, not fatal error, just continue",119],["mtr_report(\"Test suite timeout! Terminating...\");",119],["# Test case suceeded, but it has produced unexpected",119]]},{"word":"The","context":[["# This file is for internal use by core Perl only.  The format and even the",5878],["# This file is for internal use by the Perl program only.  The format and even",4650],["# The format of the lines of this file is: START\\tSTOP\\twhere START is the",2478],["strings. The following fields are available:",1078],["# project. The module is, however, dual licensed under OpenSSL and",1012],["L<The SEED Project|http://www.theseed.org>",662],["entity to return. Field-list is a comma-separated list of strings. The",612],["This is a pipe command. The input is taken from the standard input, and the",493],["The standard input should be a tab-separated table (i.e., each line",492],["Part of XPCE --- The SWI-Prolog GUI toolkit",482]]},{"word":"This","context":[["# This file is part of Koha.",6644],["# This program is distributed in the hope that it will be useful,",5883],["# This file is for internal use by core Perl only.  The format and even the",5878],["# This file is machine-generated by lib/unicore/mktables from the Unicode",5126],["# This file is for internal use by the Perl program only.  The format and even",4650],["# This file is machine-generated by mktables from the Unicode",4479],["# This program is free software; you can redistribute it and/or modify",3916],["This program is distributed in the hope that it will be useful,",2563],["# This file is built by mktables from e.g. UnicodeData.txt.",2362],["This program is free software; you can redistribute it and/or",2016]]},{"word":"Time","context":[["use Time::Local;",671],["use Kernel::System::Time;",452],["use Time::HiRes;",337],["$timevrfyend{$testnum} = Time::HiRes::time() if($timestats);",329],["::rptMsg(\"LastWrite Time \".gmtime($key->get_timestamp()).\" (UTC)\");",313],["use Time::HiRes qw(gettimeofday);",283],["use Time::HiRes qw(time);",193],["use Time::Piece;",177],["$CommonObject{TimeObject} = Kernel::System::Time->new(%CommonObject);",168],["use Time::localtime;",166]]},{"word":"TransformToNum","context":[["if (C4::Context->preference(\"Version\") < TransformToNum($DBversion)) {",11887],["if ( C4::Context->preference(\"Version\") < TransformToNum($DBversion) ) {",2830],["if (C4::Context->preference('Version') < TransformToNum($DBversion)){",517],["if ( C4::Context->preference('Version') < TransformToNum($DBversion) ) {",467],["if(C4::Context->preference(\"Version\") < TransformToNum($DBversion) ) {",97],["sub TransformToNum {",48],["if (C4::Context->preference(\"Version\") == TransformToNum($DBversion)){",43],["=head2 TransformToNum",34],["my $kohaversion = TransformToNum($_[0]);",31],["my $version_number = TransformToNum($proposed_version);",25]]},{"word":"Type","context":[["<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">",321],["if ($line =~ /\\b$Type\\s+$Inline\\b/ ||",300],["our $Type;",300],["} elsif ($ctx =~ /$Type$/) {",298],["$Type\t= qr{",297],["$possible =~ s/\\s*$Type\\s*//g;",297],["if ($prefix !~ /$Type\\s+$/ &&",296],["$Type|",294],["$stat =~ /^.\\s*(?:extern\\s+)?$Type\\s+($Ident)(\\s*)\\(/s)",290],["## \t\t    $line !~ /^.\\s*$Type\\s+$Ident(?:\\s*=[^,{]*)?\\s*,\\s*$Type\\s*$Ident.*/) {",278]]},{"word":"U","context":[["rrdMax => U,",499],["$variant = 'U';",296],["$opv eq '*U' || $opv eq '-U' ||",295],["$opv eq '*U' || $opv eq '-U' ||",295],["$opv eq '&U' || $opv eq '&&U') {",294],["$opv eq '&U' || $opv eq '&&U') {",294],["1*U>=0,",186],["-1*U>= -1,",180],["1*U=0,",122],["my $sign = \"\"; $sign = \"U\" if ($1);",116]]},{"word":"UPDATE","context":[["ON DELETE CASCADE ON UPDATE CASCADE",349],["UPDATE systempreferences",299],["ON DELETE CASCADE ON UPDATE CASCADE,",147],["ON DELETE SET NULL ON UPDATE SET NULL,",118],["REFERENCES `matchpoints` (`matchpoint_id`) ON DELETE CASCADE ON UPDATE CASCADE",117],["REFERENCES `import_records` (`import_record_id`) ON DELETE CASCADE ON UPDATE CASCADE,",117],["UPDATE",115],["`timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,",104],["REPLACE, UPDATE and DELETE queries.",96],["UPDATE letter",80]]},{"word":"USA","context":[["# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",3797],["# Suite 330, Boston, MA  02111-1307 USA",1248],["Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",1198],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA",701],["Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA",594],["# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",529],["#  MA 02139, USA.",391],["# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA",351],["# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.",346],["# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",282]]},{"word":"USE","context":[["# !!!!!!!   INTERNAL PERL USE ONLY   !!!!!!!",9514],["LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER",643],["ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE",643],["# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER",207],["# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE",182],["# OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR",182],["# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",150],["# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE",133],["# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE",121],["# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH",120]]},{"word":"Unicode","context":[["# This file is machine-generated by lib/unicore/mktables from the Unicode",5126],["# This file is machine-generated by mktables from the Unicode",4479],["# use it directly.  Use Unicode::UCD to access the Unicode character data",1538],["# use it directly.  Use Unicode::UCD to access the Unicode character data",1538],["# Use Unicode::UCD::prop_invlist() to access the contents of this file.",826],["# This file returns the single code point in Unicode Version 5.2.0 that",272],["# This file is built by mktables.PL from e.g. Unicode.301.",239],["# points in other Unicode releases, or it could be purely coincidence that",145],["# this version of Unicode uses this file.  Each one is listed in a separate",145],["# This file returns the single code point in Unicode Version 6.1.0 that",133]]},{"word":"Upgrade","context":[["print \"Upgrade to $DBversion done (added 2 new 'AutoEmailOpacUser' sysprefs)\\n\";",78],["print \"Upgrade to $DBversion done (userid index added)\\n\";",78],["print \"Upgrade to $DBversion done (add browser table if not already present)\\n\";",78],["print \"Upgrade to $DBversion done (adding ReservesNeedReturns systempref, in circulation)\\n\";",75],["print \"Upgrade to $DBversion done (Atomic update for OAI-PMH sets management)\\n\";",60],["print \"Upgrade to $DBversion done (Add system preference OpacBrowseResults ))\\n\";",57],["print \"Upgrade to $DBversion done (dropped uniqueness of key on deleteditems.barcode)\\n\";",39],["print \"Upgrade to $DBversion done (adding additional system preference)\\n\";",39],["print \"Upgrade to $DBversion done ( Updated table for Serials Display)\\n\";",39],["print \"Upgrade to $DBversion done (Updating patronimages syspref to reflect current kohastructure.sql. ) \\n\";",39]]},{"word":"Usage","context":[["use Pod::Usage;",3815],["Usage:",1037],["# Usage:",730],["Usage();",423],["Usage: $P [OPTION]... [FILE]...",282],["# Usage",238],["sub Usage {",188],["print \"Usage:\\n\";",168],["=head2 Usage",138],["## GNU Lesser General Public License Usage",129]]},{"word":"Use","context":[["# use it directly.  Use Unicode::UCD to access the Unicode character data",1538],["# Use Unicode::UCD::prop_invlist() to access the contents of this file.",826],["\"Use of CONFIG_EXPERIMENTAL is deprecated. For alternatives, see https://lkml.org/lkml/2012/10/23/580\\n\");",256],["\"Use #include <linux/$file> instead of <asm/$file>\\n\" . $herecurr);",185],["\"Use of volatile is usually wrong: see Documentation/volatile-considered-harmful.txt\\n\" . $herecurr);",182],["\"Use of $flag is deprecated, please use \\`$replacement->{$flag} instead.\\n\" . $herecurr) if ($replacement->{$flag});",167],["compress              Use the compressed protocol between client and server",149],["# Use --mem=<dir> as first location to look.",149],["die(\"--valgrind-options=s is deprecated. Use \",",148],["ps-protocol           Use the binary protocol between client and server",147]]},{"word":"V","context":[["if ($^V && $^V ge 5.10.0 &&",2030],["if ($^V && $^V ge 5.10.0 &&",2030],["$type = 'V';",892],["$av_pending = 'V';",598],["V: 0",368],["$a = 'V' if ($elements[$n] ne '');",303],["$c = 'V' if ($elements[$n + 2] ne '');",303],["if ($op_type ne 'V' &&",299],["if ($type eq 'V') {",296],["Version: $V",283]]},{"word":"VERSION","context":[["=head1 VERSION",851],["my $VERSION = getVersion();",686],["use vars qw($VERSION);",513],["use vars qw($VERSION %IRSSI);",362],["use version; our $VERSION = qv('v0.1.0');",201],["#      VERSION: 1.0",198],["VERSION: $Rev$",115],["This is $progname, from the Debian devscripts package, version ###VERSION###",113],["\"Version: $VERSION\\n\\n\";",112],["=head1 VERSION HISTORY",97]]},{"word":"Version","context":[["if (C4::Context->preference(\"Version\") < TransformToNum($DBversion)) {",11887],["if ( C4::Context->preference(\"Version\") < TransformToNum($DBversion) ) {",2830],["# database, Version 6.1.0.  Any changes made here will be lost!",2613],["# Licensed under the Apache License, Version 2.0 (the \"License\");",2545],["# database, Version 6.0.0.  Any changes made here will be lost!",1994],["# database, Version 6.2.0.  Any changes made here will be lost!",1762],["# database, Version 5.2.0.  Any changes made here will be lost!",1670],["# database, Version 6.3.0.  Any changes made here will be lost!",1161],["# Lesser General Public License Version 3 or the Perl Artistic License",597],["# Version 2.0.",597]]},{"word":"W","context":[["$c = 'W' if ($elements[$n + 2] =~ /^\\s/);",303],["$a = 'W' if ($elements[$n] =~ /\\s$/);",303],["if ($ctx !~ /[WEOBC]x[^W]/ && $ctx !~ /[^W]x[WOBEC]/) {",299],["if ($ctx !~ /[WEOBC]x[^W]/ && $ctx !~ /[^W]x[WOBEC]/) {",299],["W :->",256],["1*V+ -1*W=0,",224],["if ($line =~ /^.\\s*sema_init.+,\\W?0\\W?\\)/) {",214],["if ($line =~ /^.\\s*sema_init.+,\\W?0\\W?\\)/) {",214],["#!/usr/bin/perl -W",173],["[-w | -W |-v level] \\\\",104]]},{"word":"WARN","context":[["WARN(\"BAD_SIGN_OFF\",",710],["WARN(\"SPACING\",",684],["WARN(\"STATIC_CONST_CHAR_ARRAY\",",469],["WARN(\"BRACES\",",381],["WARN(\"AVOID_EXTERNS\",",374],["WARN(\"LINE_CONTINUATIONS\",",326],["if (WARN(\"SPACING\",",309],["sub WARN {",304],["if (WARN(\"BAD_SIGN_OFF\",",303],["WARN(\"NETWORKING_BLOCK_COMMENT_STYLE\",",280]]},{"word":"WARRANTIES","context":[["# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",2499],["\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",643],["LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS",642],["#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",516],["# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",352],["# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE",342],["# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE",326],["## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",251],["WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",185],["# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY",184]]},{"word":"WARRANTY","context":[["# but WITHOUT ANY WARRANTY; without even the implied warranty of",8483],["# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR",4860],["but WITHOUT ANY WARRANTY; without even the implied warranty of",3080],["# WITHOUT ANY WARRANTY; without even the implied warranty of",2637],["#    but WITHOUT ANY WARRANTY; without even the implied warranty of",1043],["# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY",669],["#  but WITHOUT ANY WARRANTY; without even the implied warranty of",616],["#   but WITHOUT ANY WARRANTY; without even the implied warranty of",522],["# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",353],["# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS",272]]},{"word":"WHERE","context":[["WHERE",1205],["WHERE branchcode = ?\");",194],["my  ( $catcodes, $labels ) =  GetborCatFromCatType( 'A', 'WHERE category_type = ?' );",177],["WHERE branchcode = ?",175],["WHERE 1\";",87],["$dbh->do(\"DELETE FROM systempreferences WHERE variable='serialsadditems'\");",78],["$dbh->do(\"DELETE FROM systempreferences WHERE variable='noOPACHolds'\");",78],["WHERE itemtype = ?\");",71],["WHERE categorycode = ?\");",71],["WHERE items.itemnumber=issues.itemnumber",69]]},{"word":"WITH","context":[["# OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR",182],["# THE SOFTWARE IS PROVIDED \"AS IS\" AND ISC DISCLAIMS ALL WARRANTIES WITH",182],["#  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,",158],["#  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE",158],["#  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH",158],["#  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF",158],["# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE",133],["# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF",124],["# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN",118],["# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.",75]]},{"word":"WITHOUT","context":[["# but WITHOUT ANY WARRANTY; without even the implied warranty of",8483],["# Koha is distributed in the hope that it will be useful, but WITHOUT ANY",4849],["but WITHOUT ANY WARRANTY; without even the implied warranty of",3080],["# WITHOUT ANY WARRANTY; without even the implied warranty of",2637],["# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",2499],["#    but WITHOUT ANY WARRANTY; without even the implied warranty of",1043],["# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY",669],["#  but WITHOUT ANY WARRANTY; without even the implied warranty of",616],["#   but WITHOUT ANY WARRANTY; without even the implied warranty of",522],["#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",516]]},{"word":"We","context":[["# We have looked at and allowed this specific line.",298],["# We are truly at the end, so shuffle to the next line.",296],["# We want to check the first line inside the block",296],["# We need \\b after 'init' otherwise 'initconst' will cause a false positive in a check",258],["######################### We start with some black magic to print on failure.",164],["# We do this here, since we do not want to Valgrind the nested invocations",149],["# We make the path absolute, as the server will do a chdir() before usage",147],["# We don't need this any more",117],["$url =~ s! \\* !$g_escape_table{'*'}!gx;\t\t# We've got to encode these to avoid",108],["The operators supported are as follows. We provide text based alternatives to the comparison",80]]},{"word":"X","context":[["my $clean = 'X' x length($1);",598],["# 'X' below means that this form is discouraged.  Consult perluniprops.pod",370],["get_attr(X,itf,Att),",352],["open OUT,\"| \\\"$^X\\\" $xlate $flavour $output\";",345],["substr($res, $off, 1, 'X');",299],["while ($line =~ /(?:^|\")([X\\t]*)(?:\"|$)/g) {",297],["var(X),",246],["$Xi++;\tpush(@X,shift(@X));\t# \"rotate\" X[]",212],["$Xi++;\tpush(@X,shift(@X));\t# \"rotate\" X[]",212],["$Xi++;\tpush(@X,shift(@X));\t# \"rotate\" X[]",212]]},{"word":"XML","context":[["use XML::Simple;",842],["use XML::LibXML;",609],["# Log SOAP XML request, response and API errors.",446],["use MARC::File::XML;",233],["} elsif ($mode eq \"XML-WEB\") {",231],["} elsif ($mode eq \"XML-DOC\") {",198],["my $parser = XML::LibXML->new();",181],["use XML::Twig;",177],["use XML::Parser;",171],["my $xml = new XML::Simple;",99]]},{"word":"XMM","context":[["movdqu\t@XMM[0], 0x00($out)\t# write output",514],["movdqu\t@XMM[1], 0x10($out)",478],["veor\t\t@XMM[0], @XMM[0], @XMM[ 8]",364],["vst1.8\t\t{@XMM[0]-@XMM[1]}, [$out]!",364],["veor\t\t@XMM[0], @XMM[0], @XMM[ 8]",364],["veor\t\t@XMM[0], @XMM[0], @XMM[ 8]",364],["veor\t\t@XMM[1], @XMM[1], @XMM[ 9]",364],["veor\t\t@XMM[1], @XMM[1], @XMM[ 9]",364],["vld1.64\t\t{@XMM[8]}, [r0,:128]\t\t@ next round tweak",364],["veor\t\t@XMM[1], @XMM[1], @XMM[ 9]",364]]},{"word":"Xi","context":[["$Xi++;\tpush(@X,shift(@X));\t# \"rotate\" X[]",212],["&reduction_alg9\t($Xhi,$Xi);",157],["$Xi++;",136],["pxor\t\t$T2,$Xi\t\t\t#",108],["$Xi=0;",106],["pxor\t\t$Xi,$T1\t\t\t#",97],["&pshufb\t\t($Xi,$T3);",90],["pshufb\t\t$T3,$Xi",80],["ld\t\t[$Xfer+`4*($i%16)`],$Xi",77],["pshufd\t\t\\$0b01001110,$Xi,$T1",77]]},{"word":"Y","context":[["'Y',",712],["1*Y+ -1*Z=0,",149],["$callback .= \"&l_$item=Y\";",116],["},$self,$mc,$top,$X,$Y]);",106],["my ($self,$mc,$top,$X,$Y) = @_;",106],["get(Y,YL,YU,YExp),",100],["my $date = POSIX::strftime(\"%Y%m%d%H%M\",",99],["wrappable(X, Y).",98],["\"%Y-%m-%d %H:%M:%S => \", localtime",98],["# with -ndb-Y.Y.Y[-status]",90]]},{"word":"YI","context":[["0A1C5\tYI SYLLABLE LUO",11],["0A393\tYI SYLLABLE RRYR",11],["0A0B8\tYI SYLLABLE MAP",11],["0A101\tYI SYLLABLE DIX",11],["0A424\tYI SYLLABLE JJOX",11],["0A332\tYI SYLLABLE SSAX",11],["0A420\tYI SYLLABLE JJUOX",11],["0A168\tYI SYLLABLE HNIT",11],["0A152\tYI SYLLABLE NDIX",11],["0A35D\tYI SYLLABLE ZHY",11]]},{"word":"You","context":[["# You should have received a copy of the GNU General Public License",8214],["# You should have received a copy of the GNU General Public License along",4990],["# You may obtain a copy of the License at",2558],["# You should have received a copy of the GNU General Public License along with",1572],["You should have received a copy of the GNU Lesser General Public",1221],["# You should have received a copy of the GNU Affero General Public License",1163],["You should have received a copy of the GNU General Public License",1073],["#    You should have received a copy of the GNU General Public License",962],["This library is free software. You can redistribute it and/or modify",577],["You should have received a copy of the GNU General Public",560]]},{"word":"Z","context":[["if ($line =~ /^.\\s*return\\s*(E[A-Z]*)\\s*;/) {",199],["$word =~ tr/[a-z]/[A-Z]/;",193],["($line =~ /\\+(EXTRA_[A-Z]+FLAGS).*/)) {",167],["#\t\tif (($line=~/[\\w_][a-z\\d]+[A-Z]/) and !($line=~/print/)) {",166],["\"XO:i:0\" => 1, \"XG:i:0\" => 1, \"NM:i:0\"   => 1, \"MD:Z:28\" => 1,",153],["1*Y+ -1*Z=0,",149],["if ($line =~ /\\bprintk\\s*\\(\\s*KERN_([A-Z]+)/) {",135],["if ($line =~ /\\bdev_printk\\s*\\(\\s*KERN_([A-Z]+)/) {",126],["\"YM:i:1\" => 1, \"YP:i:1\" => 1, \"YT:Z:CP\"  => 1, \"YS:i:0\"  => 1 },",114],["$var =~ /[A-Z][a-z]|[a-z][A-Z]/ &&",104]]},{"word":"Zend","context":[["\"Zend/tests/cast_to_string.phpt\",",23],["\"Zend/tests/objects_028.phpt\",",23],["\"Zend/tests/ns_049.phpt\",",23],["\"Zend/tests/get_class_methods_002.phpt\",",23],["\"Zend/tests/bug39018.phpt\",",23],["\"Zend/tests/errmsg_017.phpt\",",23],["\"Zend/tests/call_static_002.phpt\",",23],["\"Zend/tests/bug45186_2.phpt\",",23],["\"Zend/tests/gc_007.phpt\",",23],["\"Zend/tests/bug43918.phpt\",",23]]},{"word":"_","context":[["my $line = $_;",2145],["my ($self) = @_;",2072],["my ($file) = @_;",1607],["print $_;",1604],["my ($tinfo)= @_;",1309],["chomp($_);",1277],["my ($linenr, $remain, $off) = @_;",1201],["my ($line) = @_;",1169],["chomp $_;",1006],["my ($input) = @_;",1000]]},{"word":"__LINE__","context":[["#     printf $log_fh \"%d: File %s already exists\\n\", __LINE__, $outfnm if ( -e $outfnm);",510],["printf $log_fh \"%d: ENTRY STATE: %s\\n\", __LINE__,",247],["printf $log_fh \"%d: File %s already exists\\n\", __LINE__, $outfnm if ( -e $outfnm);",234],["($result, $rows) = &do_multi_result_sql_query2($global_var_href, $sql, \\@sql_parameters, $sr_name . \"-\" . __LINE__ );",204],["#             printf $log_fh \"%d: ENTRY STATE: %s\\n\", __LINE__,",187],["__LINE__, $prod_file;",157],["$result = SQLQuery($sqlstring, __FILE__, __LINE__);",156],["printf \"if (err) exit(__LINE__);\\n\";",151],["printf \"exit(__LINE__);\\n\";",144],["&errorMessage(__LINE__, \"Cannot open \\\"$filename\\\".\");",128]]},{"word":"___","context":[["___",25992],["$code.=<<___;",17202],["$code.=<<___ if ($win64);",1569],["$code=<<___;",558],["$code.=<<___ if ($addx);",334],["$code.=<<___\tif ($win64);",320],["$code.=<<___ if ($flavour =~ /nubi/i);",291],["$code.=<<___ if ($avx);",246],["$code.=<<___ if ($avx>1);",223],["$code.=<<___\tif ($addx);",195]]},{"word":"a","context":[["# You should have received a copy of the GNU General Public License",8214],["# You should have received a copy of the GNU General Public License along",4990],["# You may obtain a copy of the License at",2558],["As a special exception, if you link this library with other files,",1585],["compiled with a Free Software compiler, to produce an executable, this",1583],["# You should have received a copy of the GNU General Public License along with",1572],["You should have received a copy of the GNU Lesser General Public",1221],["# You should have received a copy of the GNU Affero General Public License",1163],["You should have received a copy of the GNU General Public License",1073],["#    You should have received a copy of the GNU General Public License",962]]},{"word":"above","context":[["1. Redistributions of source code must retain the above copyright",657],["2. Redistributions in binary form must reproduce the above copyright",656],["#     Note that contrary to what you might expect, the above is NOT the same",512],["# 1. Redistributions of source code must retain the above copyright",310],["# purpose with or without fee is hereby granted, provided that the above",308],["# 2. Redistributions in binary form must reproduce the above copyright",270],["# The above copyright notice and this permission notice shall be included in",213],["# above, anything to the left of the equals (or colon) can be combined with",150],["# * Redistributions in binary form must reproduce the above copyright notice,",142],["# * Redistributions of source code must retain the above copyright notice,",124]]},{"word":"acc","context":[["&mov\t($s1,&DWP(4,$acc));",164],["&mov\t($s2,&DWP(8,$acc));",164],["&mov\t(&DWP(12,$acc),$s3);",164],["&mov\t($s3,&DWP(12,$acc));",164],["&mov\t(&DWP(8,$acc),$s2);",164],["&mov\t(&DWP(4,$acc),$s1);",164],["&mov\t($_inp,$acc);\t\t# save inp",138],["&mov\t($acc,$_inp);\t\t# load inp",138],["&lea\t($acc,&DWP(-2,$acc,$acc));",134],["&lea\t($acc,&DWP(-2,$acc,$acc));",134]]},{"word":"action","context":[["<form method=post action=$form->{script}>",934],["#---- if primkey exists, it's a modify action, so read values to modify...",196],["name => 'action',",178],["my $action = shift;",146],["Run a Catalyst action from the command line.",121],["<form method=post action=\"$form->{script}\">",117],["<button class=\"submit\" type=\"submit\" name=\"action\" value=\"continue\">|",110],["# parse_webmin_log(user, script, action, type, object, &params)",108],["action =>           q{",99],["delete $form->{action};",94]]},{"word":"adc","context":[["adc\t\\$0,%rdx",3839],["adc\t\\$0, %rdx",840],["&adc\t(\"edx\",0);",397],["adc\t\\$0,$A0[1]",264],["adc\t\\$0,$A0[0]",216],["adc\t\\$0,$A1[1]",144],["adc\t\\$0,$N[1]",125],["adc\t\\$0,$A1[0]",116],["adc\t8*5($tptr),%r13",114],["adc\t8*4($tptr),%r12",114]]},{"word":"add","context":[["add\t%rax,$A[1]",384],["add\t%rax,$N[1]",384],["add\t\tr4, sp, #0x90\t\t\t@ pass key schedule",364],["add\t\tr4, $key, #248\t\t\t@ pass key schedule",364],["add\t\\$64,%rsp",322],["would read in a file of ids and add a column for each field in the relationship.",306],["add\t%rax,$N[0]",288],["add\t%rax,$A[0]",288],["sub add {",263],["# called by default. Used to create form to add or  modify a record",256]]},{"word":"add_person","context":[["add_person(\"Eugene Sandulenko\", \"sev\", \"\");",324],["add_person(\"Paul Gilbert\", \"dreammaster\", \"\");",307],["add_person(\"Filippos Karapetis\", \"[md5]\", \"\");",283],["add_person(\"Arnaud Boutonn&eacute;\", \"Strangerke\", \"\");",213],["add_person(\"Torbj&ouml;rn Andersson\", \"eriktorbjorn\", \"\");",204],["add_person(\"Gregory Montoir\", \"cyx\", \"(retired)\");",140],["add_person(\"Max Horn\", \"Fingolfin\", \"(retired)\");",126],["add_person(\"Jordi Vilalta Prat\", \"jvprat\", \"\");",118],["add_person(\"Johannes Schickel\", \"LordHoto\", \"\");",116],["add_person(\"Joost Peters\", \"joostp\", \"\");",103]]},{"word":"add_proto","context":[["add_proto qw/void vp9_iht8x8_64_add/, \"const tran_low_t *input, uint8_t *dest, int dest_stride, int tx_type\";",101],["add_proto qw/void vp9_iht16x16_256_add/, \"const tran_low_t *input, uint8_t *output, int pitch, int tx_type\";",101],["add_proto qw/void vp9_iht4x4_16_add/, \"const tran_low_t *input, uint8_t *dest, int dest_stride, int tx_type\";",101],["add_proto qw/void vp9_idct32x32_34_add/, \"const tran_low_t *input, uint8_t *dest, int dest_stride\";",70],["add_proto qw/void vp9_iwht4x4_16_add/, \"const tran_low_t *input, uint8_t *dest, int dest_stride\";",70],["add_proto qw/void vp9_idct16x16_1_add/, \"const tran_low_t *input, uint8_t *dest, int dest_stride\";",70],["add_proto qw/void vp9_idct8x8_64_add/, \"const tran_low_t *input, uint8_t *dest, int dest_stride\";",70],["add_proto qw/void vp9_idct4x4_16_add/, \"const tran_low_t *input, uint8_t *dest, int dest_stride\";",70],["add_proto qw/void vp9_idct32x32_1_add/, \"const tran_low_t *input, uint8_t *dest, int dest_stride\";",70],["add_proto qw/void vp9_idct16x16_256_add/, \"const tran_low_t *input, uint8_t *dest, int dest_stride\";",70]]},{"word":"added","context":[["plugin_parameters : other parameters added when the plugin is called by the dopop function",456],["#ignore lines not being added",303],["# Checks which are anchored on the added line.",303],["# Track the 'values' across context and added lines.",300],["# is available, it should be added to",149],["Other parameters added when the plugin is called by the dopop function",145],["# Note as optimized versions of these functions are added we need to add a check to ensure",106],["print \"Upgrade to $DBversion done (added 2 new 'AutoEmailOpacUser' sysprefs)\\n\";",78],["print \"Upgrade to $DBversion done (userid index added)\\n\";",78],["# Plugin settings should no longer be added here, instead",70]]},{"word":"address","context":[["$address = $1;",514],["$address = $2;",299],["$address =~ s/^\\s+|\\s+$//g;",296],["my $address = \"\";",274],["my ($name, $address) = @_;",255],["$formatted_email = \"$address\";",251],["$formatted_email = \"$name <$address>\";",247],["- address: 0.0.1.1",231],["$address = trim($address);",213],["$address = trim($address);",213]]},{"word":"after","context":[["# Find out what is on the end of the line after the",595],["mtr_add_arg($args, \"--defaults-group-suffix=%s\", $mysqld->after('mysqld'));",590],["# Need a space before open parenthesis after if, while etc",304],["# if and else should not have general statements after it",303],["#no spaces allowed after \\ in define",303],["# ; should have either the end of line or a space or \\ after it",303],["#extract the line range in the file after the patch is applied",303],["# none after.  May be left adjacent to another",300],["# statements after the conditional.",296],["# case and default should not have general statements after them",294]]},{"word":"align","context":[[".align\t16",6071],[".align\t32",4047],[".align\t4",3284],[".align\t5",1462],[".align\t64",854],[".align\t8",518],[".align\t2",385],["&align\t(4);",306],["<td align=right>",203],[".align\t6",185]]},{"word":"all","context":[["use warnings FATAL => 'all';",426],["# the main body of the table, and what all code points missing from this file",413],["-a\t\t    Return all available fields.",400],["(?:${all}\\b)",349],["# copyright notice and this permission notice appear in all copies.",308],["# Assume all arms of the conditional end as this",299],["# If we have no input at all, then there is nothing to report on",299],["# and end, all to $;.",299],["is all off)",282],["# all assignments may have only one of the following with an assignment:",275]]},{"word":"allowed","context":[["$allowed = 1;",1904],["$allowed[$allow] = 1;",462],["my $allowed = 0;",443],["#no spaces allowed after \\ in define",303],["# unary ++ and unary -- are allowed no space on one side.",303],["# We have looked at and allowed this specific line.",298],["# check for spacing round square brackets; allowed:",296],["if ($level == 0 && $block =~ /^\\s*\\{/ && !$allowed) {",267],["#print \"cond<$cond> block<$block> allowed<$allowed[$allow]>\\n\";",158],["$allowed[$allow] = 0;",158]]},{"word":"along","context":[["# You should have received a copy of the GNU General Public License along",4990],["# along with this program; if not, write to the Free Software",3345],["# along with Koha; if not, see <http://www.gnu.org/licenses>.",1906],["# along with this program.  If not, see <http://www.gnu.org/licenses/>.",1805],["License along with this library; if not, write to the Free Software",1762],["# You should have received a copy of the GNU General Public License along with",1572],["# along with Meran.  If not, see <http://www.gnu.org/licenses/>.",754],["#    along with this program; if not, write to the Free Software",343],["along with this program; if not, write to the Free Software",294],["along with this program.  If not, see <http://www.gnu.org/licenses/>.",240]]},{"word":"already","context":[["#     printf $log_fh \"%d: File %s already exists\\n\", __LINE__, $outfnm if ( -e $outfnm);",510],["# '*' as part of a type definition -- reported already.",300],["# check if the ref image has this relation with this family already",265],["printf $log_fh \"%d: File %s already exists\\n\", __LINE__, $outfnm if ( -e $outfnm);",234],["# vardir does not already exist it should be created",149],["# Running against an already started server, if the specified",149],["mtr_verbose(\"No need to create '$opt_vardir' it already exists\");",146],["# Set valgrind_options to default unless already defined",143],["to be created already exist the file will be written with a '.new' suffix.",122],["# Some port was not free(which one has already been printed)",119]]},{"word":"also","context":[["# is also valid.",2401],["Questions may also be sent to the Ensembl help desk at",588],["See also:",379],["# also makes it possible to wait for any process to exit during the check",357],["#  are also available at http://www.perfdynamics.com/Tools/copyright.html.    #",161],["The option can also be set using environment",149],["# are also available at http://curl.haxx.se/docs/copyright.html.",124],["enable-disabled       Run also tests marked as disabled",119],["# test will also be at $i -> redo",119],["# If --wait-all is also given, do the same, but don't die if one",119]]},{"word":"an","context":[["# distributed under the License is distributed on an \"AS IS\" BASIS,",2592],["compiled with a Free Software compiler, to produce an executable, this",1583],["#  distributed under the License is distributed on an \"AS IS\" BASIS,",515],["#  an die Free Software Foundation, Inc., 675 Mass Ave, Cambridge,",391],["# If we see an #else/#elif then the code",294],["# all assignments may have only one of the following with an assignment:",275],["## distributed under the License is distributed on an \"AS IS\" BASIS,",271],["% Software distributed under the License is distributed on an \"AS IS\"",244],["# Return of what appears to be an errno should normally be -'ve",199],["distributed under the License is distributed on an \"AS IS\" BASIS,",194]]},{"word":"and","context":[["# This file is for internal use by core Perl only.  The format and even the",5878],["# Koha is free software; you can redistribute it and/or modify it under the",4845],["# This file is for internal use by the Perl program only.  The format and even",4650],["# This program is free software; you can redistribute it and/or modify",3916],["# See the License for the specific language governing permissions and",2505],["# including if adding or subtracting white space, underscore, and hyphen",2480],["# characters matters or doesn't matter, and other permissible syntactic",2480],["# A colon can be substituted for the equals sign, and anything to the left of",2251],["This program is free software; you can redistribute it and/or",2016],["# Koha is free software; you can redistribute it and/or modify it",1914]]},{"word":"any","context":[["# (at your option) any later version.",6573],["# Foundation; either version 2 of the License, or (at your option) any later",4705],["# perluniprops.pod should be consulted for the syntax rules for any of these,",2468],["of the License, or (at your option) any later version.",1905],["invalidate any other reasons why the executable file might be covered by",1583],["# any of the following regular expression constructs:",1459],["# any later version.",1381],["#    (at your option) any later version.",921],["# of the License, or (at your option) any later version.",883],["(at your option) any later version.",799]]},{"word":"anything","context":[["# the equals (or colon) can be combined with anything to the right.  Thus,",2251],["# A colon can be substituted for the equals sign, and anything to the left of",2251],["# closing brace should have a space following it when it has anything",303],["# at the beginning of a line any tabs must come first and anything",278],["# above, anything to the left of the equals (or colon) can be combined with",150],["# anything to the right.  Thus, for example,",150],[";    # FIXME... anything to do here?",149],["# Don't delete anything if starting dirty",143],["# or anything beginning with -- (the latter comes from --combination)",119],["Do not insert anything into the database. I.e. read-only mode.",36]]},{"word":"ap","context":[["mulq\t$m0\t\t\t# ap[j]*bp[i]",388],["mulq\t$m0\t\t\t# ap[j]*bp[0]",340],["mov\t($ap,$j,8),%rax",166],["mov\t8($ap),%rax",154],["mov\t($ap),%rax\t\t# ap[0]",149],["mov\t($ap),%rax\t\t# ap[0]",149],["add\t$A[0],$N[0]\t\t# np[j]*m1+ap[j]*bp[0]",144],["add\t$A[1],$N[1]\t\t# np[j]*m1+ap[j]*bp[0]",144],["mov\t-8($ap,$j,8),%rax",116],["mulq\t$m0\t\t\t# ap[0]*bp[i]",100]]},{"word":"appearance","context":[["I<ornaments>     affects screen appearance of the command line.",44],["holdsAt( appearance( id0 )=visible,  1040 ).",25],["holdsAt( appearance( id0 )=visible,  400 ).",24],["holdsAt( appearance( id0 )=visible,  840 ).",24],["holdsAt( appearance( id0 )=visible,  720 ).",24],["holdsAt( appearance( id0 )=visible,  760 ).",24],["holdsAt( appearance( id0 )=visible,  880 ).",24],["holdsAt( appearance( id0 )=visible,  680 ).",23],["holdsAt( appearance( id0 )=visible,  960 ).",23],["holdsAt( appearance( id0 )=visible,  920 ).",23]]},{"word":"are","context":[["# name or existence of this file are subject to change without notice.  Don't",6892],["# the name or existence of this file are subject to change without notice.",3636],["# [brackets] indicate how many code points are in the range.",2478],["strings. The following fields are available:",1078],["modification, are permitted provided that the following conditions",653],["are met:",653],["following fields are available:",612],["# are met:",455],["# modification, are permitted provided that the following conditions",452],["# By default examples are set to die on any server returned fault.",446]]},{"word":"arg","context":[["'arg',",879],["my $arg = shift;",332],["for my $arg (split(/\\s*,\\s*/, $ctx)) {",300],["if ($arg =~ /^(?:const\\s+)?($Ident)(?:\\s+$Sparse)*\\s*\\**\\s*(:?\\b$Ident)?$/s || $arg =~ /^($Ident)$/s) {",297],["if ($arg =~ /^(?:const\\s+)?($Ident)(?:\\s+$Sparse)*\\s*\\**\\s*(:?\\b$Ident)?$/s || $arg =~ /^($Ident)$/s) {",297],["foreach my $arg ( @opt_extra_mysqld_opt )",290],["arg(B, C, E),",264],["# with --sever-arg=",238],["mtr_add_arg($args, \"--server-arg=%s\", $_) for @$mysqld_args;",236],["foreach my $arg (@ARGV) {",220]]},{"word":"args","context":[["'args' => [",13765],["mtr_init_args(\\$args);",2803],["my $args;",2755],["mtr_add_arg($args, \"--defaults-file=%s\", $path_config_file);",1484],["args          => \\$args,",1366],["args          => \\$args,",1366],["my $args= shift;",912],["my %args = @_;",809],["mtr_add_arg($args, \"--no-defaults\");",799],["mtr_add_arg($args, \"--defaults-group-suffix=%s\", $mysqld->after('mysqld'));",590]]},{"word":"arguments","context":[["#\targuments:",221],["Optional arguments:",213],["Required arguments:",205],["\"arguments for function declarations should follow identifier\\n\" . $herecurr);",187],["# that the lone '--' separating options from arguments survives,",149],["# Check valgrind arguments",149],["mysqld=ARGS           Specify additional arguments to \"mysqld\"",145],["# Add arguments that should not go into the MYSQL_TEST env var",145],["# check usleep_range arguments",134],["# InnoDB arguments that affect file location and sizes may",129]]},{"word":"array","context":[["my @array;",273],["\"static const char * array should probably be static const char * const\\n\" .",193],["\"static char array declaration should probably be static const char\\n\" .",193],["while(my @row = $recs->fetchrow_array) { # loop through array of result of sql..",132],["my $array = shift;",131],["# Return as an array of lines",119],["my @array = @_;",115],["my @array = $sth->fetchrow_array () ;",108],["reset 'array';",103],["foreach my $word (@array) {",100]]},{"word":"as","context":[["# it under the terms of the GNU General Public License as published by",5449],["# terms of the GNU General Public License as published by the Free Software",5003],["# under the terms of the GNU General Public License as published by",2021],["as published by the Free Software Foundation; either version 2",1860],["# it under the terms of the GNU AFFERO General Public License as published by",1036],["it under the terms of the GNU General Public License as published by",960],["#    it under the terms of the GNU General Public License as published by",899],["# as published by the Free Software Foundation; either version 2",803],["it under the same terms as Perl itself.",663],["#  it under the terms of the GNU General Public License as published by",443]]},{"word":"asm","context":[["$win64=0; $win64=1 if ($flavour =~ /[nm]asm|mingw64/ || $output =~ /\\.asm$/);",361],["$win64=0; $win64=1 if ($flavour =~ /[nm]asm|mingw64/ || $output =~ /\\.asm$/);",361],["asm|__asm__)$/x)",298],["asm|__asm__|",294],["my $asm_volatile = qr{\\b(__asm__|asm)\\s+(__volatile__|volatile)\\b};",290],["if ($realfile =~ m@^include/asm/@) {",279],["if ($tree && $rawline =~ m{^.\\s*\\#\\s*include\\s*\\<asm\\/(.*)\\.h\\>}) {",279],["if ($line =~ m@^.\\s*\\#\\s*if.*\\b(__i386__|__powerpc64__|__sun__|__s390x__)\\b@ && $realfile !~ m@include/asm-@) {",279],["#warn if <asm/foo.h> is #included and <linux/foo.h> is available (uses RAW line)",235],["\"Use #include <linux/$file> instead of <asm/$file>\\n\" . $herecurr);",185]]},{"word":"at","context":[["# (at your option) any later version.",6573],["# Foundation; either version 2 of the License, or (at your option) any later",4705],["# You may obtain a copy of the License at",2558],["of the License, or (at your option) any later version.",1905],["$ADDU\t$t_2,$at",1020],["#    (at your option) any later version.",921],["# of the License, or (at your option) any later version.",883],["(at your option) any later version.",799],["Questions may also be sent to the Ensembl help desk at",588],["developers list at <http://lists.ensembl.org/mailman/listinfo/dev>.",512]]},{"word":"attr","context":[["my $attr = $1;",316],["'values', 'possible', 'type', and 'attr' (default",281],["\"TEST: is attr\\n\" . $herecurr);",193],["\"TEST: is not attr ($1 is)\\n\". $herecurr);",193],["cf(1,eq(attr(var(0),'VFORM'),'fin')),",176],["cf(1,eq(attr(var(0),'STMT-TYPE'),'decl')),",103],["ERROR(\"TEST: is not attr ($1 is)\\n\". $herecurr);",101],["ERROR(\"TEST: is attr\\n\" . $herecurr);",101],["\"$attr should be placed after $var\\n\" . $herecurr))) &&",97],["\"$attr should be placed after $var\\n\" . $herecurr)) ||",97]]},{"word":"authnotrequired","context":[["authnotrequired => 0,",5796],["authnotrequired => 1,",675],["$authnotrequired,",294],["authnotrequired => ( C4::Context->preference(\"OpacPublic\") ? 1 : 0 ),",279],["my $authnotrequired = 0;",66],["authnotrequired     => 0,",51],["authnotrequired\t=> 0,",39],["my $authnotrequired= 0;",32],["authnotrequired => $commandline,",18],["my $authnotrequired     = 0;",14]]},{"word":"author","context":[["@author Wouter Beek",694],["<div class=\\\"comment-author vcard\\\">",166],["<cite class=\\\"comment-author\\\">",166],["@author\tJan Wielemaker",157],["push(@authors, $author);",138],["my $author = $1;",135],["$author = deduplicate_email($author);",106],["$author = deduplicate_email($author);",106],["\"HgAuthor: {author}\\\\n\" .",88],["@author Jan Wielemaker",82]]},{"word":"available","context":[["strings. The following fields are available:",1078],["following fields are available:",612],["-a\t\t    Return all available fields.",400],["--show-fields   List the available fields.",320],["The following fields are available:",320],["List the available fields.",306],["return. Field-list is a comma-separated list of strings. The following fields are available:",306],["#warn if <asm/foo.h> is #included and <linux/foo.h> is available (uses RAW line)",235],["available => 1, mode => \"user\", dist_req_build => [],",202],["#  are also available at http://www.perfdynamics.com/Tools/copyright.html.    #",161]]},{"word":"b","context":[["if ($block =~/\\b(?:if|for|while)\\b/) {",589],["if ($block =~/\\b(?:if|for|while)\\b/) {",589],["my ($a,$b,$c,$d,$e);",563],["(?:$typeTypedefs\\b)|",444],["(?:${all}\\b)",349],["my ($i,$a,$b,$c,$d,$e)=@_;",306],["if ($line =~ /\\b$Type\\s+$Inline\\b/ ||",300],["$line =~ /\\b$Inline\\s+$Storage\\b/) {",300],["$line =~ /\\b$Inline\\s+$Storage\\b/) {",300],["if ($line =~ /\\b$Type\\s+$Inline\\b/ ||",300]]},{"word":"back","context":[["=back",14282],[". p(a({-href=>\"javascript:back()\"}, \"go back and try again\"));",193],[". p(a({-href=>\"javascript:back()\"}, \"go back and try again\"));",193],["# Send it back, now with results set",119],["# Somewhat hacky code to convert numeric version back to dot notation",106],["# Pass request to the user agent and get a response back",100],["# Read back values",95],["$_ = \"\\n=back\\n\";",78],["# Step 9: Move the result back to the original object.",63],["# Step 7: Convert the local functions back into local symbols",63]]},{"word":"base","context":[["# base.",1538],["$realfile !~ m@^drivers/base/core@) {",248],["my $base = \"/local/home/coates/MECCA\";",151],["# In most cases, the base directory we find everything relative to,",149],["# default system locations, instead of having our own private base",149],["# more directory relative to \"mysql-test\" gives us a usable base",145],["mtr_add_arg($args, \"--base=$opt_vardir/log\");",141],["my $base;",128],["base            => \"1000\",",127],["'port-base|mtr-port-base=i'       => \\$opt_port_base,",119]]},{"word":"basedir","context":[["basedir         => $basedir,",238],["basedir         => $basedir,",238],["my $exe_mysqld= find_mysqld($basedir);",190],["if ( ! $source_dist and ! -d \"$basedir/bin\" )",155],["$basedir= dirname($basedir);",155],["$basedir= dirname($basedir);",155],["$bindir=$ENV{MTR_BINDIR}||$basedir;",144],["our $basedir;",126],["\"$basedir/zlib/.libs/\");",119],["mtr_add_arg($args, \"--basedir=%s\", $install_basedir);",119]]},{"word":"be","context":[["# This program is distributed in the hope that it will be useful,",5883],["# Koha is distributed in the hope that it will be useful, but WITHOUT ANY",4849],["# Any changes made here will be lost!",2921],["# database, Version 6.1.0.  Any changes made here will be lost!",2613],["This program is distributed in the hope that it will be useful,",2563],["# perluniprops.pod should be consulted for the syntax rules for any of these,",2468],["# A colon can be substituted for the equals sign, and anything to the left of",2251],["# the equals (or colon) can be combined with anything to the right.  Thus,",2251],["# database, Version 6.0.0.  Any changes made here will be lost!",1994],["# Koha is distributed in the hope that it will be useful, but",1925]]},{"word":"before","context":[["# test carefully before changing this",441],["# Need a space before open parenthesis after if, while etc",304],["#need space before brace following if, while, etc",303],["# unary operators should have a space before and",300],["# A colon needs no spaces before when it is",296],["\"space prohibited before that '$op' $at\\n\" . $hereptr)) {",268],["# check for spaces before a quoted newline",268],["# check for space before tabs.",243],["ERROR(\"space required before the open parenthesis '('\\n\" . $herecurr);",210],["ERROR(\"space prohibited before that '$op' $at\\n\" . $hereptr);",209]]},{"word":"between","context":[["# '*'s should not have spaces between.",584],["# check the location of the inline attribute, that it is between",302],["# check for spaces between functions and their parentheses.",301],["# if there is a space between the name and the open",298],["\"inline keyword should sit between storage class and type\\n\" . $herecurr);",193],["#studly caps, commented out until figure out how to distinguish between use of existing and adding new",166],["compress              Use the compressed protocol between client and server",149],["# Init variables that can change between each test case",149],["# differs between operating systems and configuration, see",149],["ssl                   Use ssl protocol between client and server",147]]},{"word":"biblio","context":[["<<biblio.title>> <br />",93],["my $biblio = GetBiblioData($biblionumber);",84],["The first 10 tabs present the biblio, the 11th one presents",71],["the items attached to the biblio",71],["SetImportRecordStatus( $biblio->{'import_record_id'}, 'imported' );",65],["biblio.title,",65],["<h4><<biblio.title>></h4>",62],["<h5><<biblio.author>></h5>",62],["biblio.author,",60],["$biblio->{'itemtype'} = C4::Context->preference('item-level_itypes') ? $biblio->{'itype'} : $biblio->{'itemtype'};",59]]},{"word":"biblionumber","context":[["my $biblionumber = $query->param('biblionumber');",319],["my $biblionumber = $query->param('biblionumber');",319],["biblionumber => $biblionumber,",228],["biblionumber => $biblionumber,",228],["my $record = GetMarcBiblio($biblionumber);",148],["my $subscriptionsnumber = CountSubscriptionFromBiblionumber($biblionumber);",136],["my $biblionumber = $input->param('biblionumber');",135],["my $biblionumber = $input->param('biblionumber');",135],["biblionumber        => $biblionumber,",131],["biblionumber        => $biblionumber,",131]]},{"word":"bin","context":[["#!/usr/bin/perl",48452],["#!/usr/bin/perl -w",21528],["#!/usr/bin/env perl",18216],["#! /usr/bin/perl",2356],["#!/usr/local/bin/perl",2068],["#! /usr/bin/perl -w",1796],["#! /usr/bin/env perl",1585],["#!/usr/local/bin/perl -w",1188],["#!/bin/perl",385],["#!/bin/env perl",353]]},{"word":"binary","context":[["# Redistribution and use in source and binary forms, with or without",921],["Redistribution and use in source and binary forms, with or without",745],["2. Redistributions in binary form must reproduce the above copyright",656],["# 2. Redistributions in binary form must reproduce the above copyright",270],["moveq\tpc,lr\t\t\t@ be binary compatible with V4, yet",262],["# we need it when valgrinding or debugging non installed binary",149],["# distributions, TAR binary distributions and some other packages.",149],["ps-protocol           Use the binary protocol between client and server",147],["# * Redistributions in binary form must reproduce the above copyright notice,",142],["* Redistribution and use in source and binary forms, with or without",136]]},{"word":"bit","context":[["# (c) 2005, Joel Schopp <jschopp@austin.ibm.com> (the ugly bit)",302],["# (c) 2001, Dave Jones. (the file handling bit)",269],["\"8-bit UTF-8 used in possible commit log\\n\" . $herecurr);",176],["# Wait a bit and see if a server died, if so report that instead",119],["mov\t%rdx,(%rsp,$num,8)\t# store upmost overflow bit",104],["goodprint \"Operating on 64-bit architecture\\n\";",97],["# The module implements \"4-bit\" GCM GHASH function and underlying",93],["foreach $bit (32) {",78],["sub AUTOLOAD()\t\t# thunk [simplified] 32-bit style perlasm",75],["my $bit;",74]]},{"word":"blank","context":[["# blank context lines so we need to count that too.",303],["my $blank = copy_spacing($opline);",300],["my $ptr = substr($blank, 0, $off) . \"^\";",300],["# Strip the diff line prefixes and rip blank lines at start and end.",299],["my $ptr = substr($blank, 0, length($utf8_prefix)) . \"^\";",297],["my $blank = copy_spacing($rawline);",297],["#  1) any blank line termination",296],["#  1) blank lines, they should be at 0,",294],["print \"<img src='img/blank.gif' alt='' width='250' height='1'><br>\";",140],["# check for unnecessary blank lines around braces",133]]},{"word":"block","context":[["subsys\t\t=> \"block\",",1013],["substr($block, 0, length($cond), '');",896],["devpath         => \"/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda\",",776],["if ($block =~/\\b(?:if|for|while)\\b/) {",589],["if (statement_block_size($block) > 1) {",589],["#print \"APW: ALLOWED: lines block<$block>\\n\";",557],["#print \"APW: ALLOWED: lines block<$block>\\n\";",557],["#print \"APW: ALLOWED: block<$block>\\n\";",557],["#print \"APW: ALLOWED: block<$block>\\n\";",557],["devpath         => \"/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1\",",385]]},{"word":"body","context":[["</body>",2724],["<body>",1897],["my $body = shift;",805],["# the main body of the table, and what all code points missing from this file",413],["'body' => {",335],["my ( $body ) = @_;",308],["my $body;",287],["my @insns = (&$body,&$body,&$body,&$body);\t# 32 instructions",282],["my @insns = (&$body,&$body,&$body,&$body);\t# 32 instructions",282],["<body lang=\"en\" bgcolor=\"#FFFFFF\" text=\"#000000\" link=\"#0000FF\" vlink=\"#800080\" alink=\"#FF0000\">",282]]},{"word":"borrower","context":[["# get borrower information ....",154],["# \t# the foot (totals by borrower type)",107],["#get borrower details",103],["# Computes full borrower address",82],["borrowernumber => $borrower->{'borrowernumber'},",75],["# setting some borrower info into this hash",71],["my $borrower;",69],["$borrower = GetMemberDetails( $borrowernumber, 0 );",69],["# get borrower details",62],["# show all reserves of this borrower, and the position of the reservation ....",61]]},{"word":"borrowernumber","context":[["my ( $template, $borrowernumber, $cookie ) = get_template_and_user(",802],["borrowernumber => $borrowernumber,",456],["borrowernumber => $borrowernumber,",456],["`borrowernumber` int(11) NOT NULL,",306],["my $borrowernumber = $input->param('borrowernumber');",286],["my $borrowernumber = $input->param('borrowernumber');",286],["my ($template, $borrowernumber, $cookie)",224],["borrowernumber int(11) NOT NULL,",209],["if ($borrowernumber) {",199],["my ( $template, $borrowernumber, $cookie ) = get_template_and_user (",164]]},{"word":"br","context":[["<br>",1431],["$option .= \"\\n<br>\" if ($option);",560],["<br />",522],["br\t$ra",273],["<br><br>",249],["<br><br>",249],["print \"<br>\";",214],["$option .= \"\\n<br>\" if $option;",169],["print \"<br>\\n\";",156],["$g->{CGI}->br(),",155]]},{"word":"branch","context":[["if ($branch eq \"*\") {",198],["$sth_search->execute($branch);",98],["my $branch = $query->param('branch');",82],["my $branch = $query->param('branch');",82],["C4::Context->userenv->{branch};",74],["my $branch = $input->param('branch');",61],["my $branch = $input->param('branch');",61],["&& C4::Context->userenv->{branch};",61],["if ($branch) {",61],["## Get branch info for borrowers home library.",60]]},{"word":"branchcode","context":[["`branchcode` varchar(10) default NULL,",198],["WHERE branchcode = ?\");",194],["WHERE branchcode = ?",175],["branchcode => $branchcode,",121],["branchcode => $branchcode,",121],["constrainttype, branchcode, notificationdate,",108],["$cell{branchcode}        = $subscription->{branchcode};",93],["$cell{branchcode}        = $subscription->{branchcode};",93],["`branchcode` VARCHAR(10) NOT NULL,",78],["KEY `branchcode` (`branchcode`)",78]]},{"word":"branches","context":[["my $branches = GetBranches();",517],["branchname => $branches->{$thisbranch}->{'branchname'},",213],["my $branches = GetBranches;",157],["my $branches = GetBranches($onlymine);",99],["# load the branches",91],["branchname => $branches->{$_}->{branchname},",89],["foreach my $thisbranch (@$branches) {",75],["for my $thisbranch (sort { $branches->{$a}->{branchname} cmp $branches->{$b}->{branchname} } keys %$branches) {",64],["for my $thisbranch (sort { $branches->{$a}->{branchname} cmp $branches->{$b}->{branchname} } keys %$branches) {",64],["for my $thisbranch (sort { $branches->{$a}->{branchname} cmp $branches->{$b}->{branchname} } keys %$branches) {",64]]},{"word":"buffer","context":[["my $buffer;",315],["undef $$segDataPt;  # free the old buffer",98],["read(STDIN, $buffer, $ENV{'CONTENT_LENGTH'});",97],["@pairs = split(/&/, $buffer);",97],["my $buffer = \"\";",71],["$| = 1; # Do not buffer output",71],["print_buffered($buffer);",68],["my $buffer = '';",65],["my $buffer = shift;",63],["and not exists $hotlist{$buffer->{\"pointer\"}}",62]]},{"word":"build","context":[["# This is needed for test log evaluation in \"gen-build-status-page\"",149],["# configuration used to build them.  To make life easier, an environment",147],["# build directory in out-of-source builds.",144],["#\t\tdone in the build",140],["mtr_error(\"Could not get a unique build thread id\");",119],["'build-thread|mtr-build-thread=i' => \\$opt_build_thread,",119],["build-thread=#        Can be set in environment variable MTR_BUILD_THREAD.",119],["a build thread id that is unique to current host",119],["'build-thread|mtr-build-thread=i' => \\$opt_build_thread,",119],["mtr-build-thread=#    Specify unique number to calculate port number(s) from.",119]]},{"word":"but","context":[["# but WITHOUT ANY WARRANTY; without even the implied warranty of",8483],["# Koha is distributed in the hope that it will be useful, but WITHOUT ANY",4849],["but WITHOUT ANY WARRANTY; without even the implied warranty of",3080],["# Koha is distributed in the hope that it will be useful, but",1925],["#    but WITHOUT ANY WARRANTY; without even the implied warranty of",1043],["#  but WITHOUT ANY WARRANTY; without even the implied warranty of",616],["# This program is distributed in the hope that it will be useful, but",581],["#   but WITHOUT ANY WARRANTY; without even the implied warranty of",522],["# This program is distributed in the hope that it will be useful, but WITHOUT",299],["#but WITHOUT ANY WARRANTY; without even the implied warranty of",189]]},{"word":"by","context":[["# This file is for internal use by core Perl only.  The format and even the",5878],["# it under the terms of the GNU General Public License as published by",5449],["# This file is machine-generated by lib/unicore/mktables from the Unicode",5126],["# terms of the GNU General Public License as published by the Free Software",5003],["# This file is for internal use by the Perl program only.  The format and even",4650],["# This file is machine-generated by mktables from the Unicode",4479],["# Unless required by applicable law or agreed to in writing, software",2607],["# This file is built by mktables from e.g. UnicodeData.txt.",2362],["# under the terms of the GNU General Public License as published by",2021],["as published by the Free Software Foundation; either version 2",1860]]},{"word":"byte","context":[[".byte\t9,0,0,0",1225],[".byte\t0x67",573],["| [\\xE1-\\xEC\\xEE\\xEF][\\x80-\\xBF]{2}  # straight 3-byte",304],[".byte\t0,12,0x14,0,0,0,0,0",192],["[\\xC2-\\xDF][\\x80-\\xBF]               # non-overlong 2-byte",176],[".byte\t0x67,0x67",175],["\"single byte memset is suspicious. Swapped 2nd/3rd argument?\\n\" . \"$here\\n$stat\\n\");",173],["return \".byte\\t\".join(',',@opcode);",161],[".byte\t0x66",151],["| [\\xC2-\\xDF][\\x80-\\xBF]             # non-overlong 2-byte",128]]},{"word":"c","context":[["my $c;",996],["substr($s, 0, length($c), '');",890],["$c++;",725],["substr($res, $off, 1, $c);",598],["my ($s, $c) = ($stat, $cond);",593],["my @newlines = ($c =~ /\\n/gs);",588],["my ($a,$b,$c,$d,$e);",563],["'index_prefix' => 'c',",506],["-c N",496],["my $c = shift;",457]]},{"word":"cache","context":[["delete $pdb->{$section}->{$machine}{$lane}{$stage}{cache};",718],["$pdb->{$section}->{$machine}{$lane}{$stage}{cache}{$key};",111],["my %cache;",89],["#             delete $pdb->{$section}->{$machine}{$lane}{$stage}{cache};",85],["if (exists($pdb->{$section}->{$machine}{$lane}{$stage}{cache}{$key}))",82],["$pdb->{$section}->{$machine}{$lane}{$stage}{cache}{$key} =",81],["my $cache = shift;",79],["$pdb->{$section}->{$machine}{$lane}{$stage}{cache}{$nhadd}{$ncadd}{data}{$col} = $prow->{$col};",75],["if ( ! exists($pdb->{$section}->{$machine}{$lane}{$stage}{cache}{$nhadd}{$ncadd}{data}))",75],["$pdb->{$section}->{$machine}{$lane}{$stage}{cache}{$nhadd}{$ncadd}{state} = $state;",75]]},{"word":"call","context":[["call\t*__imp_RtlVirtualUnwind(%rip)",331],["call\t_bsaes_decrypt8",276],["if ($call->{streamflag} ne \"none\") {",232],["system($call);",212],["call\t_bsaes_encrypt8",201],["my $call = $1;",190],["&call\t(&label(\"pic_point\"));",176],["\"$call() should probably be ${call}_t($cast, $arg1, $arg2)\\n\" . \"$here\\n$stat\\n\");",169],["\"$call() should probably be ${call}_t($cast, $arg1, $arg2)\\n\" . \"$here\\n$stat\\n\");",169],["call\tavx2_normalize_n_store",150]]},{"word":"can","context":[["# Koha is free software; you can redistribute it and/or modify it under the",4845],["# This program is free software; you can redistribute it and/or modify",3916],["# the equals (or colon) can be combined with anything to the right.  Thus,",2251],["# A colon can be substituted for the equals sign, and anything to the left of",2251],["This program is free software; you can redistribute it and/or",2016],["# Koha is free software; you can redistribute it and/or modify it",1914],["# This program is free software: you can redistribute it and/or modify",1374],["# This program is free software; you can redistribute it and/or",1251],["# Meran is free software: you can redistribute it and/or modify",754],["This library is free software. You can redistribute it and/or modify",577]]},{"word":"case","context":[["# variants.  Upper/lower case distinctions never matter.",2480],["# Check for switch () and associated case and default",303],["if|for|while|switch|return|case|",298],["if ($ctx =~ /^\\+\\s*(case\\s+|default:)/ &&",297],["if ($line =~ /^.\\s*(?:case\\s*.*|default\\s*):/g &&",296],["# terminating a case value or a label.",296],["} elsif ($cur =~/^(case)/o) {",296],["# case and default should not have general statements after them",294],["case|",294],["--mailback                 only produce a report in case of warnings/errors",280]]},{"word":"category","context":[["'category' => 'basic operations',",1090],["'category',",458],["'category' => {},",441],["'category' => 'Rijndael+HMAC',",365],["'category' => 'Rijndael',",257],["category => 'installation',",246],["category => 'x11',",240],["category => 'console',",232],["'category'  => 'operations',",167],["category    => \"Resource Management\"",158]]},{"word":"cf","context":[["'key_file' => $cf{'rc_hmac_b64_key'},",196],["neg\t$carry\t\t\t# mov $carry,cf",192],["cf(1,eq(attr(var(0),'VFORM'),'fin')),",176],["sbb\t$carry,$carry\t\t# mov cf,$carry",168],["adcx\t$zero,%r14\t\t# cf=0",130],["cf(1,eq(attr(var(0),'STMT-TYPE'),'decl')),",103],["xor\t$zero,$zero\t\t# cf=0, of=0",94],["'fwknopd_cmdline' => \"$fwknopdCmd -c $cf{'disable_aging'} -a $cf{'hmac_access'} \" .",92],["'fwknopd_cmdline' => \"$fwknopdCmd -c $cf{'disable_aging'} -a $cf{'hmac_access'} \" .",92],["cf(1,eq(attr(var(0),'VTYPE'),'main')),",90]]},{"word":"cgi","context":[["my $cgi = new CGI;",740],["output_html_with_http_headers $cgi, $cookie, $template->output;",590],["query           => $cgi,",502],["# bug 399035, http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=399035),",149],["# bug 399035, http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=399035),",149],["use lib '/tmapp/tmsrc/cgi-bin/';",139],["print $query->redirect(\"/cgi-bin/koha/errors/404.pl\");",119],["print $query->redirect(\"/cgi-bin/koha/serials/subscription-detail.pl?subscriptionid=$subscriptionid\");",112],["query => $cgi,",110],["my $cgi = CGI->new;",106]]},{"word":"change","context":[["# name or existence of this file are subject to change without notice.  Don't",6892],["# the name or existence of this file are subject to change without notice.",3636],["# so don't change LD_LIBRARY_PATH on that platform.",149],["# Init variables that can change between each test case",149],["if ($in_commit_log && $line =~ /^\\s*change-id:/i) {",71],["print STDERR \"y to accept these or type the letter for one to change!\\n\";",69],["# change 'tests => 1' to 'tests => last_test_to_print';",66],["# but its format and even its name or existence are subject to change without",63],["# feel free to change them in the below if statements.",61],["# If it was a CSV export we change the format after the export so the file extension is fine",60]]},{"word":"changes","context":[["# Any changes made here will be lost!",2921],["# database, Version 6.1.0.  Any changes made here will be lost!",2613],["# database, Version 6.0.0.  Any changes made here will be lost!",1994],["# database, Version 6.2.0.  Any changes made here will be lost!",1762],["# database, Version 5.2.0.  Any changes made here will be lost!",1670],["# database, Version 6.3.0.  Any changes made here will be lost!",1161],["# database, Version 7.0.0.  Any changes made here will be lost!",405],["Do _NOT_ submit these changes without inspecting them for correctness.",103],["# no changes",76],["# biblioitems changes",65]]},{"word":"char","context":[["# (char*[ const])",292],["# check for static char foo[] = \"bar\" declarations.",225],["if ($line =~ /\\bstatic\\s+char\\s+(\\w+)\\s*\\[\\s*\\]\\s*=\\s*\"/) {",225],["qr{(?:unsigned\\s+)?char},",224],["# check for static const char * arrays.",215],["if ($line =~ /\\bstatic\\s+const\\s+char\\s*\\*\\s*(\\w+)\\s*\\[\\s*\\]\\s*=\\s*/) {",215],["\"static char array declaration should probably be static const char\\n\" .",193],["\"static const char * array should probably be static const char * const\\n\" .",193],["\"static const char * array should probably be static const char * const\\n\" .",193],["\"static char array declaration should probably be static const char\\n\" .",193]]},{"word":"check","context":[["$check = 0;",979],["my $check = 0;",674],["$check = 1;",472],["# Get and check command line options",454],["# Return immediately if no check proceess was started",357],["# also makes it possible to wait for any process to exit during the check",357],["# Kill any check processes still running",357],["# check spacing on square brackets",303],["# check for malformed paths in #include statements (uses RAW line)",303],["# check we are in a valid source file if not then ignore this hunk",303]]},{"word":"chomp","context":[["chomp;",19197],["chomp $line;",5330],["chomp($line);",4703],["chomp($_);",1277],["chomp $_;",1006],["chomp();",647],["chomp($current_comment);",303],["while (<$fh>) { chomp;",287],["chomp $l;",273],["chomp $verein[$y];",260]]},{"word":"chr","context":[["'chr sbag_member'(B, A),",169],["'chr sbag_member'(E, D),",94],["my $chr;",91],["print chr($t[$mptr]);",90],["'chr sbag_member'(D, C),",86],["chr(hex '00').",79],["(   'chr newvia_1'(A, B)",74],["foreach my $chr(sort keys %chr_len){",70],["my $chr = $a[0];",69],["#chr     pos     strand  type    num_C   depth   percentage      isMeth",69]]},{"word":"class","context":[["my $class = shift;",1383],["<th class=listtop>$form->{title}</th>",547],["<div class=\"header\">",492],["<tr class=listheading>",470],["bless $self, $class;",316],["# storage class and type.",302],["# Check that the storage class is at the beginning of a declaration",266],["<table class=\"menu\" border=\"0\" cellspacing=\"0\">",224],["\"inline keyword should sit between storage class and type\\n\" . $herecurr);",193],["\"storage class should be at the beginning of the declaration\\n\" . $herecurr)",192]]},{"word":"classes","context":[["@classes = sort @classes;",58],["@classes = sort @classes;",58],["my @classes;",49],["$classes = parse_code_tree(\\$src);",49],["my @classes = uniq( map {$_->{class}} @$attributes );",44],["for my $class (@classes) {",36],["foreach my $class (@classes) {",36],["my %classes;",36],["get(@classes, member, ClassName, Class),",27],["send(@classes, for_all,",25]]},{"word":"clean","context":[["our $clean = 0;",892],["my $clean = 'X' x length($1);",598],["return $clean;",312],["our $clean = 1;",302],["#\t\t\t$clean = 0;",300],["if ($summary && !($clean == 1 && $quiet == 1)) {",299],["if ($mailback && ($clean == 1 || !$is_patch)) {",299],["$res =~ s@\\<.*\\>@<$clean>@;",299],["$res =~ s@(\\#\\s*(?:error|warning)\\s+).*@$1$clean@;",297],["if ($clean == 1 && $quiet == 0) {",257]]},{"word":"client","context":[["'subcategory' => 'client+server',",545],["$client->set_die_on_faults(1);",454],["my $client = shift;",360],["'subcategory' => 'client',",320],["'subcategory' => 'client save rc file',",317],["client => {",273],["# write init file for mysqld or client",272],["'client-gdb'               => \\$opt_client_gdb,",149],["# Look for the client binaries directory",149],["'client-debugger=s'        => \\$opt_client_debugger,",149]]},{"word":"close","context":[["close IN;",4549],["close(FILE);",3848],["close FILE;",3666],["close OUT;",3600],["close $fh;",3555],["close(IN);",3237],["close(OUT);",2880],["close(F);",2562],["close($fh);",2246],["close F;",1856]]},{"word":"cluster","context":[["my $cluster= shift;",371],["mtr_add_arg($args, \"--defaults-group-suffix=%s\", $cluster->suffix());",356],["foreach my $ndbd ( in_cluster($cluster, ndbds()) )",337],["foreach my $cluster ( clusters() )",296],["foreach my $ndb_mgmd ( in_cluster($cluster, ndb_mgmds()) )",254],["# if script decided to run mysqltest cluster _is_ installed ok",214],["my ($cluster)= @_;",177],["my $cluster_dir= \"$opt_vardir/\".$cluster->{name};",166],["if (ndbcluster_wait_started($cluster, \"\"))",135],["foreach my $cluster (@{$clusters})",130]]},{"word":"cmd","context":[["system($cmd);",1475],["$ret=`$cmd`;",941],["my $cmd;",918],["my ($cmd) = @_;",846],["usage($cmd);",698],["&process_cmd($cmd);",657],["print \"$cmd\\n\";",649],["`$cmd`;",554],["my $cmd = shift;",507],["$cmd->finish();",339]]},{"word":"cmdname","context":[["'cmdname' => 'node',",3964],["'cmdname' => 'end',",2507],["'cmdname' => 'item',",991],["'cmdname' => 'chapter',",853],["'cmdname' => 'top',",836],["'cmdname' => 'code',",767],["'cmdname' => 'menu',",737],["'cmdname' => '@',",664],["'cmdname' => 'cindex',",511],["'cmdname' => 'section',",372]]},{"word":"cmp","context":[["cmp\t%r10,%rbx\t\t# context->Rip>=epilogue label",306],["cmp\t%r10,%rbx\t\t# context->Rip<prologue label",226],["@{$pu03} = sort { $a->{file_name} cmp $b->{file_name} } @{$pu03};",188],["@{$pmpr} = sort { $a->{file_name} cmp $b->{file_name} } @{$pmpr};",188],["@{$pu01} = sort { $a->{file_name} cmp $b->{file_name} } @{$pu01};",188],["foreach my $name (sort {uc($a) cmp uc($b)} keys %package) {",170],["cmp\t$num,$j",162],["&cmp\t($key,$__end);",124],["cmp\t%r10,%rbx\t\t# context->Rip>=.Lepilogue",123],["cmp\t%r11,%r10",113]]},{"word":"cnt","context":[["$cnt++;",1183],["my $cnt = $realcnt;",924],["for (my $n = 0; $n < $cnt; $n++) {",872],["$cnt--;",731],["my $cnt = 0;",706],["my $cnt = statement_rawlines($ctx);",446],["($dstat, $dcond, $ln, $cnt, $off) =",431],["$cnt-- if ($lines[$ln - 1] !~ /^-/);",344],["while ($cnt) {",295],["my ($linenr, $cnt) = @_;",294]]},{"word":"code","context":[["$code.=<<___;",17202],["# starting code point of the range, in hex; STOP is the ending point, or if",2478],["# omitted, the range has just one code point.  Numbers in comments in",2478],["# [brackets] indicate how many code points are in the range.",2478],["$code.=<<___ if ($win64);",1569],["'cmdname' => 'code',",767],["print $code;",761],["1. Redistributions of source code must retain the above copyright",657],["$code=<<___;",558],["# the main body of the table, and what all code points missing from this file",413]]},{"word":"col","context":[["foreach my $col (@nozzle_count_cols)",1375],["foreach my $col (@feeder_count_cols)",1315],["foreach my $col (@{$pcols})",923],["#                 foreach my $col (@nozzle_count_cols)",306],["$pdb->{$section}->{$machine}{$lane}{$stage}{delta}{$nhadd}{$ncadd}{data}{$col} = $prow->{$col};",225],["$pdb->{$section}->{$machine}{$lane}{$stage}{delta}{$nhadd}{$ncadd}{data}{$col} = $prow->{$col};",225],["#                 foreach my $col (@feeder_count_cols)",221],["$pdb->{$section}->{$machine}{$lane}{$stage}{delta}{$fadd}{$fsadd}{data}{$col} = $prow->{$col};",219],["$pdb->{$section}->{$machine}{$lane}{$stage}{delta}{$fadd}{$fsadd}{data}{$col} = $prow->{$col};",219],["foreach my $col ( @loopcol ) {",197]]},{"word":"color","context":[["print color 'reset';",368],["my $color;",126],["color\t\t=> 'colored',",118],["weechat::color($color).",112],["weechat::color($color).",112],["\"git log --no-color \" .",88],["color           => \"#FF0000\",",85],["color           => \"#0000FF\",",83],["color: black;",75],["my $output = `git log --no-color --format='%H %s' -1 $commit 2>&1`;",71]]},{"word":"column","context":[["Select the identifier from column num",612],["my $column;",542],["while (my @tuples = Bio::KBase::Utilities::ScriptThing::GetBatch($ih, undef, $column)) {",453],["line would contain the id. If some other column contains the id,",386],["where N is the column (from 1) that contains the id.",386],["#   fill-column: 100",376],["my $geO = Bio::KBase::CDMI::CDMIClient->new_get_entity_for_script(\"c=i\"\t\t=> \\$column,",306],["would read in a file of ids and add a column for each field in the relationship.",306],[")->grid(-row=>$$row,-column=>0,-sticky=>'ewns');",226],["#80 column limit",157]]},{"word":"com","context":[["# and COPYING for more information, or see http://slashcode.com/.",374],["# (c) 2005, Joel Schopp <jschopp@austin.ibm.com> (the ugly bit)",302],["# (c) 2007,2008, Andy Whitcroft <apw@uk.ibm.com> (new conditions, test suite)",291],["# Website: https://github.com/trizen",254],["# (c) 2008-2010 Andy Whitcroft <apw@canonical.com>",250],["# Copyright (C) 2001-2014 OTRS AG, http://otrs.com/",231],["# Author: H. Carvey, keydet89@yahoo.com",219],["#   \"joe smith joe@smith.com\" bad",194],["#   \"joe smith <joe@smith.com\" bad",194],["# http://www.zimbra.com/license.",189]]},{"word":"command","context":[["'command' => {}",9856],["'command' => {},",3596],["This is a pipe command. The input is taken from the standard input, and the",493],["# Get and check command line options",454],["system($command);",423],["my $command = shift;",313],["-command => sub {",305],["my $command;",269],["$command = '",222],["print \"$command\\n\";",187]]},{"word":"comment","context":[["$tinfo->{comment}=",905],["$tinfo->{comment}.=",598],["&comment(\"\");",440],["$comment = $2 if defined $2;",388],["# comment.",304],["# // is a comment",303],["# ' *' then it is very likely a comment.",303],["# Guestimate if this is a continuing comment.  If this",303],["# Catch a comment on the end of the line itself.",303],["# edge is a close comment then we must be in a comment",300]]},{"word":"comments","context":[["# omitted, the range has just one code point.  Numbers in comments in",2478],["Please email comments or questions to the public Ensembl",593],["$s =~ s/$;//g; \t# Remove any comments",582],["# Remove C99 comments.",301],["# no C99 // comments",301],["#\t\t\t\t# Ignore comments",296],["#  1) within comments",224],["# ignore comments",138],["\"networking block comments don't use an empty /* line, use /* Comment...\\n\" . $hereprev);",131],["# remove comments (# foo) at the beginning of the line, or after a",119]]},{"word":"compat","context":[["# definition not found. This means that we need compat",113],["# definition found. No need for compat",113],["foreach my $compat (@compats) {",89],["\"DT compatible string \\\"$compat\\\" appears un-documented -- check $dt_path\\n\" . $herecurr);",89],["my $compat2 = $compat;",89],["next if $compat !~ /^([a-zA-Z0-9\\-]+)\\,/;",81],["`grep -Erq \"$compat|$compat2|$compat3\" $dt_path`;",80],["my $compat3 = $compat;",80],["%\t@compat sicstus",54],["% @compat RFC 3987",39]]},{"word":"cond","context":[["substr($block, 0, length($cond), '');",896],["if (defined $cond) {",889],["($stat, $cond, $line_nr_next, $remain_next, $off_next) =",640],["my ($s, $c) = ($stat, $cond);",593],["if (statement_lines($cond) > 1) {",589],["#print \"APW: ALLOWED: cond<$cond>\\n\";",557],["#print \"APW: ALLOWED: cond<$cond>\\n\";",557],["my ($cond, $block) = @{$chunks[1]};",299],["my ($cond, $block) = @{$chunks[0]};",299],["#print \"COND<$cond> whitespace<$whitespace> offset<$offset>\\n\";",298]]},{"word":"condition","context":[["($statement, $condition, $linenr, $remain, $off, $level) =",598],["push(@chunks, [ $condition, $statement ]);",598],["condition(true, [",438],["my $condition = substr($blk, $soff, $coff - $soff + 1);",300],["#warn \"CONDITION<$condition>\\n\";",300],["if (!($remain > 0 && $condition =~ /^\\s*(?:\\n[+-])?\\s*(?:if|else|do)\\b/s)) {",299],["return ($statement, $condition,",299],["#print \"C: c<$condition> s<$statement> remain<$remain>\\n\";",299],["# Check the condition.",299],["#print \"F: c<$condition> s<$statement> remain<$remain>\\n\";",299]]},{"word":"conditions","context":[["notice, this list of conditions and the following disclaimer.",703],["modification, are permitted provided that the following conditions",653],["notice, this list of conditions and the following disclaimer in",644],["# modification, are permitted provided that the following conditions",452],["# modification, are permitted provided that the following conditions are met:",368],["# furnished to do so, subject to the following conditions:",325],["# (c) 2007,2008, Andy Whitcroft <apw@uk.ibm.com> (new conditions, test suite)",291],["#    notice, this list of conditions and the following disclaimer.",270],["#    notice, this list of conditions and the following disclaimer in the",238],["#     notice, this list of conditions and the following disclaimer.",177]]},{"word":"conf","context":[["my ($conf) = @_;",255],["if (-f $conf) {",241],["if (-e \"$path/$conf\") {",237],["open(my $conffile, '<', \"$conf\")",237],["return \"$path/$conf\";",237],["my $configuration_file = \".checkpatch.conf\";",193],["my $conf = which_conf($configuration_file);",193],["local $conf = &get_config();",192],["my %conf;",145],["$conf =~ tr/\\.-/__/;",130]]},{"word":"config","context":[["sub getHive {return $config{hive};}",684],["sub getVersion {return $config{version};}",684],["sub getConfig{return %config}",646],["my $config = shift;",584],["my ($config) = @_;",418],["use Getopt::Long qw(:config no_auto_abbrev);",391],["use Getopt::Long qw(:config no_ignore_case);",332],["my $config;",311],["my $config = new Vyatta::Config;",310],["my %config = (hive          => \"NTUSER\\.DAT\",",285]]},{"word":"const","context":[["(?:\\s+$Modifier|\\s+const)*",468],["(?:$Modifier\\s+|const\\s+)*",468],["const|",300],["if ($arg =~ /^(?:const\\s+)?($Ident)(?:\\s+$Sparse)*\\s*\\**\\s*(:?\\b$Ident)?$/s || $arg =~ /^($Ident)$/s) {",297],["# A unary '*' may be const",297],["} elsif ($s =~ /^.(?:$Storage\\s+)?(?:$Inline\\s+)?(?:const\\s+)?($Ident)\\b\\s*(?!:)/s) {",294],["# (char*[ const])",292],["if ($line =~ /\\bstatic\\s+const\\s+char\\s*\\*\\s*(\\w+)\\s*\\[\\s*\\]\\s*=\\s*/) {",215],["# check for static const char * arrays.",215],["# check for various ops structs, ensure they are const.",207]]},{"word":"constant","context":[["use constant {",584],["use constant FALSE => 0;",191],["use constant TRUE => 1;",155],["use constant MINVERBOSE => 1;",126],["use constant MIDVERBOSE => 2;",126],["use constant NOVERBOSE => 0;",126],["use constant MAXVERBOSE => 3;",126],["# things that are constant during the whole lifetime of mysql-test-run",116],["use constant INDEX => '[Index]';",115],["use constant INFORMATION => '[Information]';",115]]},{"word":"content","context":[["'content' => [",1308],["<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">",321],["$content = <<EOF;",307],["<meta name=\"distribution\" content=\"global\">",290],["<meta name=\"resource-type\" content=\"document\">",290],["my $content;",285],["return $content;",266],["content => {",226],["&loop_unroll_c($content, 'len', 4);",194],["(module, code, name, title, content)",175]]},{"word":"contents","context":[["'contents' => [",28228],["'contents' => [],",7455],["# Use Unicode::UCD::prop_invlist() to access the contents of this file.",826],["my $contents = \"\";",281],["$contents .= $line",255],["% The contents of this file are subject to the Cisco-style Mozilla Public",245],["# The contents of this file are subject to the Zimbra Public License",189],["# Alternatively, the contents of this file may be used under the terms of",120],["# The contents of this file are subject to the Mozilla Public License Version",119],["my $contents = shift;",102]]},{"word":"context","context":[["mov\t248($context),%rbx\t# pull context->Rip",501],["mov\t248($context),%rbx\t# pull context->Rip",501],["mov\t152($context),%rax\t# pull context->Rsp",496],["mov\t152($context),%rax\t# pull context->Rsp",496],["mov\t120($context),%rax\t# pull context->Rax",492],["mov\t120($context),%rax\t# pull context->Rax",492],["mov\t%rbx,144($context)\t# restore context->Rbx",380],["mov\t%rbx,144($context)\t# restore context->Rbx",380],["mov\t%rsi,168($context)\t# restore context->Rsi",378],["mov\t%rdi,176($context)\t# restore context->Rdi",378]]},{"word":"cookie","context":[["output_html_with_http_headers $input, $cookie, $template->output;",3631],["output_html_with_http_headers $query, $cookie, $template->output;",1984],["my ( $template, $loggedinuser, $cookie ) = get_template_and_user(",1858],["my ($template, $loggedinuser, $cookie)",1222],["my ( $template, $borrowernumber, $cookie ) = get_template_and_user(",802],["output_html_with_http_headers $cgi, $cookie, $template->output;",590],["( $template, $loggedinuser, $cookie ) = get_template_and_user(",325],["my ($template, $borrowernumber, $cookie)",224],["my ($template, $loggedinuser, $cookie) = get_template_and_user({",189],["($template, $loggedinuser, $cookie)",176]]},{"word":"copy","context":[["# You should have received a copy of the GNU General Public License",8214],["# You should have received a copy of the GNU General Public License along",4990],["# You may obtain a copy of the License at",2558],["# You should have received a copy of the GNU General Public License along with",1572],["You should have received a copy of the GNU Lesser General Public",1221],["# You should have received a copy of the GNU Affero General Public License",1163],["You should have received a copy of the GNU General Public License",1073],["#    You should have received a copy of the GNU General Public License",962],["You should have received a copy of the GNU General Public",560],["#  You should have received a copy of the GNU General Public License",541]]},{"word":"copyright","context":[["1. Redistributions of source code must retain the above copyright",657],["2. Redistributions in binary form must reproduce the above copyright",656],["# 1. Redistributions of source code must retain the above copyright",310],["# copyright notice and this permission notice appear in all copies.",308],["# 2. Redistributions in binary form must reproduce the above copyright",270],["# The above copyright notice and this permission notice shall be included in",213],["# return:      file header -- copyright",190],["# maintainers, and copyright holders, see the CONTRIBUTORS file.",164],["#  are also available at http://www.perfdynamics.com/Tools/copyright.html.    #",161],["# * Redistributions in binary form must reproduce the above copyright notice,",142]]},{"word":"core","context":[["# This file is for internal use by core Perl only.  The format and even the",5878],["$realfile !~ m@^drivers/base/core@) {",248],["\"use of in_atomic() is incorrect outside core kernel code\\n\" . $herecurr);",184],["\"Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)\\n\"  . $herecurr);",153],["'max-save-core=i'          => \\$opt_max_save_core,",149],["max-save-core         Limit the number of core files saved (to avoid filling",149],["# Allow --skip-core-file to be set in <testname>-[master|slave].opt file",149],["my $num_saved_cores= 0;  # Number of core files saved in vardir/log/ so far.",149],["max-save-core         Limit the number of core files saved (to avoid filling",149],["if ($arg eq \"--skip-core-file\")",149]]},{"word":"count","context":[["$count++;",5479],["my $count = 0;",3335],["$count = 0;",1372],["my $count=0;",697],["my $count;",660],["$count=0;",457],["return $count;",372],["my $count = 1;",372],["for (my $i = 0; $i < $count; $i++) {",370],["# increment relationship count or create relationship entry",349]]},{"word":"counter","context":[["$counter++;",1372],["my $counter = 0;",810],["$counter = 0;",351],["for ($counter=0; $counter < $arrayLength; $counter++)",297],["for ($counter=0; $counter < $arrayLength; $counter++)",297],["for ($counter=0; $counter < $arrayLength; $counter++)",297],["$metricObject = $service->{metricArray}->[$counter];",207],["sprintf(\"(%s)...\\n\\n\", (not $fullstats)?\"top $counter\":\"full\");",174],["last if((not $fullstats) && (not $counter--));",174],["my $counter;",162]]},{"word":"create","context":[["# create common objects",611],["# increment relationship count or create relationship entry",349],["# create history entry",346],["# called by default. Used to create form to add or  modify a record",256],["#add create new service",182],["vs-config             Visual Studio configuration used to create executables",147],["mtr_verbose(\"No need to create '$opt_vardir' it already exists\");",146],["or die \"failed to create pipe: $!\";",128],["mtr_error(\"Could not create testcase server port: $!\") unless $server;",119],["POE::Session->create(",115]]},{"word":"csv","context":[["my $csv = Text::CSV->new();",217],["while (my $row = $csv->getline($mapfile)){",166],["my $csv = Text::CSV_XS->new();",157],["# Printing to a csv file",115],["-attachment=>\"$basename.csv\",",109],["-filename=>\"$basename.csv\" );",88],["'/opt/zimbra/zmstat/proc.csv',",84],["-type       => 'text/csv',",82],["my $outnm = $prod_dir . '/' . $csv_file . \".csv\";",70],["$zip->addFile(csv_dump($dbh, $_), sprintf('%s.csv', $_->{name})) for",70]]},{"word":"ctx","context":[["my $ctx = '';",565],["\"$here\\n$ctx\\n$rawlines[$ctx_ln - 1]\\n\");",498],["my $cnt = statement_rawlines($ctx);",446],["$ctx =~ s/\\n*$//;",386],["if ($ctx =~ /Wx./) {",357],["my $ctx = join(\"\\n\", @ctx);",308],["my $ctx = join(\"\\n\", @ctx);",308],["$ctx = $dstat;",307],["my $ctx = \"${a}x${c}\";",303],["my $at = \"(ctx:$ctx)\";",303]]},{"word":"cur","context":[["} elsif ($cur =~ /^($Operators)/o) {",300],["} elsif ($cur =~ /^(\\()/o) {",300],["} elsif ($cur =~ /^(sizeof)\\s*(\\()?/o) {",300],["$cur = substr($cur, length($1));",300],["$cur = substr($cur, length($1));",300],["} elsif ($cur =~ /^($Assignment)/o) {",300],["} elsif ($cur =~ /^($Ident|$Constant)/o) {",300],["if ($cur =~ /^(\\s+)/o) {",300],["} elsif ($cur =~ /(^.)/o) {",300],["my $cur = $stream;",300]]},{"word":"current","context":[["# to try and find and validate the current printk.  In summary the current",285],["# same line do not need a level, so we use the current block context",285],["# to try and find and validate the current printk.  In summary the current",285],["my $current;",193],["# settings, we reset the current values of LC_ALL and LC_CTYPE to \"C\".",149],["# with output which is incompatible with the current locale",149],["# as the current test requires",149],["$current = $key->get_value(\"Current\")->get_data();",129],["a build thread id that is unique to current host",119],["# and convert the current delimiter to semicolon",119]]},{"word":"cut","context":[["=cut",33416],["# Yes, we must cut off the final newline from the final line",129],["# =cut",129],["#\t\t    echo \"commit $(cut -c 1-12,41-)\"",69],["my $wgetexe       = \"/usr/bin/wget -nH --cut-dirs=3\";",66],["#=cut",63],["# cut -f2- -d\":\"",62],["# what parts to cut off from the protocol",57],["#pod =cut",42],["# cut off everything but the digits",40]]},{"word":"d","context":[["my ($a,$b,$c,$d,$e);",563],["#     printf $log_fh \"%d: File %s already exists\\n\", __LINE__, $outfnm if ( -e $outfnm);",510],["\"-d $default_digest_file -p $default_pid_file $intf_str\",",413],["my ($i,$a,$b,$c,$d,$e)=@_;",306],["if ($rawline=~/^\\@\\@ -\\d+(?:,\\d+)? \\+(\\d+)(,(\\d+))? \\@\\@/) {",299],["if ($rawline=~/^\\@\\@ -\\d+(?:,\\d+)? \\+(\\d+)(,(\\d+))? \\@\\@/) {",299],["if ($rawline=~/^\\@\\@ -\\d+(?:,\\d+)? \\+(\\d+)(,(\\d+))? \\@\\@/) {",299],["if ($rawline=~/^\\@\\@ -\\d+(?:,\\d+)? \\+(\\d+)(,(\\d+))? \\@\\@/) {",299],["if ( ! -d $opt_vardir )",298],["} elsif ($cur =~ /^($Ident\\s*):(?:\\s*\\d+\\s*(,|=|;))?/) {",292]]},{"word":"dat","context":[["aesmc\t$dat,$dat",249],["aesmc\t$dat,$dat",249],["my ($dat,$fld,$val) = @_;",148],["push( @results, $dat );",120],["$dat->{ITEM_RESULTS}   = \\@items;",110],["$dat->{MARCSUBJCTS}    = $marcsubjctsarray;",110],["$dat->{MARCAUTHORS}    = $marcauthorsarray;",110],["my ($val,$dat) = @_;",103],["movl\t($dat,$XX[0],4),$TX[0]#d",102],["$dat->{MARCNOTES}      = $marcnotesarray;",100]]},{"word":"data","context":[["# use it directly.  Use Unicode::UCD to access the Unicode character data",1538],["my $data;",1150],["my %data;",859],["my $data = shift;",795],["return $data;",545],["my @data;",529],["foreach my $prow (@{$pu01->{$section}->{data}})",522],["foreach my $key (keys %{$pu01->{$section}->{data}})",450],["my $data = {",282],["# called by default form, used to confirm deletion of data in DB",262]]},{"word":"data_byte","context":[["&data_byte(0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea);",143],["&data_byte(0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84);",143],["&data_byte(0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87);",143],["&data_byte(0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02);",143],["&data_byte(0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb);",143],["&data_byte(0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85);",143],["&data_byte(0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4);",143],["&data_byte(0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61);",143],["&data_byte(0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38);",143],["&data_byte(0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b);",143]]},{"word":"database","context":[["# database, Version 6.1.0.  Any changes made here will be lost!",2613],["# database, Version 6.0.0.  Any changes made here will be lost!",1994],["# database, Version 6.2.0.  Any changes made here will be lost!",1762],["# database, Version 5.2.0.  Any changes made here will be lost!",1670],["# database, Version 6.3.0.  Any changes made here will be lost!",1161],["# Web-Server, MySQL database and Sphinx 2 indexing.",754],["# database, Version 7.0.0.  Any changes made here will be lost!",405],["mtr_add_arg($args, \"--database=test\");",172],["database:",169],["\"Could not install system database from $bootstrap_sql_file\\n\" .",145]]},{"word":"date","context":[["$date          = $parts[0];",376],["my $date = '';",204],["my $date;",202],["$date = `date`;",188],["'date'          => $date,",188],["$date = `date`;",188],["'date'          => $date,",188],["chomp($date);",186],["runCommandNE(\"date\");",176],["# get today date & replace YYYY, MM, DD if provided in the default value",107]]},{"word":"db","context":[["my %db = ();",262],["$db->updated;",224],["my $db;",197],["for $db (@{$info->{db}}) {",197],["for $db (@{$info->{db}}) {",197],["our $db = Lacuna->db;",180],["our $db = Lacuna->db;",180],["my $db = MediaWords::DB::connect_to_db;",162],["my $db = shift;",140],["$result = $db->query($sqlstring) || SQLError($db->errmsg(),$sqlstring);",136]]},{"word":"dbg_values","context":[["print \"PAREN('$1')\\n\" if ($dbg_values > 1);",598],["print \"DECLARE($1)\\n\" if ($dbg_values > 1);",299],["print \"$stream\\n\" if ($dbg_values > 1);",299],["if ($dbg_values) {",299],["print \"END($1)\\n\" if ($dbg_values > 1);",299],["print \"PRE_START($1)\\n\" if ($dbg_values > 1);",299],["print \"PRE_RESTART($1)\\n\" if ($dbg_values > 1);",299],["print \"PRECONT($1)\\n\" if ($dbg_values > 1);",299],["print \"CLOSE($1)\\n\" if ($dbg_values > 1);",299],["print \"ASSIGN($1)\\n\" if ($dbg_values > 1);",299]]},{"word":"dbh","context":[["$dbh->do(q{",3766],["my $dbh = C4::Context->dbh;",3666],["my $dbh = C4::Context->dbh;",3666],["$dbh->do(\"",2482],["$dbh->do(",2210],["$dbh->do(q|",1522],["$dbh->disconnect();",1352],["$dbh->do(qq{",1299],["$dbh->disconnect;",1235],["$sth = $dbh->prepare($query);",932]]},{"word":"debug","context":[["debug           => 1,",3040],["debug => 1,",2030],["if ($debug) {",1631],["my $debug = 0;",1545],["debug(",830],["if($debug){",760],["if(!$debug){",592],[":- use_module(library(debug)).",449],["if ($debug)",401],["my $debug=0;",385]]},{"word":"debugger","context":[["$$exe= $debugger;",296],["'debugger=s'               => \\$opt_debugger,",149],["# Modify the exe and args so that program is run in the selected debugger",149],["'client-debugger=s'        => \\$opt_client_debugger,",149],["my $debugger= $opt_debugger || $opt_client_debugger;",149],["# Indicate that we are using debugger",149],["if ( $debugger =~ /vcexpress|vc|devenv/ )",149],["mtr_error(\"Unknown argument \\\"$debugger\\\" passed to --debugger\");",147],["elsif ( $debugger =~ /windbg/ )",147],["mtr_error(\"Can't use --extern when using debugger\");",147]]},{"word":"default","context":[["default => '',",569],["# By default examples are set to die on any server returned fault.",446],["'save_rc_stanza' => [{'name' => 'default',",313],["# Check for switch () and associated case and default",303],["if ($ctx =~ /^\\+\\s*(case\\s+|default:)/ &&",297],["if ($line =~ /^.\\s*(?:case\\s*.*|default\\s*):/g &&",296],["# case and default should not have general statements after them",294],["!($line=~/^. [A-Za-z\\d_]+:/) and !($line=~/^.\\s+default:/)) {",281],["'values', 'possible', 'type', and 'attr' (default",281],["default {",280]]},{"word":"defaults","context":[["mtr_add_arg($args, \"--defaults-file=%s\", $path_config_file);",1484],["mtr_add_arg($args, \"--no-defaults\");",799],["mtr_add_arg($args, \"--defaults-group-suffix=%s\", $mysqld->after('mysqld'));",590],["mtr_add_arg($args, \"--defaults-group-suffix=%s\", $cluster->suffix());",356],["(defaults to false)",264],["mtr_add_arg($args, \"--defaults-group-suffix=%s\", $group_suffix);",248],["# Set defaults",171],["# --no-defaults and --skip-grant-tables are to avoid loading",146],["(defaults to false. this is a no-op on Win32)",128],["(defaults to '[SCRIPT_DIR]/..')",128]]},{"word":"define","context":[["#no spaces allowed after \\ in define",303],["# cpp #define statements have non-optional spaces, ie",298],["} elsif ($cur =~ /^(\\#\\s*define\\s*$Ident)(\\(?)/o) {",297],["if (($prevline =~ /^.\\s*#\\s*define\\s/ ||",296],["} elsif ($ctx_before =~ /^.\\s*\\#\\s*define\\s*$/) {",296],["$line =~ /^.\\s*\\#\\s*define\\s*$Ident(\\()?/) {",290],["# ignore definitions of NR_CPUS and usage to define arrays as likely right",280],["$line !~ /^.\\s*\\s*#\\s*define\\b.*\\bNR_CPUS\\b/ &&",278],["!($line=~/\\#\\s*define.*do\\s{/) and !($line=~/}/)) {",232],["if ($line=~/\\#\\s*define.*\\\\\\s$/) {",198]]},{"word":"defined","context":[["if (defined $2) {",1003],["if (defined $cond) {",889],["defined $stat &&",874],["if (defined $1) {",608],["if (defined($stat_real) && $cond_lines > 1) {",588],["if (defined $realline_next &&",542],["if (defined $fix_elements[$n + 2]) {",508],["$comment = $2 if defined $2;",388],["if (!defined $stat);",346],["return $current_comment if (defined $current_comment);",303]]},{"word":"delete","context":[["delete $pdb->{$section}->{$machine}{$lane}{$stage}{cache};",718],["delete $pdb->{$section}->{$machine}{$lane}{$stage}{delta};",376],["if ( delete $started{$proc->pid()} ) {",357],["delete($result->{result});",238],["delete $consumption->{$process};",190],["delete $production->{$process};",190],["sub delete {",153],["delete $min_configs{$config};",150],["# Don't delete anything if starting dirty",143],["delete $form->{id};",125]]},{"word":"delta","context":[["$pdb->{$section}->{$machine}{$lane}{$stage}{delta}{$key};",1142],["delete $pdb->{$section}->{$machine}{$lane}{$stage}{delta};",376],["$pdb->{$section}->{$machine}{$lane}{$stage}{delta}{$key} = $delta;",304],["$pdb->{$section}->{$machine}{$lane}{$stage}{delta}{$key} = $delta;",304],["if ($delta >= 0)",289],["#                 $pdb->{$section}->{$machine}{$lane}{$stage}{delta}{$key};",272],["$pdb->{$section}->{$machine}{$lane}{$stage}{delta}{$nhadd}{$ncadd}{data}{$col} = $prow->{$col};",225],["$pdb->{$section}->{$machine}{$lane}{$stage}{delta}{$fadd}{$fsadd}{data}{$col} = $prow->{$col};",219],["my $delta = $u01_value - $cache_value;",173],["$pdb->{$section}->{$machine}{$lane}{$stage}{delta}{$nhadd}{$ncadd}{data}{$col} = $delta;",150]]},{"word":"desc","context":[["my $desc = shift;",124],["desc: html(\"\\",121],["desc:html(\"\\",109],["my $desc;",108],["if (length $desc > 0) {",102],["$desc = $1;",80],["return ($id, $desc) if ((which(\"git\") eq \"\") || !(-e \".git\"));",71],["$desc = substr($lines[0], 41);",71],["return ($id, $desc);",71],["my ($commit, $id, $desc) = @_;",71]]},{"word":"description","context":[["description => <<EOF,",354],["description",237],["# check for Kconfig help text having a real description",232],["INSERT INTO permissions (module_bit, code, description) VALUES",197],["=item description",196],["description => $itemtypes->{$thisitemtype}->{'description'},",178],["description => $itemtypes->{$thisitemtype}->{'description'},",178],["<meta name=\"description\" content=\"Untitled Document\">",147],["$column_data{description} =",137],["while ( my ( $itemtype, $description ) = $sth->fetchrow_array ) {",120]]},{"word":"details","context":[["# GNU General Public License for more details.",9259],["# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.",4849],["GNU General Public License for more details.",2781],["# details see http://www.openssl.org/~appro/cryptogams/.",1012],["#    GNU General Public License for more details.",1007],["# General Public License for more details.",723],["# for more details.",707],["#  GNU General Public License for more details.",485],["# Public License for more details.",396],["#   GNU General Public License for more details.",394]]},{"word":"dev","context":[["developers list at <http://lists.ensembl.org/mailman/listinfo/dev>.",512],["q` dev.off() `,",422],["open($FILE, '-|', \"diff -u /dev/null $filename\") ||",292],["__(?:mem|cpu|dev|)(?:initdata|initconst|init\\b)|",159],["dev.off()",153],["#  http://dev.mysql.com/doc/mysqltest/en/index.html",147],["if (`$ENV{CC} -Wa,-v -c -o /dev/null -x assembler /dev/null 2>&1`",136],["if (`$ENV{CC} -Wa,-v -c -o /dev/null -x assembler /dev/null 2>&1`",136],["for tmpfs (/dev/shm)",130],["my @tmpfs_locations= ($opt_mem, \"/dev/shm\", \"/tmp\");",130]]},{"word":"die","context":[["die;",2099],["die $usage;",931],["if (!$::Driver) { use FindBin; exec(\"$FindBin::Bin/bootstrap.pl\", @ARGV, $0); die; }",594],["{ PrintError => 0}) || die $DBI::errstr;",571],["die",542],["# By default examples are set to die on any server returned fault.",446],["die \"can't locate x86_64-xlate.pl\";",402],["#  an die Free Software Foundation, Inc., 675 Mass Ave, Cambridge,",391],["#     open($outfh, \">\" , $outfnm) || die $!;",391],["open $ih, \"<\", $input_file or die \"Cannot open input file $input_file: $!\";",380]]},{"word":"dir","context":[["$0 =~ m/(.*[\\/\\\\])[^\\/\\\\]+$/; $dir=$1;",908],["my $dir = shift;",598],["'text' => 'dir'",583],["( $xlate=\"${dir}x86_64-xlate.pl\" and -f $xlate ) or",397],["( $xlate=\"${dir}../../perlasm/x86_64-xlate.pl\" and -f $xlate) or",383],["my $dir;",326],["# Running with \"var\" in mysql-test dir",290],["print \"Must be run from the top-level dir. of a kernel tree\\n\";",285],["# Move to final dir",276],["my ($dir) = @_;",268]]},{"word":"directly","context":[["# use it directly.",5354],["# Don't use it directly.",3636],["# use it directly.  Use Unicode::UCD to access the Unicode character data",1538],["# directly before it executes them, like \"make test-force-pl\" in RPM builds.",149],["# Note: all Cmds are executed directly without a shell, so the prog name",68],["# notice in a future Perl version.  Don't use it directly.  Instead, its",63],["* Please do not modify the content directly!",46],["# substitution for which is done directly in the array:",33],["# the curl binary is read directly to determine its type also need to be",32],["content => 'These messages were not sent directly to the patrons.',",32]]},{"word":"directory","context":[["# Make sure the directory where it points exist",298],["'directory'     => $File::Find::dir,",188],["# Find the absolute path to the test directory",149],["# directory for RPM installs.",149],["# Look for the client binaries directory",149],["# won't point at an old directory",149],["tmpdir=DIR            The directory where temporary files are stored",149],["vardir=DIR            The directory where files generated from the test run",149],["# Remove the directory which the link points at",149],["# In most cases, the base directory we find everything relative to,",149]]},{"word":"display","context":[["div.display {margin-left: 3.2em}",290],["-h, --help, --version      display this help and exit",280],["pre.display {font-family: inherit}",166],["pre.display {font-family: serif}",124],["# The test tool report didn't exist, display an",119],["# multi page display gestion",118],["-? --help            display this help and exits",114],["# fix up item type for display",112],["--help         display this help and exits",108],["--help    display this help and exits",107]]},{"word":"distributed","context":[["# This program is distributed in the hope that it will be useful,",5883],["# Koha is distributed in the hope that it will be useful, but WITHOUT ANY",4849],["# distributed under the License is distributed on an \"AS IS\" BASIS,",2592],["# distributed under the License is distributed on an \"AS IS\" BASIS,",2592],["This program is distributed in the hope that it will be useful,",2563],["# Koha is distributed in the hope that it will be useful, but",1925],["# Meran is distributed in the hope that it will be useful,",754],["#    This program is distributed in the hope that it will be useful,",664],["# This program is distributed in the hope that it will be useful, but",581],["#  distributed under the License is distributed on an \"AS IS\" BASIS,",515]]},{"word":"div","context":[["</div>",5191],["<div class=\"header\">",492],["<div>",369],["div.smalldisplay {margin-left: 3.2em}",290],["div.example {margin-left: 3.2em}",290],["div.smalllisp {margin-left: 3.2em}",290],["div.display {margin-left: 3.2em}",290],["div.lisp {margin-left: 3.2em}",290],["div.smallexample {margin-left: 3.2em}",290],["div.smallindentedblock {margin-left: 3.2em; font-size: smaller}",167]]},{"word":"do","context":[["$dbh->do(q{",3766],["do {",2933],["$dbh->do(\"",2482],["$dbh->do(",2210],["$dbh->do(q|",1522],["$dbh->do(qq{",1299],["do",665],["$dbh->do(<<'END_SQL');",506],["$dbh->do(\"INSERT INTO `systempreferences` (variable,value,options,explanation,type)",360],["next if ($rate->sum == 0); # do not include reactions that do not occur",349]]},{"word":"documentation","context":[["the documentation and/or other materials provided with the",644],["# of this software and associated documentation files (the \"Software\"), to deal",291],["# Pre-scan the patch looking for any __setup documentation.",286],["#    documentation and/or other materials provided with the distribution.",239],["POD documentation for the program.",142],["#   this list of conditions and the following disclaimer in the documentation",141],["# User perldoc to generate the man documentation.",138],["#     documentation and/or other materials provided with the distribution.",132],["use Pod::Select;               # Print subsections of POD documentation",127],["# this list of conditions and the following disclaimer in the documentation",92]]},{"word":"does","context":[["library does not by itself cause the resulting executable to be covered",1583],["by the GNU General Public License. This exception does not however",1583],["# one does, and continue as if the #endif was not here.",299],["die \"$P: $root: --root does not point at a valid tree\\n\";",296],["mtr_error(\"The destination for symlink $opt_vardir does not exist\")",208],["# vardir does not already exist it should be created",149],["# in all cases where the calling tool does not log the commands",149],["# MYSQLD_BOOTSTRAP to the full path to a mysqld which does accept",129],["This means that the test case does not preserve the state that existed",119],["print \"ERROR: Version $version of mysql-test-run does not exist!\\n\";",118]]},{"word":"doesn","context":[["# characters matters or doesn't matter, and other permissible syntactic",2480],["# don't retry if the server doesn't work",291],["# leading quotes, and the address doesn't have both",194],["# and this is form shouldn't/doesn't generate a checkpatch warning.",82],["# POD doesn't interpret E<> inside a verbatim block.",62],["warn \"$P: file '${file}' doesn't appear to be a patch.  \"",58],["# ensure that stack frame doesn't alias with $aptr+4*$num",50],["# mac doesn't seem to deal with -x correctly",49],["call\tasm_AES_decrypt\t\t# doesn't touch %xmm",48],["($flavour =~ /linux/) ?\t\t# GNU as doesn't allow most recent hints",47]]},{"word":"don","context":[["# don't retry if the server doesn't work",291],["# Blackfin: don't use __builtin_bfin_[cs]sync",263],["# don't use deprecated functions",150],["# don't include deprecated include files (uses RAW line)",150],["# so don't change LD_LIBRARY_PATH on that platform.",149],["mtr_error(\"No, don't remove the vardir when running with --extern\")",147],["\"networking block comments don't use an empty /* line, use /* Comment...\\n\" . $hereprev);",131],["# If --wait-all is also given, do the same, but don't die if one",119],["# Keep waiting if it returned 2, if 1 don't wait or stop waiting.",119],["# if nothing left, don't need to remember this line",119]]},{"word":"done","context":[["print \"done\\n\";",607],["$done = 1;",440],["print \"done.\\n\";",346],["my $done = 0;",314],["Future->done(1);",232],["done",209],["print \"done.\\n\\n\";",197],["my %done;",184],["print \"        goto done;\\n\";",174],["# done",155]]},{"word":"dstat","context":[["($dstat, $dcond, $ln, $cnt, $off) =",431],["my ($off, $dstat, $dcond, $rest);",431],["$dstat =~ s/\\\\\\n.//g;",431],["$ctx = $dstat;",307],["if ($dstat ne '' &&",293],["$dstat =~ s/\\s*$//s;",293],["$dstat =~ s/^\\s*//s;",293],["$dstat !~ /$exceptions/ &&",293],["#print \"dstat<$dstat> dcond<$dcond> cnt<$cnt> off<$off>\\n\";",293],["#print \"dstat<$dstat> dcond<$dcond> cnt<$cnt> off<$off>\\n\";",293]]},{"word":"e","context":[["# This file is built by mktables from e.g. UnicodeData.txt.",2362],["my ($a,$b,$c,$d,$e);",563],["#     printf $log_fh \"%d: File %s already exists\\n\", __LINE__, $outfnm if ( -e $outfnm);",510],["The standard input should be a tab-separated table (i.e., each line",492],["foreach my $e (@elements) {",398],["# This file is built by ./mktables from e.g. UnicodeData.txt.",319],["my ($i,$a,$b,$c,$d,$e)=@_;",306],["'text' => 'e'",297],["if (! -e $root . '/' . $check) {",295],["-e \"$root/$p1_prefix\") {",287]]},{"word":"each","context":[["is a tab-separated set of fields).  Normally, the last field in each",493],["The standard input should be a tab-separated table (i.e., each line",492],["would read in a file of ids and add a column for each field in the relationship.",306],["# indent level to be relevant to each other.",303],["# loop through each subfield",248],["while (my($k, $v) = each %$h)",160],["# A colon can be substituted for the equals sign, and within each group",150],["# Init variables that can change between each test case",149],["# Log line number and time  for each line in .test file",149],["# loop through each tab 0 through 9",139]]},{"word":"eax","context":[["&xor\t(\"eax\",\"eax\");",493],["&xor\t(\"eax\",\"eax\");",493],["mov\t\\$1,%eax\t\t# ExceptionContinueSearch",331],["xor\t%eax,%eax",289],["xor\t%eax,%eax",289],["&xor\t(\"eax\",\"ebx\");",176],["xor\t%ebx,%eax",160],["&setne\t(&LB(\"eax\"));",120],["imull\t$n0, %eax",110],["and\t\\$0x1fffffff, %eax",110]]},{"word":"ebx","context":[["&xor\t(\"eax\",\"ebx\");",176],["xor\t%ebx,%eax",160],["&push\t(\"ebx\");",144],["&movz\t(\"ebx\",&BP(-128,$tbl,\"esi\",1));",144],["movzb\t-128(%rbp,%rsi),%ebx",128],["&mov\t(\"ebx\",&DWP(4,\"esi\"));",118],["&push(\"ebx\");",111],["&mov\t(&DWP(4,\"edi\"),\"ebx\");",103],["&xor\t(\"ebx\",\"edx\");",102],["&pop\t(\"ebx\");",97]]},{"word":"ecx","context":[["mov\t\\$154,%ecx\t\t# sizeof(CONTEXT)",261],["&mov\t(\"ecx\",&DWP(8,\"esi\"));",136],["&xor\t(\"ecx\",\"ecx\");",130],["&xor\t(\"ecx\",\"ecx\");",130],["and\tOPENSSL_ia32cap_P+8(%rip), %ecx",98],["mov\t\\$0x80100, %ecx",98],["mov\t\\$20,%ecx",95],["&scale\t(\"esi\",\"ecx\");",88],["&mov\t(\"ecx\",&DWP(24,\"esi\"));",86],["cmp\t\\$0x80100, %ecx",85]]},{"word":"edi","context":[["&mov\t(\"edi\",&wparam(0));",129],["&push(\"edi\");",107],["&mov\t(&DWP(0,\"edi\"),\"eax\");",106],["&mov\t(&DWP(4,\"edi\"),\"ebx\");",103],["&push\t(\"edi\");",91],["&scale\t(\"edi\",\"edx\");",88],["&xor\t(\"eax\",\"edi\");",84],["&mov\t(&DWP(8,\"edi\"),\"ecx\");",81],["&mov\t(&DWP(12,\"edi\"),\"edx\");",78],["&mov\t(\"edi\",&DWP(96+4,\"esp\"));\t# inp",70]]},{"word":"edx","context":[["&adc\t(\"edx\",0);",397],["mov\t%edx, %r10d\t\t# pass rounds",216],["&mov\t($carry,\"edx\");",169],["&xor\t(\"edx\",\"edx\");",166],["&xor\t(\"edx\",\"edx\");",166],["&xor\t(\"ebx\",\"edx\");",102],["&scale\t(\"edi\",\"edx\");",88],["&mov\t(&DWP(12,\"edi\"),\"edx\");",78],["&mov\t(\"edx\",&DWP(12,\"esi\"));",78],["&adc(\"edx\",0);\t\t\t# H(t)+=carry",66]]},{"word":"either","context":[["# Foundation; either version 2 of the License, or (at your option) any later",4705],["# the Free Software Foundation; either version 3 of the License, or",3443],["# the Free Software Foundation, either version 3 of the License, or",2555],["# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",2499],["as published by the Free Software Foundation; either version 2",1860],["# the Free Software Foundation; either version 2 of the License, or",1507],["# as published by the Free Software Foundation; either version 2",803],["# redistribute it and/or modify it under the terms of either the GNU",591],["#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",516],["the Free Software Foundation, either version 3 of the License, or",467]]},{"word":"elements","context":[["foreach my $e (@elements) {",398],["for (my $n = 0; $n < $#elements; $n += 2) {",303],["$c = 'V' if ($elements[$n + 2] ne '');",303],["$off += length($elements[$n + 1]);",303],["$a = 'O' if ($elements[$n] eq '');",303],["$a = 'W' if ($elements[$n] =~ /\\s$/);",303],["$c = 'O' if ($elements[$n + 2] eq '');",303],["$cc = substr($opline, $off + length($elements[$n + 1]));",303],["$a = 'V' if ($elements[$n] ne '');",303],["my $op = $elements[$n + 1];",303]]},{"word":"else","context":[["} else {",178748],["else {",91396],["else",52708],["}else{",20431],["else{",9283],["#else",2864],["}else {",1184],["} else",773],["# Handle nested #if/#else.",584],["}else",551]]},{"word":"elsif","context":[["} elsif ($f || $t || $r) {",306],["} elsif ($realcnt == 1) {",303],["} elsif ($op eq '++' or $op eq '--') {",303],["} elsif ($op eq ',') {",303],["} elsif ($op eq '//') {",303],["} elsif ($c eq $open) {",302],["} elsif ($cur =~ /^(\\()/o) {",300],["} elsif ($cur =~ /(^.)/o) {",300],["} elsif ($cur =~ /^(\\))/o) {",300],["} elsif ($cur =~ /^($Ident|$Constant)/o) {",300]]},{"word":"email","context":[["Please email comments or questions to the public Ensembl",593],["\"$ucfirst_sign_off $email\";",303],["# Ignore email addresses <foo@bar>",302],["my ($email_name, $email_address, $comment) = parse_email($email);",192],["my $email = $4;",192],["# Don't force email to have quotes",192],["\"$suggested_email$comment\" ne $email) {",192],["if (\"$dequoted$comment\" ne $email &&",192],["\"<$email_address>$comment\" ne $email &&",192],["\"Unrecognized email address: '$email'\\n\" . $herecurr);",191]]},{"word":"empty","context":[["\"True\", \"<empty>\", \"<empty>\", 43",155],["\"True\", \"<empty>\", \"<empty>\", 43",155],["# Fill help tables, just an empty file when running from bk repo",135],["\"networking block comments don't use an empty /* line, use /* Comment...\\n\" . $hereprev);",131],["or empty string to disable",126],["# (it will contain the CURRENT_TEST written by mtr, so is not empty)",119],["# Race condition seen on Windows: try again until file not empty",114],["# Intentionally left empty, ndbd nodes will be shutdown",90],["#  - there is no servers in an empty config",83],["# We can get an empty argument when  we set environment variables to \"\"",72]]},{"word":"empty_spaces_after_command","context":[["'type' => 'empty_spaces_after_command'",8079]]},{"word":"end","context":[["'cmdname' => 'end',",2507],["# Find out what is on the end of the line after the",595],["# Should not end with a space.",584],["=end pod",533],["@end{verbatim}",400],["@end menu",389],["@end macro",339],["# timestamp test result verification end",329],["@end example",326],["# Catch a comment on the end of the line itself.",303]]},{"word":"endif","context":[["#endif",7183],[":- endif.",704],["# endif",642],["# one does, and continue as if the #endif was not here.",299],["} elsif ($cur =~ /^(\\#\\s*(?:endif))/o) {",297],["} elsif ($remainder =~ /^#\\s*endif\\b/) {",292],["} elsif ($lines[$line] =~ /^.\\s*#\\s*endif\\b/) {",250],["#  endif",209],[".endif",205],["endif",199]]},{"word":"entry","context":[["# increment relationship count or create relationship entry",349],["# create history entry",346],["# Only applies when adding the entry originally, after that we do not have",221],["foreach my $entry (@mode_permission_funcs) {",164],["my $entry;",158],["push(@dep_functions, $entry);",142],["for my $entry (split(/[, ]+/, $1)) {",142],["if ($entry =~ m@include/(.*)@) {",142],["} elsif ($entry !~ m@/@) {",142],["# Loop through our list of processes and look for and entry",137]]},{"word":"env","context":[["#!/usr/bin/env perl",18216],["#! /usr/bin/env perl",1585],["#!/bin/env perl",353],["#!/usr/bin/env perl -w",269],["# Add arguments that should not go into the MYSQL_TEST env var",145],["#!/usr/bin/env genome-perl",138],["# Setup env for NDB",129],["# Setup env so childs can execute myisampack and myisamchk",111],["mysqld-env=VAR=VAL    Specify additional environment settings for \"mysqld\"",105],["'mysqld-env=s'             => \\@opt_mysqld_envs,",105]]},{"word":"eor","context":[["eor\t$Zlh,$Zlh,$Zhl,lsl#28",132],["eor\t$Zhl,$Thl,$Zhl,lsr#4",132],["eor\t$Zll,$Tll,$Zll,lsr#4",132],["eor\t$Zlh,$Tlh,$Zlh,lsr#4",132],["eor\t$Zhh,$Thh,$Zhh,lsr#4",132],["eor\t$Zhl,$Zhl,$Zhh,lsl#28",132],["eor\t$Zll,$Zll,$Zlh,lsl#28",132],["eor\t$s3,$s3,$t3",84],["eor\t$s0,$s0,$i1",84],["eor\t$s1,$s1,$t1",84]]},{"word":"eq","context":[["if (vpx_config(\"CONFIG_VP9_HIGHBITDEPTH\") eq \"yes\") {",317],["if ($filename eq '-') {",310],["if ($c eq \"\\t\") {",309],["} elsif ($op eq ',') {",303],["} elsif ($op eq '++' or $op eq '--') {",303],["$a = 'O' if ($elements[$n] eq '');",303],["} elsif ($op eq '++' or $op eq '--') {",303],["} elsif ($op eq '//') {",303],["$c = 'O' if ($elements[$n + 2] eq '');",303],["} elsif ($c eq $open) {",302]]},{"word":"err","context":[["if ($err) {",627],["my @err;",573],["push(@err, $field);",547],["my $err = 0;",533],["my $err;",457],["$err = 1;",420],["my $err = '';",358],["my $errfile= \"$opt_vardir/tmp/$name.err\";",357],["if (@err) {",311],["$err += check_fields(\\@rel_fields, %all_rel_fields);",306]]},{"word":"error","context":[["'type' => 'error'",1189],["$error = 1;",525],[":- use_module(library(error)).",495],["Priority => 'error',",478],["my $error;",430],["error(",391],["sub error {",390],["if ($error) {",378],["error         => $errfile,",357],["($session, $error) = Net::SNMP->session(",311]]},{"word":"errors","context":[["$errors++;",604],["# Log SOAP XML request, response and API errors.",446],["print \"total: $cnt_error errors, $cnt_warn warnings, \" .",300],["--mailback                 only produce a report in case of warnings/errors",280],["--test-only=WORD           report only warnings/errors containing WORD",279],["my @errors;",267],["my $errors = 0;",265],["# If there were whitespace errors which cleanpatch can fix",248],["$errors = 1;",185],["print \"NOTE: whitespace errors detected, you may wish to use scripts/cleanpatch or\\n\";",178]]},{"word":"errstr","context":[["{ PrintError => 0}) || die $DBI::errstr;",571],["or die \"Couldn't prepare statement: \" . $dbh->errstr;",362],["$sthA->execute or die \"executing: $stmtA \", $dbhA->errstr;",326],["$sthA = $dbhA->prepare($stmtA) or die \"preparing: \",$dbhA->errstr;",283],["or die \"Couldn't execute statement: \" . $sth->errstr;",167],["or die $DBI::errstr;",141],["or fatal(sprintf(\"Couldn't execute query: %s\", $dbh->errstr));",133],["or die \"Couldn't connect to database: \" . DBI->errstr;",125],["or fatal(sprintf(\"Couldn't prepare query: %s\", $dbh->errstr));",119],["or die \"Couldn't prepare statement: \" . $db_conn->errstr;",113]]},{"word":"esi","context":[["&movz\t(\"ebx\",&BP(-128,$tbl,\"esi\",1));",144],["&mov\t(\"ecx\",&DWP(8,\"esi\"));",136],["&mov\t(\"ebx\",&DWP(4,\"esi\"));",118],["&push(\"esi\");",107],["&scale\t(\"esi\",\"ecx\");",88],["&mov\t(\"ecx\",&DWP(24,\"esi\"));",86],["&xor\t(\"ebx\",\"esi\");",84],["&push\t(\"esi\");",84],["&mov\t(\"esi\",&wparam(1));",80],["&mov\t(\"edx\",&DWP(12,\"esi\"));",78]]},{"word":"esp","context":[["&mov\t(\"esp\",$_esp);",184],["if ($i<2)   {\t&mov\t(&DWP(4+4*$i,\"esp\"),$out);\t}",124],["&and\t(\"esp\",-64);",102],["&xorps\t($inout1,&QWP(16*1,\"esp\"));",96],["#&mov\t(&DWP(16,\"esp\"),$E);",80],["#&mov\t(&DWP(0,\"esp\"),$AH[0]);",80],["&mov\t(&DWP(4,\"esp\"),$AH[1]);",80],["&xorps\t($inout0,&QWP(16*0,\"esp\"));\t# output^=tweak",72],["&mov\t(\"esp\",$_esp);\t\t\t# restore stack pointer",72],["&mov\t(&DWP(20,\"esp\"),\"edi\");",70]]},{"word":"etc","context":[["# Need a space before open parenthesis after if, while etc",304],["#need space before brace following if, while, etc",303],["# if/while/etc brace do not go on next line, unless defining a do while loop,",303],["# check for redundant bracing round if etc",276],["# Coverage, profiling etc",149],["(! -e '/etc/debian_version' or",149],["to shutdown etc.",119],["mtr_grab_file('/etc/debian_version')) !~ /^[0-9]+\\.[0-9]$/ or",119],["$path =~ s!^(.*)/[^/]+/.*$!$1/etc!;",105],["my @config_files = ('/etc/devscripts.conf', '~/.devscripts');",94]]},{"word":"eval","context":[["eval(shift(@insns));",14269],["eval {",7694],["eval(shift(@insns));\t\t# rol",546],["eval(shift(@insns));\t\t# ror",440],["eval(shift(@insns));\t\t# body_20_39",376],["eval{",362],["$code =~ s/\\`([^\\`]*)\\`/eval $1/gem;",351],["eval(shift(@insns));\t#@",336],["eval",310],["eval { require \"$FindBin::Bin/../kohalib.pl\" };",306]]},{"word":"even","context":[["# but WITHOUT ANY WARRANTY; without even the implied warranty of",8483],["# This file is for internal use by core Perl only.  The format and even the",5878],["# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR",4860],["# This file is for internal use by the Perl program only.  The format and even",4650],["but WITHOUT ANY WARRANTY; without even the implied warranty of",3080],["# WITHOUT ANY WARRANTY; without even the implied warranty of",2637],["#    but WITHOUT ANY WARRANTY; without even the implied warranty of",1043],["# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY",669],["#  but WITHOUT ANY WARRANTY; without even the implied warranty of",616],["#   but WITHOUT ANY WARRANTY; without even the implied warranty of",522]]},{"word":"example","context":[["# for example,",2259],["$example=$model->Clone();",1055],["push(@$images,$example);",1034],["# Don't run the example if the file is being included.",449],["# Call the example",445],["@end example",326],["div.example {margin-left: 3.2em}",290],["@example",263],["'text' => 'example'",251],["'cmdname' => 'example',",250]]},{"word":"except","context":[["# you may not use this file except in compliance with the License.",2546],["#  you may not use this file except in compliance with the License.",461],["# function brace can't be on same line, except for #defines of do while,",302],["# this file except in compliance with the License.  You can obtain a copy",262],["## may not use this file except in compliance with the License.  You may",247],["% License Version 1.1 (the \"License\"); you may not use this file except",244],["you may not use this file except in compliance with the License.",196],["# Version 1.3 (\"License\"); you may not use this file except in",189],["#  contained herein may not be used or disclosed except with the written",158],["#   you may not use this file except in compliance with the License.",157]]},{"word":"exe","context":[["my $exe=  shift;",813],["# Indicate the exe should not be started",618],["$$exe= undef;",469],["return mtr_args2str($exe, @$args);",455],["valgrind_arguments($args, \\$exe);",447],["$$exe= $exe_libtool;",334],["path          => $exe,",328],["$$exe= \"xterm\";",303],["$$exe= $debugger;",296],["unshift(@$$args, \"$$exe\");",296]]},{"word":"executable","context":[["library does not by itself cause the resulting executable to be covered",1583],["invalidate any other reasons why the executable file might be covered by",1583],["compiled with a Free Software compiler, to produce an executable, this",1583],["# Turn off localization of executable's output.",331],["# and gdb will not find the real executable to debug",149],["# Look for mysqltest executable",145],["valgrind-mysqld       Run the \"mysqld\" executable with valgrind",145],["valgrind-mysqltest    Run the \"mysqltest\" and \"mysql_client_test\" executable",145],["# mysql_client_test executable may _not_ exist",123],["valgrind-path=<EXE>   Path to the valgrind executable",119]]},{"word":"execute","context":[["$sth->execute();",4886],["$sth->execute;",2877],["mtr_add_arg($$args, \"--mode=execute\");",400],["execute (",334],["$sthA->execute or die \"executing: $stmtA \", $dbhA->errstr;",326],["$sth->execute () ;",307],["$sth2->execute;",306],["$req->execute;",296],["$sth->execute(",250],["$sql->execute();",248]]},{"word":"existence","context":[["# name or existence of this file are subject to change without notice.  Don't",6892],["# the name or existence of this file are subject to change without notice.",3636],["# but its format and even its name or existence are subject to change without",63],["# flag indicating existence of at least one item linked via a host record",49],["# will spring into existence if they aren't there already.)",33],["# - \"existence\" can be \"EXIST\" or \"NOEXIST\" depending on if the symbol is",29],["#\texistence:platform:kind:algorithms",29],["#  the existence of /tmp/fines, which is created by ???",27],["# Assumes that the file's existence is not in doubt.",24],["# better way of doing this.  (We used to test for existence of a /mnt",20]]},{"word":"exists","context":[["#     printf $log_fh \"%d: File %s already exists\\n\", __LINE__, $outfnm if ( -e $outfnm);",510],["if ( ! exists($pdb->{$section}->{$machine}{$lane}{$stage}{state}))",330],["exists $lines[$realline_next - 1] &&",262],["printf $log_fh \"%d: File %s already exists\\n\", __LINE__, $outfnm if ( -e $outfnm);",234],["#---- if primkey exists, it's a modify action, so read values to modify...",196],["\"patch prefix '$p1_prefix' exists, appears to be a -p0 patch\\n\");",190],["# --client-bindir=path set on command line, check that the path exists",147],["mtr_verbose(\"No need to create '$opt_vardir' it already exists\");",146],["$exists = 1;",121],["mtr_verbose(\"Crash was expected, file '$expect_file' exists\");",119]]},{"word":"exit","context":[["exit;",25510],["exit 0;",16542],["exit 1;",14854],["exit(0);",11751],["exit(1);",10313],["exit();",2651],["exit 2;",1493],["exit $ERRORS{\"UNKNOWN\"};",1239],["exit(-1);",1150],["exit -1;",874]]},{"word":"ext","context":[["#my $outFile_ge9 = File::Spec->catfile($outDir, join(\".\", @parts) . \"_ge9.\" . $ext);",217],["my $ext;",128],["$ext = \"\";",74],["$ext = $2;",69],["foreach my $ext (sort @extlist)",68],["local($ext) = shift;",53],["use lib \"$FindBin::RealBin/../perl5\", \"$FindBin::RealBin/../perl5-ext\";",53],["foreach my $ext (sort {lc $a cmp lc $b } keys %Language_by_Extension) {",52],["my $ext = $1;",43],["print $HTML_HEADER if ($ext eq \"html\");",37]]},{"word":"extra","context":[["'extra' => {",28962],["'extra' => {},",1252],["extra   => '',",903],["extra    => '',",192],["extra => '',",155],["'defaults-extra-file=s'    => \\&collect_option,",119],["# No extra options if --user-args",118],["# extra command line options to add to the restarted mysqld.",117],["defaults-extra-file=<config template> Extra config template to add to",115],["mtr_exe_exists(vs_config_dirs('extra', 'my_print_defaults'),",111]]},{"word":"f","context":[["my $f;",1127],["( $xlate=\"${dir}x86_64-xlate.pl\" and -f $xlate ) or",397],["( $xlate=\"${dir}../../perlasm/x86_64-xlate.pl\" and -f $xlate) or",383],["'index_prefix' => 'f',",382],["unlink($pidfile) if(-f $pidfile);",364],["my $f = shift;",346],["if ($f) {",335],["my @f = keys %all_fields;",306],["} elsif ($f || $t || $r) {",306],["\"from=s\" \t=> \\$f,",306]]},{"word":"fail","context":[["fail.",5152],["fail",2970],["exit $fail;",357],["file_errors(fail)",305],["my $fail = run_tests ($program_name, $prog, \\@Tests, $save_temps, $verbose);",194],["->  fail",184],["$fail = 1;",151],["# When mysqld is run by a root user(euid is 0), it will fail",145],["my $fail = 0;",143],["# Unfortunately the cluster nodes will fail to start",129]]},{"word":"failed","context":[["#  1 Check failed",387],["my $failed = 0;",369],["$kiwi -> failed ();",317],["# failed to talk to it properly. Kill the server and return failure",304],["die \"$P: $filename: open failed - $!\\n\";",301],["die \"$P: $filename: diff failed - $!\\n\";",300],["$failed++;",282],["logmsg \"RUN: failed to start the $srvrname server\\n\";",277],["logmsg \"RUN: $srvrname server failed verification\\n\";",276],["$failed = 1;",221]]},{"word":"false","context":[["false :-",306],["return false;",278],["(defaults to false)",264],["# We need \\b after 'init' otherwise 'initconst' will cause a false positive in a check",258],["false :- new1.",198],["if ($line =~ /^.$Type\\s*$Ident\\s*(?:\\s+$Modifier)*\\s*=\\s*(0|NULL|false)\\s*;/) {",198],["if ($line =~ /\\bstatic\\s.*=\\s*(0|NULL|false)\\s*;/) {",193],["condition(false, [",151],["If any of these errors are false positives, please report",143],[":- set_prolog_flag(generate_debug_info, false).",137]]},{"word":"fh","context":[["close $fh;",3555],["close($fh);",2246],["while (<$fh>) {",1920],["my $fh;",929],["print $fh <<\"EOD\";",508],["my $fh = shift;",474],["while(<$fh>) {",423],["$fh->close();",375],["$fh->close;",309],["while (my $line = <$fh>) {",308]]},{"word":"field","context":[["if (!$all_fields{$field})",787],["push(@err, $field);",547],["is a tab-separated set of fields).  Normally, the last field in each",493],["for my $field (@$fields) {",311],["foreach my $field (@fields) {",307],["--rel field-list",306],["=item -rel field-list",306],["--to field-list",306],["=item -to field-list",306],["--from field-list",306]]},{"word":"fields","context":[["strings. The following fields are available:",1078],["following fields are available:",612],["Choose a set of fields from the relationship to return. Field-list is a comma-separated list of",612],["#Default fields",546],["my @fields;",527],["is a tab-separated set of fields).  Normally, the last field in each",493],["-a\t\t    Return all available fields.",400],["--show-fields",386],["--fields list   Choose a set of fields to return. List is a comma-separated list of strings.",320],["--show-fields   List the available fields.",320]]},{"word":"file","context":[["# name or existence of this file are subject to change without notice.  Don't",6892],["# This file is part of Koha.",6644],["# This file is for internal use by core Perl only.  The format and even the",5878],["# This file is machine-generated by lib/unicore/mktables from the Unicode",5126],["# This file is for internal use by the Perl program only.  The format and even",4650],["# This file is machine-generated by mktables from the Unicode",4479],["# the name or existence of this file are subject to change without notice.",3636],["my $file = shift;",2776],["# you may not use this file except in compliance with the License.",2546],["# The format of the lines of this file is: START\\tSTOP\\twhere START is the",2478]]},{"word":"file_name","context":[["'file_name' => '',",14828],["my $filename = $pu01->{file_name};",1391],["#     my $filename = $pu01->{file_name};",340],["my $filename = $pu03->{file_name};",284],["my $file_name = $_;",202],["'file_name'     => $file_name,",194],["'file_name'     => $file_name,",194],["@{$pmpr} = sort { $a->{file_name} cmp $b->{file_name} } @{$pmpr};",188],["@{$pu01} = sort { $a->{file_name} cmp $b->{file_name} } @{$pu01};",188],["@parts = split('-', $file_name);",188]]},{"word":"filename","context":[["my $filename = shift;",1474],["my $filename = $pu01->{file_name};",1391],["my $filename;",454],["my ($filename) = @_;",447],["#     my $filename = $pu01->{file_name};",340],["for my $filename (@ARGV) {",319],["if ($filename eq '-') {",310],["die \"$P: $filename: open failed - $!\\n\";",301],["$vname = $filename;",300],["if (!process($filename)) {",300]]},{"word":"files","context":[["As a special exception, if you link this library with other files,",1585],["foreach my $file (@files) {",994],["my @files;",889],["\"externs should be avoided in .c files\\n\" .  $herecurr);",374],["my @files = ();",331],["# check for new externs in .c files.",302],["# warn about #ifdefs in C files",298],["#\t\t\tprint \"#ifdef in C files should be avoided\\n\";",295],["# of this software and associated documentation files (the \"Software\"), to deal",291],["my %files;",291]]},{"word":"filter","context":[["$cell{filter} .= @$filters[$i];",90],["sub filter {",76],["my $filter = shift;",58],["filter => $filter,",54],["filter => $filter,",54],["my $filter;",52],["if ($filter) {",51],["# instruction to jump over the profiling function to filter the",50],["system(\"$rootdir/filter/$pool/gen-subset.pl $pool\");",46],["# Show filter form",45]]},{"word":"filters","context":[["# Checking filters",143],["if ( @$filters[$i] ) {",120],["$cell{err} = 1 if (@$filters[$i]<@$filters[$i-1]) ;",95],["$cell{err} = 1 if (@$filters[$i]<@$filters[$i-1]) ;",95],["$cell{filter} .= @$filters[$i];",90],["# format the dates filters, otherwise just fill as is",84],["if (($i==1) and (@$filters[$i-1])) {",82],["my @filters = $input->param(\"Filter\");",79],["@$filters[0]=~ s/\\*/%/g if (@$filters[0]);",57],["@$filters[0]=~ s/\\*/%/g if (@$filters[0]);",57]]},{"word":"final","context":[["# Move to final dir",276],["# Yes, we must cut off the final newline from the final line",129],["# Yes, we must cut off the final newline from the final line",129],["# Should this contain memory leaks, the final report will find it",83],["# printf $log_fh \"\\nRECORD (final): %s\\n\", $record;",64],["# one local, one global.  After final compile, we will end up with",62],["# this point. So we can't use this kind of offsets to record the final",51],["# callers. After final linking, the vmlinux will have within .init.data the",51],["# compute the final address according to the information we record.",51],["B<?>I<pattern>B<?>    Search backwards for I<pattern>; final B<?> is optional.",44]]},{"word":"find","context":[["# find Koha's Perl modules",442],["# to try and find and validate the current printk.  In summary the current",285],["find(\\&want_one_type, @{$pargv});",282],["mtr_error(\"Could not find version of MySQL\") unless $mysql_version_id;",227],["or warn \"$P: Can't find a readable $configuration_file file $!\\n\";",193],["# and gdb will not find the real executable to debug",149],["Attempts to find a suitable location",149],["# In most cases, the base directory we find everything relative to,",149],["mtr_error(\"Couldn't find support for SSL\");",147],["# to be \"fast disks\" to find a suitable location",119]]},{"word":"finish","context":[["$sth->finish;",3084],["$sth->finish();",2386],["$cmd->finish();",339],["$sth->finish () ;",307],["$sthA->finish();",303],["$sth2->finish;",253],["$pm->finish;",193],["my $finish = time;",184],["out((($finish - $start)/60).\" minutes have elapsed\");",149],["mtr_print(\"Server(s) started, not waiting for them to finish\");",118]]},{"word":"first","context":[["$first = 0;",767],["my $first = 1;",517],["# Grab the first conditional/block pair.",299],["# first statement and ensure its the whole macro if its not enclosed",299],["# none on the first line, and are going to readd them",296],["# We want to check the first line inside the block",296],["# we assume the first bad printk is the one to report.",284],["# at the beginning of a line any tabs must come first and anything",278],["$first = 1;",237],["if ($first) {",215]]},{"word":"fix","context":[["$fix) {",5792],["$fix && $prevline =~ /^\\+/ && $line =~ /^\\+/) {",292],["# If there were whitespace errors which cleanpatch can fix",248],["veor\t@XMM[7], @XMM[7], @XMM[6]\t@ fix up round 0 key",130],["$spelling_fix{$suspect} = $fix;",119],["# fix up item type for display",112],["# Send out a warning, we should fix the variables that has no",111],["my $fix = 0;",108],["$fix && $line =~ /^\\+/) {",103],["--fix                      EXPERIMENTAL - may create horrible results",103]]},{"word":"fixed","context":[["$fixed[$fixlinenr] =~",1382],["$fixed[$linenr - 1] =~",549],["$fixed[$fixlinenr] =",219],["while ($fixed[$fixlinenr] =~",146],["$fixed[$fixlinenr] =~ s/\\s+$//;",146],["sleep=SECONDS         Passed to mysqltest, will be used as fixed sleep time",145],["$fixed[$fixlinenr] =~ s/^\\+([ \\t]+)/\"\\+\" . tabify($1)/e;",142],["defaults-file=<config template> Use fixed config template for all",119],["# or should it be fixed width column parsing? It does not",111],["@fixed = ();",104]]},{"word":"fixlinenr","context":[["$fixed[$fixlinenr] =~",1382],["fix_insert_line($fixlinenr, $fixedline);",573],["fix_delete_line($fixlinenr, $rawline);",553],["fix_delete_line($fixlinenr - 1, $prevrawline);",448],["$fixed[$fixlinenr] =",219],["while ($fixed[$fixlinenr] =~",146],["$fixlinenr = -1;",146],["fix_insert_line($fixlinenr, \"\\+\");",146],["$fixed[$fixlinenr] =~ s/\\s+$//;",146],["$fixed[$fixlinenr] =~ s/^\\+([ \\t]+)/\"\\+\" . tabify($1)/e;",142]]},{"word":"flag","context":[["$flag = 1;",629],["my $flag = 0;",460],["$flag = 0;",301],["$flag=1;",186],["my $flag = $1;",171],["\"Use of $flag is deprecated, please use \\`$replacement->{$flag} instead.\\n\" . $herecurr) if ($replacement->{$flag});",167],["\"Use of $flag is deprecated, please use \\`$replacement->{$flag} instead.\\n\" . $herecurr) if ($replacement->{$flag});",167],["\"Use of $flag is deprecated, please use \\`$replacement->{$flag} instead.\\n\" . $herecurr) if ($replacement->{$flag});",167],["# Record flag",149],["# Gcov flag",149]]},{"word":"flags","context":[["my $flags = \"\";",368],["# suppression flags",299],["$flags .= \"--id $idnum \" if($idnum > 1);",222],["$flags .= \"--pidfile \\\"$pidfile\\\" --logfile \\\"$logfile\\\" \";",207],["my $flags;",191],["# force flags for this arch",187],["$flags .= \"--verbose \" if($debugprotocol);",155],["### args/flags",143],["$flags)",139],["=head2 Required flags",116]]},{"word":"flagsrequired","context":[["flagsrequired   => { catalogue => 1 },",675],["flagsrequired   => { borrow => 1 },",415],["flagsrequired => {editcatalogue => '*'},",362],["flagsrequired   => { circulate => \"circulate_remaining_permissions\" },",272],["flagsrequired => {  ui => 'ANY',",262],["flagsrequired   => { editcatalogue => '*' },",232],["flagsrequired   => { acquisition => 'order_manage' },",198],["flagsrequired => {borrowers => 1},",179],["flagsrequired => {parameters => 'parameters_remaining_permissions'},",147],["flagsrequired => {parameters => 1},",144]]},{"word":"fn","context":[["'index_name' => 'fn',",382],["my $fn = shift;",249],["my $fn;",152],["# check for needless \"if (<foo>) fn(<foo>)\" uses",132],["open($of,\">\",$fn) or die \"can't open $fn\";",131],["open($of,\">\",$fn) or die \"can't open $fn\";",131],["my ($fn) = @_;",128],["'text' => 'entry for index `fn\\' outside of any node',",122],["'text' => 'Entry for index `fn\\' outside of any node',",121],["$fn = $1;",100]]},{"word":"following","context":[["# any of the following regular expression constructs:",1459],["strings. The following fields are available:",1078],["notice, this list of conditions and the following disclaimer.",703],["modification, are permitted provided that the following conditions",653],["notice, this list of conditions and the following disclaimer in",644],["following fields are available:",612],["# modification, are permitted provided that the following conditions",452],["# matches any of the following regular expression constructs:",405],["# modification, are permitted provided that the following conditions are met:",368],["# furnished to do so, subject to the following conditions:",325]]},{"word":"font","context":[["pre.menu-preformatted {font-family: serif}",290],["span.roman {font-family:serif; font-weight:normal}",290],["pre.smallexample {font-size: smaller}",290],["pre.smalllisp {font-size: smaller}",290],["blockquote.smallquotation {font-size: smaller}",290],["pre.menu-comment {font-family: serif}",290],["span.sansserif {font-family:sans-serif; font-weight:normal}",290],["span.sansserif {font-family:sans-serif; font-weight:normal}",290],["span.roman {font-family:serif; font-weight:normal}",290],["div.smallindentedblock {margin-left: 3.2em; font-size: smaller}",167]]},{"word":"foo","context":[["# Ignore email addresses <foo@bar>",302],["# any (foo ... *) is a pointer cast, and foo is a type",300],["# any (foo ... *) is a pointer cast, and foo is a type",300],["# int foo(something bar, other baz);",300],["#warn if <asm/foo.h> is #included and <linux/foo.h> is available (uses RAW line)",235],["#warn if <asm/foo.h> is #included and <linux/foo.h> is available (uses RAW line)",235],["#   XXX(foo);",232],["# check for static char foo[] = \"bar\" declarations.",225],["\"EXPORT_SYMBOL(foo); should immediately follow its function/variable\\n\" . $herecurr);",184],["$dstat !~ /^(?:$Ident|-?$Constant),$/ &&\t\t\t# 10, // foo(),",166]]},{"word":"for","context":[["# GNU General Public License for more details.",9259],["# This file is for internal use by core Perl only.  The format and even the",5878],["# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.",4849],["# This file is for internal use by the Perl program only.  The format and even",4650],["GNU General Public License for more details.",2781],["# See the License for the specific language governing permissions and",2505],["# perluniprops.pod should be consulted for the syntax rules for any of these,",2468],["# perluniprops.pod should be consulted for the syntax rules for any of these,",2468],["# for example,",2259],["# A colon can be substituted for the equals sign, and anything to the left of",2251]]},{"word":"foreach","context":[["foreach my $line (@lines) {",1573],["foreach my $col (@nozzle_count_cols)",1375],["foreach my $col (@feeder_count_cols)",1315],["foreach my $file (@files) {",994],["foreach my $col (@{$pcols})",923],["foreach my $mysqld ( mysqlds() )",918],["foreach my $product (sort keys %{$totals{by_product}})",618],["foreach my $target (@target) {",526],["foreach my $prow (@{$pu01->{$section}->{data}})",522],["foreach (@ARGV) {",501]]},{"word":"form","context":[["</form>",2315],["$form->header;",1358],["<form method=post action=$form->{script}>",934],["<form method=post action=$form->{script}>",934],["my $form     = $main::form;",676],["my $form     = $main::form;",676],["2. Redistributions in binary form must reproduce the above copyright",656],["<th class=listtop>$form->{title}</th>",547],["require \"$form->{path}/menu.pl\";",406],["if ($form->{menubar}) {",390]]},{"word":"format","context":[["# This file is for internal use by core Perl only.  The format and even the",5878],["# This file is for internal use by the Perl program only.  The format and even",4650],["# The format of the lines of this file is: START\\tSTOP\\twhere START is the",2478],["printf $outfh $pcol->{format}, $pcol->{name};",646],["{ name => 'Mount', format => ',%s' }",419],["{ name => 'HMiss', format => ',%s' },",419],["{ name => 'MMiss', format => ',%s' },",419],["{ name => 'Stage', format => ',%s' },",419],["{ name => 'Pickup', format => ',%s' },",419],["{ name => 'TRSMiss', format => ',%s' },",419]]},{"word":"found","context":[["$found = 1;",1358],["my $found = 0;",1034],["::rptMsg($key_path.\" not found.\");",588],["$found = 0;",380],["my $found;",331],["# UTF-8 regex found at http://www.w3.org/International/questions/qa-forms-utf-8.en.php",302],["if (!$found) {",284],["$found++;",266],["return $found;",183],["::logMsg($key_path.\" not found.\");",181]]},{"word":"frame","context":[["# EXCEPTION_DISPOSITION handler (EXCEPTION_RECORD *rec,ULONG64 frame,",335],["$frame=\"%rdx\";",308],["$R->run(q` data = data.frame() `);",220],["local $frame = 0;",168],["$R->run(q` pre = data.frame(Time) `);",123],["# note that caller is expected to allocate stack frame for me!",116],[".frame\t$sp,6*$SZREG,$ra",110],["print( $frame? \"</td></tr>\\n\" : \" &nbsp; \" );",104],["and\t\\$-64,%rsp\t\t# align stack frame",88],["# stack frame layout",80]]},{"word":"free","context":[["# Koha is free software; you can redistribute it and/or modify it under the",4845],["# This program is free software; you can redistribute it and/or modify",3916],["This program is free software; you can redistribute it and/or",2016],["# Koha is free software; you can redistribute it and/or modify it",1914],["# This program is free software: you can redistribute it and/or modify",1374],["# This program is free software; you can redistribute it and/or",1251],["# Meran is free software: you can redistribute it and/or modify",754],["This library is free software. You can redistribute it and/or modify",577],["This program is free software; you can redistribute it and/or modify",341],["#    This program is free software; you can redistribute it and/or modify",337]]},{"word":"from","context":[["# This file is machine-generated by lib/unicore/mktables from the Unicode",5126],["# This file is machine-generated by mktables from the Unicode",4479],["# This file is built by mktables from e.g. UnicodeData.txt.",2362],["Choose a set of fields from the relationship to return. Field-list is a comma-separated list of",612],["Select the identifier from column num",612],["This is a pipe command. The input is taken from the standard input, and the",493],["# Get AdWords Client, credentials will be read from ~/adwords.properties.",448],["# the main body of the table, and what all code points missing from this file",413],["where N is the column (from 1) that contains the id.",386],["# This file is built by ./mktables from e.g. UnicodeData.txt.",319]]},{"word":"fs","context":[["$fs = $fs + 4 ;",2599],["$fs = $fs + 4 ;",2599],["\"fs\", \"init\", \"ipc\", \"kernel\", \"lib\", \"scripts\",",248],["foreach my $fs (@tmpfs_locations)",149],["if ( -d $fs )",149],["$fs = $fs + 16 ;",120],["$fs = $fs + 16 ;",120],["$opt_mem= tempdir( $template, DIR => $fs, CLEANUP => 0);",119],["$fs = $fs + 8 ;",83],["$fs = $fs + 8 ;",83]]},{"word":"func","context":[["if ($line =~ /\\b$func\\b/) {",150],["for my $func (@dep_functions) {",143],["func => sub {",115],["use func;",100],["$func:",98],["ERROR(\"Don't use $func(): see Documentation/feature-removal-schedule.txt\\n\" . $herecurr);",98],[".globl\t$func",95],["my $func = shift;",94],["$func .= \"\\n\";",89],["\"func\",\"SUCCESS\",",87]]},{"word":"function","context":[["function Focus$function_name(subfield_managed) {",516],["function Clic$function_name(i) {",505],["function Blur$function_name(subfield_managed) {",501],["plugin_parameters : other parameters added when the plugin is called by the dopop function",456],["'function' => \\&spa_cycle,",436],["'function' => \\&client_rc_file,",413],["'function' => \\&generic_exec,",384],["'function' => \\&server_conf_files,",324],["# function brace can't be on same line, except for #defines of do while,",302],["# Check for any sort of function declaration.",300]]},{"word":"functions","context":[["# check for spaces between functions and their parentheses.",301],["# Ignore functions being called",299],["## \t\t\t# falsly report the parameters of functions.",278],["# libraries through functions",203],["# in shared libraries through functions",203],["# don't use deprecated functions",150],["# functions",136],["# Note as optimized versions of these functions are added we need to add a check to ensure",106],["# fdct functions",96],["# high-level u01 file audit functions",84]]},{"word":"g","context":[["# This file is built by mktables from e.g. UnicodeData.txt.",2362],["my @stmt_lines = ($stmt =~ /\\n/g);",897],["s/\\r|\\n//g;",727],["$name =~ s/^\\\"|\\\"$//g;",697],["$stmt =~ s/(^|\\n)./$1/g;",598],["$s =~ s/\\n.*//g;",595],["$s =~ s/$;//g; \t# Remove any comments",582],["s/\\r//g;",542],["$dstat =~ s/\\\\\\n.//g;",431],["$name =~ s/^\\s+|\\s+$//g;",396]]},{"word":"generated","context":[["# This file is machine-generated by lib/unicore/mktables from the Unicode",5126],["# This file is machine-generated by mktables from the Unicode",4479],["# Remove the .err file the check generated",274],["# Remove the .result file the check generated",238],["vardir=DIR            The directory where files generated from the test run",149],["all generated configs",119],["my $path_config_file;           # The generated config file, var/my.cnf",119],["# Extra config file to append to all generated configs",119],["# This is an automatically generated prolog.",82],["print \"<!-- This file was generated by credits.pl. Do not edit by hand! -->\\n\";",68]]},{"word":"get","context":[["# get options",479],["or mtr_error(\"Could not get [embedded] section\");",238],["# get the interactor ui",236],["my $name=ProgramName::get();",228],["get(M, text_buffer, TB),",226],["sub get {",192],["# get the process ID",191],["if (which($net_effect < 0)->nelem > 0) { #which gets indices of non-0 values, nelem get nr of elements",190],["sub get_no2_reservoirs { #get species that are produced when radical species react with NO2",178],["for (0..$#$producers) { #get rates for all producing reactions",161]]},{"word":"git","context":[["if ($line =~ /^diff --git.*?(\\S+)$/) {",253],["if (-e \".git\") {",178],["my $git_last_include_commit = `git log --no-merges --pretty=format:\"%h%n\" -1 -- include`;",100],["$camelcase_cache = \".checkpatch-camelcase.git.$git_last_include_commit\";",99],["$files = `git ls-files \"include/*.h\"`;",99],["file.  It's your fault if there's no backup or git",93],["\"git log --no-color \" .",88],["my $output = `git log --no-color --format='%H %s' -1 $commit 2>&1`;",71],["return ($id, $desc) if ((which(\"git\") eq \"\") || !(-e \".git\"));",71],["return ($id, $desc) if ((which(\"git\") eq \"\") || !(-e \".git\"));",71]]},{"word":"given","context":[["pod2usage(\"$0: No files given.\") if ((@ARGV == 0) && (-t STDIN));",173],["Limit the results to entities where the given field has the given value.",160],["Limit the results to entities where the given field has the given value.",160],["Limit the results to entities where the given field is LIKE (in the sql sense) the given value.",160],["Limit the results to entities where the given field is LIKE (in the sql sense) the given value.",160],["# need to be given to the bootstrap process as well as the",129],["# One day for PID file creation (this is given in seconds not minutes)",119],["# If @ platform specifier given, use this entry only if it contains",119],["# If --start or --start-dirty given, stop here to let user manually",119],["# If --wait-all is also given, do the same, but don't die if one",119]]},{"word":"gnu","context":[["# along with Koha; if not, see <http://www.gnu.org/licenses>.",1906],["# along with this program.  If not, see <http://www.gnu.org/licenses/>.",1805],["# or see http://www.gnu.org/licenses/agpl.txt.",1024],["# along with Meran.  If not, see <http://www.gnu.org/licenses/>.",754],["<!-- Created by texinfo, http://www.gnu.org/software/texinfo/ -->",289],["along with this program.  If not, see <http://www.gnu.org/licenses/>.",240],["# <http://www.gnu.org/licenses/>.",224],["# along with this program. If not, see <http://www.gnu.org/licenses/>.",220],["# This software is placed under the gnu General Public License, v2 (http://www.gnu.org/licenses/gpl.html)",188],["# This software is placed under the gnu General Public License, v2 (http://www.gnu.org/licenses/gpl.html)",188]]},{"word":"grep","context":[["if (!grep(/$name/, @setup_docs)) {",278],["next if ( grep( /^$/, $_ ) );",246],["if ( grep($proc eq $_, started(all_servers())) )",238],["$common_processes{$_} = 1 for (grep { defined $production->{$_} } keys %$consumption) ;",190],["grep /^${re_section}\\s*$/ .. /^\\s*$/, @{$pdata->{data}};",181],["grep {",179],["grep(!/^$/,",145],["if ($srvproc && grep($srvproc eq $_, started(all_servers()))) {",119],["sub stopped { return grep(!defined $_, map($_->{proc}, @_)); }",119],["sub started { return grep(defined $_, map($_->{proc}, @_));  }",119]]},{"word":"group","context":[["mtr_add_arg($args, \"--defaults-group-suffix=%s\", $mysqld->after('mysqld'));",590],["mtr_add_arg($args, \"--defaults-group-suffix=%s\", $cluster->suffix());",356],["# parenthesis it is simply not a parameter group.",298],["mtr_add_arg($args, \"--defaults-group-suffix=%s\", $group_suffix);",248],["my $mysqld=  $config->group('embedded')",236],["# A colon can be substituted for the equals sign, and within each group",150],["# group below.  It could be that the tables will match the same set of code",145],["my $group;",140],["my $mysqld= $config->group('mysqld.1')",118],["$ENV{'MYSQLD_CMD'}= \"$exe_mysqld --defaults-group-suffix=.1 \".",108]]},{"word":"h","context":[["my @h = map { $_->[0] } @tuples;",452],["header => 'libgimpbase/gimpbaseenums.h',",348],["for my $result (@$h) {",307],["\"h\"\t   \t=> \\$help,",306],["print TESTFILE \"#include <$h>\\n\";",292],["if ($realfile !~ m@/vmlinux.lds.h$@ &&",290],["if ( $Opts{h} ) {",287],["'h|help'\t=> \\$help,",283],["-h, --help, --version      display this help and exit",280],["if ($tree && $rawline =~ m{^.\\s*\\#\\s*include\\s*\\<asm\\/(.*)\\.h\\>}) {",279]]},{"word":"handle","context":[["#make up the handle for any error we report on this line",303],["$row = $driver->next(-handle => $sth);",156],["# Helper function to handle configuration-based subdirectories which Visual",147],["my $handle;",129],["-f --fork            handle each request in a new process",114],["close($handle);",87],["# destroying the kid's database handle",72],["close $handle;",71],["# Solaris /usr/ccs/bin/as can't handle multiplications",62],["# handle variables",62]]},{"word":"has","context":[["# omitted, the range has just one code point.  Numbers in comments in",2478],["if ($name =~ /[^\\w \\-]/i) { ##has \"must quote\" chars",388],["# closing brace should have a space following it when it has anything",303],["# check if the ref image has this relation with this family already",265],["print \"$vname has no obvious style problems and is ready for submission.\\n\"",253],["print \"$filepath has been updated.\\n\";",253],["# memory.h: ARM has a custom one",243],["# It's not mysqltest that has exited, kill it",236],["# If this statement has no statement boundaries within",173],["::rptMsg($key_path.\" has no subkeys.\");",165]]},{"word":"hash","context":[["my %hash;",897],["# Put variables into hash",266],["my %hash = ();",176],["return $hash;",160],["my $hash;",138],["my ($global_var_href) = @_;                            # get reference to global vars hash",135],["if($hash{'nonewline'}) {",129],["my $hash= shift;",126],["return \\%hash;",126],["for (keys %$hash) {",126]]},{"word":"have","context":[["# You should have received a copy of the GNU General Public License",8214],["# You should have received a copy of the GNU General Public License along",4990],["# You should have received a copy of the GNU General Public License along with",1572],["You should have received a copy of the GNU Lesser General Public",1221],["# You should have received a copy of the GNU Affero General Public License",1163],["You should have received a copy of the GNU General Public License",1073],["#    You should have received a copy of the GNU General Public License",962],["# '*'s should not have spaces between.",584],["You should have received a copy of the GNU General Public",560],["#  You should have received a copy of the GNU General Public License",541]]},{"word":"head","context":[["</head>",1644],["<head>",1629],["=head",370],["print '<head>';",95],["print '</head>';",94],["print \"<head>\\n\";",89],["my $head = <IN>;",89],["print \"</head>\\n\";",82],["chomp $head;",79],["print \"=head1 $head\\n\\n\";",62]]},{"word":"head1","context":[["=head1 NAME",10375],["=head1 DESCRIPTION",9185],["=head1 SYNOPSIS",8183],["=head1 AUTHOR",3942],["=head1 OPTIONS",3597],["=head1 COPYRIGHT",2143],["=head1 AUTHORS",1895],["=head1 SEE ALSO",1549],["=head1 LICENSE",1429],["=head1 EXAMPLES",1047]]},{"word":"head2","context":[["=head2",298],["=head2 Related entities",240],["=head2 For more information:",176],["=head2 Command-Line Options",167],["=head2 plugin_parameters",158],["=head2 Usage",138],["=head2 Required Arguments",118],["=head2 Required flags",116],["=head2 Optional flags",110],["=head2 Output Format",95]]},{"word":"header","context":[["$form->header;",1358],["<div class=\"header\">",492],["header => 'libgimpbase/gimpbaseenums.h',",348],["my $header;",301],["print $input->header(",232],["print $query->header(",200],["my $header = 1;",195],["# return:      file header -- copyright",190],["$header = 0;",187],["# (not a header line and we haven't seen the patch filename)",176]]},{"word":"help","context":[["my $help;",1688],["if ($help) {",1398],["my $help = 0;",1198],["sub help {",957],["=item B<--help>",799],["pod2usage(1) if $help;",635],["Questions may also be sent to the Ensembl help desk at",588],["Print a brief help message and exits.",484],["=item B<-help>",403],["help();",376]]},{"word":"here","context":[["# Any changes made here will be lost!",2921],["# database, Version 6.1.0.  Any changes made here will be lost!",2613],["# database, Version 6.0.0.  Any changes made here will be lost!",1994],["# database, Version 6.2.0.  Any changes made here will be lost!",1762],["# database, Version 5.2.0.  Any changes made here will be lost!",1670],["my $herevet = \"$here\\n\" . cat_vet($rawline) . \"\\n\";",1470],["# database, Version 6.3.0.  Any changes made here will be lost!",1161],["my $herectx = $here . \"\\n\";",1071],["my $herevet = \"$here\\n\" . cat_vet($line) . \"\\n\";",1059],["\"$here\\n$ctx\\n$rawlines[$ctx_ln - 1]\\n\");",498]]},{"word":"herecurr","context":[["$herecurr);",2447],["\"trailing statements should be on next line\\n\" . $herecurr);",386],["\"externs should be avoided in .c files\\n\" .  $herecurr);",374],["#\t\t\tprint \"$herecurr\";",300],["$herecurr) if (!$emitted_corrupt++);",300],["my $herecurr = \"$here\\n$rawline\\n\";",299],["check_absolute_file($file, $herecurr);",280],["check_absolute_file($1, $herecurr)) {",280],["my ($absolute, $herecurr) = @_;",280],["# \t\t\tprint \"$herecurr\";",236]]},{"word":"hex","context":[["# starting code point of the range, in hex; STOP is the ending point, or if",2478],["print FILE pack (\"L\", hex (\"0\")) ;",923],["$code = hex($c);",194],["print FILE pack (\"C\", hex ($8)) ;",150],["print FILE pack (\"C\", hex ($3)) ;",150],["print FILE pack (\"C\", hex ($5)) ;",150],["print FILE pack (\"C\", hex ($6)) ;",150],["print FILE pack (\"C\", hex ($4)) ;",150],["print FILE pack (\"C\", hex ($2)) ;",150],["print FILE pack (\"C\", hex ($7)) ;",150]]},{"word":"holdsAt","context":[["holdsAt(close(Person, Person2, Dist) = false, T).",36],["holdsAt( appearance( id0 )=visible,  1040 ).",25],["holdsAt( appearance( id0 )=visible,  720 ).",24],["holdsAt( appearance( id0 )=visible,  880 ).",24],["holdsAt( appearance( id0 )=visible,  840 ).",24],["holdsAt( appearance( id0 )=visible,  400 ).",24],["holdsAt( appearance( id0 )=visible,  760 ).",24],["holdsAt( appearance( id0 )=visible,  1200 ).",23],["holdsAt( appearance( id0 )=visible,  960 ).",23],["holdsAt( appearance( id0 )=visible,  680 ).",23]]},{"word":"hope","context":[["# This program is distributed in the hope that it will be useful,",5883],["# Koha is distributed in the hope that it will be useful, but WITHOUT ANY",4849],["This program is distributed in the hope that it will be useful,",2563],["# Koha is distributed in the hope that it will be useful, but",1925],["# Meran is distributed in the hope that it will be useful,",754],["#    This program is distributed in the hope that it will be useful,",664],["# This program is distributed in the hope that it will be useful, but",581],["#   This program is distributed in the hope that it will be useful,",348],["#  This program is distributed in the hope that it will be useful,",346],["# This library is distributed in the hope that it will be useful,",318]]},{"word":"host","context":[["my $host;",220],["my $host = shift;",164],["# To make it easier for different devs to work on the same host,",149],["a build thread id that is unique to current host",119],["host          => undef,",119],["mtr_add_arg($args, \"--host=%s\", $mysqld->value('#host'));",118],["mtr_add_arg($args, \"--host=%s\", $mysqld->value('#host'));",118],["-h --host            host (defaults to all)",114],["-h --host            host (defaults to all)",114],["$host = $1;",105]]},{"word":"href","context":[[". p(a({-href=>\"javascript:back()\"}, \"go back and try again\"));",193],["<link href=\"#Top\" rel=\"start\" title=\"Top\">",174],["# escape callback for href",149],["# add column to href and callback",102],["print '<link href=\"xampp.css\" rel=\"stylesheet\" type=\"text/css\">';",89],["$result = \"<a href=\\\"$url\\\"\";",86],["print \"<a href=\\\"\"",76],["* one called when the ... link is clicked (<a href=\"javascript:function\">) named ClicXXX",69],[". p(a({-href=>\"javascript:back()\"}, \"please go back and check your selection\"));",60],["print qq|If you are not redirected automatically, click <a href=\"$url\">|",58]]},{"word":"html","context":[["</html>",2684],["<html>",1401],["print \"Content-type: text/html\\n\\n\";",834],["return $html;",619],["<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">",321],["# https://www.openssl.org/source/license.html",262],["Content-type: text/html",252],["my $html;",228],["<!DOCTYPE html>",195],["# This software is placed under the gnu General Public License, v2 (http://www.gnu.org/licenses/gpl.html)",188]]},{"word":"http","context":[["# along with Koha; if not, see <http://www.gnu.org/licenses>.",1906],["# along with this program.  If not, see <http://www.gnu.org/licenses/>.",1805],["#      http://www.apache.org/licenses/LICENSE-2.0",1764],["WWW:           http://www.swi-prolog.org",1432],["# or see http://www.gnu.org/licenses/agpl.txt.",1024],["#     http://www.apache.org/licenses/LICENSE-2.0",1020],["# details see http://www.openssl.org/~appro/cryptogams/.",1012],["# along with Meran.  If not, see <http://www.gnu.org/licenses/>.",754],["WWW:           http://www.swi.psy.uva.nl/projects/xpce/",688],["L<The SEED Project|http://www.theseed.org>",662]]},{"word":"i","context":[["$i++;",8458],["my $i = 0;",4002],["my $i;",2939],["$i = 0;",1674],["my $i=0;",1407],["$i=0;",1042],["if($text=~/Hail/i){",806],["my $i = 1;",701],["++$i;",614],["$i = 1;",566]]},{"word":"id","context":[["id",657],["=item id",634],["my $id = shift;",595],["my $id;",542],["line would contain the id. If some other column contains the id,",386],["line would contain the id. If some other column contains the id,",386],["where N is the column (from 1) that contains the id.",386],["$id = $1;",318],["return $id;",316],["my $id = $1;",309]]},{"word":"id1","context":[["holdsAt( appearance( id1 )=visible,  8040 ).",22],["holdsAt( appearance( id1 )=visible,  8880 ).",21],["holdsAt( appearance( id1 )=visible,  10080 ).",21],["holdsAt( appearance( id1 )=visible,  7760 ).",21],["holdsAt( appearance( id1 )=visible,  7600 ).",21],["holdsAt( appearance( id1 )=visible,  7400 ).",21],["holdsAt( appearance( id1 )=visible,  7880 ).",21],["holdsAt( appearance( id1 )=visible,  8240 ).",21],["holdsAt( appearance( id1 )=visible,  7360 ).",21],["holdsAt( appearance( id1 )=visible,  7800 ).",20]]},{"word":"idx","context":[["$idx++;",325],["my $idx = 0;",278],["addi\t\t$idx,$idx,16",246],["addi\t\t$idx,$idx,16",246],["$idx = $subdir{$dep}.$dep;",125],["my $idx;",107],["my $idx = ($upsample) ? (($channels - $i) - 1) : $i;",98],["$idx = 1;",90],["lvx\t\t$rndkey1,$idx,$key",90],["if ($idx) {",82]]},{"word":"if","context":[["if (C4::Context->preference(\"Version\") < TransformToNum($DBversion)) {",11887],["if ( CheckVersion($DBversion) ) {",4790],["if ($@) {",3876],["if ($verbose >= MAXVERBOSE);",3593],["# with Koha; if not, write to the Free Software Foundation, Inc.,",3538],["# along with this program; if not, write to the Free Software",3345],["if ( C4::Context->preference(\"Version\") < TransformToNum($DBversion) ) {",2830],["# including if adding or subtracting white space, underscore, and hyphen",2480],["# starting code point of the range, in hex; STOP is the ending point, or if",2478],["if (",2128]]},{"word":"ignore","context":[["# check we are in a valid source file if not then ignore this hunk",303],["#ignore lines not being added",303],["# A \\ in a string means ignore the next character.",299],["# Also ignore a loop construct at the end of a",296],["# ignore non-hunk lines and lines being removed",294],["# check we are in a valid C source file if not then ignore this hunk",293],["# check we are in a valid source file C or perl if not then ignore this hunk",284],["# with \"\\n\" ignore it, else it is to blame",284],["# ignore definitions of NR_CPUS and usage to define arrays as likely right",280],["# ignore udelay's < 10, however",237]]},{"word":"image","context":[["# render the image",266],["# check if the ref image has this relation with this family already",265],["'cmdname' => 'image',",253],["$image=Image::Magick->new;",130],["undef $image;",106],["if ($image) {",79],["my $image;",74],["print (\"image format: $imageFormat\\n\");",70],["image\t=> 1,",63],["my($image);",60]]},{"word":"implied","context":[["# but WITHOUT ANY WARRANTY; without even the implied warranty of",8483],["# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR",4860],["but WITHOUT ANY WARRANTY; without even the implied warranty of",3080],["# WITHOUT ANY WARRANTY; without even the implied warranty of",2637],["# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",2499],["#    but WITHOUT ANY WARRANTY; without even the implied warranty of",1043],["# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY",669],["#  but WITHOUT ANY WARRANTY; without even the implied warranty of",616],["#   but WITHOUT ANY WARRANTY; without even the implied warranty of",522],["#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",516]]},{"word":"in","context":[["# This program is distributed in the hope that it will be useful,",5883],["# Koha is distributed in the hope that it will be useful, but WITHOUT ANY",4849],["# Unless required by applicable law or agreed to in writing, software",2607],["This program is distributed in the hope that it will be useful,",2563],["# you may not use this file except in compliance with the License.",2546],["# [brackets] indicate how many code points are in the range.",2478],["# omitted, the range has just one code point.  Numbers in comments in",2478],["# omitted, the range has just one code point.  Numbers in comments in",2478],["# starting code point of the range, in hex; STOP is the ending point, or if",2478],["# Koha is distributed in the hope that it will be useful, but",1925]]},{"word":"include","context":[["next if ($rate->sum == 0); # do not include reactions that do not occur",349],["# check for malformed paths in #include statements (uses RAW line)",303],["if (!($line=~/\\#\\s*include/)) {",303],["# The pathname on a #include may be surrounded by '<' and '>'.",299],["if ($rawline =~ m{^.\\s*\\#\\s*include\\s+[<\"](.*)[\">]}) {",297],["if ($res =~ /^.\\s*\\#\\s*include\\s+\\<(.*)\\>/) {",297],["} elsif ($cur =~ /^(\\#\\s*(?:undef\\s*$Ident|include\\b))/o) {",297],["print TESTFILE \"#include <$h>\\n\";",292],["--summary-file             include the filename in summary",280],["if ($realfile =~ m@^include/asm/@) {",279]]},{"word":"indent","context":[["$previndent == $indent) {",598],["#   cperl-indent-level: 4",362],["my $indent;",318],["# Pick the indent from the front of the line.",303],["# indent level to be relevant to each other.",303],["# statements should be at the same indent.",303],["($previndent, $stashindent) = ($stashindent, $indent);",303],["# Measure the line length and indent.",303],["if ($nindent > $indent) {",300],["($length, $indent) = line_stats($rawline);",299]]},{"word":"index","context":[["$index++;",903],["my $index = 0;",642],["my $index= $input->param('index');",439],["my $index= $input->param('index');",439],["$template->param(index => $index,",409],["$template->param(index => $index,",409],["my ($index) = @_;",362],["my $index;",325],["my $index=0;",234],["return $index;",213]]},{"word":"info","context":[["my %info;",248],["$logger->info(",216],["for $db (@{$info->{db}}) {",197],["my %info = @_;",180],["Inverse inc. <info@inverse.ca>",178],["# Check failed, mark the test case with that info",149],["# Save info from this testcase run to mysqltest.log",145],["return $info;",136],["# Tie info developed on:",128],["my $info;",123]]},{"word":"information","context":[["# and COPYING for more information, or see http://slashcode.com/.",374],["Print debugging information.",203],["# Save this test case information, so next can examine it",179],["=head2 For more information:",176],["# This work contains copyrighted information from a number of sources all used",166],["# version.  For a full list including contact information of contributors,",164],["#  herein is confidential. The software may not be copied and the information",158],["#  This software is protected by Copyright and the information contained",158],["# get borrower information ....",154],["#  See the \"MySQL Test framework manual\" for more information",145]]},{"word":"init","context":[["sub init {",477],["use Gtk2 '-init';",353],["mark_time_used('init');",292],["init();",278],["# write init file for mysqld or client",272],["# We need \\b after 'init' otherwise 'initconst' will cause a false positive in a check",258],["\"fs\", \"init\", \"ipc\", \"kernel\", \"lib\", \"scripts\",",248],["Log::Log4perl::init(\\$log4Perl_config);",201],["__(?:mem|cpu|dev|)(?:initdata|initconst|init\\b)|",159],["if ($line =~ /\\b(__dev(init|exit)(data|const|))\\b/) {",127]]},{"word":"inout0","context":[["&movups\t(&QWP(0,$out),$inout0);",312],["xorps\t@tweak[0],$inout0",288],["movups\t$inout0,($out)",246],["aesenc\t\t$rndkey1,$inout0",175],["movups\t($inp),$inout0",168],["aes${dir}\t$rndkey1,$inout0",158],["&movups\t(&QWP(16*0,$out),$inout0);\t# write output",144],["vaesenc\t$rndkey,$inout0,$inout0",126],["vaesenc\t$rndkey,$inout0,$inout0",126],["aesdec\t\t$rndkey1,$inout0",117]]},{"word":"inp","context":[["lea\t16($inp),$inp",235],["lea\t16($inp),$inp",235],["movups\t($inp),$inout0",168],["vld1.8\t{@XMM[8]-@XMM[9]}, [$inp]!\t@ reload input",156],["&mov\t($_inp,$acc);\t\t# save inp",138],["&mov\t($acc,$_inp);\t\t# load inp",138],["vld1.8\t{@XMM[15]}, [$inp]!",130],["&lea\t($acc,&DWP(16,$acc));\t# advance inp",126],["&add\t($inp,64);",124],["ldx\t\t[$inp + 0], %o0",120]]},{"word":"input","context":[["output_html_with_http_headers $input, $cookie, $template->output;",3631],["query           => $input,",2098],["my $input = new CGI;",1973],["query => $input,",1724],["my ($input) = @_;",1000],["This is a pipe command. The input is taken from the standard input, and the",493],["This is a pipe command. The input is taken from the standard input, and the",493],["The standard input should be a tab-separated table (i.e., each line",492],["my $index= $input->param('index');",439],["my $result= $input->param('result');",428]]},{"word":"insns","context":[["eval(shift(@insns));",14269],["eval(shift(@insns));\t\t# rol",546],["eval(shift(@insns));\t\t# ror",440],["eval(shift(@insns));\t\t# body_20_39",376],["eval(shift(@insns));\t#@",336],["my @insns = (&$body,&$body,&$body,&$body);\t# 32 instructions",282],["foreach (@insns) { eval; }\t\t# remaining instructions",251],["eval(shift(@insns));\t\t\t# @",230],["foreach (@insns) { eval; }",215],["foreach (@insns) { eval; }\t# remaining instructions [if any]",133]]},{"word":"instead","context":[["\"use relative pathname instead of absolute in changelog text\\n\" . $herecurr);",190],["\"Use #include <linux/$file> instead of <asm/$file>\\n\" . $herecurr);",185],["\"Consider using #include <linux/$file> instead of <asm/$file>\\n\" . $herecurr);",185],["\"$1 is obsolete, use k$3 instead\\n\" . $herecurr);",167],["\"Use of $flag is deprecated, please use \\`$replacement->{$flag} instead.\\n\" . $herecurr) if ($replacement->{$flag});",167],["# default system locations, instead of having our own private base",149],["failures will be marked exp-fail instead of fail.",119],["$opt_shutdown_timeout= 0; # Kill processes instead of nice shutdown",119],["# Wait a bit and see if a server died, if so report that instead",119],["# in which case the provisions of the GPL or the LGPL are applicable instead",116]]},{"word":"int","context":[["`borrowernumber` int(11) NOT NULL,",306],["# int foo(something bar, other baz);",300],["#  1. with a type on the left -- int [] a;",296],["int i;",228],["qr{(?:unsigned\\s+)?int},",224],["qr{(?:unsigned\\s+)?long\\s+long\\s+int},",224],["qr{(?:unsigned\\s+)?long\\s+int},",224],["borrowernumber int(11) NOT NULL,",209],["`id` int(11) NOT NULL auto_increment,",201],["`itemnumber` int(11) default NULL,",162]]},{"word":"internal","context":[["# This file is for internal use by core Perl only.  The format and even the",5878],["# This file is for internal use by the Perl program only.  The format and even",4650],["\"\\nMTR's internal check of the test case '$tname' failed.",119],["# list-options is internal, not listed in help",115],["# This file is for internal use by core Perl only.  It is retained for",63],["# internal purposes",63],["\" $basedir/internal/plugin/*/tests/mtr/plugin.defs\".",61],["'internal' => 1,",54],["# -3 : authentication system/internal error",47],["# Start of ugly internal SVN file hack",41]]},{"word":"into","context":[["# Put $args into a single string",302],["# Put variables into hash",266],["# Add arguments that should not go into the MYSQL_TEST env var",145],["# --datadir must exist, mysqld will chdir into it",144],["# The syslogd writes it into a file and through a pipe.",143],["# Converts logged information from this module into human-readable form",120],["# belonging to current tets into @lines",119],["# copy all files from std_data into var/std_data",119],["# suspicious into $error_log.warnings",119],["# and slurp entire file into variable",76]]},{"word":"intranet","context":[["type            => \"intranet\",",3059],["type => \"intranet\",",2074],["type            => 'intranet',",396],["'intranet'",210],["type          => \"intranet\",",79],["type => 'intranet',",77],["\"intranet\"",66],["type                => \"intranet\",",51],["$interface = 'intranet';",45],["$dat->{imageurl} = getitemtypeimagelocation( 'intranet', $itemtypes->{ $dat->{itemtype} }{imageurl} );",33]]},{"word":"is","context":[["# This file is part of Koha.",6644],["# This program is distributed in the hope that it will be useful,",5883],["# This file is for internal use by core Perl only.  The format and even the",5878],["# This file is machine-generated by lib/unicore/mktables from the Unicode",5126],["# Koha is distributed in the hope that it will be useful, but WITHOUT ANY",4849],["# Koha is free software; you can redistribute it and/or modify it under the",4845],["# This file is for internal use by the Perl program only.  The format and even",4650],["# This file is machine-generated by mktables from the Unicode",4479],["# This program is free software; you can redistribute it and/or modify",3916],["# distributed under the License is distributed on an \"AS IS\" BASIS,",2592]]},{"word":"it","context":[["# This program is distributed in the hope that it will be useful,",5883],["# it under the terms of the GNU General Public License as published by",5449],["# use it directly.",5354],["# Koha is distributed in the hope that it will be useful, but WITHOUT ANY",4849],["# Koha is free software; you can redistribute it and/or modify it under the",4845],["# Koha is free software; you can redistribute it and/or modify it under the",4845],["# This program is free software; you can redistribute it and/or modify",3916],["# Don't use it directly.",3636],["This program is distributed in the hope that it will be useful,",2563],["This program is free software; you can redistribute it and/or",2016]]},{"word":"item","context":[["=item *",2839],["'cmdname' => 'item',",991],["=item B<--help>",799],["=item B<--man>",648],["=item id",634],["@item aaa",412],["=item B<-help>",403],["=item source_id",377],["=item B<-man>",351],["=item -",336]]},{"word":"itemnumber","context":[["`itemnumber` int(11) default NULL,",162],["priority, found, timestamp, itemnumber,",108],["`itemnumber` int(11) NOT NULL,",104],["if ($itemnumber) {",74],["my $itemnumber = GetItemnumberFromBarcode($barcode);",72],["WHERE items.itemnumber=issues.itemnumber",69],["WHERE items.itemnumber=issues.itemnumber",69],["my $item = GetItem( $itemnumber );",66],["my $itemnumber;",62],["itemnumber     => $itemnumber,",58]]},{"word":"items","context":[["my @items;",419],["items => [",292],["shift @items;",133],["while (@items) {",129],["$dbh->do(\"ALTER TABLE items",114],["$dat->{ITEM_RESULTS}   = \\@items;",110],["foreach my $item (@items) {",102],["# adding items linked via host biblios",93],["Barcode: <<items.barcode>><br />",93],["my ($tagfield,$tagsubfield) = &GetMarcFromKohaField(\"items.barcode\",$frameworkcode);",87]]},{"word":"iter","context":[["for ($iter=0; $iter< $total_rows; $iter++){",447],["for ($iter=0; $iter< $total_rows; $iter++){",447],["for ($iter=0; $iter< $total_rows; $iter++){",447],["my $iter = 0;",428],["my $iter = 0 ;",280],["$iter = $iter + 1 ;",193],["$iter = $iter + 1 ;",193],["if($uboot_alias{$PARTITION_FIELD[$iter]}){",166],["last if($PARTITION_FIELD[$iter] eq \"BMTPOOL\" || $PARTITION_FIELD[$iter] eq \"OTP\");",161],["last if($PARTITION_FIELD[$iter] eq \"BMTPOOL\" || $PARTITION_FIELD[$iter] eq \"OTP\");",161]]},{"word":"its","context":[["# first statement and ensure its the whole macro if its not enclosed",299],["# first statement and ensure its the whole macro if its not enclosed",299],["# An else is really a conditional as long as its not else if",299],["# If this whole things ends with a type its most",298],["\"EXPORT_SYMBOL(foo); should immediately follow its function/variable\\n\" . $herecurr);",184],["# Test failure was detected by test tool and its report",119],["# Get log from server identified from its $proc object, from named test",119],["# * Neither the name of VMware, Inc. nor the names of its contributors may be",111],["WARN(\"EXPORT_SYMBOL(foo); should immediately follow its function/variable\\n\" . $herecurr);",99],["# The server receives the message on its UDP socket.",93]]},{"word":"j","context":[["$j++;",1505],["mulq\t$m1\t\t\t# np[j]*m1",728],["my $j = 0;",553],["mulq\t$m0\t\t\t# ap[j]*bp[i]",388],["$j = 0;",373],["my $j;",351],["mulq\t$m0\t\t\t# ap[j]*bp[0]",340],["my $j=0;",332],["$j=0;",256],["my $j=$i+1;",241]]},{"word":"jmp","context":[["jmp\t.Lexit",186],["jmp\t.Lecb_ret",182],["jmp\t.Lxts_enc_done",142],["&jmp\t(&label(\"loop\"));",140],["jmp\t.Lxts_dec_done",128],["jmp\t.Lcommon_seh_tail",111],["&jmp\t(&label(\"exit\"));",101],["jmp\t.Lcbc_dec_tail_collected",98],["&jmp\t(&label(\"ecb_ret\"));",96],["jmp\t.Lecb_enc_done",91]]},{"word":"join","context":[[".join(',',@current_algorithms).\";\";",605],[".join(',',@current_platforms).\":\"",331],["my $ctx = join(\"\\n\", @ctx);",308],["print join(\"\\t\", $line, @$result) . \"\\n\";",306],["print \" <\" . join('', @av_paren_type) .",299],["my $str= join(\" \", @$$args);",266],["my $all = \"(?x:  \\n\" . join(\"|\\n  \", @typeList) . \"\\n)\";",249],["my $mods = \"(?x:  \\n\" . join(\"|\\n  \", @modifierList) . \"\\n)\";",249],["join(\" \", @{$started_opts}) . \"'\" );",238],["join(\" \", @{$extra_opts}) . \"' != '\" .",238]]},{"word":"just","context":[["# omitted, the range has just one code point.  Numbers in comments in",2478],["# just keep quiet.",300],["# so just keep quiet.",299],["\"boolean test with hexadecimal, perhaps just 1 \\& or \\|?\\n\" . $herecurr);",193],["# Allow just an angle bracketed address",192],["# If marked to skip, just print out and return.",149],["# Add test data for timezone - this is just a subset, on a real",147],["# Fill help tables, just an empty file when running from bk repo",135],["prefix may be suite.testname or just testname",119],["# This is the current version, just continue",119]]},{"word":"k","context":[["$k++;",422],["my $k;",245],["\"$1 is obsolete, use k$3 instead\\n\" . $herecurr);",167],["while (my($k, $v) = each %$h)",160],["print join(\"\\t\", $k, map { ref($_) eq 'ARRAY' ? join(\",\", @$_) : $_ } @$v{@fields}), \"\\n\";",160],["$k = 0;",151],["my $k = 0;",143],["double k;",138],["-k --keepalive       enable keep-alive connections",114],["my $k=0;",92]]},{"word":"kernel","context":[["print \"Must be run from the top-level dir. of a kernel tree\\n\";",285],["if ($1 =~ m@Documentation/kernel-parameters.txt$@) {",284],["# Check for absolute kernel paths.",278],["--root=PATH                PATH to the kernel tree root",273],["} elsif ($realfile !~ m@^kernel/@) {",272],["--no-tree                  run without a kernel tree",267],["\"fs\", \"init\", \"ipc\", \"kernel\", \"lib\", \"scripts\",",248],["if ($realfile !~ m@^kernel/lockdep@ &&",248],["[\"storage/ndb/src/kernel\", \"libexec\", \"sbin\", \"bin\"],",193],["\"use of in_atomic() is incorrect outside core kernel code\\n\" . $herecurr);",184]]},{"word":"key","context":[["$noresave{$key} = \"$nosave\";",6902],["$cached_env_img{$key} = q|<IMG",3477],["my $key;",1582],["$pdb->{$section}->{$machine}{$lane}{$stage}{delta}{$key};",1142],["if ($key = $root_key->get_subkey($key_path)) {",770],["key     => '',",577],["my $key = shift;",490],["$key,",459],["foreach my $key (keys %{$pu01->{$section}->{data}})",450],["printf $outfh \",%s\", $key;",406]]},{"word":"keys","context":[["foreach my $product (sort keys %{$totals{by_product}})",618],["foreach my $key (keys %{$pu01->{$section}->{data}})",450],["if ( keys(%started) == 0){",357],["return 0 unless ( keys %started );",357],["my @f = keys %all_fields;",306],["foreach my $key (sort keys %{$totals{$section}{by_machine}{$machine}})",306],["foreach my $key (sort keys %{$totals{$section}{by_machine_lane}{$machine}{$lane}})",301],["for my $key (keys %debug) {",300],["foreach my $product (sort keys %{$totals{$section}{by_product}})",286],["#     foreach my $product (sort keys %{$totals{$section}{by_product}})",255]]},{"word":"l","context":[["my $l = '';",331],["chomp $l;",273],["my $l;",244],["chomp($l);",214],["$l++;",212],["system \"$perl_dir/perl $scripts_dir/logging.pl -v $log -l \\'$log_file\\' -p $priority -m \\'$message\\'\";",176],["if ($line =~ /\\b((simple|strict)_(strto(l|ll|ul|ull)))\\s*\\(/) {",167],["if ( -l $opt_vardir )",149],["if ( -l $opt_vardir)",149],["my @l = ();",122]]},{"word":"label","context":[["lea\t(%rsi,%r10),%r10\t# epilogue label",334],["cmp\t%r10,%rbx\t\t# context->Rip>=epilogue label",306],["# terminating a case value or a label.",296],["cmp\t%r10,%rbx\t\t# context->Rip<prologue label",226],["lea\t(%rsi,%r10),%r10\t# prologue label",201],["&call\t(&label(\"pic_point\"));",176],["'label' => {},",166],["&jmp\t(&label(\"loop\"));",140],["#\tNOTE:\tThe following label name should be changed to",140],["my $label;",132]]},{"word":"lane","context":[["my $lane = $pu01->{lane};",1409],["my $lane = $pu01->{lane};",1409],["$pdb->{$section}->{$machine}{$lane}{$stage}{state} = DELTA;",1151],["$pdb->{$section}->{$machine}{$lane}{$stage}{delta}{$key};",1142],["$pdb->{$section}->{$machine}{$lane}{$stage}{state}",980],["delete $pdb->{$section}->{$machine}{$lane}{$stage}{cache};",718],["my $state = $pdb->{$section}->{$machine}{$lane}{$stage}{state};",388],["delete $pdb->{$section}->{$machine}{$lane}{$stage}{delta};",376],["$lane          = $parts[3];",376],["#     my $lane = $pu01->{lane};",340]]},{"word":"lang","context":[["<body lang=\"en\" bgcolor=\"#FFFFFF\" text=\"#000000\" link=\"#0000FF\" vlink=\"#800080\" alink=\"#FF0000\">",282],["at java.lang.Thread.run(Thread.java:619)',",106],["$dbh->do(\"INSERT INTO language_descriptions(subtag, type, lang, description)",91],["at java.lang.Object.wait(Native Method)",86],["return $lang;",58],["for my $l (sort { $b->{percentage} <=> $a->{percentage} } @lang) {",53],["$lang=$_;",51],["$lang=~s/\\.po//;",50],["$lang",48],["java.lang.Thread.State: WAITING (on object monitor)",46]]},{"word":"language","context":[["# See the License for the specific language governing permissions and",2505],["'language' => 'en',",1540],["#  See the License for the specific language governing permissions and",516],["## See the License for the specific language governing permissions and",251],["% the License for the specific language governing rights and limitations",245],["See the License for the specific language governing permissions and",192],["#   See the License for the specific language governing permissions and",160],["# Look for language files and charsetsdir, use same share",147],["# for the specific language governing rights and limitations under the",121],["# implied. See the License for the specific language governing",117]]},{"word":"last","context":[["last;",27643],["last SWITCH;",864],["last if ($level == 0);",604],["is a tab-separated set of fields).  Normally, the last field in each",493],["last FMTSW;",445],["last SUB;",431],["last if (!($remain > 0 && $condition =~ /^(?:\\s*\\n[+-])*\\s*(?:else|do)\\b/s));",299],["last if (!defined $lines[$line]);",294],["last if (!defined $rawlines[$ln - 1]);",292],["last if ($word =~ m/^#/);",240]]},{"word":"later","context":[["# (at your option) any later version.",6573],["# Foundation; either version 2 of the License, or (at your option) any later",4705],["of the License, or (at your option) any later version.",1905],["# any later version.",1381],["#    (at your option) any later version.",921],["# of the License, or (at your option) any later version.",883],["(at your option) any later version.",799],["# later version.",465],["#  (at your option) any later version.",404],["#   (at your option) any later version.",335]]},{"word":"lc","context":[["my $level = lc($orig);",261],["my $ucfirst_sign_off = ucfirst(lc($sign_off));",192],["$lc = $lc + $linenr;",179],["$lc = $lc + $linenr;",179],["my $lc = $stat =~ tr@\\n@@;",179],["for (my $count = $linenr + 1; $count <= $lc; $count++) {",179],["mtr_add_arg($args, \"--lc-messages-dir=%s\", $path_language);",129],["$name = lc $name;",125],["if ( lc($opt_build_thread) eq 'auto' ) {",119],["mtr_add_arg($args, \"--lc-messages-dir=%s\", $install_lang);",108]]},{"word":"ldr","context":[["ldr\t$rounds, [$key, #240]\t\t@ get # of rounds",104],["ldr\tr12, [$key, #244]",104],["ldr\tr12,.LOPENSSL_armcap",71],["ldr\t$t1,[$t3],#4\t\t\t@ rcon[i++]",69],["ldr\t$s3,[$rounds,#12]",57],["ldr\t$s0,[$rounds,#0]",57],["ldr\t$s2,[$rounds,#8]",57],["ldr\t$s1,[$rounds,#4]",57],["ldr\tr12,[r3,r12]\t\t@ OPENSSL_armcap_P",53],["ldr\tr5,[$inp,#240]\t\t\t@ pass rounds",52]]},{"word":"lea","context":[["lea\t(%rsi,%r10),%r10\t# epilogue label",334],["lea\t56(%rsi),%r11\t\t# &disp->HandlerData",331],["lea\t24(%rsi),%r12\t\t# &disp->EstablisherFrame",331],["lea\t48(%rsi),%rsp",291],["lea\t16($inp),$inp",235],["lea\t1($i),$i\t\t# i++",214],["lea\t(%rsi),%rsp",212],["lea\t1($j),$j\t\t# j++",208],["lea\t512($context),%rdi\t# &context.Xmm6",206],["lea\t(%rsi,%r10),%r10\t# prologue label",201]]},{"word":"left","context":[["# A colon can be substituted for the equals sign, and anything to the left of",2251],["# none after.  May be left adjacent to another",300],["#  1. with a type on the left -- int [] a;",296],["div.example {margin-left: 3.2em}",290],["div.lisp {margin-left: 3.2em}",290],["div.smalllisp {margin-left: 3.2em}",290],["div.smallexample {margin-left: 3.2em}",290],["div.display {margin-left: 3.2em}",290],["div.smalldisplay {margin-left: 3.2em}",290],["# If there's a name left after stripping spaces and",194]]},{"word":"len","context":[["if ($off >= $len) {",599],["my $len = 0;",490],["#warn \"CSB: blk<$blk> off<$off> len<$len>\\n\";",300],["#warn \"CSB: blk<$blk> off<$off> len<$len>\\n\";",300],["if ($off == $len) {",300],["$len = length($blk);",300],["$loff = $len;",299],["$loff = $len + 1;",296],["#print \"LINE<$lines[$ln-1]> len<\" . length($lines[$ln-1]) . \"\\n\";",292],["&loop_unroll_c($content, 'len', 4);",194]]},{"word":"length","context":[["substr($block, 0, length($cond), '');",896],["substr($s, 0, length($c), '');",890],["my $clean = 'X' x length($1);",598],["my $length;",430],["my $length = 0;",378],["$dec = length $dec;",372],["$off += length($elements[$n + 1]);",303],["# Measure the line length and indent.",303],["if (length($opline) >= ($off + length($elements[$n + 1]))) {",303],["if (length($opline) >= ($off + length($elements[$n + 1]))) {",303]]},{"word":"level","context":[["$level++;",1226],["$level--;",1162],["'level' => 1,",1112],["'level' => 0,",694],["my $level = 0;",681],["last if ($level == 0);",604],["return ($level, $linenr, @chunks);",598],["($statement, $condition, $linenr, $remain, $off, $level) =",598],["my ($level, $endln, @chunks) =",597],["'level' => 2,",521]]},{"word":"lib","context":[["# This file is machine-generated by lib/unicore/mktables from the Unicode",5126],["use lib \"$FindBin::Bin/../lib\";",854],["use lib \"$FindBin::Bin/../lib\";",854],["use lib dirname($RealBin);",764],["use lib dirname($RealBin) . '/Kernel/cpan-lib';",561],["use lib dirname($RealBin) . '/Kernel/cpan-lib';",561],["use lib dirname($RealBin) . '/Custom';",521],["use lib \"../../../lib\";",446],["use lib \"../../../lib\";",446],["use lib 'lib';",428]]},{"word":"library","context":[["License along with this library; if not, write to the Free Software",1762],["As a special exception, if you link this library with other files,",1585],["library does not by itself cause the resulting executable to be covered",1583],[":- use_module(library(lists)).",1109],[":- use_module(library(pce)).",694],["This library is free software. You can redistribute it and/or modify",577],[":- use_module(library(error)).",495],[":- use_module(library(debug)).",449],[":- use_module(library(apply)).",404],[":- use_module(library(option)).",335]]},{"word":"license","context":[["# Licensed under the OpenSSL license (the \"License\").  You may not use",262],["# https://www.openssl.org/source/license.html",262],["% at www.eclipse-clp.org/license.",245],["# http://www.zimbra.com/license.",189],["# Use is subject to license terms.",129],["$license = \"MIT/X11 (BSD like) $license\";",128],["$license = \"MIT/X11 (BSD like) $license\";",128],["# contributor license agreements.  See the NOTICE file distributed with",121],["# license that can be found in the LICENSE file.",121],["# or more contributor license agreements.  See the NOTICE file",105]]},{"word":"licenses","context":[["# along with Koha; if not, see <http://www.gnu.org/licenses>.",1906],["# along with this program.  If not, see <http://www.gnu.org/licenses/>.",1805],["#      http://www.apache.org/licenses/LICENSE-2.0",1764],["# or see http://www.gnu.org/licenses/agpl.txt.",1024],["#     http://www.apache.org/licenses/LICENSE-2.0",1020],["# CRYPTOGAMS licenses depending on where you obtain it. For further",1012],["# along with Meran.  If not, see <http://www.gnu.org/licenses/>.",754],["# http://www.apache.org/licenses/LICENSE-2.0",258],["##    http://www.apache.org/licenses/LICENSE-2.0",246],["along with this program.  If not, see <http://www.gnu.org/licenses/>.",240]]},{"word":"like","context":[["# directly before it executes them, like \"make test-force-pl\" in RPM builds.",149],["$license = \"MIT/X11 (BSD like) $license\";",128],["sub _like   { return $config ? $config->like($_[0]) : (); }",119],["# look like that in function my_print_variables in my_getopt.c",111],["#Ignore SI style variants like nS, mV and dB (ie: max_uV, regulator_min_uA_show)",101],["# Output like:",99],["[Loader opts like db_schema, naming] dbi:Pg:dbname=foo root 4321",97],["[connect_info opts like quote_char, name_sep]",97],["# check for function declarations without arguments like \"int foo()\"",93],["$license = \"BSD-like $license\";",90]]},{"word":"limit","context":[["#80 column limit",157],["# On some operating systems, there is a limit to the length of a",147],["# Find the end of the macro and limit our statement",124],["$opt_parallel-- if ($sys_info->min_bogomips() < $limit);",119],["$opt_max_save_datadir, set to 0 for no limit. Set",119],["$opt_max_save_core, set to 0 for no limit. Set",119],["$opt_max_test_fail, set to 0 for no limit. Set",119],["for my $limit (2000, 1500, 1000, 500){",119],["push(@args_check_list, { name => \"\\\"$arg_name\\\"\", arg => \"${arg_name}len\", limit => $limit });",87],["push(@args_check_list, { name => \"\\\"$arg_name\\\"\", arg => \"${arg_name}len\", limit => $limit });",87]]},{"word":"line","context":[["chomp $line;",5330],["chomp($line);",4703],["my $line;",4054],["my $line = $_;",2145],["foreach my $line (@lines) {",1573],["$line++;",1236],["my ($line) = @_;",1169],["my $herevet = \"$here\\n\" . cat_vet($line) . \"\\n\";",1059],["return $line;",915],["print $line;",865]]},{"word":"line_nr","context":[["'line_nr' => {",12420],["'line_nr' => {},",2801],["'line_nr' => 1,",1782],["'line_nr' => 2,",944],["'line_nr' => 5,",873],["'line_nr' => 3,",857],["'line_nr' => 4,",758],["'line_nr' => 6,",653],["'line_nr' => 7,",507],["'line_nr' => 8,",463]]},{"word":"linenr","context":[["my ($linenr, $remain, $off) = @_;",1201],["my ($linenr, $remain) = @_;",909],["$herectx .= raw_line($linenr, $n) . \"\\n\";",773],["$linenr++;",640],["if (!ctx_has_comment($first_line, $linenr)) {",625],["ctx_statement_block($linenr, $realcnt, 0);",603],["return ($level, $linenr, @chunks);",598],["($statement, $condition, $linenr, $remain, $off, $level) =",598],["ctx_statement_block($linenr, $remain, $off);",598],["$fixed[$linenr - 1] =~",549]]},{"word":"lines","context":[["# The format of the lines of this file is: START\\tSTOP\\twhere START is the",2478],["foreach my $line (@lines) {",1573],["my @lines = ();",967],["my @lines;",862],["push(@lines, $line);",567],["#print \"APW: ALLOWED: lines block<$block>\\n\";",557],["return @lines;",519],["@lines = ();",469],["$cnt-- if ($lines[$ln - 1] !~ /^-/);",344],["#ignore lines not being added",303]]},{"word":"link","context":[["As a special exception, if you link this library with other files,",1585],["my @default_fields = ('from-link', 'to-link');",306],["my @default_fields = ('from-link', 'to-link');",306],["<body lang=\"en\" bgcolor=\"#FFFFFF\" text=\"#000000\" link=\"#0000FF\" vlink=\"#800080\" alink=\"#FF0000\">",282],["<link href=\"#Top\" rel=\"start\" title=\"Top\">",174],["# Runinng with \"var\" as a link to some \"memory\" location, normally tmpfs",149],["# Remove the directory which the link points at",149],["# Some users creates a soft link in mysql-test/var to another area",145],["my $link;",112],["print '<link href=\"xampp.css\" rel=\"stylesheet\" type=\"text/css\">';",89]]},{"word":"list","context":[["notice, this list of conditions and the following disclaimer.",703],["notice, this list of conditions and the following disclaimer in",644],["entity to return. Field-list is a comma-separated list of strings. The",612],["Choose a set of fields from the relationship to return. Field-list is a comma-separated list of",612],["Choose a set of fields from the relationship to return. Field-list is a comma-separated list of",612],["entity to return. Field-list is a comma-separated list of strings. The",612],["my @list;",534],["developers list at <http://lists.ensembl.org/mailman/listinfo/dev>.",512],["--fields list   Choose a set of fields to return. List is a comma-separated list of strings.",320],["--fields list   Choose a set of fields to return. List is a comma-separated list of strings.",320]]},{"word":"ln","context":[["my $ln = $linenr;",442],["($dstat, $dcond, $ln, $cnt, $off) =",431],["$ln++;",347],["$cnt-- if ($lines[$ln - 1] !~ /^-/);",344],["my $ln = $linenr - 1;",300],["$ln += statement_rawlines($block) - 1;",298],["$suppress_ifbraces{$ln + $offset} = 1;",298],["$herectx .= \"$rawlines[$ln + $offset]\\n[...]\\n\";",298],["$rawlines[$ln - 1] =~ /^-/);",294],["for (my $ln = $linenr + 1; $cnt > 0; $ln++) {",294]]},{"word":"lo","context":[["# Blackfin: use hi/lo macros",263],["movzb\t`&lo(\"$s0\")`,$acc0",80],["movzb\t`&lo(\"$s1\")`,$acc1",80],["movzb\t`&lo(\"$s2\")`,$acc2",80],["movzb\t`&lo(\"$s3\")`,$acc1",80],["movzb\t`&lo(\"$s0\")`,$acc2",80],["movzb\t`&lo(\"$s2\")`,$acc0",80],["movzb\t`&lo(\"$s1\")`,$acc2",72],["ldr\t$t2, [$ctx,#$Doff+$lo]",48],["ldr\t$t0, [$ctx,#$Coff+$lo]",48]]},{"word":"load","context":[["$ui->load(\\*FU);",157],["&mov\t($acc,$_inp);\t\t# load inp",138],["&mov\t($s2,$_len);\t\t# load len",132],["sub load",126],["&mov\t($key,$_key);\t\t# load key",126],["local-load= $opt_tmpdir",119],["&mov\t($acc,&DWP(240,$key));\t\t# load key->rounds",116],["vldmia\t\t$magic, {$twmask}\t@ load XTS magic",104],["movdqu\t0x00($inp), @XMM[0]\t# load input",99],["next unless (load($pu01) != 0);",99]]},{"word":"local","context":[["#!/usr/local/bin/perl",2068],["#!/usr/local/bin/perl -w",1188],["local $/;",918],["local $_;",810],["local @rv;",781],["local $/ = undef;",744],["local $\\ = '';",609],["local $_ = shift;",341],["local($_) = @_;",314],["local *FH;",308]]},{"word":"locale","context":[["my $locale   = $main::locale;",408],["my $locale   = $main::locale;",408],["locale => $locale,",316],["locale => $locale,",316],[". $locale->text('Continue')",205],["use locale;",156],["# with output which is incompatible with the current locale",149],[". $locale->text('Description')",120],["$locale->text(",113],["<th>| . $locale->text('Attached at') . qq|</th>",100]]},{"word":"log","context":[["my $log_file_name= $opt_vardir.\"/log/\".$tinfo->{shortname}.\".log\";",250],["my $log_file_name= $opt_vardir.\"/log/\".$tinfo->{shortname}.\".log\";",250],["# Open the test log file",238],["# Write start of testcase to log file",238],["mark_log($mysqld->value('#log-error'), $tinfo);",236],["system \"$perl_dir/perl $scripts_dir/logging.pl -v $log -l \\'$log_file\\' -p $priority -m \\'$message\\'\";",176],["# Check if it's the start of a commit log",176],["\"8-bit UTF-8 used in possible commit log\\n\" . $herecurr);",176],["# Open the servers .err log file and read all lines",155],["$Ferr = undef; # Close error log file",155]]},{"word":"log_fh","context":[["#     printf $log_fh \"%d: File %s already exists\\n\", __LINE__, $outfnm if ( -e $outfnm);",510],["printf $log_fh \"\\n\";",500],["printf $log_fh \"ENTRY STATE: %s\\n\",",373],["printf $log_fh \"\\nSECTION  : %s\\n\", $section",252],["printf $log_fh \"STAGE    : %d\\n\", $stage;",252],["printf $log_fh \"MACHINE  : %s\\n\", $machine;",252],["printf $log_fh \"LANE     : %d\\n\", $lane;",252],["printf $log_fh \"OUTPUT NO: %s\\n\", $output_no;",252],["printf $log_fh \"\\t%-${section_precision}s: %d\\n\",",248],["printf $log_fh \"%-8d \",",248]]},{"word":"logfile","context":[["my $logfile;",350],["$logfile = server_logfilename($LOGDIR, $proto, $ipvnum, $idnum);",277],["$flags .= \"--pidfile \\\"$pidfile\\\" --logfile \\\"$logfile\\\" \";",207],["$flags .= \"--pidfile \\\"$pidfile\\\" --logfile \\\"$logfile\\\" \";",207],["log4perl.appender.LOGFILE.filename=$logfile",200],["my $logfile = '';",164],["--logfile, --log=FILE               log to FILE (default: *STDOUT)",131],["--logpath=PATH                      write logfile to PATH (default: .)",127],["--logappend, --log_append           append to logfile (default: truncate)",126],["my $logfile='/var/log/openbib/split-$pool.log';",120]]},{"word":"logmsg","context":[["logmsg \"RUN: failed to start the $srvrname server\\n\";",277],["logmsg \"RUN: $srvrname server failed verification\\n\";",276],["logmsg \"-time-  test\\n\";",174],["logmsg \"------  ----\\n\";",174],["logmsg \"$txt\\n\";",174],["logmsg \"RUN: $cmd\\n\" if($verbose);",116],["logmsg \"RUN: curl command died with a coredump\\n\";",112],["logmsg \"SCP, SFTP and SOCKS tests require OpenSSH 2.9.9 or later\\n\";",93],["logmsg \"RUN: curl command returned $res\\n\";",87],["logmsg \"Warning: $server server unexpectedly alive\\n\";",87]]},{"word":"long","context":[["# Find out how long the conditional actually is.",588],[".long\t0xa548f3fc\t\t# cld; rep movsq",586],[".long\t0",564],["# An else is really a conditional as long as its not else if",299],["# warn about unexpectedly long msleep's",237],["qr{(?:unsigned\\s+)?long\\s+long\\s+int},",224],["qr{(?:unsigned\\s+)?long\\s+long\\s+int},",224],["qr{(?:unsigned\\s+)?long\\s+int},",224],["qr{(?:unsigned\\s+)?long\\s+long},",224],["qr{(?:unsigned\\s+)?long\\s+long},",224]]},{"word":"loop","context":[["# prevent the tk window from showing up then start the event loop",305],["# if/while/etc brace do not go on next line, unless defining a do while loop,",303],["# multi-statement macros should be enclosed in a do while loop, grab the",299],["# Also ignore a loop construct at the end of a",296],["# loop through each subfield",248],["&set_label(\"loop\",16);",195],["\"Macros with multiple statements should be enclosed in a do - while loop\\n\" . \"$herectx\");",169],["my @loop;",142],["&jmp\t(&label(\"loop\"));",140],["# loop through each tab 0 through 9",139]]},{"word":"lost","context":[["# Any changes made here will be lost!",2921],["# database, Version 6.1.0.  Any changes made here will be lost!",2613],["# database, Version 6.0.0.  Any changes made here will be lost!",1994],["# database, Version 6.2.0.  Any changes made here will be lost!",1762],["# database, Version 5.2.0.  Any changes made here will be lost!",1670],["# database, Version 6.3.0.  Any changes made here will be lost!",1161],["# database, Version 7.0.0.  Any changes made here will be lost!",405],["$err_in_report= 1 if $line =~ /definitely lost: [1-9]/;",119],["$err_in_report= 1 if $line =~ /possibly lost: [1-9]/;",119],["# Management of lost or long overdue items",60]]},{"word":"m","context":[["$0 =~ m/(.*[\\/\\\\])[^\\/\\\\]+$/; $dir=$1;",908],["if ($realfile !~ m@\\binclude/uapi/@ &&",512],["next if ($line =~ m/^\\s*$/);",407],["next if ($line =~ m/^\\s*#/);",380],["if ($linenr == $first_line and $line =~ m@^.\\s*\\*@) {",307],["if ($line =~ m@/\\*@) {",306],["if ($line =~ m@\\*/@) {",306],["if ($path =~ m{//}) {",304],["if ($realcnt != 0 && $line !~ m{^(?:\\+|-| |\\\\ No newline|$)}) {",300],["if ($line =~ m{//}) {",298]]},{"word":"machine","context":[["# This file is machine-generated by lib/unicore/mktables from the Unicode",5126],["# This file is machine-generated by mktables from the Unicode",4479],["my $machine = $pu01->{mach_no};",1409],["$pdb->{$section}->{$machine}{$lane}{$stage}{state} = DELTA;",1151],["$pdb->{$section}->{$machine}{$lane}{$stage}{delta}{$key};",1142],["$pdb->{$section}->{$machine}{$lane}{$stage}{state}",980],["delete $pdb->{$section}->{$machine}{$lane}{$stage}{cache};",718],["my $state = $pdb->{$section}->{$machine}{$lane}{$stage}{state};",388],["delete $pdb->{$section}->{$machine}{$lane}{$stage}{delta};",376],["#     my $machine = $pu01->{mach_no};",340]]},{"word":"macro","context":[["'macro' => ''",11970],["'macro' => '',",2577],["@end macro",339],["'cmdname' => 'macro',",339],["# first statement and ensure its the whole macro if its not enclosed",299],["\"use the HI() macro, not (... >> 16)\\n\" . $herevet);",184],["\"use the SSYNC() macro in asm/blackfin.h\\n\" . $herevet);",184],["\"use the LO() macro, not (... & 0xFFFF)\\n\" . $herevet);",184],["\"use the CSYNC() macro in asm/blackfin.h\\n\" . $herevet);",184],["# do {} while (0) macro tests:",138]]},{"word":"made","context":[["# Any changes made here will be lost!",2921],["# database, Version 6.1.0.  Any changes made here will be lost!",2613],["# database, Version 6.0.0.  Any changes made here will be lost!",1994],["# database, Version 6.2.0.  Any changes made here will be lost!",1762],["# database, Version 5.2.0.  Any changes made here will be lost!",1670],["# database, Version 6.3.0.  Any changes made here will be lost!",1161],["# database, Version 7.0.0.  Any changes made here will be lost!",405],["# This code made possible by:",128],["ok(1); # If we made it this far, we're ok.",57],["quest::say(\"I don't need this.\"); #text made up",53]]},{"word":"mail","context":[["E-mail:        jan@swi.psy.uva.nl",798],["E-mail:        J.Wielemaker@vu.nl",495],["E-mail:        wielemak@science.uva.nl",259],["E-mail:        J.Wielemaker@cs.vu.nl",217],["E-mail:        J.Wielemaker@uva.nl",199],["# Check if there is UTF-8 in a commit log when a mail header has explicitly",136],["$mail{body} = <<END_OF_BODY;",84],["E-mail:        efmera@gmail.com",78],["$mail{'content-type'} = \"multipart/mixed; boundary=\\\"$boundary\\\"\";",77],["# Analysing information and getting mail properties",77]]},{"word":"main","context":[["sub main {",1962],["main();",1959],["package main;",1078],["main: {",802],["sub main",792],["$main::lxdebug->leave_sub();",738],["$main::lxdebug->enter_sub();",709],["my $form     = $main::form;",676],["my %myconfig = %main::myconfig;",458],["# Example main subroutine.",437]]},{"word":"make","context":[["#make up the handle for any error we report on this line",303],["# make sense.",275],["# make sure symbols are always wrapped with VMLINUX_SYMBOL() ...",275],["# Before `make install' is performed this script should be runnable with",236],["# `make test'. After `make install' it should work as `perl test.pl'",233],["# `make test'. After `make install' it should work as `perl test.pl'",233],["# Create an environment variable to make it possible",149],["# To make it easier for different devs to work on the same host,",149],["# directly before it executes them, like \"make test-force-pl\" in RPM builds.",149],["# We make the path absolute, as the server will do a chdir() before usage",147]]},{"word":"man","context":[["=item B<--man>",648],["=item B<-man>",351],["[--man]",227],["elsif ($man) {",227],["pod2usage(-exitstatus => 0, -verbose => 2) if $man;",213],["my $man = 0;",212],["my ( $debug, $help, $man );",203],["=item --man",192],["pod2usage(-verbose => 2) if $man;",179],["# User perldoc to generate the man documentation.",138]]},{"word":"map","context":[["map {",974],["my @h = map { $_->[0] } @tuples;",452],["# map to.",413],["map($_->kill(), values(%started));",357],["my %all_to_fields = map { $_ => 1 } @all_to_fields;",306],["my %all_from_fields = map { $_ => 1 } @all_from_fields;",306],["my %all_rel_fields = map { $_ => 1 } @all_rel_fields;",306],["my %all_fields = map { $_ => 1 } @all_fields;",161],["print join(\"\\t\", $k, map { ref($_) eq 'ARRAY' ? join(\",\", @$_) : $_ } @$v{@fields}), \"\\n\";",160],["map{",136]]},{"word":"match","context":[["# match any of the following regular expression constructs:",313],["$match = 1;",173],["# group below.  It could be that the tables will match the same set of code",145],["my $match;",132],["my $match = 0;",122],["-rr --restart_regex  regex match files that trigger",114],["my ($match, $from, $to, $ident) = ($1, $2, $2, $3);",103],["\"Alignment should match open parenthesis\\n\" . $hereprev) &&",103],["my $sub_to = $match;",101],["my $sub_from = $match;",101]]},{"word":"max","context":[["my $max = 0;",259],["# typecasts on min/max could be min_t/max_t",190],["sub max {",170],["$stat =~ /^\\+(?:.*?)\\b(min|max)\\s*\\(\\s*$FuncArg\\s*,\\s*$FuncArg\\s*\\)/) {",169],["use List::Util qw[min max];",161],["'max-save-core=i'          => \\$opt_max_save_core,",149],["max-save-core         Limit the number of core files saved (to avoid filling",149],["use List::Util qw(min max);",144],["return $max;",143],["my $max;",142]]},{"word":"may","context":[["# You may obtain a copy of the License at",2558],["# you may not use this file except in compliance with the License.",2546],["Questions may also be sent to the Ensembl help desk at",588],["#  You may obtain a copy of the License at",487],["#  you may not use this file except in compliance with the License.",461],["# Checks which may be anchored in the context.",303],["# The pathname on a #include may be surrounded by '<' and '>'.",299],["# cpp #elif statement condition may start with a (",298],["# A unary '*' may be const",297],["# << and >> may either have or not have spaces both sides",294]]},{"word":"mbstring","context":[["\"ext/mbstring/tests/mb_internal_encoding_variation2.phpt\",",23],["\"ext/mbstring/tests/mb_strtolower_basic.phpt\",",23],["\"ext/mbstring/tests/bug48697.phpt\",",23],["\"ext/mbstring/tests/mb_output_handler_pattern-05.phpt\",",23],["\"ext/mbstring/tests/mb_strstr_variation4.phpt\",",23],["\"ext/mbstring/tests/mb_substr_count_variation1.phpt\",",23],["\"ext/mbstring/tests/mb_substr_count_variation4.phpt\",",23],["\"ext/mbstring/tests/mb_encode_mimeheader_basic2.phpt\",",23],["\"ext/mbstring/tests/mb_ereg_replace-compat-08.phpt\",",23],["\"ext/mbstring/tests/zend_multibyte-02.phpt\",",23]]},{"word":"menu","context":[["'cmdname' => 'menu',",737],["'command_argument' => 'menu',",727],["'text_arg' => 'menu'",727],["require \"$form->{path}/menu.pl\";",406],["'text' => 'menu'",392],["@end menu",389],["@menu",360],["pre.menu-preformatted {font-family: serif}",290],["pre.menu-comment {font-family: serif}",290],["require \"bin/menu.pl\";",274]]},{"word":"message","context":[["my $message = shift;",713],["Print a brief help message and exits.",484],["my $message;",276],["Print a brief help message and exit.",267],["'message' => ignore(),",236],["my ($message) = @_;",226],["say format_date(DateTime->now), \" \", $message;",204],["\"Invalid UTF-8, patch and commit message should be encoded in UTF-8\\n\" . $hereptr);",193],["--ignore TYPE(,TYPE2...)   ignore various comma separated message types",192],["print STDERR \"$message\\n\";",178]]},{"word":"min","context":[["# typecasts on min/max could be min_t/max_t",190],["my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);",175],["$stat =~ /^\\+(?:.*?)\\b(min|max)\\s*\\(\\s*$FuncArg\\s*,\\s*$FuncArg\\s*\\)/) {",169],["use List::Util qw[min max];",161],["use List::Util qw(min max);",144],["my $min = $1;",137],["} elsif ($min =~ /^\\d+$/ && $max =~ /^\\d+$/ &&",134],["\"usleep_range should not use min == max args; see Documentation/timers/timers-howto.txt\\n\" . \"$here\\n$stat\\n\");",134],["if ($min eq $max) {",134],["$min > $max) {",134]]},{"word":"misc_line_arg","context":[["'type' => 'misc_line_arg'",6775]]},{"word":"missing","context":[["# the main body of the table, and what all code points missing from this file",413],["# missing space after union, struct or enum definition",250],["print \"Something's missing.\\n\";",225],["# declined it, i.e defined some charset where it is missing.",136],["qr/missing DBUG_RETURN/,",119],["# Restart if skipped due to missing perl, it may have had side effects",118],["my($res) = $missing;",106],["\"missing space after $1 definition\\n\" . $herecurr) &&",102],["\"missing space after return type\\n\" . $herecurr);",93],["\"missing space after $1 definition\\n\" . $herecurr);",90]]},{"word":"mktables","context":[["# This file is machine-generated by lib/unicore/mktables from the Unicode",5126],["# This file is machine-generated by mktables from the Unicode",4479],["# This file is built by mktables from e.g. UnicodeData.txt.",2362],["# This file is built by ./mktables from e.g. UnicodeData.txt.",319],["# This file is built by mktables.PL from e.g. Unicode.301.",239]]},{"word":"mode","context":[["mtr_add_arg($$args, \"--mode=execute\");",400],["#   mode: cperl",362],["# This is not a patch, and we are are in 'no-patch' mode so",300],["# In mailback mode only produce a report in the negative, for",300],["if ($mode eq \"TEXT\") {",272],["if ($line =~ /^new (file )?mode.*[7531]\\d{0,2}$/) {",252],["} elsif ($mode eq \"RTF\") {",238],["} elsif ($mode eq \"CPP\") {",238],["} elsif ($mode eq \"XML-WEB\") {",231],["available => 1, mode => \"user\", dist_req_build => [],",202]]},{"word":"modify","context":[["# Koha is free software; you can redistribute it and/or modify it under the",4845],["# This program is free software; you can redistribute it and/or modify",3916],["# Koha is free software; you can redistribute it and/or modify it",1914],["modify it under the terms of the GNU General Public License",1862],["# This program is free software: you can redistribute it and/or modify",1374],["# modify it under the terms of the GNU General Public License",877],["# Meran is free software: you can redistribute it and/or modify",754],["# redistribute it and/or modify it under the terms of either the GNU",591],["This library is free software. You can redistribute it and/or modify",577],["# modify it under the terms of the GNU General Public License as published",393]]},{"word":"module","context":[["# project. The module is, however, dual licensed under OpenSSL and",1012],[":- module(",692],["(module, code, name, title, content)",175],["$dbh->do(\"INSERT INTO `letter` (module, code, name, title, content, is_html)",124],["# Functions for parsing this module's logs",123],["# Converts logged information from this module into human-readable form",120],["INSERT INTO `letter` (`module`, `code`, `name`, `title`, `content`) VALUES",101],["# The module implements \"4-bit\" GCM GHASH function and underlying",93],["my $module = shift;",78],["my $module;",75]]},{"word":"modules","context":[["# find Koha's Perl modules",442],["# Koha modules used",189],["### modules",142],["# standard or CPAN modules used",130],["use lib \"/httpd/modules\";",85],["#Load the ALEXA modules",75],["foreach my $module (keys(%modules)) {",68],["## load Koha modules",60],["# CPAN modules",59],["foreach my $module (@modules) {",57]]},{"word":"more","context":[["# GNU General Public License for more details.",9259],["# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.",4849],["GNU General Public License for more details.",2781],["#    GNU General Public License for more details.",1007],["# General Public License for more details.",723],["# for more details.",707],["#  GNU General Public License for more details.",485],["# Public License for more details.",396],["#   GNU General Public License for more details.",394],["# and COPYING for more information, or see http://slashcode.com/.",374]]},{"word":"mov","context":[["mov\t\tr0, sp",598],["mov\t248($context),%rbx\t# pull context->Rip",501],["mov\t152($context),%rax\t# pull context->Rsp",496],["mov\t120($context),%rax\t# pull context->Rax",492],["mov\t-8(%rax),%rbx",483],["mov\t-16(%rax),%rbp",465],["mov\t$ai,%rax",432],["mov\t-24(%rax),%r12",396],["mov\t\tr5, $rounds\t\t\t@ pass rounds",390],["mov\t%rdx,$N[0]",384]]},{"word":"movaps","context":[["movaps\t%xmm7,0x10(%rsp)",202],["movaps\t%xmm6,(%rsp)",188],["movaps\t%xmm9,0x30(%rsp)",132],["movaps\t%xmm8,0x20(%rsp)",132],["movaps\t(%rsp),%xmm6",130],["movaps\t0x10(%rsp),%xmm7",109],["movaps\t0x30(%rsp),%xmm9",97],["movaps\t0x20(%rsp),%xmm8",97],["movaps\t-0xd8(%rax),%xmm6",96],["movaps\t-0x88(%rax),%xmm11",96]]},{"word":"movdqa","context":[["movdqa\t%xmm4, %xmm2",119],["&movdqa\t\t($T3,&QWP(0,$const));",114],["movdqa\t%xmm4, %xmm3",102],["movdqa\t%xmm5, %xmm2",102],["movdqa\t%xmm5, %xmm3",102],["movdqa\t%xmm4, %xmm1",102],["movdqa\t%xmm5, %xmm1",102],["movdqa\t$twres,$twtmp",100],["movdqa\t@XMM[15], 0x20(%rbp)\t# put aside IV",84],["movdqa\t$b,$t1",81]]},{"word":"movdqu","context":[["movdqu\t@XMM[0], 0x00($out)\t# write output",514],["movdqu\t@XMM[1], 0x10($out)",478],["movdqu\t@XMM[7], 0x50($out)",234],["movdqu\t@XMM[6], 0x20($out)",228],["movdqu\t@XMM[4], 0x30($out)",192],["movdqu\t@XMM[4], 0x20($out)",189],["movdqu\t@XMM[6], 0x30($out)",164],["movdqu\t@XMM[2], 0x40($out)",156],["movdqu\t@XMM[3], 0x40($out)",139],["movdqu\t0x60($inp), @XMM[6]",99]]},{"word":"movq","context":[["movq\t%rdx, %rbx",130],["&movq\t($tmp,$Zhi);",105],["movq\t56($inp), %rax",104],["movq\t%rdx, %r10",91],["movq\t16(%rsp), %r10",91],["movq\t56(%rsp), %r15",91],["movq\t%rdx, %r9",91],["movq\t32(%rsp), %r12",91],["movq\t%rdx, %r11",91],["movq\t8(%rsp), %r9",91]]},{"word":"movups","context":[["&movups\t(&QWP(0,$out),$inout0);",312],["movups\t$inout1,0x10($out)",268],["&movups\t(&QWP(0x10,$out),$inout1);",252],["movups\t$inout0,($out)",246],["movups\t$inout2,0x20($out)",218],["&movups\t(&QWP(0x20,$out),$inout2);",204],["movups\t$inout3,0x30($out)",184],["movups\t($inp),$inout0",168],["&movups\t(&QWP(0x30,$out),$inout3);",156],["movups\t$inout4,0x40($out)",152]]},{"word":"msg","context":[["my $msg = shift;",933],["my ($msg) = @_;",350],["my $msg;",325],["my ($type, $msg) = @_;",261],["die $msg;",187],["add_warning $msg;",179],["add_critical $msg;",172],["my $msg = \"\";",166],["add_ok $msg;",163],["return $msg;",154]]},{"word":"mtr_add_arg","context":[["mtr_add_arg($args, \"--defaults-file=%s\", $path_config_file);",1484],["mtr_add_arg($args, \"--no-defaults\");",799],["mtr_add_arg($args, \"--defaults-group-suffix=%s\", $mysqld->after('mysqld'));",590],["mtr_add_arg($$args, \"--mode=execute\");",400],["mtr_add_arg($args, \"--defaults-group-suffix=%s\", $cluster->suffix());",356],["mtr_add_arg($args, \"--user=%s\", $opt_user);",350],["mtr_add_arg($args, \"--silent\");",302],["mtr_add_arg($args, \"--user=root\");",297],["mtr_add_arg($args, \"--record\");",294],["mtr_add_arg($args,",287]]},{"word":"mtr_error","context":[["or mtr_error(\"Could not get [embedded] section\");",238],["mtr_error(\"Could not find version of MySQL\") unless $mysql_version_id;",227],["mtr_error(\"The destination for symlink $opt_vardir does not exist\")",208],["mtr_error(\"Unknown argument \\\"$debugger\\\" passed to --debugger\");",147],["mtr_error(\"Coverage test needs the source - please use source dist\");",147],["mtr_error(\"Can't use --mem and --tmpdir at the same time \")",147],["mtr_error(\"Writable 'var' directory is needed, use the \" .",147],["mtr_error(\"Couldn't find support for SSL\");",147],["mtr_error(\"Can't use --extern when using debugger\");",147],["mtr_error(\"Can't use --extern with --embedded-server\");",147]]},{"word":"mtr_report","context":[["mtr_report(\"Got $proc\");",357],["mtr_report();",357],["mtr_report(\"MySQL Version $1.$2.$3\");",227],["mtr_report(\" - skipping ndbcluster(--skip-ndbcluster)\");",156],["mtr_report(\"Turning on valgrind for all executables\");",147],["mtr_report(\"Running valgrind with options \\\"\",",147],["mtr_report(\"Turning on valgrind for mysqld(s) only\");",145],["mtr_report(\"Turning on valgrind with callgrind for mysqld(s)\");",145],["mtr_report(\"--mem not supported on Windows, ignored\");",145],["mtr_report(\"Turning on valgrind for mysqltest and mysql_client_test only\");",145]]},{"word":"mtr_verbose","context":[["mtr_verbose(\"Started $proc\");",507],["mtr_verbose(\"Removing $opt_vardir/\");",294],["mtr_verbose(\"cmd: $cmd\");",183],["mtr_verbose(\"unlink($opt_vardir)\");",175],["mtr_verbose(\"result: $result, file_mode: $file_mode\");",147],["mtr_verbose(\"Creating $opt_vardir\");",147],["mtr_verbose(\"Removing $opt_mem\");",147],["mtr_verbose(\"opt_vardir: $opt_vardir\");",147],["mtr_verbose(\"Creating $opt_mem\");",147],["mtr_verbose(\"Removing \" . readlink($opt_vardir));",147]]},{"word":"multiple","context":[["# check for multiple assignments",292],["-multiple => 0,",290],["## # check for multiple declarations, allowing for a function declaration",286],["# check for multiple semicolons",215],["\"multiple assignments should be avoided\\n\" . $herecurr);",193],["##\t\t\t\t     \"declaring multiple variables together should be avoided\\n\" . $herecurr);",184],["-multiple => 0",182],["\"Macros with multiple statements should be enclosed in a do - while loop\\n\" . \"$herectx\");",169],["-multiple=>0,",166],["-multiple => 0 );",145]]},{"word":"must","context":[["1. Redistributions of source code must retain the above copyright",657],["2. Redistributions in binary form must reproduce the above copyright",656],["if ($name =~ /[^\\w \\-]/i) { ##has \"must quote\" chars",388],["# 1. Redistributions of source code must retain the above copyright",310],["# Check for }<nl>else {, these must be at the same",303],["# edge is a close comment then we must be in a comment",300],["# at the beginning of a line any tabs must come first and anything",278],["# more than 8 must use tabs.",278],["# 2. Redistributions in binary form must reproduce the above copyright",270],["# , must have a space on the right.",241]]},{"word":"my","context":[["my $self = shift;",7009],["my $line;",4054],["my $i = 0;",4002],["my $dbh = C4::Context->dbh;",3666],["my $count = 0;",3335],["my $i;",2939],["my $file = shift;",2776],["my $args;",2755],["my $line = $_;",2145],["my ($self) = @_;",2072]]},{"word":"myconfig","context":[["my %myconfig = %main::myconfig;",458],["my %myconfig = %main::myconfig;",458],["user => \\%myconfig,",343],["$form->parse_amount( \\%myconfig, $form->{\"${_}_$i\"} );",126],["$transdate = $form->datetonum( \\%myconfig, $form->{transdate} );",114],["$closedto  = $form->datetonum( \\%myconfig, $form->{closedto} );",112],["$form->{$_} = $form->parse_amount( \\%myconfig, $form->{$_} );",87],["AA->get_name( \\%myconfig, \\%$form );",78],["$form->{templates} = \"$myconfig{templates}\";",68],["\\%myconfig,         $form->{currency},",68]]},{"word":"mysql","context":[["$dbh = DBI->connect(\"DBI:mysql:$opt_db:$opt_host\",",487],["# Running with \"var\" in mysql-test dir",290],["use DBD::mysql;",161],["#  http://dev.mysql.com/doc/mysqltest/en/index.html",147],["# Some users creates a soft link in mysql-test/var to another area",145],["# is the parent directory of the \"mysql-test\" directory. For source",145],["# directory. And we install \"/usr/share/mysql-test\". Moving up one",145],["# Add the mysql system tables initial data",145],["$exe_mysql=          mtr_exe_exists(\"$path_client_bindir/mysql\");",145],["# more directory relative to \"mysql-test\" gives us a usable base",145]]},{"word":"mysqld","context":[["foreach my $mysqld ( mysqlds() )",918],["mtr_add_arg($args, \"--defaults-group-suffix=%s\", $mysqld->after('mysqld'));",590],["mtr_add_arg($args, \"--defaults-group-suffix=%s\", $mysqld->after('mysqld'));",590],["my $extra_opts= get_extra_opts($mysqld, $tinfo);",354],["my $mysqld=            shift;",290],["# write init file for mysqld or client",272],["my $mysqld=   shift;",263],["if ( defined $mysqld->{'proc'} )",237],["mark_log($mysqld->value('#log-error'), $tinfo);",236],["mysqld_arguments($mysqld_args, $mysqld, $extra_opts);",236]]},{"word":"mysqli","context":[["\"ext/mysqli/tests/mysqli_class_mysqli_properties_no_conn.phpt\",",23],["\"ext/mysqli/tests/mysqli_fetch_assoc_no_alias_utf8.phpt\",",23],["\"ext/mysqli/tests/mysqli_auth_pam.phpt\",",23],["\"ext/mysqli/tests/bug36949.phpt\",",23],["\"ext/mysqli/tests/mysqli_stmt_bind_param_references.phpt\",",23],["\"ext/mysqli/tests/bug45019.phpt\",",23],["\"ext/mysqli/tests/mysqli_fetch_row.phpt\",",23],["\"ext/mysqli/tests/mysqli_set_local_infile_handler_bad_character.phpt\",",23],["\"ext/mysqli/tests/mysqli_change_user_set_names.phpt\",",23],["\"ext/mysqli/tests/bug28817.phpt\",",23]]},{"word":"n","context":[["print \"\\n\";",23189],["\\n\");",3072],["printf $outfh \"\\n\";",2505],["print \"\\n\\n\";",1807],["print \"\\n\\n\";",1807],["$n++;",1767],["print STDERR \"\\n\";",1598],["my $herevet = \"$here\\n\" . cat_vet($rawline) . \"\\n\";",1470],["my $herevet = \"$here\\n\" . cat_vet($rawline) . \"\\n\";",1470],["print \"</tr>\\n\";",1389]]},{"word":"name","context":[["# name or existence of this file are subject to change without notice.  Don't",6892],["# the name or existence of this file are subject to change without notice.",3636],["my $name = $1;",1573],["my $name = shift;",1520],["$name = $1;",943],["my $name;",927],["$name =~ s/^\\\"|\\\"$//g;",697],["printf $outfh $pcol->{format}, $pcol->{name};",646],["my ($name) = @_;",551],["$name = \"\\\"$name\\\"\";",503]]},{"word":"names","context":[["my @names;",198],["foreach my $name (@names) {",195],["my @names = ();",180],[");    # we show only the TMPL_VAR names $op",164],["our @opt_cases;                  # The test cases names in argv",149],["list of suite names.",148],["my %names;",124],["# Allow only alpanumerics pluss _ - + . in combination names,",119],["# * Neither the name of VMware, Inc. nor the names of its contributors may be",111],["# file names for figures",94]]},{"word":"nbsp","context":[["&nbsp;",314],["for (@column_index) { $column_data{$_} = \"<td>&nbsp;</td>\" }",255],["<td>&nbsp;</td>",247],["print \"<td>&nbsp;</td>\";",133],["&nbsp; &nbsp; &nbsp;",125],["&nbsp; &nbsp; &nbsp;",125],["&nbsp; &nbsp; &nbsp;",125],["print( $frame? \"</td></tr>\\n\" : \" &nbsp; \" );",104],["2, \"&nbsp;\" )",86],["print $INDEX \" &nbsp;&nbsp;&nbsp; \";",80]]},{"word":"ne","context":[["if ($2 ne '') {",597],["if (abs_path($0) ne abs_path(__FILE__)) {",449],["if ($from ne $to) {",308],["return ($cmt ne '');",303],["$a = 'V' if ($elements[$n] ne '');",303],["if (!$in_comment && $current_comment ne '') {",303],["$c = 'V' if ($elements[$n + 2] ne '');",303],["if ($1 ne '++' && $1 ne '--') {",300],["if ($err ne '') {",300],["if ($1 ne '++' && $1 ne '--') {",300]]},{"word":"need","context":[["# blank context lines so we need to count that too.",303],["# All the others need spaces both sides.",303],["#need space before brace following if, while, etc",303],["# same line do not need a level, so we use the current block context",285],["# We need \\b after 'init' otherwise 'initconst' will cause a false positive in a check",258],["debug(\" Stop reading history file. Got all we need.\");",184],["# we need it when valgrinding or debugging non installed binary",149],["# Valgrind need to be run with debug libraries otherwise it's almost",149],["mtr_verbose(\"No need to create '$opt_vardir' it already exists\");",146],["# single-statement macros do not need to be enclosed in do while (0) loop,",138]]},{"word":"new","context":[["my $input = new CGI;",1973],["sub new {",1652],["my $query = new CGI;",1638],["my $cgi = new CGI;",740],["my $ua = LWP::UserAgent->new;",664],["my $proc= My::SafeProcess->new",594],["$CommonObject{EncodeObject} = Kernel::System::Encode->new(%CommonObject);",517],["$CommonObject{LogObject}    = Kernel::System::Log->new(",509],["$CommonObject{ConfigObject} = Kernel::Config->new();",464],["my $R = Statistics::R->new();",457]]},{"word":"next","context":[["next;",55939],["next",1081],["next();",922],["next CMD;",813],["next LINE;",762],["next if /^\\s*$/;",730],["next if /^#/;",638],["next ;",513],["#next;",472],["next if ($line =~ m/^\\s*$/);",407]]},{"word":"nl","context":[["nl,",1403],["E-mail:        jan@swi.psy.uva.nl",798],["WWW:           http://www.swi.psy.uva.nl/projects/xpce/",688],["E-mail:        J.Wielemaker@vu.nl",495],["nl.",437],["# Check for }<nl>else {, these must be at the same",303],["E-mail:        wielemak@science.uva.nl",259],["E-mail:        J.Wielemaker@cs.vu.nl",217],["E-mail:        J.Wielemaker@uva.nl",199],["nl(Stream),",127]]},{"word":"no","context":[["mtr_add_arg($args, \"--no-defaults\");",799],["no strict 'refs';",790],["no warnings 'uninitialized';",378],["no warnings;",366],["# Return immediately if no check proceess was started",357],["## no critic",346],["# unary ++ and unary -- are allowed no space on one side.",303],["#no spaces allowed after \\ in define",303],["# no C99 // comments",301],["# This is not a patch, and we are are in 'no-patch' mode so",300]]},{"word":"node","context":[["'cmdname' => 'node',",3964],["'node' => {},",916],["my $node = shift;",269],["exp_name        => \"node\",",208],["@node Top",188],["exp_name\t=> \"node\",",145],["# http://www.perlmonks.org/index.pl?node=perltie",128],["my $node;",125],["'text' => 'entry for index `fn\\' outside of any node',",122],["'text' => 'Entry for index `fn\\' outside of any node',",121]]},{"word":"non","context":[["# cpp #define statements have non-optional spaces, ie",298],["# ignore non-hunk lines and lines being removed",294],["if (which($net_effect < 0)->nelem > 0) { #which gets indices of non-0 values, nelem get nr of elements",190],["[\\xC2-\\xDF][\\x80-\\xBF]               # non-overlong 2-byte",176],["# we need it when valgrinding or debugging non installed binary",149],["view-protocol         Create a view to execute all non updating queries",147],["# check for whitespace before a non-naked semicolon",140],["$rawline =~ m@^\\+[ \\t]*.+\\*\\/[ \\t]*$@) {\t#non blank */",129],["| [\\xC2-\\xDF][\\x80-\\xBF]             # non-overlong 2-byte",128],["} else { # for non-tagged reactions",126]]},{"word":"none","context":[["# none after.  May be left adjacent to another",300],["# none on the first line, and are going to readd them",296],["ul.no-bullet {list-style: none}",290],["a.summary-letter {text-decoration: none}",290],["if ($call->{streamflag} ne \"none\") {",232],["result   => 'none',",217],["#\t\tnone",202],["result => 'none',",146],["'try'   => 'none',",138],["#  @INPUT         : none",132]]},{"word":"noresave","context":[["$noresave{$key} = \"$nosave\";",6902]]},{"word":"nosave","context":[["$noresave{$key} = \"$nosave\";",6902],["if($nosave) {",40],["print FILE $line if(!$nosave);",34],["$nosave = 1;",20]]},{"word":"not","context":[["# with Koha; if not, write to the Free Software Foundation, Inc.,",3538],["# along with this program; if not, write to the Free Software",3345],["# you may not use this file except in compliance with the License.",2546],["# along with Koha; if not, see <http://www.gnu.org/licenses>.",1906],["# along with this program.  If not, see <http://www.gnu.org/licenses/>.",1805],["License along with this library; if not, write to the Free Software",1762],["by the GNU General Public License. This exception does not however",1583],["library does not by itself cause the resulting executable to be covered",1583],["# Koha; if not, write to the Free Software Foundation, Inc., 59 Temple Place,",1254],["# along with Meran.  If not, see <http://www.gnu.org/licenses/>.",754]]},{"word":"notice","context":[["# name or existence of this file are subject to change without notice.  Don't",6892],["# the name or existence of this file are subject to change without notice.",3636],["notice, this list of conditions and the following disclaimer.",703],["notice, this list of conditions and the following disclaimer in",644],["Priority => 'notice',",386],["# copyright notice and this permission notice appear in all copies.",308],["# copyright notice and this permission notice appear in all copies.",308],["#    notice, this list of conditions and the following disclaimer.",270],["#    notice, this list of conditions and the following disclaimer in the",238],["# The above copyright notice and this permission notice shall be included in",213]]},{"word":"now","context":[["my $now = time;",259],["my $now = time();",258],["say format_date(DateTime->now), \" \", $message;",204],["$now = current_time();",152],["# now $scalar contains the pod from $podfile you can see this below",128],["$now = time;",123],["# --help will not reach here, so now it's safe to assume we have binaries",119],["# Send it back, now with results set",119],["# Make sure the safe_process also exits from now on",118],["my $now;",97]]},{"word":"np","context":[["mulq\t$m1\t\t\t# np[j]*m1",728],["mulq\t$m1\t\t\t# np[0]*m1",192],["mov\t($np),%rax",192],["mov\t($np,$j,8),%rax",162],["add\t$A[0],$N[0]\t\t# np[j]*m1+ap[j]*bp[0]",144],["add\t$A[1],$N[1]\t\t# np[j]*m1+ap[j]*bp[0]",144],["$np->add_arg(",139],["mov\t-16($np,$j,8),%rax",116],["mov\t-8($np,$j,8),%rax",116],["['Jean', nam, 'Jean', lit(np(_,_,_)),",111]]},{"word":"null","context":[["null    => 'NULL',",826],["null    => 'NOT NULL',",339],["open($FILE, '-|', \"diff -u /dev/null $filename\") ||",292],["metricValue => \"null\",",240],["null => 'NULL',",180],["null  => 'NULL',",157],["if (`$ENV{CC} -Wa,-v -c -o /dev/null -x assembler /dev/null 2>&1`",136],["if (`$ENV{CC} -Wa,-v -c -o /dev/null -x assembler /dev/null 2>&1`",136],["output        => '/dev/null',",119],["error         => '/dev/null'",119]]},{"word":"num","context":[["Select the identifier from column num",612],["$num++;",501],["my $num = 0;",426],["my $num = shift;",319],["-c num",306],["=item -c num",306],["return $num;",276],["neg\t$num",223],["$num = 0;",206],["$st=$ed+1;$num++;",173]]},{"word":"number","context":[["'number' => 1",559],["'number' => 1,",517],["# track the line number as we move through the hunk, note that",303],["my ($r_number, $parent) = split /_/, $reaction; #remove tag from reaction number",249],["% Frame number: 319",245],["% Frame number: 336",245],["% Frame number: 298",245],["% Frame number: 334",245],["% Frame number: 313",245],["% Frame number: 312",245]]},{"word":"o","context":[["my @o;",314],["} elsif ($cur =~ /^(sizeof)\\s*(\\()?/o) {",300],["} elsif ($cur =~ /^(\\()/o) {",300],["} elsif ($cur =~ /^($Ident|$Constant)/o) {",300],["} elsif ($cur =~ /(^.)/o) {",300],["} elsif ($cur =~ /^(\\\\\\n)/o) {",300],["if ($cur =~ /^(\\s+)/o) {",300],["} elsif ($cur =~ /^(\\))/o) {",300],["} elsif ($cur =~ /^($Assignment)/o) {",300],["} elsif ($cur =~ /^($Operators)/o) {",300]]},{"word":"obj","context":[["$service->addMetric($obj);",589],["$obj = Metric->new(\trrdIndex => 0,",207],["$obj = Metric->new(\trrdIndex => 1,",141],["my $obj;",113],["my ($obj) = @_;",107],["$obj = Metric->new(\trrdIndex => 2,",95],["my $obj = shift;",95],["$obj->{'id'} = int(rand(2**16));",85],["$res = $client->call($config{eiskaltURL}, $obj);",85],["if ($config{debug} > 0) { print(\"===Request===\\n\".Dumper($obj).\"\\n\") };",83]]},{"word":"object","context":[["# Inputs: 0) ExifTool object reference",150],["# Get log from server identified from its $proc object, from named test",119],["</object>",117],["# parse_webmin_log(user, script, action, type, object, &params)",108],["\"> deprecated. You should replace this object with a\\n\".",90],["foreach my $field (@{$object->{fields}}) {",86],["# create new object",78],["# execute object",78],["#  @PRIVACY & USE : PUBLIC, Must be used as an object instance function",77],["# object.",67]]},{"word":"obtain","context":[["# You may obtain a copy of the License at",2558],["# CRYPTOGAMS licenses depending on where you obtain it. For further",1012],["#  You may obtain a copy of the License at",487],["# file, You can obtain one at http://mozilla.org/MPL/2.0/.",419],["# this file except in compliance with the License.  You can obtain a copy",262],["## obtain a copy of the License at",247],["% in compliance with the License.  You may obtain a copy of the License",245],["You may obtain a copy of the License at",196],["# compliance with the License.  You may obtain a copy of the License at",189],["#   You may obtain a copy of the License at",157]]},{"word":"oci8","context":[["\"ext/oci8/tests/coll_014_func.phpt\",",23],["\"ext/oci8/tests/array_bind_004.phpt\",",23],["\"ext/oci8/tests/lob_039.phpt\",",23],["\"ext/oci8/tests/statement_type_old.phpt\",",23],["\"ext/oci8/tests/fetch_array.phpt\",",23],["\"ext/oci8/tests/connect_scope_try5.phpt\",",23],["\"ext/oci8/tests/lob_014.phpt\",",23],["\"ext/oci8/tests/lob_null.phpt\",",23],["\"ext/oci8/tests/coll_007.phpt\",",23],["\"ext/oci8/tests/b47243_2.phpt\",",23]]},{"word":"of","context":[["# but WITHOUT ANY WARRANTY; without even the implied warranty of",8483],["# You should have received a copy of the GNU General Public License",8214],["# name or existence of this file are subject to change without notice.  Don't",6892],["# This file is part of Koha.",6644],["# it under the terms of the GNU General Public License as published by",5449],["# terms of the GNU General Public License as published by the Free Software",5003],["# You should have received a copy of the GNU General Public License along",4990],["# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR",4860],["# Foundation; either version 2 of the License, or (at your option) any later",4705],["# the name or existence of this file are subject to change without notice.",3636]]},{"word":"off","context":[["$off++;",1929],["my ($linenr, $remain, $off) = @_;",1201],["my $off = 0;",635],["substr($res, $off, 2, \"$;$;\");",599],["if ($off >= $len) {",599],["ctx_statement_block($linenr, $remain, $off);",598],["($statement, $condition, $linenr, $remain, $off, $level) =",598],["substr($res, $off, 1, $c);",598],["substr($res, $off, 1, $;);",580],["my ($off, $dstat, $dcond, $rest);",431]]},{"word":"offset","context":[["$herectx .= \"$rawlines[$ln + $offset]\\n[...]\\n\";",298],["$suppress_ifbraces{$ln + $offset} = 1;",298],["#print \"COND<$cond> whitespace<$whitespace> offset<$offset>\\n\";",298],["my $offset = statement_rawlines($whitespace) - 1;",298],["#print \"COND<$cond> whitespace<$whitespace> offset<$offset>\\n\";",298],["$line = $rawlines[$offset++];",294],["my $offset =",294],["$offset} = 1;",294],["my $offset = $linenr - 1;",294],["my $offset = 0;",271]]},{"word":"ok","context":[["$ok = 1;",1216],["my $ok = 0;",806],["ok(1);",670],["if ($ok == 0) {",605],["$ok = 0;",508],["print \"not ok $test\\n\";",371],["ok(",293],["my $ok = 1;",279],["#  0 ok",238],["# if script decided to run mysqltest cluster _is_ installed ok",214]]},{"word":"old","context":[["# Remove the old gdbinit file",300],["# Remove old log files",149],["# won't point at an old directory",149],["# Remove old files produced by mysqltest",145],["# check for old HOTPLUG __dev<foo> section markings",127],["# Save old value to restore it before next time",119],["# Remove the old pidfile if any",119],["# Restore old ENV",119],["# Remove old delimiter from end of new",119],["mtr_report(\" - found old pid $pid in '$elem', killing it...\");",119]]},{"word":"on","context":[["# distributed under the License is distributed on an \"AS IS\" BASIS,",2592],["# CRYPTOGAMS licenses depending on where you obtain it. For further",1012],["# Find out what is on the end of the line after the",595],["#  distributed under the License is distributed on an \"AS IS\" BASIS,",515],["# By default examples are set to die on any server returned fault.",446],["\"trailing statements should be on next line\\n\" . $herecurr);",386],["#make up the handle for any error we report on this line",303],["# new versions of GNU diff omit the leading space on completely",303],["# if/while/etc brace do not go on next line, unless defining a do while loop,",303],["# unary ++ and unary -- are allowed no space on one side.",303]]},{"word":"one","context":[["# omitted, the range has just one code point.  Numbers in comments in",2478],["# file, You can obtain one at http://mozilla.org/MPL/2.0/.",419],["# unary ++ and unary -- are allowed no space on one side.",303],["# one does, and continue as if the #endif was not here.",299],["# we assume the first bad printk is the one to report.",284],["--debug KEY=[0|1]          turn on/off debugging of KEY, where KEY is one of",280],["--terse                    one line per report",280],["# all assignments may have only one of the following with an assignment:",275],["# memory.h: ARM has a custom one",243],["# Testcase itself tell us to skip this one",149]]},{"word":"only","context":[["# This file is for internal use by core Perl only.  The format and even the",5878],["# This file is for internal use by the Perl program only.  The format and even",4650],["# In mailback mode only produce a report in the negative, for",300],["# definitions in global scope can only start with types",300],["# simplify matching -- only bother with positive lines.",297],["'test-only=s'\t=> \\$tst_only,",296],["--mailback                 only produce a report in case of warnings/errors",280],["--test-only=WORD           report only warnings/errors containing WORD",279],["--test-only=WORD           report only warnings/errors containing WORD",279],["# all assignments may have only one of the following with an assignment:",275]]},{"word":"op","context":[["my $op = $elements[$n + 1];",303],["} elsif ($op eq ',') {",303],["} elsif ($op eq '++' or $op eq '--') {",303],["} elsif ($op eq '++' or $op eq '--') {",303],["} elsif ($op eq '//') {",303],["} elsif ($op eq '!' || $op eq '~' ||",300],["} elsif ($op eq '!' || $op eq '~' ||",300],["} elsif ($op eq ';') {",299],["($op eq '>' &&",296],["if (($op eq '<' &&",296]]},{"word":"open","context":[["open STDOUT,\">$output\";",509],["#     open($outfh, \">\" , $outfnm) || die $!;",391],["open $ih, \"<\", $input_file or die \"Cannot open input file $input_file: $!\";",380],["open $ih, \"<\", $input_file or die \"Cannot open input file $input_file: $!\";",380],["open OUT,\"| \\\"$^X\\\" $xlate $flavour $output\";",345],["# Need a space before open parenthesis after if, while etc",304],["##print \"C<$c>L<$level><$open$close>O<$off>\\n\";",302],["my ($linenr, $remain, $outer, $open, $close, $off) = @_;",302],["} elsif ($c eq $open) {",302],["# check for initialisation to aggregates open brace on the next line",302]]},{"word":"opt","context":[["my %opt;",398],["my ($opt, $value)= @_;",267],["use lib \"/opt/vyatta/share/perl5/\";",172],["if (defined($opt{\"LOG_FILE\"})) {",169],["#  You may opt to use, copy, modify, merge, publish, distribute and/or sell   #",161],["# You may opt to use, copy, modify, merge, publish, distribute and/or sell",152],["# Allow --skip-core-file to be set in <testname>-[master|slave].opt file",149],["my $opt = shift;",139],["foreach my $opt (%opts)",130],["if ($opts{$opt} =~ m/^[0123]$/)",125]]},{"word":"opt_vardir","context":[["my $errfile= \"$opt_vardir/tmp/$name.err\";",357],["if ( $opt_vardir eq $default_vardir )",298],["if ( ! -d $opt_vardir )",298],["mtr_verbose(\"Removing $opt_vardir/\");",294],["unlink($opt_vardir);",265],["my $log_file_name= $opt_vardir.\"/log/\".$tinfo->{shortname}.\".log\";",250],["my $gdb_init_file= \"$opt_vardir/tmp/gdbinit.$type\";",238],["vardir          => $opt_vardir,",238],["rmtree(\"$opt_vardir/\");",238],["if ! -d readlink($opt_vardir);",212]]},{"word":"option","context":[["# (at your option) any later version.",6573],["# Foundation; either version 2 of the License, or (at your option) any later",4705],["of the License, or (at your option) any later version.",1905],["#    (at your option) any later version.",921],["# of the License, or (at your option) any later version.",883],["(at your option) any later version.",799],["$option .= \"\\n<br>\" if ($option);",560],["$option .= \"\\n<br>\" if ($option);",560],["#  (at your option) any later version.",404],["# by the Free Software Foundation; either version 3, or (at your option) any",382]]},{"word":"options","context":[["# get options",479],["my %options;",458],["# Get and check command line options",454],["$dbh->do(\"INSERT INTO `systempreferences` (variable,value,options,explanation,type)",360],["options:",354],["# Get options",291],["# Default options",242],["my @options;",196],["my $options = shift;",193],["RunCommand($cmd,$options{'noexecute'},$options{'quiet'});",192]]},{"word":"opts","context":[["my %opts;",1016],["my ($opts,%args) = @_;",501],["my %opts = @_;",309],["run_view_test($opts,",308],["my %opts = ();",209],["my %opts = (",181],["return $opts;",177],["GetOptions(\\%opts,",176],["my $opts = shift;",135],["my $opts;",133]]},{"word":"or","context":[["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",7175],["# name or existence of this file are subject to change without notice.  Don't",6892],["# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR",4860],["# Koha is free software; you can redistribute it and/or modify it under the",4845],["# Foundation; either version 2 of the License, or (at your option) any later",4705],["# This program is free software; you can redistribute it and/or modify",3916],["# the name or existence of this file are subject to change without notice.",3636],["# the Free Software Foundation; either version 3 of the License, or",3443],["MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",2778],["# Unless required by applicable law or agreed to in writing, software",2607]]},{"word":"order","context":[["order => ++$order,",298],["order => ++$order,",298],["#@loopcol ensures the order for columns is common with column titles",129],["selected tests, in the order they would be run.",119],["# All servers are going down, use some kind of order to",83],["# given last on command line should win, but that order is",78],["\"type '$tmp' should be specified in [[un]signed] [short|int|long|long long] order\\n\" . $herecurr);",73],["arg(5,Att,order(OrdX)),",72],["$order         = 1;",72],["for (my $order = 0; $order < 20; $order++) {",60]]},{"word":"org","context":[["# along with Koha; if not, see <http://www.gnu.org/licenses>.",1906],["# along with this program.  If not, see <http://www.gnu.org/licenses/>.",1805],["#      http://www.apache.org/licenses/LICENSE-2.0",1764],["WWW:           http://www.swi-prolog.org",1432],["# or see http://www.gnu.org/licenses/agpl.txt.",1024],["#     http://www.apache.org/licenses/LICENSE-2.0",1020],["# details see http://www.openssl.org/~appro/cryptogams/.",1012],["# along with Meran.  If not, see <http://www.gnu.org/licenses/>.",754],["L<The SEED Project|http://www.theseed.org>",662],["# Written by Andy Polyakov <appro@openssl.org> for the OpenSSL",647]]},{"word":"other","context":[["# characters matters or doesn't matter, and other permissible syntactic",2480],["As a special exception, if you link this library with other files,",1585],["invalidate any other reasons why the executable file might be covered by",1583],["the documentation and/or other materials provided with the",644],["plugin_parameters : other parameters added when the plugin is called by the dopop function",456],["line would contain the id. If some other column contains the id,",386],["# indent level to be relevant to each other.",303],["# int foo(something bar, other baz);",300],["#    documentation and/or other materials provided with the distribution.",239],["# other possible extensions of declaration lines",160]]},{"word":"our","context":[["our $clean = 0;",892],["our $usage = <<'END';",546],["our %args = (",358],["our $clean = 1;",302],["our $cnt_warn++;",301],["our $cnt_error++;",301],["our $cnt_error = 0;",301],["our $cnt_warn = 0;",301],["our $cnt_chk = 0;",301],["our @typeList = (",301]]},{"word":"out","context":[["return $out;",793],["close $out;",786],["my $out;",672],["# Find out what is on the end of the line after the",595],["# Find out how long the conditional actually is.",588],["movdqu\t@XMM[0], 0x00($out)\t# write output",514],["movdqu\t@XMM[1], 0x10($out)",478],["sub out {",471],["my @out;",400],["vst1.8\t\t{@XMM[0]-@XMM[1]}, [$out]!",364]]},{"word":"outfh","context":[["printf $outfh \"\\n\";",2505],["close($outfh);",1523],["printf $outfh $pcol->{format}, $pcol->{name};",646],["#     close($outfh);",510],["printf $outfh \",%s\", $key;",406],["#     open($outfh, \">\" , $outfnm) || die $!;",391],["#     printf $outfh \"\\n\";",374],["printf $outfh \"product,\";",287],["#         printf $outfh $pcol->{format}, $pcol->{name};",238],["open($outfh, \">\" , $outfnm) || die $!;",178]]},{"word":"outfile","context":[["my $outfile;",377],["if ($outfile) {",149],["my $outfile = shift;",126],["=item -o,--outfile",79],["$outfile,",76],["unless ($outfile) {",75],["Write($outfile, $data) or $err = 1;",72],["close $outfile;",67],["&Pick('>', $outfile) &&",63],["return $outfile;",62]]},{"word":"output","context":[["output_html_with_http_headers $input, $cookie, $template->output;",3631],["output_html_with_http_headers $query, $cookie, $template->output;",1984],["my $output;",726],["output_html_with_http_headers $cgi, $cookie, $template->output;",590],["movdqu\t@XMM[0], 0x00($out)\t# write output",514],["open STDOUT,\">$output\";",509],["return $output;",493],["output is to the standard output.",486],["output is to the standard output.",486],["if ($flavour =~ /\\./) { $output = $flavour; undef $flavour; }",427]]},{"word":"output_html_with_http_headers","context":[["output_html_with_http_headers $input, $cookie, $template->output;",3631],["output_html_with_http_headers $query, $cookie, $template->output;",1984],["output_html_with_http_headers $cgi, $cookie, $template->output;",590],["C4::AR::Auth::output_html_with_http_headers($template, $t_params, $session);",566],["use C4::Output qw(output_html_with_http_headers);",209],["output_html_with_http_headers $query, $cookie, $template->output, undef, { force_no_caching => 1 };",43],["output_html_with_http_headers( $input, $cookie, $template->output );",30],["output_html_with_http_headers(shift,shift,shift); # $query, $cookie, $template->output;",28],["output_html_with_http_headers( $cgi, $cookie, $template->output );",25],["output_html_with_http_headers $query, \"\", $template->output;",16]]},{"word":"output_no","context":[["my $output_no = $pu01->{output_no};",1425],["my $output_no = $pu01->{output_no};",1425],["$output_no     = $parts[6];",376],["#     my $output_no = $pu01->{output_no};",357],["#     my $output_no = $pu01->{output_no};",357],["($output_no == AUTO_CLEAR))",334],["my $output_no = $pu03->{output_no};",284],["my $output_no = $pu03->{output_no};",284],["($output_no == PROD_COMPLETE_LATER))",280],["printf $log_fh \"OUTPUT NO: %s\\n\", $output_no;",252]]},{"word":"over","context":[["=over 4",7365],["=over",3407],["=over 8",1681],["=over 2",1348],["# Always copy over the diff marker.",299],["# prefer usleep_range over udelay",237],["$_ = \"\\n=over 4\\n\";",207],["\"__packed is preferred over __attribute__((packed))\\n\" . $herecurr);",181],["\"__aligned(size) is preferred over __attribute__((aligned(size)))\\n\" . $herecurr);",181],["=over 3",180]]},{"word":"p","context":[["</p>",1820],["<p>",1579],["my $p;",564],["\"-d $default_digest_file -p $default_pid_file $intf_str\",",413],["my $p = shift;",308],["$p = $c;",300],["(!defined($p) || $p =~ /(?:\\s|\\}|\\+)/) &&",299],["(!defined($p) || $p =~ /(?:\\s|\\}|\\+)/) &&",299],["p(do,",263],["my ($self,$b,$p,$e,$rt) = @_;",208]]},{"word":"pack","context":[["print FILE pack (\"L\", hex (\"0\")) ;",923],["print FILE pack (\"C\", hex ($8)) ;",150],["print FILE pack (\"C\", hex ($2)) ;",150],["print FILE pack (\"C\", hex ($4)) ;",150],["print FILE pack (\"C\", hex ($6)) ;",150],["print FILE pack (\"C\", hex ($5)) ;",150],["print FILE pack (\"C\", hex ($7)) ;",150],["print FILE pack (\"C\", hex ($3)) ;",150],[")->pack(",128],["$value =~ s/%([a-fA-F0-9][a-fA-F0-9])/pack(\"C\", hex($1))/eg;",120]]},{"word":"package","context":[["package main;",1078],["foreach my $name (sort {uc($a) cmp uc($b)} keys %package) {",170],["my $pkg = $package{$name};",170],["# or by downloading the timezone table package from our website",147],["## version 1.1, included in the file LGPL_EXCEPTION.txt in this package.",127],["package DAWGPAWS;",123],["my $package;",119],["This is $progname, from the Debian devscripts package, version ###VERSION###",113],["#package MyTop;",113],["package => $pkg,",101]]},{"word":"page","context":[["return $page;",832],["Prints the manual page and exits.",359],["Print this script's manual page and exit.",227],["my $page;",160],["# This is needed for test log evaluation in \"gen-build-status-page\"",149],["# multi page display gestion",118],["# Print the page",108],["my ($page, $sql, $result, $rows, $row, $i);",108],["my $page = shift;",92],["$page .= end_table()",81]]},{"word":"param","context":[["$template->param(",10890],["my $index= $input->param('index');",439],["my $result= $input->param('result');",428],["$template->param(index => $index,",409],["my $biblionumber = $query->param('biblionumber');",319],["my $borrowernumber = $input->param('borrowernumber');",286],["$template->param( picture => 1 ) if $picture;",260],["my $op = $input->param('op');",213],["my $param = shift;",193],["$template->param (",177]]},{"word":"parameters","context":[["plugin_parameters : other parameters added when the plugin is called by the dopop function",456],["# Ignore operators passed as parameters.",299],["if ($1 =~ m@Documentation/kernel-parameters.txt$@) {",284],["## \t\t\t# falsly report the parameters of functions.",278],["# check for new typedefs, only function parameters and sparse annotations",275],["\"__setup appears un-documented -- check Documentation/kernel-parameters.txt\\n\" . $herecurr);",177],["flagsrequired => {parameters => 'parameters_remaining_permissions'},",147],["Other parameters added when the plugin is called by the dopop function",145],["flagsrequired => {parameters => 1},",144],["# extract parameters",129]]},{"word":"params","context":[["my %params = @_;",327],["my $params = shift;",253],["my %params;",243],["# parse_webmin_log(user, script, action, type, object, &params)",108],["my $params = $input->Vars;",94],["my @params;",90],["my $output = runFBACommand($params,$servercommand,$opt);",88],["my $params = $query->Vars;",88],["my @params = @_;",84],["my %params    = @_;",80]]},{"word":"parent","context":[["'parent' => {},",75804],["'parent' => {}",16438],["my ($r_number, $parent) = split /_/, $reaction; #remove tag from reaction number",249],["# parent",234],["'parent' => {",174],["if ($parent) {",151],["# is the parent directory of the \"mysql-test\" directory. For source",145],["if ( $pid = fork() ) { #parent",128],["if (defined $parent) { # for tagged reactions",126],["my ($number, $parent) = split /_/, $reaction;",116]]},{"word":"part","context":[["# This file is part of Koha.",6644],["# This file is part of Meran.",754],["# This code is a part of Slash, and is released under the GPL.",374],["#warn \"'*' is part of type\\n\";",300],["# '*' as part of a type definition -- reported already.",300],["#   :   when part of a bitfield",296],["'cmdname' => 'part',",209],["# This file is part of Chart.",162],["#  you should have received as part of this distribution. The terms           #",161],["# you should have received as part of this distribution. The terms",152]]},{"word":"parts","context":[["if (scalar(@parts) >= 9)",384],["$date          = $parts[0];",376],["$output_no     = $parts[6];",376],["$pcb_id        = $parts[5];",376],["$pcb_id_lot_no = $parts[7];",376],["$mach_no       = $parts[1];",376],["$lane          = $parts[3];",376],["$pcb_serial    = $parts[4];",376],["$stage         = $parts[2];",376],["#my $outFile_ge9 = File::Spec->catfile($outDir, join(\".\", @parts) . \"_ge9.\" . $ext);",217]]},{"word":"pass","context":[["mov\t\tr5, $rounds\t\t\t@ pass rounds",390],["add\t\tr4, $key, #248\t\t\t@ pass key schedule",364],["add\t\tr4, sp, #0x90\t\t\t@ pass key schedule",364],["mov\t%edx, %r10d\t\t# pass rounds",216],["my $pass;",213],["mov\tr5, $rounds\t\t\t@ pass # of rounds",208],["mov\tr4, $key\t\t\t@ pass key",208],["lea\t0x80(%rsp), %rax\t# pass key schedule",168],["mov\t%rsp, %rax\t\t# pass key schedule",123],["Options that pass on options (these may be repeated)",106]]},{"word":"password","context":[["password        => '',",239],["mtr_add_arg($args, \"--password=\");",183],["my $password = '';",126],["password   => '',",119],["$password = $ARGV[1];",116],["my $password;",104],["require 'password.ph';",85],["\"--socket=$master->[0]->{'path_sock'} --password=\";",84],["my $password = \"\";",76],["If no priv password exists, implies AuthNoPriv",70]]},{"word":"patch","context":[["#extract the line range in the file after the patch is applied",303],["$vname = 'Your patch';",300],["# This is not a patch, and we are are in 'no-patch' mode so",300],["# This is not a patch, and we are are in 'no-patch' mode so",300],["'patch!'\t=> \\$chk_patch,",300],["# Pre-scan the patch sanitizing the lines.",299],["# this is not this patch's fault.",294],["# Pre-scan the patch looking for any __setup documentation.",286],["--patch                    treat FILE as patchfile (default)",279],["# Check the patch for a signoff:",194]]},{"word":"path","context":[["my $path = shift;",502],["require \"$form->{path}/menu.pl\";",406],["my ($path) = @_;",374],["my $path = $1;",371],["path          => $exe_mysqltest,",354],["return $path;",353],["my $path;",335],["path          => $exe,",328],["if ($path =~ m{//}) {",304],["# See if any suffix of this path is a path within the tree.",280]]},{"word":"pdb","context":[["$pdb->{$section}->{$machine}{$lane}{$stage}{state} = DELTA;",1151],["$pdb->{$section}->{$machine}{$lane}{$stage}{delta}{$key};",1142],["$pdb->{$section}->{$machine}{$lane}{$stage}{state}",980],["my ($pdb) = @_;",831],["my ($pdb, $pu01) = @_;",766],["delete $pdb->{$section}->{$machine}{$lane}{$stage}{cache};",718],["copy_u01_feeder_cache($pdb, $pu01, DELTA);",493],["copy_u01_name_value_cache($pdb, $pu01, $section);",464],["my ($pdb, $pu01, $section) = @_;",433],["my $state = $pdb->{$section}->{$machine}{$lane}{$stage}{state};",388]]},{"word":"perl","context":[["#!/usr/bin/perl",48452],["#!/usr/bin/perl -w",21528],["#!/usr/bin/env perl",18216],["#! /usr/bin/perl",2356],["#!/usr/local/bin/perl",2068],["#! /usr/bin/perl -w",1796],["#! /usr/bin/env perl",1585],["#!/usr/local/bin/perl -w",1188],["#!perl",782],["#! perl",461]]},{"word":"permissions","context":[["# See the License for the specific language governing permissions and",2505],["#  See the License for the specific language governing permissions and",516],["# Check for incorrect file permissions",252],["## See the License for the specific language governing permissions and",251],["INSERT INTO permissions (module_bit, code, description) VALUES",197],["\"do not set execute permissions for source files\\n\" . $permhere);",193],["See the License for the specific language governing permissions and",192],["\"Exporting world writable files is usually an error. Consider more restrictive permissions.\\n\" . $herecurr);",184],["#   See the License for the specific language governing permissions and",160],["# permissions and limitations under the License.",115]]},{"word":"phar","context":[["\"ext/phar/tests/phar_metadata_writeU.phpt\",",23],["\"ext/phar/tests/tar/frontcontroller15.phar.phpt\",",23],["\"ext/phar/tests/tar/frontcontroller15.phar.phpt\",",23],["\"ext/phar/tests/opendir.phpt\",",23],["\"ext/phar/tests/tar/tar_makegz.phpt\",",23],["\"ext/phar/tests/tar/tar_002.phpt\",",23],["\"ext/phar/tests/phar_buildfromdirectory6.phpt\",",23],["\"ext/phar/tests/phar_ctx_001.phpt\",",23],["\"ext/phar/tests/phar_oo_008.phpt\",",23],["\"ext/phar/tests/phar_buildfromiterator6.phpt\",",23]]},{"word":"phpt","context":[["\"ext/zip/tests/oo_delete.phpt\",",23],["\"ext/mbstring/tests/mb_strtoupper_error2.phpt\",",23],["\"ext/phar/tests/frontcontroller32.phpt\",",23],["\"ext/date/tests/bug43075.phpt\",",23],["\"Zend/tests/010.phpt\",",23],["\"ext/gd/tests/imagefilter_error18.phpt\",",23],["\"ext/soap/tests/server020.phpt\",",23],["\"ext/mbstring/tests/mb_ereg_replace_variation4.phpt\",",23],["\"ext/dom/tests/DOMDocument_validate_error1.phpt\",",23],["\"ext/mbstring/tests/mb_output_handler_pattern-09.phpt\",",23]]},{"word":"pid","context":[["if($pid <= 0) {",665],["return $pid;",542],["if($pid > 0) {",540],["my $pid;",487],["my $pid = fork();",395],["my $pid = processexists($pidfile);",364],["$started{$proc->pid()}= $proc;",357],["if ( delete $started{$proc->pid()} ) {",357],["stopserver($server, \"$pid\");",277],["if ($pid) {",272]]},{"word":"pidfile","context":[["$doesntrun{$pidfile} = 1;",829],["my $pid = processexists($pidfile);",364],["unlink($pidfile) if(-f $pidfile);",364],["unlink($pidfile) if(-f $pidfile);",364],["unlink($pidfile);",308],["if ($doesntrun{$pidfile}) {",291],["my $pidfile;",290],["$pidfile = $serverpidfile{$server};",277],["$flags .= \"--pidfile \\\"$pidfile\\\" --logfile \\\"$logfile\\\" \";",207],["$flags .= \"--pidfile \\\"$pidfile\\\" --logfile \\\"$logfile\\\" \";",207]]},{"word":"pkg","context":[["my $pkg = shift;",172],["my $pkg = $package{$name};",170],["package => $pkg,",101],["my ($pkg) = @_;",94],["foreach my $pkg (@pkgs) {",90],["print \"$pkg->{name}: \";",81],["$pkgs{$pkg} = 1;",81],["foreach my $pkg (@pkglist) {",70],["foreach my $pkg (keys %pkgs) {",69],["$defaults{$pkg} = 1;",68]]},{"word":"pl","context":[["if (!$::Driver) { use FindBin; exec(\"$FindBin::Bin/bootstrap.pl\", @ARGV, $0); die; }",594],["require \"$form->{path}/menu.pl\";",406],["die \"can't locate x86_64-xlate.pl\";",402],["( $xlate=\"${dir}x86_64-xlate.pl\" and -f $xlate ) or",397],["( $xlate=\"${dir}../../perlasm/x86_64-xlate.pl\" and -f $xlate) or",383],["eval { require \"$FindBin::Bin/../kohalib.pl\" };",306],["require \"x86asm.pl\";",281],["require \"bin/menu.pl\";",274],["# `make test'. After `make install' it should work as `perl test.pl'",233],["next if ($realfile !~ /\\.(h|c|s|S|pl|sh)$/);",218]]},{"word":"plot","context":[["q` print(plot) `,",316],["q` plot = plot + geom_bar(stat = \"identity\") `,",162],["q` plot = plot + geom_bar(stat = \"identity\") `,",162],["q` plot = plot + theme_bw() `,",150],["q` plot = plot + theme_bw() `,",150],["q` plot = plot + theme(strip.background = element_blank()) `,",118],["q` plot = plot + theme(strip.background = element_blank()) `,",118],["q` plot = plot + theme(legend.title = element_blank()) `,",105],["q` plot = plot + theme(legend.title = element_blank()) `,",105],["q` plot = plot + theme(legend.key = element_blank()) `,",88]]},{"word":"plugin","context":[["sub plugin {",776],["plugin::return_items(\\%itemcount);",621],["plugin_parameters : other parameters added when the plugin is called by the dopop function",456],["$plugin->add_mode(",260],["my $plugin = shift;",197],["$plugin->add_arg(",162],["Other parameters added when the plugin is called by the dopop function",145],["plugin that shows a stats on borrowers",126],["my ($plugin, $location)  = @_;",106],["$plugin_filename = $plugin.\".so\";",106]]},{"word":"pod","context":[["=pod",3716],["# perluniprops.pod should be consulted for the syntax rules for any of these,",2468],["=begin pod",537],["=end pod",533],["# 'X' below means that this form is discouraged.  Consult perluniprops.pod",370],["#pod",268],["# now $scalar contains the pod from $podfile you can see this below",128],["# (@noindent is impossible in .pod, and @refill is unnecessary.)",62],["# @* is also impossible in .pod; we discard it and any newline that",62],["#pod =cut",42]]},{"word":"pod2usage","context":[[") or pod2usage(2);",760],["pod2usage(1) if $help;",635],["pod2usage(1);",484],["pod2usage( -verbose => 2 );",310],["or pod2usage(2);",257],["pod2usage(",225],["pod2usage( {",219],["pod2usage(-exitstatus => 0, -verbose => 2) if $man;",213],["pod2usage(-verbose => 1,  -input=>\\*DATA);",180],["pod2usage(-verbose => 2) if $man;",179]]},{"word":"point","context":[["# starting code point of the range, in hex; STOP is the ending point, or if",2478],["# starting code point of the range, in hex; STOP is the ending point, or if",2478],["# omitted, the range has just one code point.  Numbers in comments in",2478],["die \"$P: $root: --root does not point at a valid tree\\n\";",296],["# This file returns the single code point in Unicode Version 5.2.0 that",272],["# it there is no point in retrying a statement scan",173],["# won't point at an old directory",149],["# This file returns the single code point in Unicode Version 6.1.0 that",133],["# At this point we have found next suitable test",117],["# for the code point.  (i.e. the same as looking at the code point's UTF-8",91]]},{"word":"pop","context":[["pop\t%rbp",516],["pop\t%r12",503],["pop\t%r13",499],["pop\t%rbx",471],["pop\t%r14",452],["pop\t%r15",446],["pop\t%rdi",332],["pop\t%rsi",332],["my $new_type = pop(@av_paren_type);",299],["pop(@av_paren_type);",299]]},{"word":"port","context":[["my $port;",265],["my ($proto, $ipvnum, $idnum, $ip, $port) = @_;",241],["my $pid3 = verifyserver($proto, $ipvnum, $idnum, $ip, $port);",207],["# all port numbers might not be used in this version of the script.",149],["\"--port=$master->[0]->{'port'} \" .",147],["\"--port=$master->[0]->{'port'} \" .",147],["mtr_error(\"MTR_BUILD_THREAD number results in a port\",",147],["-port      => $o_port,",142],["mtr-port-base=#       Base for port numbers, ports from this number to",119],["mtr_error(\"Some port(s) was not free\")",119]]},{"word":"pos","context":[["neg(pos).",528],["my $pos = 0;",424],["$pos++;",256],["pos.",256],["if ($pos >= 0) {",165],["$last_openparen = $pos;",158],["\" \"  x ($pos % 8);",158],["my $goodspaceindent = $oldindent . \" \"  x $pos;",158],["for ($pos = 0; $pos < $len; $pos++) {",158],["my $string = substr($line, $pos);",158]]},{"word":"possible","context":[["# also makes it possible to wait for any process to exit during the check",357],["sub possible {",301],["warn \"POSSIBLE: $possible ($line)\\n\" if ($dbg_possible);",299],["my ($possible, $line) = @_;",299],["} elsif ($possible =~ /\\s/) {",297],["possible($1, \"B:\" . $s);",297],["possible($1, \"C:\" . $s);",297],["possible($type, \"A:\" . $s);",297],["$possible =~ s/\\s*$Sparse\\s*//g;",297],["$possible =~ s/\\s*$Type\\s*//g;",297]]},{"word":"pre","context":[["# Check the pre-context.",299],["#print \"pre<$pre_ctx>\\nline<$line>\\nctx<$ctx>\\nnext<$lines[$ctx_ln - 1]>\\n\";",296],["pre.smallexample {font-size: smaller}",290],["pre.menu-preformatted {font-family: serif}",290],["pre.menu-comment {font-family: serif}",290],["pre.smalllisp {font-size: smaller}",290],["#print \"APW: ALLOWED: pre<$1>\\n\";",283],["my $pre = $1;",224],["q` data = rbind(data, pre) `,",212],["pre.display {font-family: inherit}",166]]},{"word":"preference","context":[["if (C4::Context->preference(\"Version\") < TransformToNum($DBversion)) {",11887],["if ( C4::Context->preference(\"Version\") < TransformToNum($DBversion) ) {",2830],["if (C4::Context->preference('Version') < TransformToNum($DBversion)){",517],["if ( C4::Context->preference('Version') < TransformToNum($DBversion) ) {",467],["if (C4::Context->preference('ExtendedPatronAttributes')) {",307],["authnotrequired => ( C4::Context->preference(\"OpacPublic\") ? 1 : 0 ),",279],["if (C4::Context->preference('BakerTaylorEnabled')) {",190],["RoutingSerials => C4::Context->preference('RoutingSerials'),",187],["if ( C4::Context->preference(\"SyndeticsEnabled\")",175],["activeBorrowerRelationship => (C4::Context->preference('borrowerRelationship') ne ''),",167]]},{"word":"prefix","context":[["my $prefix = '';",368],["my $prefix;",351],["$prefix = '';",343],["my ($where, $prefix) = ($-[1], $1);",296],["if ($prefix !~ /$Type\\s+$/ &&",296],["($where != 0 || $prefix !~ /^.\\s+$/) &&",294],["# It is, so see if the prefix is acceptable.",280],["##print \"prefix<$prefix>\\n\";",280],["my $prefix = $absolute;",280],["##print \"prefix<$prefix>\\n\";",280]]},{"word":"prepare","context":[["$sth = $dbh->prepare($query);",932],["my $sth = $dbh->prepare($query);",814],["my $sth = $dbh->prepare($sql);",496],["or die \"Couldn't prepare statement: \" . $dbh->errstr;",362],["$dbh->prepare(",360],["$sth = $dbh->prepare($sql);",348],["$sthA = $dbhA->prepare($stmtA) or die \"preparing: \",$dbhA->errstr;",283],["$sth = $dbh->prepare(",264],["my $sth_search = $dbh->prepare(\"SELECT count(*) AS total",242],["my $sth = $dbh->prepare(",234]]},{"word":"print","context":[["print \"\\n\";",23189],["print qq|",7730],["print",6111],["print <<EOF;",4245],["print;",2463],["print \"\\n\\n\";",1807],["print $_;",1604],["print STDERR \"\\n\";",1598],["print \"</tr>\\n\";",1389],["print \"",1364]]},{"word":"printf","context":[["printf $outfh \"\\n\";",2505],["printf \"\\n\";",1195],["printf $outfh $pcol->{format}, $pcol->{name};",646],["#     printf $log_fh \"%d: File %s already exists\\n\", __LINE__, $outfnm if ( -e $outfnm);",510],["printf $log_fh \"\\n\";",500],["printf $outfh \",%s\", $key;",406],["#     printf $outfh \"\\n\";",374],["printf $log_fh \"ENTRY STATE: %s\\n\",",373],["printf(\"\\n\");",332],["printf $outfh \"product,\";",287]]},{"word":"proc","context":[["my $proc= My::SafeProcess->new",594],["mtr_verbose(\"Started $proc\");",507],["return $proc;",484],["get_log_from_proc($proc, $tinfo->{name});",476],["my $proc= My::SafeProcess->wait_any_timeout($timeout);",357],["my $res= $proc->exit_status();",357],["mtr_report(\"Got $proc\");",357],["$started{$proc->pid()}= $proc;",357],["if ( delete $started{$proc->pid()} ) {",357],["$started{$proc->pid()}= $proc;",357]]},{"word":"process","context":[["sub process {",587],["$production->{$process} .= $net_effect;",380],["$consumption->{$process} .= $net_effect;",380],["# Unknown process returned, most likley a crash, abort everything",357],["# also makes it possible to wait for any process to exit during the check",357],["# Wait for next process to exit",357],["if (!process($filename)) {",300],["# get the process ID",191],["delete $production->{$process};",190],["$consumption->{$process} = $net_effect;",190]]},{"word":"product","context":[["foreach my $product (sort keys %{$totals{by_product}})",618],["printf $outfh \"product,\";",287],["foreach my $product (sort keys %{$totals{$section}{by_product}})",286],["#     foreach my $product (sort keys %{$totals{$section}{by_product}})",255],["my $product = $pdb->{product}{u01}{$machine}{$lane}{$stage};",208],["my $product = $pdb->{product}{u01}{$machine}{$lane}{$stage};",208],["foreach my $key (sort keys %{$totals{by_product}{$product}{$section}{by_machine}{$machine}})",202],["foreach my $key (sort keys %{$totals{by_product}{$product}{$section}{by_machine_lane}{$machine}{$lane}})",201],["foreach my $machine (sort { $a <=> $b } keys %{$totals{by_product}{$product}{$section}{by_machine_lane}})",160],["foreach my $lane (sort { $a <=> $b } keys %{$totals{by_product}{$product}{$section}{by_machine_lane}{$machine}})",160]]},{"word":"program","context":[["# This program is distributed in the hope that it will be useful,",5883],["# This file is for internal use by the Perl program only.  The format and even",4650],["# This program is free software; you can redistribute it and/or modify",3916],["# along with this program; if not, write to the Free Software",3345],["This program is distributed in the hope that it will be useful,",2563],["This program is free software; you can redistribute it and/or",2016],["# along with this program.  If not, see <http://www.gnu.org/licenses/>.",1805],["# This program is free software: you can redistribute it and/or modify",1374],["# This program is free software; you can redistribute it and/or",1251],["#    This program is distributed in the hope that it will be useful,",664]]},{"word":"provided","context":[["modification, are permitted provided that the following conditions",653],["the documentation and/or other materials provided with the",644],["# modification, are permitted provided that the following conditions",452],["# modification, are permitted provided that the following conditions are met:",368],["# purpose with or without fee is hereby granted, provided that the above",308],["#    documentation and/or other materials provided with the distribution.",239],["#   and/or other materials provided with the distribution.",141],["#     documentation and/or other materials provided with the distribution.",132],["# with the provided pid, if found check for the file indicating",128],["* modification, are permitted provided that the following conditions",120]]},{"word":"pu01","context":[["my $output_no = $pu01->{output_no};",1425],["my $stage = $pu01->{stage};",1409],["my $machine = $pu01->{mach_no};",1409],["my $lane = $pu01->{lane};",1409],["my $filename = $pu01->{file_name};",1391],["my ($pdb, $pu01) = @_;",766],["foreach my $prow (@{$pu01->{$section}->{data}})",522],["my $pcols = $pu01->{$section}->{column_names};",522],["copy_u01_feeder_cache($pdb, $pu01, DELTA);",493],["copy_u01_name_value_cache($pdb, $pu01, $section);",464]]},{"word":"published","context":[["# it under the terms of the GNU General Public License as published by",5449],["# terms of the GNU General Public License as published by the Free Software",5003],["# under the terms of the GNU General Public License as published by",2021],["as published by the Free Software Foundation; either version 2",1860],["# it under the terms of the GNU AFFERO General Public License as published by",1036],["it under the terms of the GNU General Public License as published by",960],["#    it under the terms of the GNU General Public License as published by",899],["# as published by the Free Software Foundation; either version 2",803],["#  it under the terms of the GNU General Public License as published by",443],["# modify it under the terms of the GNU General Public License as published",393]]},{"word":"push","context":[["push(@av_paren_type, $type);",1741],["push\t%rbx",1643],["push\t%rbp",1640],["push\t%r12",1612],["push\t%r13",1582],["push\t%r14",1511],["push\t%r15",1448],["push(@$images,$example);",1034],["push(",644],["push(@chunks, [ $condition, $statement ]);",598]]},{"word":"pxor","context":[["pxor\t%xmm0,%xmm0",239],["&pxor\t($twtmp,$twtmp);",204],["pxor\t0x00(%rsp), @XMM[0]\t# ^= tweak[]",168],["pxor\t0x10(%rsp), @XMM[1]",168],["&pxor\t($tweak,$twres);",132],["pxor\t$twtmp, $twtmp",132],["&pxor\t($Zlo,$tmp);",120],["pxor\t%xmm5,%xmm5",116],["pxor\t%xmm4,%xmm4",111],["pxor\t@XMM[9], @XMM[6]",110]]},{"word":"q","context":[["$dbh->do(q{",3766],["$cached_env_img{$key} = q|<IMG",3477],["$dbh->do(q|",1522],["q` dev.off() `,",422],["q` print(plot) `,",316],["q` library(Cairo) `,",298],["'q|quiet+'\t=> \\$quiet,",297],["$R->run(q` library(ggplot2) `,",293],["-q, --quiet                quiet",280],["$R->run(q` data = data.frame() `);",220]]},{"word":"qq","context":[["print qq|",7730],["$dbh->do(qq{",1299],[". qq|</a></th>|;",316],[". qq|</th>",289],["$dbh->do(qq|",276],["print qq{",233],["$exchangerate .= qq|",233],[". qq|</button>",226],[".qq|</select>",215],["$stmt = qq{",215]]},{"word":"qr","context":[["qr{enum\\s+$Ident},",301],["qr{union\\s+$Ident},",301],["qr{float},",301],["qr{struct\\s+$Ident},",301],["qr{double},",301],["qr{${Ident}_handler_fn},",301],["qr{${Ident}_t},",301],["qr{void},",301],["qr{bool},",301],["qr{${Ident}_handler},",301]]},{"word":"query","context":[["query           => $input,",2098],["output_html_with_http_headers $query, $cookie, $template->output;",1984],["query           => $query,",1940],["query           => $query,",1940],["query => $input,",1724],["my $query = new CGI;",1638],["$sth = $dbh->prepare($query);",932],["my $sth = $dbh->prepare($query);",814],["query           => $cgi,",502],["query => $query,",481]]},{"word":"quiet","context":[["my $quiet = 0;",531],["$quiet++;",303],["if ($quiet == 0) {",301],["# just keep quiet.",300],["if ($summary && !($clean == 1 && $quiet == 1)) {",299],["# so just keep quiet.",299],["'q|quiet+'\t=> \\$quiet,",297],["'q|quiet+'\t=> \\$quiet,",297],["print \"\\n\" if ($quiet == 0);",290],["-q, --quiet                quiet",280]]},{"word":"qw","context":[["use vars qw(%result_texis %result_texts %result_trees %result_errors",1722],["use CGI qw ( -utf8 );",1666],["use FindBin qw($Bin);",1473],["use FindBin qw($RealBin);",1101],["use Cwd qw(abs_path);",795],["use POSIX qw(strftime);",783],["use C4::Dates qw/format_date/;",554],["use Term::ANSIColor qw(:constants);",519],["use vars qw($VERSION);",513],["use Getopt::Long qw(:config no_auto_abbrev);",391]]},{"word":"r","context":[["return @r;",1025],["s/\\r|\\n//g;",727],["my $r;",665],["s/\\r//g;",542],["print \"\\r$i\" unless ($i % 100);",515],["if ($r) {",420],["print \"$r\\n\";",366],["my $r = shift;",338],["return $r;",333],["\"rel=s\" \t=> \\$r,",306]]},{"word":"r0","context":[["mov\t\tr0, sp",598],["vld1.64\t\t{@XMM[8]}, [r0,:128]\t\t@ next round tweak",364],["vld1.64\t\t{@XMM[ 8]-@XMM[ 9]}, [r0,:128]!",260],["vld1.64\t\t{@XMM[10]-@XMM[11]}, [r0,:128]!",260],["vld1.64\t\t{@XMM[12]-@XMM[13]}, [r0,:128]!",156],["mflr\tr0",116],["mtlr\tr0",106],["vld1.64\t\t{@XMM[8]-@XMM[9]}, [r0,:128]!",104],["vst1.64\t\t{@XMM[$i-1]}, [r0,:128]!",104],["addze\tr10,r0",98]]},{"word":"r10","context":[["addze\tr10,r10",392],["addze\tr10,r10",392],["addi\t\tr10,r10,32",356],["addi\t\tr10,r10,32",356],["lea\t(%rsi,%r10),%r10\t# epilogue label",334],["lea\t(%rsi,%r10),%r10\t# epilogue label",334],["mov\t40(%rsi),%r10\t\t# disp->ContextRecord",331],["mov\t%r10,32(%rsp)\t\t# arg5",331],["adde\t\tr10,r8,r10",322],["adde\t\tr10,r8,r10",322]]},{"word":"r11","context":[["addi\t\tr11,r11,32",356],["addi\t\tr11,r11,32",356],["addc\t\tr11,r7,r11",336],["addc\t\tr11,r7,r11",336],["mov\t4(%r11),%r10d\t\t# HandlerData[1]",332],["mov\t0(%r11),%r10d\t\t# HandlerData[0]",332],["lea\t56(%rsi),%r11\t\t# &disp->HandlerData",331],["mov\t%r11,40(%rsp)\t\t# arg6",331],["mov\t56($disp),%r11\t\t# disp->HandlerData",309],["addc\tr11,r11,r8",308]]},{"word":"r12","context":[["push\t%r12",1612],["pop\t%r12",503],["mov\t-24(%rax),%r12",396],["lea\t24(%rsi),%r12\t\t# &disp->EstablisherFrame",331],["mov\t%r12,48(%rsp)\t\t# arg7",331],["mov\t%r12,216($context)\t# restore context->R12",308],["addze\tr12,r12",308],["addze\tr12,r12",308],["adde\tr12,r12,r9",294],["addc\tr12,r12,r8",294]]},{"word":"r13","context":[["push\t%r13",1582],["pop\t%r13",499],["mov\t-32(%rax),%r13",355],["mov\t16(%rsi),%r13",291],["mov\t%r13,224($context)\t# restore context->R13",275],["adcx\t%rax,%r13",223],["mov\t-32(%rsi),%r13",212],["adox\t%r13,%r12",131],["addq\t%rax, %r13",130],["adcq\t\\$0, %r13",117]]},{"word":"r14","context":[["push\t%r14",1511],["pop\t%r14",452],["mov\t-40(%rax),%r14",349],["mov\t8(%rsi),%r14",291],["mov\t%r14,232($context)\t# restore context->R14",270],["mov\t-40(%rsi),%r14",212],["br\t%r14",139],["adcx\t$zero,%r14\t\t# cf=0",130],["addq\t%rax, %r14",117],["adc\t8*6($tptr),%r14",114]]},{"word":"r15","context":[["push\t%r15",1448],["pop\t%r15",446],["mov\t-48(%rax),%r15",318],["mov\t%r15,240($context)\t# restore context->R15",237],["mov\t(%rsi),%r15",221],["mov\t-48(%rsi),%r15",156],["adc\t8*7($tptr),%r15",114],["mulx\t3*8($nptr),%rax,%r15",108],["adox\t$zero,%r15",93],["addq\t%rax, %r15",91]]},{"word":"r4","context":[["add\t\tr4, $key, #248\t\t\t@ pass key schedule",364],["add\t\tr4, sp, #0x90\t\t\t@ pass key schedule",364],["mov\tr4, $key\t\t\t@ pass key",208],["$LD\tr6,`2*$BNSZ`(r4)",168],["ldmia\tsp!,{r4-r12,pc}",158],["$LD\tr6,`1*$BNSZ`(r4)",154],["$LD\tr6,`3*$BNSZ`(r4)",140],["$LD\tr6,`5*$BNSZ`(r4)",112],["$LD\tr6,`4*$BNSZ`(r4)",112],["$LD\tr6,`6*$BNSZ`(r4)",112]]},{"word":"r6","context":[["$UMULH\tr9,r6,r7",1092],["$UMULL\tr8,r6,r7",1092],["$UMULL\t\tr7,r5,r6",476],["$UMULH\t\tr8,r5,r6",476],["$LD\tr6,`2*$BNSZ`(r4)",168],["$LD\tr6,`1*$BNSZ`(r4)",154],["$UMULH  r10,r6,r8",140],["$UMULL\t\tr7,r6,r6",140],["$UMULL\tr9,r6,r8",140],["$LD\tr6,`3*$BNSZ`(r4)",140]]},{"word":"r7","context":[["$UMULH\tr9,r6,r7",1092],["$UMULL\tr8,r6,r7",1092],["$UMULL\t\tr7,r5,r6",476],["addc\t\tr11,r7,r11",336],["addc\t\tr9,r7,r9",322],["addc\t\tr10,r7,r10",308],["$LD\tr7,`1*$BNSZ`(r5)",168],["$LD\tr7,`2*$BNSZ`(r5)",163],["$LD\tr7,`3*$BNSZ`(r5)",154],["$UMULL\t\tr7,r6,r6",140]]},{"word":"r8","context":[["$UMULL\tr8,r6,r7",1092],["$UMULH\t\tr8,r5,r6",476],["adde\t\tr9,r8,r9",336],["mov\t0(%rsi),%r8\t\t# arg3, disp->ControlPc",331],["adde\t\tr10,r8,r10",322],["addc\tr11,r11,r8",308],["$context=\"%r8\";",308],["adde\t\tr11,r8,r11",308],["addc\tr12,r12,r8",294],["addc\tr10,r10,r8",280]]},{"word":"r9","context":[["$UMULH\tr9,r6,r7",1092],["adde\t\tr9,r8,r9",336],["adde\t\tr9,r8,r9",336],["mov\t16(%rsi),%r9\t\t# arg4, disp->FunctionEntry",331],["addc\t\tr9,r7,r9",322],["addc\t\tr9,r7,r9",322],["$disp=\"%r9\";",308],["adde\tr12,r12,r9",294],["adde\tr10,r10,r9",294],["adde\tr11,r11,r9",280]]},{"word":"range","context":[["# starting code point of the range, in hex; STOP is the ending point, or if",2478],["# [brackets] indicate how many code points are in the range.",2478],["# omitted, the range has just one code point.  Numbers in comments in",2478],["#extract the line range in the file after the patch is applied",303],["# But a fairly safe range seems to be 5001 - 32767",149],["foreach my $file_range_diff (@range) {",110],["$vsx =~ /( (?:value|string|range)_string [^=]+ ) = /xo;",98],["my @range = ();",73],["push(@range, \"$lastfile:$1:$2\");",57],["} elsif (@range) {",53]]},{"word":"raquo","context":[["more &raquo; </a>\t</div>",90],["<option value=\\\"/-/topics/internet-telecoms/\\\" >&nbsp;&raquo; Internet &#038; Telecoms</option>",30],["<option value=\\\"/-/world/sub-saharan-africa/ghana/\\\" >&nbsp;&raquo; Ghana</option>",30],["<option value=\\\"/-/world/middle-east-north-africa/algeria/\\\" >&nbsp;&raquo; Algeria</option>",30],["<option value=\\\"/-/world/sub-saharan-africa/somalia/\\\" >&nbsp;&raquo; Somalia</option>",30],["<option value=\\\"/-/topics/law/\\\" >&nbsp;&raquo; Law</option>",30],["<option value=\\\"/-/world/western-europe/netherlands/\\\" >&nbsp;&raquo; Netherlands</option>",30],["<option value=\\\"/-/special/about-gvo/\\\" >&nbsp;&raquo; About GVO</option>",30],["<option value=\\\"/-/world/middle-east-north-africa/yemen/\\\" >&nbsp;&raquo; Yemen</option>",30],["<option value=\\\"/-/topics/travel/\\\" >&nbsp;&raquo; Travel</option>",30]]},{"word":"rawline","context":[["my $herevet = \"$here\\n\" . cat_vet($rawline) . \"\\n\";",1470],["fix_delete_line($fixlinenr, $rawline);",553],["foreach my $rawline (@rawlines) {",300],["$line = $rawline;",300],["#print \"==>$rawline\\n\";",299],["} elsif ($rawline =~ /^\\+.*\\S\\s+$/ || $rawline =~ /^\\+\\s+$/) {",299],["if ($rawline=~/^\\@\\@ -\\d+(?:,\\d+)? \\+(\\d+)(,(\\d+))? \\@\\@/) {",299],["($prevrawline, $stashrawline) = ($stashrawline, $rawline);",299],["$line = sanitise_line($rawline);",299],["my $rawline = $rawlines[$linenr - 1];",299]]},{"word":"rawlines","context":[["\"$here\\n$ctx\\n$rawlines[$ctx_ln - 1]\\n\");",498],["my @rawlines = ();",307],["push(@rawlines, $_);",304],["next if ($rawlines[$line] =~ /^-/);",304],["@rawlines = ();",304],["push(@res, $rawlines[$line]);",303],["my $line = $rawlines[$linenr - 1];",303],["$blk .= $rawlines[$line];",303],["##print \"LINE: $rawlines[$end_line - 1 ]\\n\";",303],["foreach my $rawline (@rawlines) {",300]]},{"word":"rax","context":[["mov\t152($context),%rax\t# pull context->Rsp",496],["mov\t120($context),%rax\t# pull context->Rax",492],["mov\t-8(%rax),%rbx",483],["mov\t-16(%rax),%rbp",465],["mov\t$ai,%rax",432],["mov\t-24(%rax),%r12",396],["add\t%rax,$A[1]",384],["add\t%rax,$N[1]",384],["mov\t%rax,152($context)\t# restore context->Rsp",372],["mov\t8(%rax),%rdi",369]]},{"word":"rbp","context":[["push\t%rbp",1640],["pop\t%rbp",516],["mov\t-16(%rax),%rbp",465],["mov\t%rbp,160($context)\t# restore context->Rbp",372],["mov\t32(%rsi),%rbp",286],["mov\t-16(%rsi),%rbp",212],["movzb\t-128(%rbp,%rsi),%ebx",128],["lea\t0x20(%rbp), $arg2",84],["movdqa\t@XMM[15], 0x20(%rbp)\t# put aside IV",84],["pxor\t0x20(%rbp), @XMM[0]\t# ^= IV",84]]},{"word":"rbx","context":[["push\t%rbx",1643],["mulq\t%rbx",585],["mov\t248($context),%rbx\t# pull context->Rip",501],["mov\t-8(%rax),%rbx",483],["pop\t%rbx",471],["mov\t%rbx,144($context)\t# restore context->Rbx",380],["cmp\t%r10,%rbx\t\t# context->Rip>=epilogue label",306],["mov\t40(%rsi),%rbx",286],["cmp\t%r10,%rbx\t\t# context->Rip<prologue label",226],["mov\t-8(%rsi),%rbx",212]]},{"word":"rc","context":[["'subcategory' => 'client save rc file',",317],["return $rc;",262],["die($rc) unless $rc->is_success();",240],["die($rc) unless $rc->is_success();",240],["if ($rc) {",239],["$rc = <STDIN>; chomp($rc); if ($rc eq \"ERROR\") { exit; }",175],["$rc = <STDIN>; chomp($rc); if ($rc eq \"ERROR\") { exit; }",175],["my $rc;",175],["$rc = <STDIN>; chomp($rc); if ($rc eq \"ERROR\") { exit; }",175],["my $rc = 0;",165]]},{"word":"rdi","context":[["push\t%rdi",524],["mov\t%rdi,176($context)\t# restore context->Rdi",378],["mov\t8(%rax),%rdi",369],["pop\t%rdi",332],["mov\t40($disp),%rdi\t\t# disp->ContextRecord",331],["lea\t512($context),%rdi\t# &context.Xmm6",206],["mov\t%rax,0(%rdi)",68],["mov\t%rdi,$ctx\t# reassigned argument",67],["lea\t(%rdx,%rdx),%rdi",64],["xor\t8(%rdi),%eax",60]]},{"word":"rdx","context":[["adc\t\\$0,%rdx",3839],["adc\t\\$0, %rdx",840],["adcq\t\\$0, %rdx",494],["mov\t%rdx,$A[1]",384],["mov\t%rdx,$A[0]",384],["mov\t%rdx,$N[1]",384],["mov\t%rdx,$N[0]",384],["mov\t8(%rsi),%rdx\t\t# arg2, disp->ImageBase",331],["$frame=\"%rdx\";",308],["mov\t%rdx,$hi1",304]]},{"word":"re","context":[["sub re {",217],["# re-encode for upper double register addressing",121],["# Loop ran through: we should keep waiting after a re-check",119],["# in each case, we're grabbing the first value we find in",93],["croak (\"You're missing something\") if $var eq $NULL_STRING;",90],["movdqu\t0x00($inp), @XMM[8]\t# re-load input",84],["# we're now running in the background",81],["# If we're within the first 10 pages, keep it simple",68],["# The following should only be loaded if we're bringing up the advanced search template",61],["ok(1); # If we made it this far, we're ok.",57]]},{"word":"read","context":[["# Get AdWords Client, credentials will be read from ~/adwords.properties.",448],["would read in a file of ids and add a column for each field in the relationship.",306],["When FILE is - read standard input.",282],["#---- if primkey exists, it's a modify action, so read values to modify...",196],["# Open the servers .err log file and read all lines",155],["access(read),",155],["# i.e a file can be read regardless what mode we set it to",149],["# Only read pid from files that end with .pid",128],["GetOptions(%options) or usage(\"Can't read options\");",126],["or mtr_error(\"Can't read experimental file: $exp_file\");",118]]},{"word":"realcnt","context":[["my $cnt = $realcnt;",924],["ctx_statement_block($linenr, $realcnt, 0);",603],["$realcnt=$3+1;",602],["$realcnt=1+1;",602],["$realcnt = 0;",598],["ctx_statement_block($linenr, $realcnt, 0)",346],["$realcnt-- if ($realcnt != 0);",303],["} elsif ($realcnt == 1) {",303],["my $realcnt = 0;",303],["$realcnt-- if ($realcnt != 0);",303]]},{"word":"realfile","context":[["$realfile = $1;",553],["if ($realfile !~ m@\\binclude/uapi/@ &&",512],["if ($realfile =~ /Kconfig/ &&",412],["$realfile =~ s@^([^/]*)/@@;",354],["my $realfile = '';",303],["if (($realfile =~ /^$/ || $line =~ /^\\+/) &&",301],["$here .= \"FILE: $realfile:$realline:\" if ($realcnt != 0);",301],["} elsif ($realfile =~ /\\.c$/ && defined $stat &&",291],["if ($realfile =~ /\\.c$/ && defined $stat &&",291],["if ($realfile !~ m@/vmlinux.lds.h$@ &&",290]]},{"word":"received","context":[["# You should have received a copy of the GNU General Public License",8214],["# You should have received a copy of the GNU General Public License along",4990],["# You should have received a copy of the GNU General Public License along with",1572],["You should have received a copy of the GNU Lesser General Public",1221],["# You should have received a copy of the GNU Affero General Public License",1163],["You should have received a copy of the GNU General Public License",1073],["#    You should have received a copy of the GNU General Public License",962],["You should have received a copy of the GNU General Public",560],["#  You should have received a copy of the GNU General Public License",541],["#   You should have received a copy of the GNU General Public License",321]]},{"word":"record","context":[["my ($dbh,$record,$tagslib,$field_number,$tabloop) = @_;",564],["my ($dbh,$record,$tagslib,$i,$tabloop) = @_;",408],["mtr_add_arg($args, \"--record\");",294],["# called by default. Used to create form to add or  modify a record",256],["$record=<CHECKBOOK>;",202],["my $record;",196],["my ( $dbh, $record, $tagslib, $field_number, $tabloop ) = @_;",177],["my ( $dbh, $record, $tagslib, $i, $tabloop ) = @_;",150],["record TESTNAME       (Re)genereate the result file for TESTNAME",149],["'record'                   => \\$opt_record,",149]]},{"word":"redistribute","context":[["# Koha is free software; you can redistribute it and/or modify it under the",4845],["# This program is free software; you can redistribute it and/or modify",3916],["This program is free software; you can redistribute it and/or",2016],["# Koha is free software; you can redistribute it and/or modify it",1914],["# This program is free software: you can redistribute it and/or modify",1374],["# This program is free software; you can redistribute it and/or",1251],["# Meran is free software: you can redistribute it and/or modify",754],["# redistribute it and/or modify it under the terms of either the GNU",591],["This library is free software. You can redistribute it and/or modify",577],["This program is free software; you can redistribute it and/or modify",341]]},{"word":"ref","context":[["'cmdname' => 'ref',",362],["my $ref = shift;",346],["return $ref;",288],["# check if the ref image has this relation with this family already",265],["for my $key (keys %$ref) {",230],["print (\"Ref: ref($service)\\n\");",207],["my $self = (ref $_[0]? shift : $Self);",202],["'text' => 'ref'",180],["$ref;",177],["print join(\"\\t\", $k, map { ref($_) eq 'ARRAY' ? join(\",\", @$_) : $_ } @$v{@fields}), \"\\n\";",160]]},{"word":"reference","context":[["# Inputs: 0) ExifTool object reference",150],["my ($global_var_href) = @_;                            # get reference to global vars hash",135],["my $global_var_href = $_[0];                           # get reference to global vars hash",117],["# Simplify reference to semisync plugins",70],["my $ref_func;\t\t# reference function to use for offsets",63],["# Loop through all the mcount caller offsets and print a reference",63],["# Since local objects can reference local variables, we need to find",62],["# a way to make tmp.o reference the local objects of the original object",62],["# offset from .sched.text. If we choose global symbol func2 as a reference and",51],["# an undefined reference to func1 or a wrong reference to another global",51]]},{"word":"reflection","context":[["\"ext/reflection/tests/bug46064.phpt\",",23],["\"ext/reflection/tests/ReflectionMethod_setAccessible.phpt\",",23],["\"ext/reflection/tests/001.phpt\",",23],["\"ext/reflection/tests/bug33312.phpt\",",23],["\"ext/reflection/tests/ReflectionMethod_basic2.phpt\",",23],["\"ext/reflection/tests/ReflectionProperty_export_basic.phpt\",",23],["\"ext/reflection/tests/bug37816.phpt\",",23],["\"ext/reflection/tests/ReflectionFunction_getClosure_basic.phpt\",",23],["\"ext/reflection/tests/ReflectionClass_getDocComment_002.phpt\",",23],["\"ext/reflection/tests/014.phpt\",",23]]},{"word":"remain","context":[["my ($linenr, $remain, $off) = @_;",1201],["my ($linenr, $remain) = @_;",909],["$remain--;",903],["($statement, $condition, $linenr, $remain, $off, $level) =",598],["ctx_statement_block($linenr, $remain, $off);",598],["for ($line = $start; $remain > 0; $line++) {",303],["my ($level, @r) = ctx_block_get($linenr, $remain, 0, '(', ')', $off);",302],["my ($linenr, $remain, $outer, $open, $close, $off) = @_;",302],["return ctx_block_get($linenr, $remain, 0, '{', '}', 0);",302],["my ($level, @r) = ctx_block_get($linenr, $remain, 0, '{', '}', 0);",302]]},{"word":"remove","context":[["# Make sure we remove the line prefixes as we have",296],["# starting at the end of the conditional, so remove:",296],["my ($r_number, $parent) = split /_/, $reaction; #remove tag from reaction number",249],["if ($net_effect->sum > 0) { #if net production remove consumption processes, retain net production",190],["# remove whitespace",150],["# remove the $opt_mem dir to assure the symlink",149],["# - allow it, but remove all files in it",149],["mtr_error(\"No, don't remove the vardir when running with --extern\")",147],["# Then remove @ and everything after it",119],["unlink($file_name) or die (\"unable to remove file '$file_name'\");",119]]},{"word":"report","context":[["my $report= mtr_grab_file($err_file);",476],["sub report {",387],["#make up the handle for any error we report on this line",303],["our @report = ();",300],["# In mailback mode only produce a report in the negative, for",300],["our @report;",300],["# If we have no input at all, then there is nothing to report on",299],["# we assume the first bad printk is the one to report.",284],["--terse                    one line per report",280],["--mailback                 only produce a report in case of warnings/errors",280]]},{"word":"request","context":[["# Log SOAP XML request, response and API errors.",446],["my $res = $ua->request($req);",293],["my ($request) = @_;",268],["my $response = $ua->request($request);",162],["my $response = $ua->request($request);",162],["-f --fork            handle each request in a new process",114],["# Pass request to the user agent and get a response back",100],["my $resp = $ua->request($req);",95],["my $response = $request->getResponse();",91],["locale => $request->{_locale},",86]]},{"word":"require","context":[["require \"$form->{path}/menu.pl\";",406],["eval { require \"$FindBin::Bin/../kohalib.pl\" };",306],["require Exporter;",287],["require \"x86asm.pl\";",281],["require \"bin/menu.pl\";",274],["require 'ParseExcel.pm';",141],["# compatibility with Perl 4 programs which may require it.",131],["require C4::External::BakerTaylor;",117],["require \"lib/mtr_misc.pl\";",116],["require \"lib/mtr_gcov.pl\";",116]]},{"word":"required","context":[["# Unless required by applicable law or agreed to in writing, software",2607],["#  Unless required by applicable law or agreed to in writing, software",516],["required => 0,",337],["## Unless required by applicable law or agreed to in writing, software",271],["ERROR(\"space required after that '$op' $at\\n\" . $hereptr);",211],["ERROR(\"space required before the open parenthesis '('\\n\" . $herecurr);",210],["\"space required after that '$op' $at\\n\" . $hereptr)) {",206],["Unless required by applicable law or agreed to in writing, software",194],["\"space required before the open parenthesis '('\\n\" . $herecurr);",193],["\"return is not a function, parentheses are not required\\n\" . $herecurr);",192]]},{"word":"res","context":[["return $res;",2186],["my $res;",929],["my $res = '';",649],["$res .= ' ';",607],["substr($res, $off, 2, \"$;$;\");",599],["substr($res, $off, 1, $c);",598],["substr($res, $off, 1, $;);",580],["my $res=\"",469],["return ($function_name,$res);",445],["my @res = ();",377]]},{"word":"response","context":[["# Log SOAP XML request, response and API errors.",446],["if ($response->is_success) {",300],["my $response;",275],["$response = $session->status_detail();",253],["return $response;",187],["my $response = $ua->request($request);",162],["mtr_error(\"Unknown response: '$line' from client\");",119],["# Pass request to the user agent and get a response back",100],["my $response = $request->getResponse();",91],["my $response = $ua->get($url);",89]]},{"word":"restore","context":[["restore",620],["mov\t%rbx,144($context)\t# restore context->Rbx",380],["mov\t%rdi,176($context)\t# restore context->Rdi",378],["mov\t%rsi,168($context)\t# restore context->Rsi",378],["mov\t%rbp,160($context)\t# restore context->Rbp",372],["mov\t%rax,152($context)\t# restore context->Rsp",372],["mov\t%r12,216($context)\t# restore context->R12",308],["mov\t%r13,224($context)\t# restore context->R13",275],["mov\t%r14,232($context)\t# restore context->R14",270],["mov\t%r15,240($context)\t# restore context->R15",237]]},{"word":"result","context":[["return $result;",2206],["my $result;",1608],["$result;",430],["my $result= $input->param('result');",428],["my $result= $input->param('result');",428],["my $result = GetOptions(",392],["return @result;",362],["push(@$completed, $result);",357],["my @result;",351],["# timestamp test result verification end",329]]},{"word":"results","context":[["my @results;",686],["my %results;",470],["push @{$results{$from_id}}, [@from, @rel, @to];",306],["my $resultsForId = $results{$id};",306],["push(@$results, &SgDeliverFile::saveCollaborationInfo($instrs));",162],["Limit the results to entities where the given field is LIKE (in the sql sense) the given value.",160],["Limit the results to entities where the given field has the given value.",160],["return @results;",159],["my $lines = @$results[0]->{looprow};",153],["mtr_error(\"MTR_BUILD_THREAD number results in a port\",",147]]},{"word":"ret","context":[["ret",4328],["return $ret;",2328],["$ret=`$cmd`;",941],["my $ret;",891],["&ret\t();",792],["return($ret);",624],["$ret;",533],["if ($ret) {",528],["return @ret;",431],["$ret = 1;",398]]},{"word":"return","context":[["return;",33466],["return 1;",26088],["return 0;",22798],["return <<'END';",12483],["return undef;",6701],["return \"\";",2943],["return -1;",2811],["return $ret;",2328],["return $result;",2206],["return $res;",2186]]},{"word":"right","context":[["# the equals (or colon) can be combined with anything to the right.  Thus,",2251],["# ignore definitions of NR_CPUS and usage to define arrays as likely right",280],["# , must have a space on the right.",241],["<td align=right>",203],["# anything to the right.  Thus, for example,",150],["<th align=\"right\" nowrap>| .",140],["exp_name        => \"right\",",128],["justify\t\t=> 'right',",116],["\"<td align=right>\"",110],["# header top-right",92]]},{"word":"rm","context":[["$ret=`rm -fr $BUILDROOT/$PROJECT.tmp`;",70],["system(\"rm __$foldFile* $foldFile*\");",65],["`$rm $globalobj $globalmix`;",63],["#    \"'$nm' '$rm' '$mv' '$inputfile'\\n\";",63],["`$rm $mcount_o $mcount_s`;",63],["$ld, $nm, $rm, $mv, $is_module, $inputfile) = @ARGV;",59],["print \"usage: $P arch endian bits objdump objcopy cc ld nm rm mv is_module inputfile\\n\";",51],["$ret=`rm -fr \"$BUILDROOT\"`;",49],["$rm = 'rm' if (!$rm);",49],["$rm = 'rm' if (!$rm);",49]]},{"word":"rndkey0","context":[["?vperm\t\t$rndkey0,$rndkey0,$rndkey1,$keyperm",132],["?vperm\t\t$rndkey0,$rndkey0,$rndkey1,$keyperm",132],["$movkey\t($key),$rndkey0",104],["aesenc\t\t$rndkey0,$inout0",100],["$movkey\t\t($key),$rndkey0",97],["&$movekey\t($rndkey0,&QWP(0,$key));",96],["aesenc\t\t$rndkey0,$inout3",94],["aesenc\t\t$rndkey0,$inout1",94],["aesenc\t\t$rndkey0,$inout2",94],["aesenc\t\t$rndkey0,$inout4",88]]},{"word":"rndkey1","context":[["aesenc\t\t$rndkey1,$inout0",175],["aesenc\t\t$rndkey1,$inout1",166],["aesenc\t\t$rndkey1,$inout2",166],["aes${dir}\t$rndkey1,$inout1",158],["aes${dir}\t$rndkey1,$inout0",158],["aesenc\t\t$rndkey1,$inout3",156],["aesenc\t\t$rndkey1,$inout5",137],["aesenc\t\t$rndkey1,$inout4",137],["?vperm\t\t$rndkey0,$rndkey0,$rndkey1,$keyperm",132],["aes${dir}\t$rndkey1,$inout2",132]]},{"word":"root","context":[["my $root;",361],["$root = $1;",307],["my ($root) = @_;",305],["if (defined $root) {",298],["$root = '.';",297],["mtr_add_arg($args, \"--user=root\");",297],["die \"$P: $root: --root does not point at a valid tree\\n\";",296],["die \"$P: $root: --root does not point at a valid tree\\n\";",296],["'root=s'\t=> \\$root,",295],["if (! -e $root . '/' . $check) {",295]]},{"word":"round","context":[["vld1.64\t\t{@XMM[8]}, [r0,:128]\t\t@ next round tweak",364],["# check for spacing round square brackets; allowed:",296],["# check for redundant bracing round if etc",276],["sub round {",160],["veor\t@XMM[7], @XMM[7], @XMM[6]\t@ fix up round 0 key",130],["sub\tr12, sp, $rounds, lsl#7\t\t@ 128 bytes per inner round key",104],["vstmia\tr12,  {@XMM[15]}\t\t@ save last round key",104],["vstmia\tr12, {@XMM[7]}\t\t\t@ save last round key",104],["\"used \\\"round robin\\\"\");",90],["veor\t@XMM[7],@XMM[7],@XMM[15]\t@ fix up last round key",78]]},{"word":"rounds","context":[["mov\t\tr5, $rounds\t\t\t@ pass rounds",390],["mov\t\tr5, $rounds\t\t\t@ pass rounds",390],["subs\t$rounds,$rounds,#1",216],["mov\t%edx, %r10d\t\t# pass rounds",216],["subs\t$rounds,$rounds,#1",216],["mov\tr5, $rounds\t\t\t@ pass # of rounds",208],["mov\tr5, $rounds\t\t\t@ pass # of rounds",208],["mtctr\t\t$rounds",162],["sub\t$rounds,$rounds,#1",147],["sub\t$rounds,$rounds,#1",147]]},{"word":"row","context":[["my %row = (",452],["$row++;",431],["my $row;",395],["my @row;",259],["my @data = @$row;",235],[")->grid(-row=>$$row,-column=>0,-sticky=>'ewns');",226],[")->grid(-row=>$$row,-column=>0,-sticky=>'ewns');",226],["'type' => 'row'",199],["for($row=1;$row < @PARTITION_FIELD;$row++){",191],["for($row=1;$row < @PARTITION_FIELD;$row++){",191]]},{"word":"rows","context":[["my @rows;",248],["$sthArows=$sthA->rows;",237],["for ($i=0; $i<$rows; $i++) {",209],["($result, $rows) = &do_multi_result_sql_query2($global_var_href, $sql, \\@sql_parameters, $sr_name . \"-\" . __LINE__ );",204],["$rows = scalar @{ $form->{item_list} };",119],["unless ($rows > 0) {",116],["my ($page, $sql, $result, $rows, $row, $i);",108],["if ($rows) {",94],["$rows = 2;",93],["# 1st, loop rows.",86]]},{"word":"rsi","context":[["push\t%rsi",524],["mov\t%rsi,168($context)\t# restore context->Rsi",378],["mov\t16(%rax),%rsi",369],["lea\t(%rsi,%r10),%r10\t# epilogue label",334],["pop\t%rsi",332],["mov\t8($disp),%rsi\t\t# disp->ImageBase",332],["mov\t$disp,%rsi",331],["mov\t40(%rsi),%r10\t\t# disp->ContextRecord",331],["mov\t16(%rsi),%r9\t\t# arg4, disp->FunctionEntry",331],["lea\t24(%rsi),%r12\t\t# &disp->EstablisherFrame",331]]},{"word":"rsp","context":[["sub\t\\$64,%rsp",526],["mov\t%r11,40(%rsp)\t\t# arg6",331],["mov\t%r12,48(%rsp)\t\t# arg7",331],["mov\t%rcx,56(%rsp)\t\t# arg8, (NULL)",331],["mov\t%r10,32(%rsp)\t\t# arg5",331],["mov\t%rsp,%rax",329],["add\t\\$64,%rsp",322],["lea\t48(%rsi),%rsp",291],["and\t\\$-64,%rsp",213],["lea\t(%rsi),%rsp",212]]},{"word":"rules","context":[["# perluniprops.pod should be consulted for the syntax rules for any of these,",2468],["rules           => <<EOF",2150],["rules\t\t=> <<EOF",1490],["'rules' => [",96],["do 'make-rules.pl';",74],["rules                => <<EOF",48],["if ($rules->{exp_add_error}) {",46],["$rules.= &do_lib_rule(\"\\$(CRYPTOOBJ) \\$(O_FIPSCANISTER)\",",44],["print \"Upgrade to $DBversion done (added several circ rules tables)\\n\";",39],["('lcc', 'Default filing rules for LCC', 'LCC'),",39]]},{"word":"run","context":[["# Don't run the example if the file is being included.",449],["sub run {",432],["# uncomment this to run the ### lines",293],["$R->run(q` library(ggplot2) `,",293],["print \"Must be run from the top-level dir. of a kernel tree\\n\";",285],["--no-tree                  run without a kernel tree",267],["my $res= My::SafeProcess->run",222],["$R->run(q` data = data.frame() `);",220],["My::SafeProcess->run",214],["# if script decided to run mysqltest cluster _is_ installed ok",214]]},{"word":"running","context":[["# Kill any check processes still running",357],["# if running in valgrind(to avoid valgrinding bash)",185],["running test(s)",149],["# Run test on running server",149],["Options to run test on running server",149],["# Check if running as root",149],["mtr_warning(\"running this script as _root_ will cause some \" .",147],["mtr_error(\"No, don't remove the vardir when running with --extern\")",147],["manual-gdb            Let user manually start mysqld in gdb, before running",145],["manual-ddd            Let user manually start mysqld in ddd, before running",145]]},{"word":"rv","context":[["return $rv;",1838],["return @rv;",1601],["local @rv;",781],["my $rv;",727],["my @rv;",517],["$rv = 0;",374],["local $rv;",223],["if (!$rv || $rv->code) {",212],["if (!$rv || $rv->code) {",212],["my $rv = 1;",199]]},{"word":"s","context":[["mtr_add_arg($args, \"--defaults-file=%s\", $path_config_file);",1484],["s/\\s+$//;",982],["s/\\s+$//;",982],["substr($s, 0, length($c), '');",890],["return $s;",841],["s/^\\s+//;",822],["s/^\\s+//;",822],["# Circulation and User's Management. It's written in Perl, and uses Apache2",754],["# Circulation and User's Management. It's written in Perl, and uses Apache2",754],["next if /^\\s*$/;",730]]},{"word":"s0","context":[["&xor\t($s0,&DWP(16*$i+0,$key));",132],["&xor\t($s0,&DWP(0,$key));",124],["movzb\t`&hi(\"$s0\")`,$acc1",112],["xor\t$t0,$s0",112],["shr\t\\$16,$s0",112],["rev\t$s0,$s0",95],["rev\t$s0,$s0",95],["and\t$i2,lr,$s0,lsr#8",92],["mov\t$s0,$s0,lsr#24",90],["mov\t$s0,$s0,lsr#24",90]]},{"word":"s1","context":[["&xor\t($s1,&DWP(4,$key));",282],["&mov\t(&DWP(4,$key),$s1);",204],["&mov\t($s1,&DWP(4,$acc));",164],["mov\t$s1,4($out)",164],["&mov\t(&DWP(4,$acc),$s1);",164],["&xor\t($s1,&DWP(16*$i+4,$key));",132],["movzb\t`&hi(\"$s1\")`,$acc0",132],["xor\t$t1,$s1",128],["xor\t4($key),$s1",124],["shr\t\\$16,$s1",112]]},{"word":"s2","context":[["&xor\t($s2,&DWP(8,$key));",282],["&mov\t(&DWP(8,$key),$s2);",204],["mov\t$s2,8($out)",164],["&mov\t(&DWP(8,$acc),$s2);",164],["&mov\t($s2,&DWP(8,$acc));",164],["xor\t$t2,$s2",154],["&mov\t($s2,$_len);\t\t# load len",132],["&xor\t($s2,&DWP(16*$i+8,$key));",132],["&mov\t($_len,$s2);\t\t# save len",132],["xor\t8($key),$s2",124]]},{"word":"s3","context":[["&xor\t($s3,&DWP(12,$key));",282],["&mov\t(&DWP(12,$key),$s3);",204],["&mov\t(&DWP(12,$acc),$s3);",164],["mov\t$s3,12($out)",164],["&mov\t($s3,&DWP(12,$acc));",164],["xor\t$t3,$s3",154],["movzb\t`&hi(\"$s3\")`,$acc0",152],["&xor\t($s3,&DWP(16*$i+12,$key));",132],["&mov\t($s3,&DWP(12,$key));",126],["xor\t12($key),$s3",124]]},{"word":"same","context":[["it under the same terms as Perl itself.",663],["#     Note that contrary to what you might expect, the above is NOT the same",512],["# statements should be at the same indent.",303],["# Check for }<nl>else {, these must be at the same",303],["# function brace can't be on same line, except for #defines of do while,",302],["# or if closed on same line",302],["# open braces for enum, union and struct go on the same line.",300],["# same line do not need a level, so we use the current block context",285],["# modify it under the same terms as Perl itself.",203],["under the same terms as Perl itself.",199]]},{"word":"sanitise_quote","context":[["$sanitise_quote = '';",1178],["$sanitise_quote = '*/';",598],["if ($sanitise_quote eq '' && substr($line, $off, 2) eq '/*') {",299],["} elsif ($sanitise_quote eq $c) {",299],["if (($sanitise_quote eq \"'\" || $sanitise_quote eq '\"') &&",299],["if (($sanitise_quote eq \"'\" || $sanitise_quote eq '\"') &&",299],["if ($off != 0 && $sanitise_quote eq '*/' && $c ne \"\\t\") {",299],["if ($sanitise_quote eq '') {",299],["$sanitise_quote = $c;",299],["my $sanitise_quote = '';",299]]},{"word":"save","context":[["# Start the mysqltest processes in parallel to save time",354],["'subcategory' => 'client save rc file',",317],["sub save {",156],["'max-save-core=i'          => \\$opt_max_save_core,",149],["max-save-core         Limit the number of core files saved (to avoid filling",149],["&mov\t($_inp,$acc);\t\t# save inp",138],["&mov\t($_len,$s2);\t\t# save len",132],["# Before a testcase, run in record mode and save result file to var/tmp",119],["'max-save-datadir=i'       => \\$opt_max_save_datadir,",119],["max-save-datadir      Limit the number of datadir saved (to avoid filling",119]]},{"word":"say","context":[["say   \"\\n\\n\\n\\n\\n\\n##################################################################################################\";",251],["use feature 'say';",248],["say \"\";",221],["say format_date(DateTime->now), \" \", $message;",204],["use feature qw(say);",159],["say",139],["say '';",127],["say $impl \"        break;\";",120],["quest::say(\"You have done well.\");",86],["say $impl '}';",80]]},{"word":"scalar","context":[["if (scalar(@parts) >= 9)",384],["if (scalar(@vals) > 0) {",289],["my $cnt = scalar(@$catcodes);",195],["if ( !scalar %SectionsToLoad ) {",184],["if (scalar(@subkeys) > 0) {",157],["printf $log_fh \"FILE RECS : %d\\n\", scalar(@{$pu01->{data}});",154],["if (scalar(@ARGV) == 0)",138],["# now $scalar contains the pod from $podfile you can see this below",128],["#print $scalar;",128],["my $scalar = '';",128]]},{"word":"script","context":[["</script>",1876],["<form method=post action=$form->{script}>",934],["<script>",652],["<script type=\\\"text/javascript\\\">",359],["<script type=\"text/javascript\">",339],["# Before `make install' is performed this script should be runnable with",236],["Print this script's manual page and exit.",227],["<script type='text/javascript'>",226],["# if script decided to run mysqltest cluster _is_ installed ok",214],["# versions of this script, else a 4.0 test run might conflict with a",149]]},{"word":"section","context":[["$pdb->{$section}->{$machine}{$lane}{$stage}{state} = DELTA;",1151],["$pdb->{$section}->{$machine}{$lane}{$stage}{delta}{$key};",1142],["$pdb->{$section}->{$machine}{$lane}{$stage}{state}",980],["my $section = MOUNTPICKUPNOZZLE;",724],["delete $pdb->{$section}->{$machine}{$lane}{$stage}{cache};",718],["$report_precision{$section}{precision} = 0;",595],["$section_precision = $report_precision{$section}{precision};",589],["my $section = MOUNTPICKUPFEEDER;",555],["my $pcols = $pu01->{$section}->{column_names};",522],["foreach my $prow (@{$pu01->{$section}->{data}})",522]]},{"word":"see","context":[["# along with Koha; if not, see <http://www.gnu.org/licenses>.",1906],["# along with this program.  If not, see <http://www.gnu.org/licenses/>.",1805],["# or see http://www.gnu.org/licenses/agpl.txt.",1024],["# details see http://www.openssl.org/~appro/cryptogams/.",1012],["# along with Meran.  If not, see <http://www.gnu.org/licenses/>.",754],["Catalyst Contributors, see Catalyst.pm",578],["# and COPYING for more information, or see http://slashcode.com/.",374],["# Pull in the following conditional/block pairs and see if they",299],["# If we see an #else/#elif then the code",294],["# It is, so see if the prefix is acceptable.",280]]},{"word":"select","context":[["</select>",367],["select(STDOUT);",353],["select STDOUT;",324],[".qq|</select>",215],["select",169],["print \"</select>\\n\";",148],["-values   => \\@select,",120],["push @select, $value;",119],[".qq|</select></td>",109],["<td><xsl:value-of select=\"@code\"/></td>",104]]},{"word":"selected","context":[["selected => 0, installed => 0, rpm_exist => 0, rpm_exist32 => 0,",362],["selected => $selected,",249],["selected => $selected,",249],["$selected{$i} = !$selected{$i}",176],["$selected{$i} = !$selected{$i}",176],["my $selected;",161],["# Modify the exe and args so that program is run in the selected debugger",149],["debugger=NAME         Start mysqld in the selected debugger",145],["client-debugger=NAME  Start mysqltest in the selected debugger",145],["my $selected = 0;",143]]},{"word":"self","context":[["my $self = shift;",7009],["my ($self) = @_;",2072],["return $self;",1375],["bless $self, $class;",316],["my $self = {};",261],["my $self = {",259],["$ret = $self;",217],["my ($self,$b,$p,$e,$rt) = @_;",208],["my $self = (ref $_[0]? shift : $Self);",202],["++$$self{CHANGED};",202]]},{"word":"seq","context":[["my $seq;",260],["my $seq = shift;",223],["$seq .= $_;",210],["$seq = \"\";",181],["chomp $seq;",159],["return $seq;",157],["my $seq = \"\";",130],["my $seq = '';",99],["$seq .= $line;",98],["filter_file($seq, $fpath, $fname,",94]]},{"word":"server","context":[["'subcategory' => 'server',",564],["'subcategory' => 'client+server',",545],["# By default examples are set to die on any server returned fault.",446],["my $server;",391],["# failed to talk to it properly. Kill the server and return failure",304],["# don't retry if the server doesn't work",291],["$server = servername_id($proto, $ipvnum, $idnum);",277],["stopserver($server, \"$pid\");",277],["logmsg \"RUN: failed to start the $srvrname server\\n\";",277],["stopserver($server, \"$pid2\");",277]]},{"word":"servers","context":[["# Open the servers .err log file and read all lines",155],["debug                 Dump trace output for all servers and client programs",149],["start-dirty           Only start the servers (without initialization) for",149],["# when starting the servers or due to other error, the reason for",135],["foreach my $server (@servers)",122],["# Run script on all servers, collect results",119],["# Start servers not already started",119],["# Mark servers as stopped",119],["mtr_verbose(\"Stopping all servers...\");",119],["start                 Only initialize and start the servers, using the",119]]},{"word":"session","context":[["$session->close;",613],["C4::AR::Auth::output_html_with_http_headers($template, $t_params, $session);",566],["C4::AR::Auth::print_header($session);",356],["($session, $error) = Net::SNMP->session(",311],["($session, $error) = Net::SNMP->session(",311],["$response = $session->status_detail();",253],["$result = $session->status_code();",252],["my ($template, $session, $t_params) = get_template_and_user({",224],["session => $session,",184],["session => $session,",184]]},{"word":"set","context":[[".set\tnoreorder",727],["Choose a set of fields from the relationship to return. Field-list is a comma-separated list of",612],["is a tab-separated set of fields).  Normally, the last field in each",493],["# By default examples are set to die on any server returned fault.",446],[".set\treorder",425],["$report_precision{$section}{set} = FALSE;",340],["--fields list   Choose a set of fields to return. List is a comma-separated list of strings.",320],["$report_precision{$section}{set} = TRUE;",255],["return unless ($report_precision{$section}{set} == FALSE);",255],["# Add the actors to the renderer, set the background and size",231]]},{"word":"shift","context":[["eval(shift(@insns));",14269],["my $self = shift;",7009],["my $file = shift;",2776],["shift;",2059],["my $text = shift;",1839],["shift @ARGV;",1766],["my $name = shift;",1520],["my $filename = shift;",1474],["my $class = shift;",1383],["my $msg = shift;",933]]},{"word":"should","context":[["# You should have received a copy of the GNU General Public License",8214],["# You should have received a copy of the GNU General Public License along",4990],["# perluniprops.pod should be consulted for the syntax rules for any of these,",2468],["# You should have received a copy of the GNU General Public License along with",1572],["You should have received a copy of the GNU Lesser General Public",1221],["# You should have received a copy of the GNU Affero General Public License",1163],["You should have received a copy of the GNU General Public License",1073],["#    You should have received a copy of the GNU General Public License",962],["# Indicate the exe should not be started",618],["# '*'s should not have spaces between.",584]]},{"word":"show","context":[["--show-fields",386],["--show-fields   List the available fields.",320],["\"show-fields\"\t=> \\$show_fields,",306],["'show-types!'\t=> \\$show_types,",190],["--show-types               show the message \"types\" in the output",173],["--show-types               show the message \"types\" in the output",173],[");    # we show only the TMPL_VAR names $op",164],["\"show-fields\"\t => \\$show_fields,",160],["if ($value eq \"--gen-suppressions=all --show-reachable=yes\") {",148],["my @default_valgrind_args= (\"--show-reachable=yes\");",141]]},{"word":"since","context":[["# We do this here, since we do not want to Valgrind the nested invocations",149],["timediff              With --timestamp, also print time passed since",119],["# Skip --defaults-file option since it's handled above.",108],["# However: since this usage is present in some number of cases, we'll allow for now",63],["'git-since=s' => \\$email_git_since,",59],["# since ARMv7 instructions are always encoded little-endian.",55],["'hg-since=s' => \\$email_hg_since,",53],["Use --hg-since not --git-since to control date selection",53],["Use --hg-since not --git-since to control date selection",53],["--hg-since => hg history to use (default: $email_hg_since)",47]]},{"word":"single","context":[["# Put $args into a single string",302],["#goto labels aren't indented, allow a single space however",282],["# This file returns the single code point in Unicode Version 5.2.0 that",272],["\"braces {} are not necessary for single statement blocks\\n\" . $herectx);",187],["\"single byte memset is suspicious. Swapped 2nd/3rd argument?\\n\" . \"$here\\n$stat\\n\");",173],["# single-statement macros do not need to be enclosed in do while (0) loop,",138],["# This file returns the single code point in Unicode Version 6.1.0 that",133],["# Return as a single string",119],["# Run a single test case",119],["If correctable single-line errors exist, create",103]]},{"word":"size","context":[["<td><hr size=3 noshade></td>",779],["-size     => 1,",591],["blockquote.smallquotation {font-size: smaller}",290],["pre.smalllisp {font-size: smaller}",290],["pre.smallexample {font-size: smaller}",290],["my $size = 0;",244],["# Add the actors to the renderer, set the background and size",231],["size=\\\"67\\\"",191],["\"__aligned(size) is preferred over __attribute__((aligned(size)))\\n\" . $herecurr);",181],["\"__aligned(size) is preferred over __attribute__((aligned(size)))\\n\" . $herecurr);",181]]},{"word":"skip","context":[["$skip = 1;",449],["$skip = 0;",219],["#print \"skip<$line_nr_next>\\n\";",173],["my $skip = 0;",169],["mtr_report(\" - skipping ndbcluster(--skip-ndbcluster)\");",156],["skip-rpl              Skip the replication test cases.",149],["# If marked to skip, just print out and return.",149],["# Testcase itself tell us to skip this one",149],["if ( $tinfo->{'skip'} )",149],["if ($arg eq \"--skip-core-file\")",149]]},{"word":"sleep","context":[["sleep(1);",1522],["sleep 1;",1378],["sleep 2;",560],["sleep 5;",383],["sleep(2);",326],["sleep(5);",272],["sleep 10;",208],["sleep(10);",176],["sleep(3);",172],["sleep 3;",160]]},{"word":"so","context":[["# furnished to do so, subject to the following conditions:",325],["# blank context lines so we need to count that too.",303],["# This is not a patch, and we are are in 'no-patch' mode so",300],["# so just keep quiet.",299],["# starting at the end of the conditional, so remove:",296],["# We are truly at the end, so shuffle to the next line.",296],["# same line do not need a level, so we use the current block context",285],["# It is, so see if the prefix is acceptable.",280],["#---- if primkey exists, it's a modify action, so read values to modify...",196],["# Save this test case information, so next can examine it",179]]},{"word":"soap","context":[["printf STDERR (\"\\n i  %55s : %-25s\",\"input blast(m=8)/soap result\",$infile);#%45s",42],["$soap->autotype(0);",30],["my $soap = SOAP::Lite",27],["$result = $soap->call($method => @query);",24],["\"ext/soap/tests/interop/Round4/GroupH/r4_groupH_complex_doclit_006w.phpt\",",23],["\"ext/soap/tests/interop/Round4/GroupH/r4_groupH_simple_doclit_012w.phpt\",",23],["\"ext/soap/tests/soap12/T51.phpt\",",23],["\"ext/soap/tests/bugs/bug36226.phpt\",",23],["\"ext/soap/tests/soap12/T52.phpt\",",23],["\"ext/soap/tests/interop/Round2/Base/r2_base_016s.phpt\",",23]]},{"word":"software","context":[["# Koha is free software; you can redistribute it and/or modify it under the",4845],["# This program is free software; you can redistribute it and/or modify",3916],["# Unless required by applicable law or agreed to in writing, software",2607],["This program is free software; you can redistribute it and/or",2016],["# Koha is free software; you can redistribute it and/or modify it",1914],["# This program is free software: you can redistribute it and/or modify",1374],["# This program is free software; you can redistribute it and/or",1251],["# Meran is free software: you can redistribute it and/or modify",754],["This library is free software. You can redistribute it and/or modify",577],["#  Unless required by applicable law or agreed to in writing, software",516]]},{"word":"some","context":[["line would contain the id. If some other column contains the id,",386],["# some versions, test using it should be skipped",179],["######################### We start with some black magic to print on failure.",164],["# foo bar; where foo is some local typedef or #define",160],["# Running with \"var\" in some other place",149],["# distributions, TAR binary distributions and some other packages.",149],["# Runinng with \"var\" as a link to some \"memory\" location, normally tmpfs",149],["# On some operating systems, there is a limit to the length of a",147],["mtr_warning(\"running this script as _root_ will cause some \" .",147],["# declined it, i.e defined some charset where it is missing.",136]]},{"word":"sort","context":[["foreach my $product (sort keys %{$totals{by_product}})",618],["foreach my $key (sort keys %{$totals{$section}{by_machine}{$machine}})",306],["foreach my $key (sort keys %{$totals{$section}{by_machine_lane}{$machine}{$lane}})",301],["# Check for any sort of function declaration.",300],["foreach my $product (sort keys %{$totals{$section}{by_product}})",286],["#     foreach my $product (sort keys %{$totals{$section}{by_product}})",255],["sort {",237],["foreach my $machine (sort { $a <=> $b } keys %{$totals{$section}{by_machine}})",222],["foreach my $machine (sort { $a <=> $b } keys %{$totals{$section}{by_machine_lane}})",222],["foreach my $lane (sort { $a <=> $b } keys %{$totals{$section}{by_machine_lane}{$machine}})",221]]},{"word":"source","context":[["# Redistribution and use in source and binary forms, with or without",921],["Redistribution and use in source and binary forms, with or without",745],["1. Redistributions of source code must retain the above copyright",657],["# 1. Redistributions of source code must retain the above copyright",310],["# check we are in a valid source file if not then ignore this hunk",303],["# check we are in a valid C source file if not then ignore this hunk",293],["# check we are in a valid source file C or perl if not then ignore this hunk",284],["-f, --file                 treat FILE as regular source file",279],["# in the file LICENSE in the source distribution or at",262],["# https://www.openssl.org/source/license.html",262]]},{"word":"sp","context":[["mov\t\tr0, sp",598],["add\t\tr4, sp, #0x90\t\t\t@ pass key schedule",364],["add\tx29,sp,#0",177],["ldmia\tsp!,{r4-r12,pc}",158],["sp-protocol           Create a stored procedure to execute all queries",147],["mtr_add_arg($args, \"--sp-protocol\");",147],["'sp-protocol'              => \\$opt_sp_protocol,",147],["vstmdb\tsp!,{d8-d15}\t\t@ ABI specification says so",146],["vld1.8\t\t{@XMM[0]}, [sp,:128]",130],["mov\t\tr1, sp",130]]},{"word":"space","context":[["# including if adding or subtracting white space, underscore, and hyphen",2480],["# Should not end with a space.",584],["# Should start with a space.",584],["# Need a space before open parenthesis after if, while etc",304],["#need space before brace following if, while, etc",303],["# new versions of GNU diff omit the leading space on completely",303],["# ; should have either the end of line or a space or \\ after it",303],["# unary ++ and unary -- are allowed no space on one side.",303],["# closing brace should have a space following it when it has anything",303],["# unary operators should have a space before and",300]]},{"word":"spaces","context":[["'type' => 'spaces'",1729],["'spaces',",1729],["# '*'s should not have spaces between.",584],["# All the others need spaces both sides.",303],["#no spaces allowed after \\ in define",303],["# check for spaces between functions and their parentheses.",301],["# Ignore those directives where spaces _are_ permitted.",298],["# cpp #define statements have non-optional spaces, ie",298],["# No spaces for:",297],["# A colon needs no spaces before when it is",296]]},{"word":"specialize","context":[["specialize qw/vp9_iwht4x4_16_add/;",73],["specialize qw/vp9_iwht4x4_1_add/;",73],["specialize qw/vp9_iht8x8_64_add/;",60],["specialize qw/vp9_iht4x4_16_add/;",60],["specialize qw/vp9_iht16x16_256_add/;",60],["specialize qw/vp9_fht8x8 sse2/;",47],["specialize qw/vp9_fht16x16 sse2/;",47],["specialize qw/vp9_fwht4x4/, \"$mmx_x86inc\";",47],["specialize qw/vp9_fht4x4 sse2/;",47],["specialize qw/vp9_idct4x4_1_add/;",46]]},{"word":"species","context":[["$producer_yields = $kpp->effect_on($species, $producers);",211],["$producers = $kpp->producing($species);",211],["name    => $species,",196],["weights => $weights{$species},",196],["members => $families{$species},",196],["$carbons{$species} = $C_number;",191],["$consumers = $kpp->consuming($species);",187],["$consumer_yields = $kpp->effect_on($species, $consumers);",187],["sub get_no2_reservoirs { #get species that are produced when radical species react with NO2",178],["sub get_no2_reservoirs { #get species that are produced when radical species react with NO2",178]]},{"word":"specific","context":[["# See the License for the specific language governing permissions and",2505],["#  See the License for the specific language governing permissions and",516],["# check for gcc specific __FUNCTION__",299],["# We have looked at and allowed this specific line.",298],["# check of hardware specific defines",295],["## See the License for the specific language governing permissions and",251],["% the License for the specific language governing rights and limitations",245],["See the License for the specific language governing permissions and",192],["\"architecture specific defines should be avoided\\n\" .  $herecurr);",185],["#   See the License for the specific language governing permissions and",160]]},{"word":"specified","context":[["can be specified more then once",149],["# Running against an already started server, if the specified",149],["\"--valgrind-option=s, to be specified several\",",148],["# variable or command-line option may be specified to control which set of",147],["startup settings for the first specified test case",119],["combination=<opt>     Use at least twice to run tests with specified",119],["must be specified using name-value pair notation",119],["# Turn off verbosity in workers, unless explicitly specified",119],["the first specified test case",119],["# read the list of experimental test cases from the files specified on",118]]},{"word":"spl","context":[["\"ext/spl/tests/SplFixedArray__construct_param_array.phpt\",",23],["\"ext/spl/tests/iterator_005.phpt\",",23],["\"ext/spl/tests/dit_003.phpt\",",23],["\"ext/spl/tests/recursive_tree_iterator_001.phpt\",",23],["\"ext/spl/tests/SplFixedArray_key_param.phpt\",",23],["\"ext/spl/tests/SplDoublyLinkedList_offsetExists_invalid_parameter.phpt\",",23],["\"ext/spl/tests/arrayObject_asort_basic1.phpt\",",23],["\"ext/spl/tests/SplPriorityQueue_insert_invalid_parameter.phpt\",",23],["\"ext/spl/tests/heap_007.phpt\",",23],["\"ext/spl/tests/recursiveiteratoriterator_getsubiterator_variation_003.phpt\",",23]]},{"word":"split","context":[["my @line = split /\\t/;",658],["my @a = split \"\\t\";",382],["@aux = split;",311],["my @x = split(/\\t/);",307],["@from_fields = split(\",\", $f);",306],["@rel_fields = split(\",\", $r);",306],["@to_fields = split(\",\", $t);",306],["for my $c (split(//, $str)) {",304],["for my $arg (split(/\\s*,\\s*/, $ctx)) {",300],["my @elements = split(/($ops|;)/, $opline);",300]]},{"word":"sprintf","context":[["$coded = sprintf(\"^%c\", unpack('C', $2) + 64);",300],["sprintf(",182],["sprintf(\"(%s)...\\n\\n\", (not $fullstats)?\"top $counter\":\"full\");",174],["or fatal(sprintf(\"Couldn't execute query: %s\", $dbh->errstr));",133],["sprintf \"\\t.WORD\\t0x%08x\\t; %s\",$opcode,$orig;",124],["return\tsprintf \".word\\t0x%08x !%s\",",123],["or fatal(sprintf(\"Couldn't prepare query: %s\", $dbh->errstr));",119],["sprintf(\"%4d-%02d-%02d %02d:%02d:%02d\", $year+1900, $mon+1, $day, $hour, $min, $sec);",111],["my $hexval = sprintf(\"0x%x\", oct($var));",99],["$field = sprintf(\"%4s\",$atom[$iatm]);",95]]},{"word":"sql","context":[["my $sth = $dbh->prepare($sql);",496],["$sth = $dbh->prepare($sql);",348],["$sql->execute();",248],["#     Web: http://www.sql-ledger.org",207],["($result, $rows) = &do_multi_result_sql_query2($global_var_href, $sql, \\@sql_parameters, $sr_name . \"-\" . __LINE__ );",204],["$dbh->do($sql);",191],["my $sql;",184],["Limit the results to entities where the given field is LIKE (in the sql sense) the given value.",160],["# Create the bootstrap.sql file",147],["my $bootstrap_sql_file= \"$opt_vardir/tmp/bootstrap.sql\";",147]]},{"word":"square","context":[["# check spacing on square brackets",303],["# check for spacing round square brackets; allowed:",296],["square(o2).",276],["square(o1).",264],["square(o3).",212],["square(o4).",166],["ERROR(\"space prohibited after that open square bracket '['\\n\" . $herecurr);",106],["ERROR(\"space prohibited before that close square bracket ']'\\n\" . $herecurr);",106],["\"space prohibited before open square bracket '['\\n\" . $herecurr) &&",103],["ERROR(\"space prohibited before open square bracket '['\\n\" . $herecurr);",103]]},{"word":"src","context":[["[\"storage/ndb/src/kernel\", \"libexec\", \"sbin\", \"bin\"],",193],["[\"storage/ndb/src/mgmclient\", \"bin\"],",193],["# Chop off any \"c:\", DBUG likes a unix path ex: c:/src/... => /src/...",149],["# Chop off any \"c:\", DBUG likes a unix path ex: c:/src/... => /src/...",149],["my ($src, $dst) = @_;",143],["print \"<img src='img/blank.gif' alt='' width='250' height='1'><br>\";",140],["my $src = shift;",136],["[\"storage/ndb/src/mgmsrv\", \"libexec\", \"sbin\", \"bin\"],",103],["src++;",98],["print CSH \"awk '{print \\$1,\\$2}' $evefile |psxy -N $J $R -K -O -P -V $src >> $psfile\\n\";",94]]},{"word":"sse2_x86inc","context":[["$sse2_x86inc = 'sse2';",62],["$mmx_x86inc = $sse_x86inc = $sse2_x86inc = $ssse3_x86inc = $avx_x86inc =",32],["$mmx_x86inc = $sse_x86inc = $sse2_x86inc = $ssse3_x86inc =",30],["specialize qw/vp9_sub_pixel_avg_variance16x8/, \"$sse2_x86inc\", \"$ssse3_x86inc\";",28],["specialize qw/vp9_sub_pixel_avg_variance32x32 avx2/, \"$sse2_x86inc\", \"$ssse3_x86inc\";",28],["specialize qw/vp9_sub_pixel_avg_variance8x16/, \"$sse2_x86inc\", \"$ssse3_x86inc\";",28],["specialize qw/vp9_sub_pixel_avg_variance64x64 avx2/, \"$sse2_x86inc\", \"$ssse3_x86inc\";",28],["specialize qw/vp9_sub_pixel_avg_variance8x8/, \"$sse2_x86inc\", \"$ssse3_x86inc\";",28],["specialize qw/vp9_sub_pixel_avg_variance32x64/, \"$sse2_x86inc\", \"$ssse3_x86inc\";",28],["specialize qw/vp9_sub_pixel_avg_variance8x4/, \"$sse2_x86inc\", \"$ssse3_x86inc\";",28]]},{"word":"stack","context":[["my @stack = ();",317],["push(@stack, $level);",293],["$level = $stack[$#stack - 1];",293],["$level = $stack[$#stack - 1];",293],["$level = pop(@stack);",293],["($type, $level) = @{$stack[$#stack - 1]};",292],["($type, $level) = @{pop(@stack)};",292],["push(@stack, [ $type, $level ]);",292],["my @stack = ($level);",292],["@stack = (['', 0]) if ($#stack == -1);",292]]},{"word":"stage","context":[["my $stage = $pu01->{stage};",1409],["my $stage = $pu01->{stage};",1409],["$pdb->{$section}->{$machine}{$lane}{$stage}{state} = DELTA;",1151],["$pdb->{$section}->{$machine}{$lane}{$stage}{delta}{$key};",1142],["$pdb->{$section}->{$machine}{$lane}{$stage}{state}",980],["delete $pdb->{$section}->{$machine}{$lane}{$stage}{cache};",718],["my $state = $pdb->{$section}->{$machine}{$lane}{$stage}{state};",388],["$stage         = $parts[2];",376],["delete $pdb->{$section}->{$machine}{$lane}{$stage}{delta};",376],["#     my $stage = $pu01->{stage};",340]]},{"word":"standard","context":[["This is a pipe command. The input is taken from the standard input, and the",493],["The standard input should be a tab-separated table (i.e., each line",492],["output is to the standard output.",486],["use CGI qw(:standard);",304],["When FILE is - read standard input.",282],["\"\\%Ld/%Lu are not-standard C, use %lld/%llu\\n\" . $herecurr);",193],["using a builtin list of standard locations",149],["\"Non-standard signature: $sign_off\\n\" . $herecurr);",136],["# standard or CPAN modules used",130],["(defaults to standard input)",126]]},{"word":"start","context":[["# Should start with a space.",584],["my $start = time;",314],["# prevent the tk window from showing up then start the event loop",305],["my $start = $linenr - 1;",303],["for ($line = $start; $remain > 0; $line++) {",303],["# is the start of a diff block and this line starts",303],["# declarations always start with types",300],["# definitions in global scope can only start with types",300],["# at context start.",300],["# Strip the diff line prefixes and rip blank lines at start and end.",299]]},{"word":"started","context":[["# Indicate the exe should not be started",618],["my %started;",361],["return 0 unless ( keys %started );",357],["if ( keys(%started) == 0){",357],["if ( delete $started{$proc->pid()} ) {",357],["# Return immediately if no check proceess was started",357],["map($_->kill(), values(%started));",357],["$started{$proc->pid()}= $proc;",357],["if ( grep($proc eq $_, started(all_servers())) )",238],["# Running against an already started server, if the specified",149]]},{"word":"stat","context":[["defined $stat &&",874],["($stat, $cond, $line_nr_next, $remain_next, $off_next) =",640],["my ($s, $c) = ($stat, $cond);",593],["my $s = $stat;",588],["use File::stat;",443],["if (!defined $stat);",346],["$stat =~ s/\\n./\\n /g;",297],["$stat !~ /^\\+/ && $stat_real !~ /^\\+/) {",294],["##print \"stat<$stat> stat_next<$stat_next>\\n\";",294],["##print \"stat<$stat> stat_next<$stat_next>\\n\";",294]]},{"word":"state","context":[["$pdb->{$section}->{$machine}{$lane}{$stage}{state} = DELTA;",1151],["$pdb->{$section}->{$machine}{$lane}{$stage}{state}",980],["my $state = $pdb->{$section}->{$machine}{$lane}{$stage}{state};",388],["my $state = $pdb->{$section}->{$machine}{$lane}{$stage}{state};",388],["die \"ERROR: unknown $section state: $state. Stopped\";",363],["die \"ERROR: unknown $section state: $state. Stopped\";",363],["my $state = shift;",357],["if ( ! exists($pdb->{$section}->{$machine}{$lane}{$stage}{state}))",330],["$state = 0;",309],["$pdb->{$section}->{$machine}{$lane}{$stage}{state} = RESET;",299]]},{"word":"statement","context":[["push(@chunks, [ $condition, $statement ]);",598],["($statement, $condition, $linenr, $remain, $off, $level) =",598],["or die \"Couldn't prepare statement: \" . $dbh->errstr;",362],["#warn \"STATEMENT<$statement>\\n\";",300],["my $statement = substr($blk, $soff, $off - $soff + 1);",300],["# could continue the statement.",299],["# first statement and ensure its the whole macro if its not enclosed",299],["return ($statement, $condition,",299],["#print \"C: c<$condition> s<$statement> remain<$remain>\\n\";",299],["# multi-statement macros should be enclosed in a do while loop, grab the",299]]},{"word":"static","context":[["# check for static initialisers.",302],["our $Storage\t= qr{extern|static|asmlinkage};",298],["# check for static char foo[] = \"bar\" declarations.",225],["# check for static const char * arrays.",215],["\"static const char * array should probably be static const char * const\\n\" .",193],["\"static const char * array should probably be static const char * const\\n\" .",193],["\"static char array declaration should probably be static const char\\n\" .",193],["\"static char array declaration should probably be static const char\\n\" .",193],["print $decl \"static int $regname = -1;\\n\";",120],["if($static) {",98]]},{"word":"status","context":[["$status = 0;",537],["status => \"nostatus\",",387],["my $status;",334],["$status = 1;",318],["if (\"$status\")",230],["return($status);",216],["return $status;",214],["$status = 0; last SUB;",201],["my $status = 0;",199],["if ($status) {",184]]},{"word":"sth","context":[["$sth->execute();",4886],["$sth->finish;",3084],["$sth->execute;",2877],["$sth->finish();",2386],["$sth = $dbh->prepare($query);",932],["my $sth = $dbh->prepare($query);",814],["my $sth;",768],["my $sth = $dbh->prepare($sql);",496],["$sth = $dbh->prepare($sql);",348],["$sth->execute () ;",307]]},{"word":"str","context":[["return $str;",1146],["my ($str) = @_;",847],["my $str = shift;",811],["my $str;",331],["for my $c (split(//, $str)) {",304],["my $str= join(\" \", @$$args);",266],["my $str = \"\";",218],["my $runline= $input ? \"run $str < $input\" : \"run $str\";",197],["my $runline= $input ? \"run $str < $input\" : \"run $str\";",197],["\"set args $str\\n\" .",164]]},{"word":"strict","context":[["use strict;",82990],["no strict 'refs';",790],["#use strict;",633],["'strict!'\t=> \\$check,",293],["--subjective, --strict     enable more subjective tests",276],["use strict ;",242],["use strict; use warnings;",234],["use strict 'vars';",196],["if ($line =~ /\\b((simple|strict)_(strto(l|ll|ul|ull)))\\s*\\(/) {",167],["no strict \"refs\";",155]]},{"word":"string","context":[["return $string;",1837],["my $string = shift;",932],["my ($string) = @_;",820],["Writable => 'string',",733],["my $string;",671],["$string =~ s/\\s+$//;",500],["$string =~ s/^\\s+//;",496],["# Put $args into a single string",302],["# The whole of a #error is a string.",299],["# A \\ in a string means ignore the next character.",299]]},{"word":"strings","context":[["strings. The following fields are available:",1078],["entity to return. Field-list is a comma-separated list of strings. The",612],["--fields list   Choose a set of fields to return. List is a comma-separated list of strings.",320],["return. Field-list is a comma-separated list of strings. The following fields are available:",306],["# Standardise the strings and chars within the input to",299],["# check for %L{u,d,i} in strings",256],["# check for line continuations in quoted strings with odd counts of \"",209],["\"Avoid line continuations in quoted strings\\n\" . $herecurr);",193],["# Check for user-visible strings broken across lines, which breaks the ability",159],["\"break quoted strings at a space character\\n\" . $hereprev);",73]]},{"word":"struct","context":[["typedef struct {",325],["qr{struct\\s+$Ident},",301],["# open braces for enum, union and struct go on the same line.",300],["$prevline =~ /^.\\s*(?:typedef\\s+)?(enum|union|struct)(?:\\s+$Ident)?\\s*$/) {",299],["^(?:typedef|struct|enum)\\b",294],["if ($line =~ /^.\\s*(struct\\s+mutex|spinlock_t)\\s+\\S+;/ ||",279],["struct|",264],["typedef struct",253],["# missing space after union, struct or enum definition",250],["\"struct $1 should normally be const\\n\" .",184]]},{"word":"style","context":[["</style>",867],["<style type=\"text/css\">",543],["ul.no-bullet {list-style: none}",290],["print \"$vname has no obvious style problems and is ready for submission.\\n\"",253],["% The contents of this file are subject to the Cisco-style Mozilla Public",245],["\"CVS style keyword markers, these will _not_ be updated\\n\". $herecurr);",193],["<style>",176],["kbd {font-style:oblique}",166],["$vname has style problems, please review.",147],["# Use of this source code is governed by a BSD-style",122]]},{"word":"sub","context":[["sub usage {",3488],["sub main {",1962],["sub new {",1652],["sub {",1625],["sub EVENT_SAY {",1340],["sub",1293],["sub usage",1064],["sub help {",957],["sub main",792],["sub plugin_javascript {",790]]},{"word":"subfield","context":[["subfield => '',",370],["# loop through each subfield",248],["next if ( $tagslib->{$tag}->{$subfield}->{tab} ne $tabloop );",185],["next if ( length $subfield != 1 );",159],["unless ( $tagslib->{$tag}->{$subfield}->{mandatory} );",119],["$tag, $subfield, '', $index_tag, $tabloop, $record,",102],["if ( $subfieldcode ne $subfield );",100],["my @subfields = $input->param('subfield');",100],["$tag_data{subfield} = \\@tmp;",94],["subfield   => '',",89]]},{"word":"subject","context":[["# name or existence of this file are subject to change without notice.  Don't",6892],["# the name or existence of this file are subject to change without notice.",3636],["# This Source Code Form is subject to the terms of the Mozilla Public",423],["# furnished to do so, subject to the following conditions:",325],["% The contents of this file are subject to the Cisco-style Mozilla Public",245],["# The contents of this file are subject to the Zimbra Public License",189],["# Use is subject to license terms.",129],["# The contents of this file are subject to the Mozilla Public License Version",119],["else { $mail{'subject'} = \"no subject\"; }",73],["else { $mail{'subject'} = \"no subject\"; }",73]]},{"word":"substr","context":[["substr($block, 0, length($cond), '');",896],["substr($s, 0, length($c), '');",890],["substr($res, $off, 2, \"$;$;\");",599],["substr($res, $off, 1, $c);",598],["substr($res, $off, 1, $;);",580],["$cc = substr($opline, $off + length($elements[$n + 1]));",303],["my $ca = substr($opline, 0, $off);",302],["$cur = substr($cur, length($1));",300],["$c = substr($blk, $off, 1);",300],["$prev_values = substr($curr_values, -1);",300]]},{"word":"summary","context":[["my $summary = 1;",315],["if ($summary && !($clean == 1 && $quiet == 1)) {",299],["'summary!'\t=> \\$summary,",298],["'summary!'\t=> \\$summary,",298],["'summary-file!'\t=> \\$summary_file,",296],["a.summary-letter {text-decoration: none}",290],["# to try and find and validate the current printk.  In summary the current",285],["--summary-file             include the filename in summary",280],["--summary-file             include the filename in summary",280],["--no-summary               suppress the per-file summary",280]]},{"word":"support","context":[["mtr_error(\"Couldn't find support for SSL\");",147],["skip-ssl              Dont start server with support for ssl connections",135],["support();",126],["# Check backward compatibility support",119],["#  http://support.opmantek.com/users/",100],["$support->finish_log;",91],["warn $support->error if $support->error;",87],["warn $support->error if $support->error;",87],["use utils qw($TIMEOUT %ERRORS &print_revision &support);",80],["mtr_error(\"Could not detect ndbcluster support \".",78]]},{"word":"system","context":[["system($cmd);",1475],["system($command);",423],["# for a production system",318],["my $ret = system($cmd);",296],["system(",254],["system($call);",212],["system \"$perl_dir/perl $scripts_dir/logging.pl -v $log -l \\'$log_file\\' -p $priority -m \\'$message\\'\";",176],["system $cmd;",163],[":- use_module(library(system)).",160],["system(@args);",157]]},{"word":"t","context":[["# name or existence of this file are subject to change without notice.  Don't",6892],["# Don't use it directly.",3636],["# characters matters or doesn't matter, and other permissible syntactic",2480],["$t[$mptr]++;",845],["my $t;",670],["my @line = split /\\t/;",658],["[ \\t]*",568],["# Don't run the example if the file is being included.",449],["die \"can't locate x86_64-xlate.pl\";",402],["my @a = split \"\\t\";",382]]},{"word":"t0","context":[["mov\t$a0, $t0",218],["mov\t%rdx, $t0",204],["cmovz\t$t0, $a0",155],["shr\t\\$32, $t0",136],["xor\t$d,$t0",134],["vmovdqa\t$t0,0x00(%rsp)",125],["mfhi\t$t0",120],["adds\t$Tlo,$Tlo,$t0",120],["addu\t$e,$t0",118],["xor\t$t0,$s0",112]]},{"word":"t1","context":[["mov\t$a1, $t1",218],["mov\t$t1, %rax",204],["cmovz\t$t1, $a1",155],["xor\t$t1,$s1",128],["$REG_L\t$t1,2*$SZREG($sp)",110],["$REG_S\t$t1,2*$SZREG($sp)",110],["nr\t$t1,$mask",104],["xor\t$t1,$t5",104],["lwz\t$t1,4($key)",100],["xor\t$s1,$s1,$t1",88]]},{"word":"t2","context":[["mov\t$a2, $t2",218],["cmovz\t$t2, $a2",155],["xor\t$t2,$s2",154],["$REG_S\t$t2,3*$SZREG($sp)",110],["$REG_L\t$t2,3*$SZREG($sp)",110],["xor\t$t2,$t6",104],["add\t$t2,$e",103],["lwz\t$t2,8($key)",100],["mov\t$a,$t2",100],["rol\t\\$5,$t2",100]]},{"word":"t3","context":[["mov\t$a3, $t3",218],["cmovz\t$t3, $a3",155],["xor\t$t3,$s3",154],["$REG_S\t$t3,4*$SZREG($sp)",110],["$REG_L\t$t3,4*$SZREG($sp)",110],["xor\t$t3,$t7",104],["lwz\t$t3,12($key)",100],["vmovdqa\t$TABLE+`$SZ*2*$rounds`(%rip),$t3",97],["vpshufb\t$t3,@X[2],@X[2]",97],["vpshufb\t$t3,@X[3],@X[3]",97]]},{"word":"tab","context":[["is a tab-separated set of fields).  Normally, the last field in each",493],["The standard input should be a tab-separated table (i.e., each line",492],["next if ( $tagslib->{$tag}->{$subfield}->{tab} ne $tabloop );",185],["'cmdname' => 'tab',",152],["# loop through each tab 0 through 9",139],["# tab-width: 4",126],["# tab-width: 8",116],["#Remove spaces before a tab",103],["my $tab;",92],["# at end-of-function, with the previous line a single leading tab, then return;",77]]},{"word":"table","context":[["</table>",6372],["<table>",2013],["<table width=100%>",1897],["The standard input should be a tab-separated table (i.e., each line",492],["# the main body of the table, and what all code points missing from this file",413],["print \"</table>\\n\";",405],["<table width=\"100%\">",397],["</table></td>",327],["print \"</table>\";",302],["</td></tr></table>",285]]},{"word":"tables","context":[["# --no-defaults and --skip-grant-tables are to avoid loading",146],["# group below.  It could be that the tables will match the same set of code",145],["# system these tables will be populated either by mysql_tzinfo_to_sql",145],["# This file is for tables that are not necessarily related:  To conserve",145],["# Add the offical mysql system tables",145],["# Add the mysql system tables initial data",145],["foreach my $table (@tables) {",137],["# Fill help tables, just an empty file when running from bk repo",135],["# Use the mysql database for system tables",134],["# --bootstrap or --skip-grant-tables options.  The user can set",129]]},{"word":"tag","context":[["my $tag;",394],["my ($r_number, $parent) = split /_/, $reaction; #remove tag from reaction number",249],["next if ( $tagslib->{$tag}->{$subfield}->{tab} ne $tabloop );",185],["push(@tag,\"-\");",176],["push(@tag,$1);",174],["my $tag = shift;",147],["# loop through each tag",127],["if ( $tag ne '000' ) {",122],["unless ( $tagslib->{$tag}->{$subfield}->{mandatory} );",119],["repeatable       => $tagslib->{$tag}->{repeatable},",104]]},{"word":"tagInfo","context":[["my $tagInfo;",143],["my $table = $$tagInfo{Table};",117],["foreach $tagInfo (@tagInfoList) {",96],["my $tag = $$tagInfo{Name};",69],["foreach $tagInfo (@infoArray) {",64],["my $tagInfo = $$nvHash{TagInfo};",56],["# Inputs: 0) ExifTool object ref, 1) tagInfo hash ref, 2) raw value ref",52],["push @tagInfoList, $tagInfo;",47],["my $nvHash = $et->GetNewValueHash($tagInfo);",47],["if ($tagInfo) {",47]]},{"word":"tags","context":[["my @tags;",96],["my @tags      = $input->param('tag');",77],["my %tags;",75],["my @tab_data; # all tags to display",66],["# tags like paragraphs, headers, and list items.",64],["my @tags         = $input->param('tag');",58],["foreach my $tag (@tags) {",57],["'tags' => ['utility'],",55],["my $xml = TransformHtmlToXml(\\@tags,\\@subfields,\\@values,\\@indicator,\\@ind_tag, 'ITEM');",50],["'tags' => [],",50]]},{"word":"tagslib","context":[["my ($dbh,$record,$tagslib,$field_number,$tabloop) = @_;",564],["my ($dbh,$record,$tagslib,$i,$tabloop) = @_;",408],["next if ( $tagslib->{$tag}->{$subfield}->{tab} ne $tabloop );",185],["my ( $dbh, $record, $tagslib, $field_number, $tabloop ) = @_;",177],["my ( $dbh, $record, $tagslib, $i, $tabloop ) = @_;",150],["unless ( $tagslib->{$tag}->{$subfield}->{mandatory} );",119],["repeatable       => $tagslib->{$tag}->{repeatable},",104],["mandatory       => $tagslib->{$tag}->{mandatory},",102],["if ( $tagslib->{$tag}->{$subfield}->{authorised_value} ) {",86],["$value = $tagslib->{$tag}->{$subfield}->{defaultvalue};",81]]},{"word":"target","context":[["foreach my $target (@target) {",526],["foreach my $target (@target) {",526],["my $target = shift;",312],["my $target;",223],["next if @{$target->{subtargets}} > 0;",184],["my $v = kver($target->{version});",130],["print_target($target);",129],["bool \"$target->{name}\"",124],["config TARGET_$target->{conf}",124],["if ($CHOOSEDTARGET{$target} < 0) { next; }",98]]},{"word":"tbl","context":[["&movz\t(\"ebx\",&BP(-128,$tbl,\"esi\",1));",144],["ldrb\t$t2,[$tbl,$t2]",92],["ldrb\t$i2,[$tbl,$i2]",92],["ldrb\t$i1,[$tbl,$i1]",92],["ldrb\t$i3,[$tbl,$i3]",92],["&blindpop($tbl);",83],["&decstep(1,$tbl,$s1,$s0,$s3,$s2);",72],["&encstep(1,$tbl,$s1,$s2,$s3,$s0);",72],["&decstep(2,$tbl,$s2,$s1,$s0,$s3);",72],["&encstep(3,$tbl,$s3,$s0,$s1,$s2);",72]]},{"word":"td","context":[["</td>",5979],["<td>",3313],["<td><hr size=3 noshade></td>",779],["<td><hr size=3 noshade></td>",779],["</td></tr>",737],["<td></td>",647],["<td></td>",647],[". \"</td>\";",382],["print \"<td>\"",367],["</table></td>",327]]},{"word":"temp","context":[["my $temp;",532],["print SOURCE $temp;",335],["unlink($temp);",192],["print $SOURCE $temp;",188],["my @temp;",174],["print PARTITION_DEFINE_H_NAME $temp ;",144],["print $partition_define_h $temp ;",134],["return $temp;",124],["sysread(INFILE, $temp, 1) == 1 or die $!;",117],["vshr.u64\t$temp,$temp,#16",112]]},{"word":"template","context":[["$template->param(",10890],["output_html_with_http_headers $input, $cookie, $template->output;",3631],["output_html_with_http_headers $query, $cookie, $template->output;",1984],["my ( $template, $loggedinuser, $cookie ) = get_template_and_user(",1858],["my ($template, $loggedinuser, $cookie)",1222],["my ( $template, $borrowernumber, $cookie ) = get_template_and_user(",802],["my $template = <<\"__TEMPLATE\";",722],["output_html_with_http_headers $cgi, $cookie, $template->output;",590],["C4::AR::Auth::output_html_with_http_headers($template, $t_params, $session);",566],["return $template;",517]]},{"word":"terms","context":[["# it under the terms of the GNU General Public License as published by",5449],["# terms of the GNU General Public License as published by the Free Software",5003],["# under the terms of the GNU General Public License as published by",2021],["modify it under the terms of the GNU General Public License",1862],["# it under the terms of the GNU AFFERO General Public License as published by",1036],["it under the terms of the GNU General Public License as published by",960],["#    it under the terms of the GNU General Public License as published by",899],["# modify it under the terms of the GNU General Public License",877],["it under the same terms as Perl itself.",663],["# redistribute it and/or modify it under the terms of either the GNU",591]]},{"word":"test","context":[["# New test",555],["test(s)",467],["# test carefully before changing this",441],["print \"not ok $test\\n\";",371],["# timestamp test result verification end",329],["$test++;",326],["if (0 == $test) {",303],["'test-only=s'\t=> \\$tst_only,",296],["# (c) 2007,2008, Andy Whitcroft <apw@uk.ibm.com> (new conditions, test suite)",291],["# Running with \"var\" in mysql-test dir",290]]},{"word":"tests","context":[["# Check for bitwise tests written as boolean",299],["--subjective, --strict     enable more subjective tests",276],["# Set dummy worker id to align report with normal tests",176],["# run tests",166],["# tests",165],["# Check if we should speed up tests by trying to run on tmpfs",149],["tmpfs will speed up tests.",149],["reorder               Reorder tests to get fewer server restarts",149],["\"tests to be skipped\");",149],["# Bug#27636 tests fails if LC_* variables set to *_*.UTF-8",149]]},{"word":"text","context":[["'text' => '",16985],["'text' => ' ',",10664],["my $text = shift;",1839],["return $text;",1640],["'text' => ' '",1376],[".text",1026],["'text' => '',",988],["print \"Content-type: text/html\\n\\n\";",834],["if($text=~/Hail/i){",806],["'text' => '* ',",734]]},{"word":"th","context":[["<th class=listtop>$form->{title}</th>",547],["<th class=listtop>$form->{title}</th>",547],[". qq|</a></th>|;",316],["</th>",294],[". qq|</th>",289],[". \"</th>\";",209],[". qq|</th>|;",196],["<th align=\"right\" nowrap>| .",140],["<th class=listtop>$title</th>",133],["<th class=listtop>$title</th>",133]]},{"word":"than","context":[["# more than 8 must use tabs.",278],["# \t\t\tprint \"Try to use WARN_ON & Recovery code rather than BUG() or BUG_ON()\\n\";",236],["# Anything other than 'wait' or 'restart:' (with a colon) will",118],["#  For further information on NMIS or for a license other than GPL please see",101],["-i filename     Use filename rather than stdin for input",80],["-i filename     Use filename rather than stdin for input.",80],["-i filename   Use filename rather than stdin for input",68],["# positives, as well as warning only once per parameter rather than once per",67],["'text' => 'perhaps your @top node should be wrapped in @ifnottex rather than @ifinfo?',",62],["# in theory can have more than one but generally there's just one",57]]},{"word":"that","context":[["# This program is distributed in the hope that it will be useful,",5883],["# Koha is distributed in the hope that it will be useful, but WITHOUT ANY",4849],["This program is distributed in the hope that it will be useful,",2563],["# Koha is distributed in the hope that it will be useful, but",1925],["# Meran is distributed in the hope that it will be useful,",754],["#    This program is distributed in the hope that it will be useful,",664],["modification, are permitted provided that the following conditions",653],["# This program is distributed in the hope that it will be useful, but",581],["#     Note that contrary to what you might expect, the above is NOT the same",512],["# modification, are permitted provided that the following conditions",452]]},{"word":"the","context":[["# but WITHOUT ANY WARRANTY; without even the implied warranty of",8483],["# You should have received a copy of the GNU General Public License",8214],["# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",7175],["# This program is distributed in the hope that it will be useful,",5883],["# This file is for internal use by core Perl only.  The format and even the",5878],["# it under the terms of the GNU General Public License as published by",5449],["# it under the terms of the GNU General Public License as published by",5449],["# This file is machine-generated by lib/unicore/mktables from the Unicode",5126],["# terms of the GNU General Public License as published by the Free Software",5003],["# terms of the GNU General Public License as published by the Free Software",5003]]},{"word":"them","context":[["# none on the first line, and are going to readd them",296],["# case and default should not have general statements after them",294],["# and append them to args prefixed",238],["them to the maintainer, see CHECKPATCH in MAINTAINERS.",174],["# directly before it executes them, like \"make test-force-pl\" in RPM builds.",149],["# configuration used to build them.  To make life easier, an environment",147],["# reusing them from previous test",119],["# and make them world readable",119],["mtr_print(\"Server(s) started, not waiting for them to finish\");",118],["# decision by deleting the provisions above and replace them with the notice",116]]},{"word":"then","context":[["})->then( sub {",711],["# prevent the tk window from showing up then start the event loop",305],["# check we are in a valid source file if not then ignore this hunk",303],["# ' *' then it is very likely a comment.",303],["# edge is a close comment then we must be in a comment",300],["# If we have no input at all, then there is nothing to report on",299],["# If the condition carries leading newlines, then count those as offsets.",298],["# If we see an #else/#elif then the code",294],["# then count those as offsets.",294],["# check we are in a valid C source file if not then ignore this hunk",293]]},{"word":"there","context":[["# Look through the context and try and figure out if there is a",303],["# Bail if there is no further context.",300],["# If we have no input at all, then there is nothing to report on",299],["# if there is a space between the name and the open",298],["# If there were whitespace errors which cleanpatch can fix",248],["# If there's a name left after stripping spaces and",194],["# it there is no point in retrying a statement scan",173],["# On some operating systems, there is a limit to the length of a",147],["# Check if there is UTF-8 in a commit log when a mail header has explicitly",136],["# if there is one",119]]},{"word":"these","context":[["# perluniprops.pod should be consulted for the syntax rules for any of these,",2468],["# Check for }<nl>else {, these must be at the same",303],["# Check if either of these lines are modified, else",294],["\"CVS style keyword markers, these will _not_ be updated\\n\". $herecurr);",193],["# system these tables will be populated either by mysql_tzinfo_to_sql",145],["If any of these errors are false positives, please report",143],["# In these cases we may want valgrind report from normal termination",115],["$url =~ s! \\* !$g_escape_table{'*'}!gx;\t\t# We've got to encode these to avoid",108],["Options that pass on options (these may be repeated)",106],["# Note as optimized versions of these functions are added we need to add a check to ensure",106]]},{"word":"this","context":[["# name or existence of this file are subject to change without notice.  Don't",6892],["# the name or existence of this file are subject to change without notice.",3636],["# along with this program; if not, write to the Free Software",3345],["# you may not use this file except in compliance with the License.",2546],["# The format of the lines of this file is: START\\tSTOP\\twhere START is the",2478],["# along with this program.  If not, see <http://www.gnu.org/licenses/>.",1805],["License along with this library; if not, write to the Free Software",1762],["As a special exception, if you link this library with other files,",1585],["compiled with a Free Software compiler, to produce an executable, this",1583],["# Use Unicode::UCD::prop_invlist() to access the contents of this file.",826]]},{"word":"through","context":[["# Look through the context and try and figure out if there is a",303],["# track the line number as we move through the hunk, note that",303],["# loop through each subfield",248],["# libraries through functions",203],["# in shared libraries through functions",203],["# Search through list of locations that are known",149],["# The syslogd writes it into a file and through a pipe.",143],["# loop through each tab 0 through 9",139],["# loop through each tab 0 through 9",139],["# Loop through our list of processes and look for and entry",137]]},{"word":"time","context":[["# Start the mysqltest processes in parallel to save time",354],["$timevrfyend{$testnum} = Time::HiRes::time() if($timestats);",329],["my $start = time;",314],["my $now = time;",259],["my $now = time();",258],["my $start = time();",234],["my $time = time();",227],["my $time = time();",227],["my $start_time = time();",219],["my $NTIME = $mecca->time->nelem;",212]]},{"word":"timeout","context":[["my $proc= My::SafeProcess->wait_any_timeout($timeout);",357],["my $timeout= start_timer(check_timeout($tinfo));",318],["elsif ( $proc->{timeout} ) {",238],["if ( $proc->{timeout} )",214],["'testcase-timeout=i'       => \\$opt_testcase_timeout,",149],["'suite-timeout=i'          => \\$opt_suite_timeout,",149],["-timeout   => $o_timeout",127],["# Enable the debug sync facility, set default wait timeout.",119],["\"for option --testcase-timeout\")",119],["elsif ($proc->{timeout}) {",119]]},{"word":"timestamp","context":[["# timestamp test result verification end",329],["`timestamp` timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,",168],["`timestamp` timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,",168],["timestamp             Print timestamp before each test report line",119],["timestamp             Print timestamp before each test report line",119],["'timestamp'                => \\&report_option,",119],["timediff              With --timestamp, also print time passed since",119],["priority, found, timestamp, itemnumber,",108],["`timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,",104],["`timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,",104]]},{"word":"tinfo","context":[["my ($tinfo)= @_;",1309],["report_failure_and_restart($tinfo);",1072],["$tinfo->{comment}=",905],["$tinfo->{comment}.=",598],["get_log_from_proc($proc, $tinfo->{name});",476],["my $tinfo= shift;",428],["my $extra_opts= get_extra_opts($mysqld, $tinfo);",354],[".check_timeout($tinfo).\" seconds\";",318],["my $timeout= start_timer(check_timeout($tinfo));",318],["mtr_report_test($tinfo);",296]]},{"word":"title","context":[["<th class=listtop>$form->{title}</th>",547],["my $title;",297],["mtr_add_arg($$args, \"-title\");",258],["my $title = shift;",214],["title => $title,",188],["title => $title,",188],["(module, code, name, title, content)",175],["<link href=\"#Top\" rel=\"start\" title=\"Top\">",174],["if ($title) {",170],["$title = $graphObject->getTitle();",159]]},{"word":"tmp","context":[["my $errfile= \"$opt_vardir/tmp/$name.err\";",357],["my $tmp;",331],["&xor\t($out,$tmp);",240],["my $gdb_init_file= \"$opt_vardir/tmp/gdbinit.$type\";",238],["my @tmp;",217],["veor\t$in0,$in0,$tmp",165],["vxor\t\t$in0,$in0,$tmp",162],["push(@out,$tmp);",155],["(default: ./var/tmp).",149],["mkpath(\"$opt_vardir/tmp\");",149]]},{"word":"to","context":[["# name or existence of this file are subject to change without notice.  Don't",6892],["# the name or existence of this file are subject to change without notice.",3636],["# with Koha; if not, write to the Free Software Foundation, Inc.,",3538],["# along with this program; if not, write to the Free Software",3345],["# Unless required by applicable law or agreed to in writing, software",2607],["# A colon can be substituted for the equals sign, and anything to the left of",2251],["# the equals (or colon) can be combined with anything to the right.  Thus,",2251],["License along with this library; if not, write to the Free Software",1762],["library does not by itself cause the resulting executable to be covered",1583],["compiled with a Free Software compiler, to produce an executable, this",1583]]},{"word":"top","context":[["'cmdname' => 'top',",836],["#\t<TR VALIGN=\"top\">",760],["<tr valign=top>",588],["print \"Must be run from the top-level dir. of a kernel tree\\n\";",285],["sprintf(\"(%s)...\\n\\n\", (not $fullstats)?\"top $counter\":\"full\");",174],["'text' => 'top'",163],["top",141],["@top top",122],["@top top",122],["},$self,$mc,$top,$X,$Y]);",106]]},{"word":"total","context":[["my $total = 0;",872],["$total++;",538],["print \"total: $cnt_error errors, $cnt_warn warnings, \" .",300],["if ($res->{total}) {",261],["my $sth_search = $dbh->prepare(\"SELECT count(*) AS total",242],["$total = 0;",219],["my $total;",209],["return $total;",165],["my $total=0;",164],["total => $total,",148]]},{"word":"totals","context":[["foreach my $product (sort keys %{$totals{by_product}})",618],["foreach my $key (sort keys %{$totals{$section}{by_machine}{$machine}})",306],["foreach my $key (sort keys %{$totals{$section}{by_machine_lane}{$machine}{$lane}})",301],["foreach my $product (sort keys %{$totals{$section}{by_product}})",286],["#     foreach my $product (sort keys %{$totals{$section}{by_product}})",255],["foreach my $machine (sort { $a <=> $b } keys %{$totals{$section}{by_machine}})",222],["foreach my $machine (sort { $a <=> $b } keys %{$totals{$section}{by_machine_lane}})",222],["foreach my $lane (sort { $a <=> $b } keys %{$totals{$section}{by_machine_lane}{$machine}})",221],["foreach my $key (sort keys %{$totals{by_product}{$product}{$section}{by_machine}{$machine}})",202],["foreach my $key (sort keys %{$totals{by_product}{$product}{$section}{by_machine_lane}{$machine}{$lane}})",201]]},{"word":"tp","context":[["mov\t$hi1,-16(%rsp,$j,8)\t# tp[j-1]",174],["<meta name=\"Generator\" content=\"tp\">",124],["mov\t$N[1],-16(%rsp,$j,8)\t# tp[j-1]",116],["mov\t$N[0],-24(%rsp,$j,8)\t# tp[j-1]",116],["add\t$lo0,$hi1\t\t# np[j]*m1+ap[j]*bp[i]+tp[j]",96],["lea\t(%rsp),$ap\t\t# borrow ap for tp",81],["lea\t32($tp),$tp",76],["mov\t$N[1],-16($tp)\t\t# tp[j-1]",76],["lea\t32($tp),$tp",76],["mov\t$N[1],-16($tp)\t\t# tp[j-1]",76]]},{"word":"tptr","context":[["adc\t8*4($tptr),%r12",114],["adc\t8*5($tptr),%r13",114],["adc\t8*6($tptr),%r14",114],["adc\t8*7($tptr),%r15",114],["adc\t8*3($tptr),%r11",114],["lea\t8*8($tptr),$tptr",114],["lea\t8*8($tptr),$tptr",114],["adc\t8*2($tptr),%r10",95],["adc\t8*1($tptr),%r9",95],["lea\t4*8($tptr),$tptr",82]]},{"word":"tr","context":[["</tr>",19161],["<tr>",16076],["print \"</tr>\\n\";",1389],["</tr><tr>",1065],["</tr><tr>",1065],["<tr height=\"5\"></tr>",929],["<tr height=\"5\"></tr>",929],["</td></tr>",737],["<tr valign=top>",588],["print \"<tr>\";",477]]},{"word":"tree","context":[["if ($tree) {",585],["'tree!'\t\t=> \\$tree,",296],["die \"$P: $root: --root does not point at a valid tree\\n\";",296],["'tree!'\t\t=> \\$tree,",296],["if (!$file && $tree && $p1_prefix ne '' &&",287],["print \"Must be run from the top-level dir. of a kernel tree\\n\";",285],["# See if any suffix of this path is a path within the tree.",280],["if ($tree && $rawline =~ m{^.\\s*\\#\\s*include\\s*\\<asm\\/(.*)\\.h\\>}) {",279],["--root=PATH                PATH to the kernel tree root",273],["my $tree = 1;",270]]},{"word":"true","context":[[";   true",6811],["true",4763],["->  true",4608],["true.",1678],[";\ttrue",695],["condition(true, [",438],["->\ttrue",412],["; true,",256],["%true ->",209],["-> true",209]]},{"word":"try","context":[["try {",752],["# Look through the context and try and figure out if there is a",303],["# to try and find and validate the current printk.  In summary the current",285],[". p(a({-href=>\"javascript:back()\"}, \"go back and try again\"));",193],["'try'   => 'none',",138],["# If not free, release and try from next number",119],["# sleep a little and try again, thus allowing the",119],["# Reserved for other thread, try next",117],["# Race condition seen on Windows: try again until file not empty",114],["use Error qw(:try);",108]]},{"word":"tweak","context":[["vld1.64\t\t{@XMM[8]}, [r0,:128]\t\t@ next round tweak",364],["xorps\t@tweak[0],$inout0",288],["xorps\t@tweak[1],$inout1",176],["pxor\t0x00(%rsp), @XMM[0]\t# ^= tweak[]",168],["paddq\t@tweak[5],@tweak[5]",160],["paddq\t@tweak[5],@tweak[5]",160],["&pcmpgtd($twtmp,$tweak);\t\t# broadcast upper bits",156],["&paddq\t($tweak,$tweak);\t\t# &psllq($tweak,1);",156],["&paddq\t($tweak,$tweak);\t\t# &psllq($tweak,1);",156],["&paddq\t($tweak,$tweak);\t\t# &psllq($tweak,1);",156]]},{"word":"txt","context":[["# This file is built by mktables from e.g. UnicodeData.txt.",2362],["# or see http://www.gnu.org/licenses/agpl.txt.",1024],["lit(txt)).",322],["# This file is built by ./mktables from e.g. UnicodeData.txt.",319],["'.', pun, '.', dl(0,s,txt)],",298],["if ($1 =~ m@Documentation/kernel-parameters.txt$@) {",284],["open(ERROR_FILE,\">>SNPGenie\\_LOG\\.txt\");",196],["\"Use of volatile is usually wrong: see Documentation/volatile-considered-harmful.txt\\n\" . $herecurr);",182],["\"__setup appears un-documented -- check Documentation/kernel-parameters.txt\\n\" . $herecurr);",177],["return $txt;",174]]},{"word":"type","context":[["'type' => 'empty_spaces_after_command'",8079],["'type' => 'misc_line_arg'",6775],["'type' => 'spaces_at_end'",6008],["'type' => 'empty_line'",5908],["'type' => 'brace_command_arg'",5334],["'type' => 'paragraph'",4088],["$type = 'N';",3589],["type            => \"intranet\",",3059],["type => \"intranet\",",2074],["'type' => 'empty_line_after_command'",1865]]},{"word":"u","context":[["open($FILE, '-|', \"diff -u /dev/null $filename\") ||",292],["(?:__)?(?:u|s|be|le)(?:8|16|32|64)|",269],["# check for %L{u,d,i} in strings",256],["our $Int_type\t= qr{(?i)llu|ull|ll|lu|ul|l|u};",101],["$ucs = hex($u);",98],["die \"legacy [u]long hyper arrays aren't supported\";",87],["$ucs  = hex($u);",80],[":- use_module(u(v)).",70],["if ($u) {",68],["( $c, $u, $rest ) = split;",68]]},{"word":"undef","context":[["undef,",12152],["return undef;",6701],["'is_dup' => undef,",938],["undef $/;",800],["local $/ = undef;",744],["'moderation_notes' => undef,",488],["$$exe= undef;",469],["while (my @tuples = Bio::KBase::Utilities::ScriptThing::GetBatch($ih, undef, $column)) {",453],["if ($flavour =~ /\\./) { $output = $flavour; undef $flavour; }",427],["'full_text_rss' => undef,",422]]},{"word":"under","context":[["# it under the terms of the GNU General Public License as published by",5449],["# Koha is free software; you can redistribute it and/or modify it under the",4845],["# distributed under the License is distributed on an \"AS IS\" BASIS,",2592],["# limitations under the License.",2565],["# Licensed under the Apache License, Version 2.0 (the \"License\");",2545],["# under the terms of the GNU General Public License as published by",2021],["modify it under the terms of the GNU General Public License",1862],["# it under the terms of the GNU AFFERO General Public License as published by",1036],["# project. The module is, however, dual licensed under OpenSSL and",1012],["it under the terms of the GNU General Public License as published by",960]]},{"word":"unless","context":[["print \"\\r$i\" unless ($i % 100);",515],["return 0 unless ( keys %started );",357],["return unless $val;",315],["# if/while/etc brace do not go on next line, unless defining a do while loop,",303],["unless (@ARGV) {",289],["unless @valgrind_args;",282],["return unless ($report_precision{$section}{set} == FALSE);",255],["die($rc) unless $rc->is_success();",240],["unless -d $datadir;",238],["unless ($quiet) {",234]]},{"word":"unlink","context":[["unlink($err_file);",394],["unlink($pidfile) if(-f $pidfile);",364],["unlink($pidfile);",308],["unlink($gdb_init_file);",298],["unlink($opt_vardir);",265],["unlink(\"$base_file.result\");",238],["unlink($file);",229],["unlink($temp);",192],["unlink($filename);",189],["mtr_verbose(\"unlink($opt_vardir)\");",175]]},{"word":"unsigned","context":[["qr{unsigned},",227],["qr{(?:unsigned\\s+)?long\\s+long},",224],["qr{(?:unsigned\\s+)?char},",224],["qr{(?:unsigned\\s+)?short},",224],["qr{(?:unsigned\\s+)?long\\s+long\\s+int},",224],["qr{(?:unsigned\\s+)?int},",224],["qr{(?:unsigned\\s+)?long\\s+int},",224],["qr{(?:unsigned\\s+)?long},",224],["unsigned char name[MAX_PARTITION_NAME_LEN];     /* partition name */",165],["userid int(10) unsigned NOT NULL default '0',",159]]},{"word":"up","context":[["# prevent the tk window from showing up then start the event loop",305],["#make up the handle for any error we report on this line",303],["up disks for heavily crashing server). Defaults to",268],["# Pick up the preceding and succeeding characters.",228],["# Server is up. Verify that we can speak to it.",216],["config(o2,up).",158],["# A symlink from var/ to $opt_mem will be set up",149],["# Check if we should speed up tests by trying to run on tmpfs",149],["tmpfs will speed up tests.",149],["# directory. And we install \"/usr/share/mysql-test\". Moving up one",145]]},{"word":"update","context":[["&update;",344],["sub update {",249],["`timestamp` timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,",168],["add\t0($ctx),$A\t\t\t# update context",160],["'update'   => \\$doo_eet,",139],["$stats->update();",118],["'update' =>",77],["$field->update( $isbnsubfield => $newisbn );",75],["update();",72],["my %update = ();",71]]},{"word":"url","context":[["my $url = shift;",353],["my $url;",283],["return $url;",227],["my ($url) = @_;",182],["my $url               = url();",125],["my $url               = url();",125],["$url =~ s! \\* !$g_escape_table{'*'}!gx;\t\t# We've got to encode these to avoid",108],["$url =~ s!  _ !$g_escape_table{'_'}!gx;\t\t# conflicting with italics/bold.",108],["=item url",100],["my $response = $ua->get($url);",89]]},{"word":"usage","context":[["sub usage {",3488],["usage();",2931],["print $usage;",1278],["sub usage",1064],["die $usage;",931],["usage($cmd);",698],["our $usage = <<'END';",546],["&usage;",392],["&usage();",353],["sub usage{",350]]},{"word":"use","context":[["use strict;",82990],["use warnings;",44222],["use Getopt::Long;",18087],["use Data::Dumper;",11488],["use File::Basename;",7899],["use CGI;",6556],["# This file is for internal use by core Perl only.  The format and even the",5878],["use C4::Output;",5752],["use C4::Context;",5685],["# use it directly.",5354]]},{"word":"use_module","context":[[":- use_module(library(lists)).",1109],[":- use_module(library(pce)).",694],[":- use_module(library(error)).",495],[":- use_module(library(debug)).",449],[":- use_module(library(apply)).",404],[":- use_module(library(option)).",335],[":- use_module(library(plunit)).",287],[":- use_module(library(tap)).",190],[":- use_module(library(http/html_write)).",182],[":- use_module(library(http/http_dispatch)).",172]]},{"word":"used","context":[["# called by default form, used to confirm deletion of data in DB",262],["# called by delete_confirm, used to effectively confirm deletion of data in DB",262],["# called by add_form, used to insert/modify data in DB",258],["# Koha modules used",189],["\"8-bit UTF-8 used in possible commit log\\n\" . $herecurr);",176],["# This work contains copyrighted information from a number of sources all used",166],["#  contained herein may not be used or disclosed except with the written",158],["\"braces {} should be used on all arms of this statement\\n\" . $herectx);",154],["# Extra options used when starting mysqld",152],["# an environment variable can be used to control all ports. A small",149]]},{"word":"useful","context":[["# This program is distributed in the hope that it will be useful,",5883],["# Koha is distributed in the hope that it will be useful, but WITHOUT ANY",4849],["This program is distributed in the hope that it will be useful,",2563],["# Koha is distributed in the hope that it will be useful, but",1925],["# Meran is distributed in the hope that it will be useful,",754],["#    This program is distributed in the hope that it will be useful,",664],["# This program is distributed in the hope that it will be useful, but",581],["#   This program is distributed in the hope that it will be useful,",348],["#  This program is distributed in the hope that it will be useful,",346],["# This library is distributed in the hope that it will be useful,",318]]},{"word":"user","context":[["my $user = getCurrentUser();",433],["mtr_add_arg($args, \"--user=%s\", $opt_user);",350],["user => \\%myconfig,",343],["mtr_add_arg($args, \"--user=root\");",297],["user            => $opt_user,",238],["my $user;",237],["my($form, $slashdb, $user, $constants) = @_;",226],["available => 1, mode => \"user\", dist_req_build => [],",202],["my $user = shift;",168],["my($virtual_user, $constants, $slashdb, $user) = @_;",160]]},{"word":"using","context":[["\"Consider using #include <linux/$file> instead of <asm/$file>\\n\" . $herecurr);",185],["\"consider using a completion\\n\" . $herecurr);",185],["# some versions, test using it should be skipped",179],["# Indicate that we are using debugger",149],["using a builtin list of standard locations",149],["mem                   Run testsuite in \"memory\" using tmpfs or ramdisk",149],["The option can also be set using environment",149],["mtr_error(\"Can't use --extern when using debugger\");",147],["valgrind              Run the \"mysqltest\" and \"mysqld\" executables using",145],["must be specified using name-value pair notation",119]]},{"word":"usr","context":[["#!/usr/bin/perl",48452],["#!/usr/bin/perl -w",21528],["#!/usr/bin/env perl",18216],["#! /usr/bin/perl",2356],["#!/usr/local/bin/perl",2068],["#! /usr/bin/perl -w",1796],["#! /usr/bin/env perl",1585],["#!/usr/local/bin/perl -w",1188],["#!/usr/bin/perl -wT",293],["#!/usr/bin/env perl -w",269]]},{"word":"utf8","context":[["use utf8;",5239],["use CGI qw ( -utf8 );",1666],[") ENGINE=InnoDB DEFAULT CHARSET=utf8\");",1057],[") ENGINE=InnoDB DEFAULT CHARSET=utf8;",757],[") ENGINE=InnoDB DEFAULT CHARSET=utf8",632],["binmode STDOUT, \":utf8\";",414],["binmode(STDOUT, \":utf8\");",341],[") ENGINE=InnoDB DEFAULT CHARSET=utf8;\");",321],["binmode STDOUT, ':utf8';",236],["binmode STDERR, \":utf8\";",184]]},{"word":"v","context":[["# License, v. 2.0. If a copy of the MPL was not distributed with this",416],["foreach my $v (@vals) {",354],["return $v;",253],["$cv = $v;",248],["my $v = shift;",225],["my $v;",187],["system \"$perl_dir/perl $scripts_dir/logging.pl -v $log -l \\'$log_file\\' -p $priority -m \\'$message\\'\";",176],["`nasm -v 2>&1` =~ /NASM version ([2-9]\\.[0-9]+)/) {",161],["print join(\"\\t\", $k, map { ref($_) eq 'ARRAY' ? join(\",\", @$_) : $_ } @$v{@fields}), \"\\n\";",160],["while (my($k, $v) = each %$h)",160]]},{"word":"val","context":[["return $val;",728],["my $val = shift;",590],["my $val;",410],["return unless $val;",315],["my ($data,$val,$fld) = @_;",199],["my $val = $1;",199],["my ($data,$val) = @_;",186],["if ($val > 0) {",168],["my $val = 0;",149],["my ($dat,$fld,$val) = @_;",148]]},{"word":"valgrind","context":[["# if running in valgrind(to avoid valgrinding bash)",185],["$$exe= $opt_valgrind_path || \"valgrind\";",156],["if -f \"$glob_mysql_test_dir/valgrind.supp\";",152],["# to detect that valgrind is being used from test cases",149],["callgrind             Instruct valgrind to use callgrind",149],["# Check valgrind arguments",149],["# Set special valgrind options unless options passed on command line",149],["valgrind-options=ARGS Deprecated, use --valgrind-option",149],["valgrind-options=ARGS Deprecated, use --valgrind-option",149],["'valgrind-option=s'        => \\@valgrind_args,",149]]},{"word":"valid","context":[["# is also valid.",2401],["# check we are in a valid source file if not then ignore this hunk",303],["# Check for wrappage within a valid hunk of the file",303],["die \"$P: $root: --root does not point at a valid tree\\n\";",296],["# check we are in a valid C source file if not then ignore this hunk",293],["# check we are in a valid source file C or perl if not then ignore this hunk",284],["# Replace with valid values of your account.",270],["die \"$field is not a valid field\\n\";",240],["# The pid was not a valid number",119],["mtr_error(\"--user-args only valid with --start options\")",118]]},{"word":"value","context":[["my $value = $2;",638],["defaultvalue=document.getElementById(\\\"$field_number\\\").value;",570],["my $value;",559],["return $value;",530],["my $value = shift;",445],["$dbh->do(\"INSERT INTO `systempreferences` (variable,value,options,explanation,type)",360],["# Pull out the value of this operator.",296],["# terminating a case value or a label.",296],["my ($opt, $value)= @_;",267],["mark_log($mysqld->value('#log-error'), $tinfo);",236]]},{"word":"values","context":[["my @values;",636],["map($_->kill(), values(%started));",357],["# Track the 'values' across context and added lines.",300],["'values', 'possible', 'type', and 'attr' (default",281],["# Replace with valid values of your account.",270],["my @values = ();",229],["#---- if primkey exists, it's a modify action, so read values to modify...",196],["if (which($net_effect < 0)->nelem > 0) { #which gets indices of non-0 values, nelem get nr of elements",190],["::rptMsg($key_path.\" has no values.\");",159],["# settings, we reset the current values of LC_ALL and LC_CTYPE to \"C\".",149]]},{"word":"var","context":[["'cmdname' => 'var',",321],["my $var = $1;",308],["return ($res, $var);",296],["substr($var, length($res), 1, $av_pend_colon);",296],["substr($var, length($res), 1, $variant);",296],["my $var = '_' x length($stream);",296],["var(Var), !,",295],["# Running with \"var\" in mysql-test dir",290],["my $var = $2;",265],["var(X),",246]]},{"word":"varchar","context":[["`branchcode` varchar(10) default NULL,",198],["type    => 'varchar(10)',",171],["COLUMN `returnbranch` varchar(15) default NULL AFTER `holdallowed`\");",124],["`message_transport_type` varchar(20) NOT NULL,",117],["`description` varchar(255) NOT NULL,",97],["`printername` varchar(40) NOT NULL,",78],["`paper_bin` varchar(20) NOT NULL,",78],["`itemtype` varchar(10) NOT NULL,",78],["subtag varchar(25),",78],["`code` varchar(30) DEFAULT NULL,",78]]},{"word":"variable","context":[["$dbh->do(\"INSERT INTO `systempreferences` (variable,value,options,explanation,type)",360],["# * goes on variable not on type",303],["uniquefieldrequired => 'variable',",192],["\"EXPORT_SYMBOL(foo); should immediately follow its function/variable\\n\" . $herecurr);",184],["(variable,value,explanation,options,type)",175],["INSERT IGNORE INTO systempreferences (variable,value,explanation,options,type)",154],["# Create an environment variable to make it possible",149],["# an environment variable can be used to control all ports. A small",149],["variable MTR_MEM=[DIR]",147],["(default: MTR_VS_CONFIG environment variable)",147]]},{"word":"variables","context":[["# Put variables into hash",266],["# access globale variables in shared",203],["# have to access globale variables",203],["# Local variables:",192],["# Global variables",188],["##\t\t\t\t     \"declaring multiple variables together should be avoided\\n\" . $herecurr);",184],["# Bug#27636 tests fails if LC_* variables set to *_*.UTF-8",149],["# Init variables that can change between each test case",149],["$cmd =~ s/(\\$\\w+)/$1/eeg;\t#substitute variables in $cmd",132],["# Expand environment variables",119]]},{"word":"vars","context":[["use vars qw(%result_texis %result_texts %result_trees %result_errors",1722],["use vars qw($VERSION);",513],["use vars qw($VERSION %IRSSI);",362],["use vars qw(",260],["use vars qw(@ISA);",209],["use vars qw/",206],["use vars qw($debug);",197],["use strict 'vars';",196],["'vars' => {'KEY' => 'testtest', 'HMAC_KEY' => 'hmactest',",142],["my ($global_var_href) = @_;                            # get reference to global vars hash",135]]},{"word":"veor","context":[["veor\t\t@XMM[0], @XMM[0], @XMM[ 8]",364],["veor\t\t@XMM[1], @XMM[1], @XMM[ 9]",364],["veor\t@XMM[1], @XMM[1], @XMM[8]",234],["veor\t\t@XMM[0], @XMM[0], @XMM[8]",186],["veor\t@XMM[0], @XMM[0], @XMM[14]\t@ ^= IV",182],["veor\t$in0,$in0,$tmp",165],["veor\t\t@XMM[8], @XMM[6], @XMM[10]",156],["veor\t\t@XMM[11], @XMM[7], @XMM[13]",156],["veor\t\t@XMM[8], @XMM[4], @XMM[10]",156],["veor\t\t@XMM[5], @XMM[5], @XMM[13]",156]]},{"word":"verbose","context":[["if ($verbose >= MAXVERBOSE);",3593],["if ($verbose) {",1174],["my $verbose = 0;",1006],["verbose       => $opt_verbose,",920],["if($verbose) {",751],["$verbose = 1;",467],["if $verbose;",451],["if ($verbose >= MAXVERBOSE)",430],["my $verbose;",384],["if($verbose);",374]]},{"word":"version","context":[["# (at your option) any later version.",6573],["# version.",5687],["# Foundation; either version 2 of the License, or (at your option) any later",4705],["# the Free Software Foundation; either version 3 of the License, or",3443],["# the Free Software Foundation, either version 3 of the License, or",2555],["of the License, or (at your option) any later version.",1905],["as published by the Free Software Foundation; either version 2",1860],["# the Free Software Foundation; either version 2 of the License, or",1507],["# any later version.",1381],["#    (at your option) any later version.",921]]},{"word":"visible","context":[["\"vmlinux.lds.h needs VMLINUX_SYMBOL() around C-visible symbols\\n\" . $herecurr);",186],["# Check for user-visible strings broken across lines, which breaks the ability",159],["WARN(\"vmlinux.lds.h needs VMLINUX_SYMBOL() around C-visible symbols\\n\" . $herecurr);",89],["/* part_visibility is 1: this partition is visible and can download */",57],["('TagsModeration',  NULL,'','Require tags from patrons to be approved before becoming visible.','YesNo'),",39],["$addr =~ s{\">.+?:}{\">}; # strip the mailto: from the visible part",29],["# Make function visible to linker, and make additional symbol with",28],["holdsAt( appearance( id0 )=visible,  1040 ).",25],["holdsAt( appearance( id0 )=visible,  760 ).",24],["holdsAt( appearance( id0 )=visible,  720 ).",24]]},{"word":"vmovdqu","context":[["vmovdqu\t\t$xa0,0x00($out)",64],["vmovdqu\t0x30($inp),@X[3]",56],["vmovdqu\t0x20($inp),@X[2]",56],["vmovdqu\t0x00($inp),@X[0]",56],["vmovdqu\t0x10($inp),@X[1]",56],["vmovdqu\t\t$xb0,0x20($out)",48],["vmovdqu\t\t0x00-0x20($Xip),$Hkey\t# $Hkey^1",42],["vmovdqu\t\t$xc0,0x40($out)",42],["vmovdqu\t\t$xd0,0x60($out)",42],["vmovdqu\t\t($const),$Ii\t\t# borrow $Ii for .Lbswap_mask",42]]},{"word":"void","context":[["qr{void},",301],["# void (*store_gdt)(x86_descr_ptr *);",300],["if ($rettype ne \"void\") {",151],["'ret'   => 'void',",123],["if ($argtype ne \"void\") {",116],["add_proto qw/void vp9_iht4x4_16_add/, \"const tran_low_t *input, uint8_t *dest, int dest_stride, int tx_type\";",101],["add_proto qw/void vp9_iht8x8_64_add/, \"const tran_low_t *input, uint8_t *dest, int dest_stride, int tx_type\";",101],["add_proto qw/void vp9_iht16x16_256_add/, \"const tran_low_t *input, uint8_t *output, int pitch, int tx_type\";",101],["\"Bad function definition - $1() should probably be $1(void)\\n\" . $herecurr) &&",93],["(void)IsolationAwareDeactivateActCtx(0, ulpCookie);",90]]},{"word":"vpxor","context":[["vpxor\t\t$Xmi,$Zmi,$Zmi",255],["vpxor\t\t$Xhi,$Zhi,$Zhi",238],["vpxor\t\t$Xlo,$Zlo,$Zlo",238],["vpxor\t\t$Ij,$T1,$T1",204],["vpxor\t\t$Ii,$T2,$T2",136],["&vpxor\t(@X[0],@X[0],@X[-4&7]);\t\t# \"X[0]\"^=\"X[-16]\"",77],["vpxor\t\t$Z1,$Z0,$Z0",70],["vpxor\t\t$Zmi,$Xmi,$Xmi",68],["vpxor\t\t$Zlo,$Xlo,$Xlo",68],["vpxor\t\t$Zhi,$Xhi,$Xhi",68]]},{"word":"vr6","context":[["+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6",692],["+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6",692],["+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6",692],["+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6",692],["+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6",692],["+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6",692],["+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6",692],["+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6",692],["+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6",692],["+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6",692]]},{"word":"w","context":[["#!/usr/bin/perl -w",21528],["#! /usr/bin/perl -w",1796],["#!/usr/local/bin/perl -w",1188],["if ($name =~ /[^\\w \\-]/i) { ##has \"must quote\" chars",388],["#!perl -w",349],["#!/usr/bin/env perl -w",269],["if ($line =~ /\\bstatic\\s+char\\s+(\\w+)\\s*\\[\\s*\\]\\s*=\\s*\"/) {",225],["if ($line =~ /\\bstatic\\s+const\\s+char\\s*\\*\\s*(\\w+)\\s*\\[\\s*\\]\\s*=\\s*/) {",215],["$cmd =~ s/(\\$\\w+)/$1/eeg;\t\t#interpolate $cmd",159],["shift(@w);",157]]},{"word":"warn","context":[["warn $@ if $@;",323],["# warn about #if 0",304],["#warn \"           $line\\n\";",303],["# warn about spacing in #ifdefs",303],["#warn \"CSB: blk<$blk> off<$off> len<$len>\\n\";",300],["#warn \"CONDITION<$condition>\\n\";",300],["#warn \"STATEMENT<$statement>\\n\";",300],["#warn \"'*' is part of type\\n\";",300],["#warn \"CSB: mark coff<$coff> soff<$soff> 1<$1>\\n\";",299],["#warn \"CSB: c<$c> type<$type> level<$level> remainder<$remainder> coff_set<$coff_set>\\n\";",299]]},{"word":"warning","context":[["'type' => 'warning'",1406],["$res =~ s@(\\#\\s*(?:error|warning)\\s+).*@$1$clean@;",297],["} elsif ($res =~ /^.\\s*\\#\\s*(?:error|warning)\\s+(.*)\\b/) {",297],["$level = \"warn\" if ($level eq \"warning\");",261],["'type' => 'warning',",186],["use Bio::EnsEMBL::Utils::Exception qw(throw warning);",137],["# One check warning process returned",119],["# Add help tables and data for warning detection and supression",119],["# Send out a warning, we should fix the variables that has no",111],["-W - enable warning and trace (level=mid=2)",102]]},{"word":"warnings","context":[["use warnings;",44222],["#use warnings; FIXME - Bug 2505",1565],["$warnings++;",989],["use warnings FATAL => 'all';",426],["no warnings 'uninitialized';",378],["no warnings;",366],["use warnings ;",334],["#use warnings;",331],["print \"total: $cnt_error errors, $cnt_warn warnings, \" .",300],["--mailback                 only produce a report in case of warnings/errors",280]]},{"word":"warranty","context":[["# but WITHOUT ANY WARRANTY; without even the implied warranty of",8483],["# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR",4860],["but WITHOUT ANY WARRANTY; without even the implied warranty of",3080],["# WITHOUT ANY WARRANTY; without even the implied warranty of",2637],["#    but WITHOUT ANY WARRANTY; without even the implied warranty of",1043],["# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY",669],["#  but WITHOUT ANY WARRANTY; without even the implied warranty of",616],["#   but WITHOUT ANY WARRANTY; without even the implied warranty of",522],["# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS",272],["# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS",206]]},{"word":"was","context":[["# License, v. 2.0. If a copy of the MPL was not distributed with this",416],["# Return immediately if no check proceess was started",357],["# one does, and continue as if the #endif was not here.",299],["# This code was originally developed by Vyatta, Inc.",262],["# although mode was set to 0000, but in that case a stat on",149],["# Turn on SSL for _all_ test cases if option --ssl was used",147],["mtr_report(\" - 'localhost:$_' was not free\");",119],["# The pid was not a valid number",119],["# Some port was not free(which one has already been printed)",119],["return 0; # One port was not free",119]]},{"word":"we","context":[["# Trace the real file/line as we go.",303],["# check we are in a valid source file if not then ignore this hunk",303],["# track the line number as we move through the hunk, note that",303],["# blank context lines so we need to count that too.",303],["#make up the handle for any error we report on this line",303],["# This is not a patch, and we are are in 'no-patch' mode so",300],["# edge is a close comment then we must be in a comment",300],["# If we are about to drop off the end, pull in more",300],["# If we have no input at all, then there is nothing to report on",299],["# Make sure we remove the line prefixes as we have",296]]},{"word":"weechat","context":[["return weechat::WEECHAT_RC_OK;",674],["weechat::infolist_free($infolist);",210],["weechat::bar_item_update($SCRIPT_NAME);",146],["weechat::color($color).",112],["while (weechat::infolist_next($infolist))",99],["$str .= weechat::color($bg).",64],["weechat::infolist_next($infolist);",60],["weechat::buffer_set($iset_buffer, \"localvar_set_iset_search_mode\", $search_mode);",60],["weechat::buffer_set($iset_buffer, \"localvar_set_iset_search_value\", $search_value);",50],["weechat::color($bg).",48]]},{"word":"what","context":[["# Find out what is on the end of the line after the",595],["#     Note that contrary to what you might expect, the above is NOT the same",512],["# the main body of the table, and what all code points missing from this file",413],["# Return of what appears to be an errno should normally be -'ve",199],["# Control what engine/variation to run",149],["# Control what test suites or cases to run",149],["Options to control what test suites or cases to run",149],["# to start unless we specify what user to run as, see BUG#30630",149],["# i.e a file can be read regardless what mode we set it to",149],["# Deprecated option unless it's what we know pushbuild uses",148]]},{"word":"when","context":[["plugin_parameters : other parameters added when the plugin is called by the dopop function",456],["# closing brace should have a space following it when it has anything",303],["#   :   when part of a bitfield",296],["# A colon needs no spaces before when it is",296],["# Only applies when adding the entry originally, after that we do not have",221],["sub get_no2_reservoirs { #get species that are produced when radical species react with NO2",178],["# Extra options used when starting mysqld",152],["# Remember options used when starting",149],["# we need it when valgrinding or debugging non installed binary",149],["mtr_error(\"Can't use --extern when using debugger\");",147]]},{"word":"where","context":[["# CRYPTOGAMS licenses depending on where you obtain it. For further",1012],["where N is the column (from 1) that contains the id.",386],["# Ignore those directives where spaces _are_ permitted.",298],["# Make sure the directory where it points exist",298],["my ($where, $prefix) = ($-[1], $1);",296],["# where necessary.",296],["($where != 0 || $prefix !~ /^.\\s+$/) &&",294],["--debug KEY=[0|1]          turn on/off debugging of KEY, where KEY is one of",280],["where",268],["$consumption->{$process}->where($net_effect > 0) .= 0;",190]]},{"word":"which","context":[["# Checks which are anchored on the added line.",303],["# Checks which may be anchored in the context.",303],["my $which = $1;",285],["# If there were whitespace errors which cleanpatch can fix",248],["# Handle definitions which produce identifiers with",232],["# printk includes all preceding printk's which have no newline on the end.",210],["if (which($net_effect > 0)->nelem > 0) {",190],["if (which($net_effect < 0)->nelem > 0) { #which gets indices of non-0 values, nelem get nr of elements",190],["if (which($net_effect < 0)->nelem > 0) { #which gets indices of non-0 values, nelem get nr of elements",190],["\"LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged\\n\" . $herecurr);",182]]},{"word":"while","context":[["while (<IN>) {",3399],["while (<>) {",3246],["while (1) {",2885],["while (<$fh>) {",1920],["while (<FILE>) {",1530],["while (<F>) {",1367],["while(1) {",1205],["while(<IN>) {",1121],["while(<>) {",991],["while (<STDIN>) {",937]]},{"word":"width","context":[["<table width=100%>",1897],["<table width=\"100%\">",397],["print \"<img src='img/blank.gif' alt='' width='250' height='1'><br>\";",140],["my $pod_txt = Pod::Text->new (sentence => 0, width => 78);",128],["# tab-width: 4",126],["# tab-width: 8",116],["# or should it be fixed width column parsing? It does not",111],["width           => \"500\",",95],[". ( $count ? \"\" : \" width=\\\"$WIDTHCOLICON\\\"\" )",88],["| width=\"400\" valign=\"top\" |",73]]},{"word":"will","context":[["# This program is distributed in the hope that it will be useful,",5883],["# Koha is distributed in the hope that it will be useful, but WITHOUT ANY",4849],["# Any changes made here will be lost!",2921],["# database, Version 6.1.0.  Any changes made here will be lost!",2613],["This program is distributed in the hope that it will be useful,",2563],["# database, Version 6.0.0.  Any changes made here will be lost!",1994],["# Koha is distributed in the hope that it will be useful, but",1925],["# database, Version 6.2.0.  Any changes made here will be lost!",1762],["# database, Version 5.2.0.  Any changes made here will be lost!",1670],["# database, Version 6.3.0.  Any changes made here will be lost!",1161]]},{"word":"with","context":[["# with Koha; if not, write to the Free Software Foundation, Inc.,",3538],["# along with this program; if not, write to the Free Software",3345],["# you may not use this file except in compliance with the License.",2546],["# the equals (or colon) can be combined with anything to the right.  Thus,",2251],["# along with Koha; if not, see <http://www.gnu.org/licenses>.",1906],["# along with this program.  If not, see <http://www.gnu.org/licenses/>.",1805],["License along with this library; if not, write to the Free Software",1762],["As a special exception, if you link this library with other files,",1585],["compiled with a Free Software compiler, to produce an executable, this",1583],["# You should have received a copy of the GNU General Public License along with",1572]]},{"word":"without","context":[["# but WITHOUT ANY WARRANTY; without even the implied warranty of",8483],["# name or existence of this file are subject to change without notice.  Don't",6892],["# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR",4860],["# the name or existence of this file are subject to change without notice.",3636],["but WITHOUT ANY WARRANTY; without even the implied warranty of",3080],["# WITHOUT ANY WARRANTY; without even the implied warranty of",2637],["#    but WITHOUT ANY WARRANTY; without even the implied warranty of",1043],["# Redistribution and use in source and binary forms, with or without",921],["Redistribution and use in source and binary forms, with or without",745],["# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY",669]]},{"word":"word","context":[["foreach my $word (@words) {",326],["push (@conf_args, $word);",240],["last if ($word =~ m/^#/);",240],["next if ($word =~ m/^\\s*#/);",193],["next if ($word =~ m/^\\s*$/);",193],["$word =~ tr/[a-z]/[A-Z]/;",193],["$word =~ s/^\\s*//g;",193],["$word =~ s/\\s+/ /g;",193],["$word =~ s/\\s*\\n?$//g;",193],["my ($word) = @_;",132]]},{"word":"work","context":[["# don't retry if the server doesn't work",291],["# `make test'. After `make install' it should work as `perl test.pl'",233],["# This work contains copyrighted information from a number of sources all used",166],["# To make it easier for different devs to work on the same host,",149],["# distributed with this work for additional information",125],["# this work for additional information regarding copyright ownership.",121],["# Should use exec() here on *nix but this appears not to work on Windows",119],["# This file incorporates work covered by the following license notice:",96],["#   with this work for additional information regarding copyright",96],["# do something if it doesnt work....",85]]},{"word":"world","context":[["\"Exporting world writable files is usually an error. Consider more restrictive permissions.\\n\" . $herecurr);",184],["# and make them world readable",119],["# The problem presents some challenges. In an ideal world, we could",33],["<option value=\\\"/-/world/middle-east-north-africa/lebanon/\\\" >&nbsp;&raquo; Lebanon</option>",30],["<option value=\\\"/-/world/sub-saharan-africa/senegal/\\\" >&nbsp;&raquo; Senegal</option>",30],["<option value=\\\"/-/world/sub-saharan-africa/benin/\\\" >&nbsp;&raquo; Benin</option>",30],["<option value=\\\"/-/world/americas/paraguay/\\\" >&nbsp;&raquo; Paraguay</option>",30],["<option value=\\\"/-/world/eastern-central-europe/albania/\\\" >&nbsp;&raquo; Albania</option>",30],["<option value=\\\"/-/world/eastern-central-europe/serbia/\\\" >&nbsp;&raquo; Serbia</option>",30],["<option value=\\\"/-/world/eastern-central-europe/bulgaria/\\\" >&nbsp;&raquo; Bulgaria</option>",30]]},{"word":"write","context":[["# with Koha; if not, write to the Free Software Foundation, Inc.,",3538],["# along with this program; if not, write to the Free Software",3345],["License along with this library; if not, write to the Free Software",1762],["# Koha; if not, write to the Free Software Foundation, Inc., 59 Temple Place,",1254],["movdqu\t@XMM[0], 0x00($out)\t# write output",514],["#    along with this program; if not, write to the Free Software",343],["write;",328],["along with this program; if not, write to the Free Software",294],["# write init file for mysqld or client",272],["# with this program; if not, write to the Free Software Foundation, Inc.,",267]]},{"word":"writing","context":[["# Unless required by applicable law or agreed to in writing, software",2607],["#  Unless required by applicable law or agreed to in writing, software",516],["## Unless required by applicable law or agreed to in writing, software",271],["Unless required by applicable law or agreed to in writing, software",194],["# Unless required by applicable law or agreed to in writing,",156],["#   Unless required by applicable law or agreed to in writing, software",156],["or die(\"Could not open file '$warning_log' for writing: $!\");",119],["print STDERR \"I: writing $fn...\\n\";",72],["print STDERR \"I: writing $fn\\n\";",68],["# Make sure we are writing to a binary stream",59]]},{"word":"written","context":[["# Circulation and User's Management. It's written in Perl, and uses Apache2",754],["# Check for bitwise tests written as boolean",299],["$written++;",279],["#  contained herein may not be used or disclosed except with the written",158],["my $written = 0;",156],["to be created already exist the file will be written with a '.new' suffix.",122],["#   specific prior written permission.",120],["# (it will contain the CURRENT_TEST written by mtr, so is not empty)",119],["#written 20/02/2002 by paul.poulain@free.fr",112],["Do _NOT_ trust the results written to this file.",103]]},{"word":"www","context":[["# along with Koha; if not, see <http://www.gnu.org/licenses>.",1906],["# along with this program.  If not, see <http://www.gnu.org/licenses/>.",1805],["#      http://www.apache.org/licenses/LICENSE-2.0",1764],["WWW:           http://www.swi-prolog.org",1432],["# or see http://www.gnu.org/licenses/agpl.txt.",1024],["#     http://www.apache.org/licenses/LICENSE-2.0",1020],["# details see http://www.openssl.org/~appro/cryptogams/.",1012],["# along with Meran.  If not, see <http://www.gnu.org/licenses/>.",754],["WWW:           http://www.swi.psy.uva.nl/projects/xpce/",688],["L<The SEED Project|http://www.theseed.org>",662]]},{"word":"x","context":[["}x;",3487],["my $clean = 'X' x length($1);",598],["my $x = shift;",395],["@ENV{qw(LANGUAGE LANG LC_ALL)} = ('C') x 3;",341],["my @x = split(/\\t/);",307],["my $ctx = \"${a}x${c}\";",303],["$res .= $type x length($1);",300],["if ($ctx !~ /[WEOBC]x[^W]/ && $ctx !~ /[^W]x[WOBEC]/) {",299],[")/x)",299],["if ($ctx !~ /.x[WEBC]/ &&",299]]},{"word":"xA0","context":[["|  \\xE0[\\xA0-\\xBF][\\x80-\\xBF]        # excluding overlongs",304],["\"\\xE1\\xBE\\xA0\" => \"\\x{1F60}\\x{03B9}\",         # U+1FA0 => 1F60 03B9",35],["\"\\xE1\\xBE\\xA0\" => \"\\x{1F68}\\x{0399}\",         # U+1FA0 => 1F68 0399",22],["\"\\xF3\\xA0\\x9B\\xAD\" => \"\",                     # U+E06ED =>",13],["\"\\xF3\\xA0\\xA4\\xB2\" => \"\",                     # U+E0932 =>",13],["\"\\xF3\\xA0\\x9B\\x99\" => \"\",                     # U+E06D9 =>",13],["\"\\xF3\\xA0\\xA4\\x81\" => \"\",                     # U+E0901 =>",13],["\"\\xF3\\xA0\\x9F\\x92\" => \"\",                     # U+E07D2 =>",13],["\"\\xF3\\xA0\\x8B\\xB0\" => \"\",                     # U+E02F0 =>",13],["\"\\xF3\\xA0\\x9F\\xB3\" => \"\",                     # U+E07F3 =>",13]]},{"word":"xBF","context":[["|  \\xF0[\\x90-\\xBF][\\x80-\\xBF]{2}     # planes 1-3",304],["|  \\xF4[\\x80-\\x8F][\\x80-\\xBF]{2}     # plane 16",304],["| [\\xF1-\\xF3][\\x80-\\xBF]{3}          # planes 4-15",304],["|  \\xED[\\x80-\\x9F][\\x80-\\xBF]        # excluding surrogates",304],["|  \\xF0[\\x90-\\xBF][\\x80-\\xBF]{2}     # planes 1-3",304],["|  \\xE0[\\xA0-\\xBF][\\x80-\\xBF]        # excluding overlongs",304],["|  \\xE0[\\xA0-\\xBF][\\x80-\\xBF]        # excluding overlongs",304],["| [\\xE1-\\xEC\\xEE\\xEF][\\x80-\\xBF]{2}  # straight 3-byte",304],["[\\xC2-\\xDF][\\x80-\\xBF]               # non-overlong 2-byte",176],["| [\\xC2-\\xDF][\\x80-\\xBF]             # non-overlong 2-byte",128]]},{"word":"xEF","context":[["| [\\xE1-\\xEC\\xEE\\xEF][\\x80-\\xBF]{2}  # straight 3-byte",304],["\"\\xEF\\xAC\\x83\" => \"\\x{0066}\\x{0066}\\x{0069}\", # U+FB03 => 0066 0066 0069",35],["\"\\xEF\\xAC\\x80\" => \"\\x{0066}\\x{0066}\",         # U+FB00 => 0066 0066",35],["\"\\xEF\\xAC\\x97\" => \"\\x{0574}\\x{056D}\",         # U+FB17 => 0574 056D",35],["\"\\xEF\\xAC\\x86\" => \"\\x{0073}\\x{0074}\",         # U+FB06 => 0073 0074",35],["\"\\xEF\\xAC\\x96\" => \"\\x{057E}\\x{0576}\",         # U+FB16 => 057E 0576",35],["\"\\xEF\\xAC\\x93\" => \"\\x{0574}\\x{0576}\",         # U+FB13 => 0574 0576",35],["\"\\xEF\\xAC\\x81\" => \"\\x{0066}\\x{0069}\",         # U+FB01 => 0066 0069",35],["\"\\xEF\\xAC\\x95\" => \"\\x{0574}\\x{056B}\",         # U+FB15 => 0574 056B",35],["\"\\xEF\\xAC\\x84\" => \"\\x{0066}\\x{0066}\\x{006C}\", # U+FB04 => 0066 0066 006C",35]]},{"word":"xF3","context":[["| [\\xF1-\\xF3][\\x80-\\xBF]{3}          # planes 4-15",304],["\"\\xF3\\xA0\\x8B\\xAA\" => \"\",                     # U+E02EA =>",13],["\"\\xF3\\xA0\\x8A\\x8B\" => \"\",                     # U+E028B =>",13],["\"\\xF3\\xA0\\xA6\\x98\" => \"\",                     # U+E0998 =>",13],["\"\\xF3\\xA0\\xAE\\xB2\" => \"\",                     # U+E0BB2 =>",13],["\"\\xF3\\xA0\\x8B\\xA8\" => \"\",                     # U+E02E8 =>",13],["\"\\xF3\\xA0\\x85\\x91\" => \"\",                     # U+E0151 =>",13],["\"\\xF3\\xA0\\xB3\\x96\" => \"\",                     # U+E0CD6 =>",13],["\"\\xF3\\xA0\\xB1\\xA5\" => \"\",                     # U+E0C65 =>",13],["\"\\xF3\\xA0\\xB8\\xAB\" => \"\",                     # U+E0E2B =>",13]]},{"word":"xml","context":[["if ($xml) {",201],["<?xml version=\"1.0\" encoding=\"UTF-8\"?>",169],["print $input->header(-type => 'application/vnd.sun.xml.calc',",151],["my $xml = new XML::Simple;",99],["print \"<?xml version='1.0'?>\\n\";",71],["my $xml;",69],["return $xml;",61],["my $xml = XML::Twig->new(",61],["print $xml;",60],["<?xml version=\"1.0\" encoding=\"utf-8\"?>",57]]},{"word":"xmm0","context":[["pxor\t%xmm0,%xmm0",239],["pxor\t%xmm0,%xmm0",239],["por\t%xmm0, %xmm2",204],["por\t%xmm1,%xmm0",181],["por\t%xmm2,%xmm0",170],["por\t%xmm3,%xmm0",108],["pand\t%xmm4,%xmm0",108],["pxor\t%xmm0, %xmm0",104],["pxor\t%xmm0, %xmm0",104],["pandn\t%xmm2, %xmm0",102]]},{"word":"xmm1","context":[["por\t%xmm1, %xmm3",266],["por\t%xmm1,%xmm0",181],["pand\t%xmm5,%xmm1",108],["movdqa\t%xmm5, %xmm1",102],["pandn\t%xmm3, %xmm1",102],["movdqa\t%xmm4, %xmm1",102],["&pxor\t(\"xmm1\",\"xmm1\");",100],["&pxor\t(\"xmm1\",\"xmm1\");",100],["por\t%xmm3,%xmm1",82],["movq\t%xmm1, %rbp",77]]},{"word":"xor","context":[["&xor\t(\"eax\",\"eax\");",493],["xor\t%rcx,%rcx\t\t# arg1, UNW_FLAG_NHANDLER",331],["xor\t%eax,%eax",289],["&xor\t($s2,&DWP(8,$key));",282],["&xor\t($s1,&DWP(4,$key));",282],["&xor\t($s3,&DWP(12,$key));",282],["xor\t%rax,%rax",253],["&xor\t($out,$tmp);",240],["xor\t$rem,$Zhi,$Zhi",183],["&xor\t(\"eax\",\"ebx\");",176]]},{"word":"y","context":[["$y++;",523],["'y' =>",500],["'y',",264],["chomp $verein[$y];",260],["$y = 0;",205],["'EXTRA_LDFLAGS' =>  'ldflags-y',",167],["'EXTRA_CFLAGS' =>   'ccflags-y',",167],["'EXTRA_AFLAGS' =>   'asflags-y',",167],["'EXTRA_CPPFLAGS' => 'cppflags-y',",167],["my $y;",140]]},{"word":"yes","context":[["if (vpx_config(\"CONFIG_VP9_HIGHBITDEPTH\") eq \"yes\") {",317],["if($EMMC_SUPPORT eq \"yes\"){",293],["( New == yes ->",195],["yes.",166],["if ($EMMC_SUPPORT eq \"yes\"){",160],["'yes',",159],["push(@valgrind_args, \"--trace-children=yes\")",149],["if ($value eq \"--gen-suppressions=all --show-reachable=yes\") {",148],["my @default_valgrind_args= (\"--show-reachable=yes\");",141],["mtr_add_arg($args, \"--leak-check=yes\");",141]]},{"word":"you","context":[["# Koha is free software; you can redistribute it and/or modify it under the",4845],["# This program is free software; you can redistribute it and/or modify",3916],["# you may not use this file except in compliance with the License.",2546],["This program is free software; you can redistribute it and/or",2016],["# Koha is free software; you can redistribute it and/or modify it",1914],["As a special exception, if you link this library with other files,",1585],["# This program is free software: you can redistribute it and/or modify",1374],["# This program is free software; you can redistribute it and/or",1251],["# CRYPTOGAMS licenses depending on where you obtain it. For further",1012],["# Meran is free software: you can redistribute it and/or modify",754]]},{"word":"your","context":[["# (at your option) any later version.",6573],["# Foundation; either version 2 of the License, or (at your option) any later",4705],["of the License, or (at your option) any later version.",1905],["#    (at your option) any later version.",921],["# of the License, or (at your option) any later version.",883],["(at your option) any later version.",799],["#  (at your option) any later version.",404],["# by the Free Software Foundation; either version 3, or (at your option) any",382],["#   (at your option) any later version.",335],["# Software Foundation; either version 3, or (at your option) any later",319]]},{"word":"z","context":[["(?:\\s*\\#\\#\\s*[A-Za-z_][A-Za-z\\d_]*)*",281],["[A-Za-z_][A-Za-z\\d_]*",281],["!($line=~/^. [A-Za-z\\d_]+:/) and !($line=~/^.\\s+default:/)) {",281],["if ($line=~/^.\\s+[A-Za-z\\d_]+:(?![0-9]+)/ and",280],["$word =~ tr/[a-z]/[A-Z]/;",193],["#\t\tif (($line=~/[\\w_][a-z\\d]+[A-Z]/) and !($line=~/print/)) {",166],["my $z;",116],["next if -z $expect_file;",114],["$var =~ /[A-Z][a-z]|[a-z][A-Z]/ &&",104],["$var =~ /[A-Z][a-z]|[a-z][A-Z]/ &&",104]]},{"word":"~","context":[["$fixed[$fixlinenr] =~",1382],["$0 =~ m/(.*[\\/\\\\])[^\\/\\\\]+$/; $dir=$1;",908],["my @stmt_lines = ($stmt =~ /\\n/g);",897],["if($text=~/Hail/i){",806],["$name =~ s/^\\\"|\\\"$//g;",697],["$stmt =~ s/\\s*$//;",602],["$stmt =~ s/^\\s*//;",601],["$stmt =~ s/(^|\\n)./$1/g;",598],["$s =~ s/\\n.*//g;",595],["if ($block =~/\\b(?:if|for|while)\\b/) {",589]]}]
