[{"word":"000000e","context":[["0.000000e+00, 0.000000e+00, 0.000000e+00,",21],["0.000000e+00, 0.000000e+00, 0.000000e+00,",21],["0.000000e+00, 0.000000e+00, 0.000000e+00,",21],["0.000000e+00,  0.000000e+00,  0.000000e+00,",21],["0.000000e+00,  0.000000e+00,  0.000000e+00,",21],["0.000000e+00,  0.000000e+00,  0.000000e+00,",21],["1,  1.000000e+00, 0.000000e+00, 0.000000e+00,",14],["1,  1.000000e+00, 0.000000e+00, 0.000000e+00,",14],["1,  1.000000e+00, 0.000000e+00, 0.000000e+00,",14],["8.100000e+04,-0.000000e+00,",12]],"useCount":204},{"word":"0000cf","context":[["code > span.bn { color: #0000cf; }",28],["code > span.dv { color: #0000cf; }",28],["code > span.fl { color: #0000cf; }",28]],"useCount":84},{"word":"10px","context":[["padding: 4px 10px;",25],[", (\"padding\", \"10px 0\")",28],["padding: 10px;",22],["title = Html.span [style [(\"padding-left\", \"10px\"),(\"font-weight\", \"bold\"),(\"font-size\", \"large\")]]",11]],"useCount":86},{"word":"4px","context":[[", Options.span [ css \"width\" \"4px\" ] []",14],["padding: 4px 10px;",25],["border-radius: 4px;",36]],"useCount":75},{"word":"600px","context":[["[ Center.markdown \"600px\" content ]",101],["[ Center.markdown \"600px\" content",19],[", Center.markdown \"600px\" content2",15],["[ Center.markdown \"600px\" content1",15],[", Center.markdown \"600px\" rest",11]],"useCount":161},{"word":"A","context":[["{-| This library fills a bunch of important niches in Elm. A `Maybe` can help",14],["A.fromList[ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],",24],["import Html.Attributes as A",23],["-- A description of the kinds of actions that can be performed on the model of",21],["{-| A decoder that always succeeds. Useful when paired with `andThen` or",18],["import Array as A",20],["{-| A way to turn Json values into Elm values. A `Decoder a` represents a",14],["{-| A way to turn Json values into Elm values. A `Decoder a` represents a",14],["{-| A dictionary mapping unique keys to values. The keys can be any comparable",18],["{-| A decoder that always fails. Useful when paired with `andThen` or `oneOf`",18]],"useCount":330},{"word":"Action","context":[["update : Action -> Model -> ( Model, Effects Action )",54],["update : Action -> Model -> ( Model, Effects Action )",54],["type Action =",63],["init : (Model, Effects Action)",64],["view : Address Action -> Model -> Html",113],["update : Action -> Model -> (Model, Effects Action)",135],["update : Action -> Model -> (Model, Effects Action)",135],["view : Signal.Address Action -> Model -> Html",319],["update : Action -> Model -> Model",335],["type Action",557]],"useCount":2505},{"word":"Add","context":[["Add ->",48],["| Add",37],["insert = button [ onClick address Insert ] [ text \"Add\" ]",13],["= Add",13],["{-| Add an element to the front of a list. Pronounced *cons*.",12]],"useCount":123},{"word":"Address","context":[["send : Address a -> a -> Task x ()",14],["{ actions : Signal.Address Action",15],["viewCounter : Signal.Address Action -> (ID, Counter.Model) -> Html",17],["onEnter : Address a -> a -> Attribute",21],["{ address : Address a",15],["view : Signal.Address Action -> Model -> Html.Html",25],["import Signal exposing (Signal, Address)",58],["view : Address Action -> Model -> Html",113],["import Signal exposing (Address)",141],["view : Signal.Address Action -> Model -> Html",319]],"useCount":785},{"word":"All","context":[["[ Grid.size Grid.All 4",13],["{-| All of the attributes of a line style. This lets you build up a line style",13],["-- All of the following expressions are equivalent:",13],["All ->",14],["All angle conversions result in &ldquo;standard Elm angles&rdquo;",18],[", visibility = \"All\"",22]],"useCount":93},{"word":"Animate","context":[["| Animate Animation.Msg",11],["| Animate Time",22],["Animate time ->",19],["AnimationFrame.times Animate",14],["Animate dt ->",11]],"useCount":77},{"word":"Animation","context":[["import Animation exposing (..)",25],["import Animation",26],[", Animation.curve2To",70],["import Animation exposing (Animation)",11],["Animation.interrupt",16],["Animation.style",13],["| Animate Animation.Msg",11],["import Animation exposing (Animation)",11]],"useCount":183},{"word":"AnimationFrame","context":[["import AnimationFrame",100],[", AnimationFrame.diffs Tick",18],["AnimationFrame.times Animate",14]],"useCount":132},{"word":"App","context":[["import Html.App as Html",255],["import Html.App",171],["App.program",112],["Html.App.program",51],["import Html.App exposing (program)",39],["app : StartApp.App Model",34],["App.beginnerProgram",21],["module App where",22],["import Html.App as App",228],["import Html.App as App",228]],"useCount":1404},{"word":"Apply","context":[["{-| Apply a function on every element with its index as first argument.",12],["{-| Apply a function on every element in an array.",12],["{-| Apply a function to all values in a dictionary. -}",11],["{-| Apply a function to a result. If the result is `Ok`, it will be converted.",11],["{-| Apply a function to every element of a list.",12],["{-| Apply a function to a decoder. You can use this function as `map` if you",12]],"useCount":70},{"word":"Array","context":[["|> Array.fromList",31],["import Array",225],["import Array exposing (Array)",164],["import Array exposing (Array)",164],["|> Array.toList",47],["import Array exposing (..)",31],["Array.fromList",24],["import Array as A",20],["import Native.Array",19],["array : Decoder a -> Decoder (Array a)",19]],"useCount":1167},{"word":"Assertion","context":[["import ElmTest.Assertion exposing (assert, assertEqual)",30],["import ElmTest.Assertion as A",12],["import ElmTest.Assertion (..)",35],["import ElmTest.Assertion exposing (..)",95]],"useCount":172},{"word":"Attr","context":[[", Attr.style",22],["[ Attr.style",28],["import Html.Attributes as Attr exposing (..)",36],["import Html.Attributes as Attr",64]],"useCount":150},{"word":"Attribute","context":[["import Html exposing (Attribute)",46],["countStyle : Attribute",37],["import Html exposing (Html, Attribute)",28],["onEnter : Msg -> Attribute Msg",11],["node : String -> List Attribute -> List Html -> Html",12],["onEnter : Signal.Address a -> a -> Attribute",13],["myStyle : Attribute",20],["onEnter : Address a -> a -> Attribute",21]],"useCount":188},{"word":"Attributes","context":[["import Html.Attributes exposing (class)",92],["import Html.Attributes",105],["import Html.Attributes as Attr",64],["import Html.Attributes as HA",37],["import Html.Attributes as A",23],["import Html.Attributes as Attr exposing (..)",36],["import Html.Attributes exposing (..)",1307],[", Attributes.disabled (status /= Form.Entering)",24],["import Html.Attributes exposing (style)",138],["import Svg.Attributes exposing (..)",83]],"useCount":2130},{"word":"Auction","context":[[", history = [ Auction.Pass, Auction.Bid 1 Nothing ]",43],[", history = [ Auction.Pass, Auction.Bid 2 Nothing ]",18],[", history = [ Auction.Pass, Auction.Bid 2 Nothing ]",18],[", history = [ Auction.Pass, Auction.Bid 1 Nothing ]",43],["import Auction",16],[", expected = [Auction.Bid 4 (Just Card.Clubs)]",14],[", expected = [Auction.Pass]",13]],"useCount":165},{"word":"BBlack","context":[["-- BBlack and NBlack should only be used during the deletion",19],["BBlack ->",19],["| BBlack  -- Double Black, counts as 2 blacks for the invariant",17],["Black  -> BBlack",11],["BBlack -> Black",11],["BBlack -> \"BBlack\"",11],["BBlack -> \"BBlack\"",11]],"useCount":99},{"word":"BLADE_PITCH","context":[["reference, CURR_ROTOR + CURR_BLADE + BLADE_PITCH,",148]],"useCount":148},{"word":"Basics","context":[["Native.Basics.e",11],["import Basics exposing (..)",154],["import Basics (..)",65],["# Basics",57],["import Native.Basics",18],["and [`(|>)`](http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#|>)",12],["import Basics exposing (Never)",12],["Use [`(<|)`](http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#<|)",12],["Native.Basics.and",11],["Native.Basics.max",11]],"useCount":836},{"word":"Bid","context":[[", history = [ Auction.Pass, Auction.Bid 1 Nothing ]",43],[", history = [ Auction.Pass, Auction.Bid 2 Nothing ]",18],[", expected = [Auction.Bid 4 (Just Card.Clubs)]",14]],"useCount":75},{"word":"Black","context":[["(Black, Red, LBlack) ->",17],["Black ->",46],["| Black",23],["RBNode_elm_builtin Black k' v' l' r'",18],["Black",22],["(RBNode Black _ _ _ _) ->",16],["| NBlack  -- Negative Black, counts as -1 blacks for the invariant",17],["(Black, LBlack, Red) ->",17],["| LBBlack -- Double Black, counts as 2",17],["| BBlack  -- Double Black, counts as 2 blacks for the invariant",17]],"useCount":389},{"word":"Blog","context":[["import Blog",153],["Blog.docs",29],["Blog.evan",117],["Blog.blog",121]],"useCount":420},{"word":"Bool","context":[["Bool",29],["not : Bool -> Bool",24],[", editing : Bool",28],["isEven : Int -> Bool",28],["not : Bool -> Bool",24],["| CheckAll Bool",21],[", readonly : Bool",20],["since : Time -> Signal a -> Signal Bool",20],[", disabled : Bool",25],[", completed : Bool",29]],"useCount":1191},{"word":"Boolean","context":[["| Or Boolean Boolean",12],["| And Boolean Boolean",16],["| And Boolean Boolean",16],["| Not Boolean",16],["-- Boolean",14],["| Or Boolean Boolean",12]],"useCount":86},{"word":"Button","context":[["import Material.Button as Button",66],[", Button.ripple",43],["[ Button.icon, Button.ripple ]",16],["[ Button.icon, Button.ripple ]",16],["[ Button.render Mdl",17],["import Material.Button as Button",66],[", Button.colored",42],["[ Button.raised",31],["Button.render Mdl",30],["[ Button.icon",18]],"useCount":384},{"word":"C","context":[["C.claim",87],["`C.for`",87],["import ColorScheme as C",40],["`C.that`",38],["`C.is`",38],["`C.true`",36],["`C.false`",13],["color C.background <|",19],["import Website.ColorScheme as C",23],["import Graphics.Collage as C",28]],"useCount":409},{"word":"CSS","context":[["{-| The `middle` [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) value.",30],["[pseudo-class](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes).",165],["{-| https://developer.mozilla.org/en-US/docs/Web/CSS/length",30],["{-| Sets [`border-block-end`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end)",30],["{-| Sets [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)",30],["{-| Sets [`border-block-start`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start)",30],["[pseudo-element](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements).",25],["[`min-width`]https://developer.mozilla.org/en-US/docs/Web/CSS/min-width#Values),",20],["{-| Sets [`text-shadow`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-shadow).",20],["[`min-height`]https://developer.mozilla.org/en-US/docs/Web/CSS/min-height#Values), and",20]],"useCount":741},{"word":"CURR_BLADE","context":[["reference, CURR_ROTOR + CURR_BLADE + BLADE_PITCH,",148]],"useCount":148},{"word":"CURR_ROTOR","context":[["reference, CURR_ROTOR + CURR_BLADE + BLADE_PITCH,",148]],"useCount":148},{"word":"Card","context":[[", clubs = [ Card.Ten, Card.Nine ]",20],[", clubs = [ Card.Ten, Card.Nine ]",20],["[ Card.title",21],["Card",18],[", Card.actions",18],["import Card",17],["import Material.Card as Card",17],["import Material.Card as Card",17],["hand = Card.fromSuits",23],["Card.view",43]],"useCount":429},{"word":"Center","context":[[", Center.markdown \"600px\" rest",11],[", Center.markdown \"600px\" content2",15],["[ Center.markdown \"600px\" content1",15],["[ Center.markdown \"600px\" content",19],["[ Center.markdown \"600px\" content ]",101],["import Center",187]],"useCount":348},{"word":"Char","context":[["import Char exposing (KeyCode)",22],["type. This includes `Int`, `Float`, `Time`, `Char`, `String`, and tuples or",19],["includes `Int`, `Float`, `Time`, `Char`, `String`, and tuples or lists",12],["fromList : List Char -> String",16],["padRight : Int -> Char -> String -> String",12],["isDigit : Char -> Bool",12],["'a'   : Char",14],["all : (Char -> Bool) -> String -> Bool",12],["import Char",258],["{-| Compare any two comparable values. Comparable values include `String`, `Char`,",18]],"useCount":549},{"word":"Check","context":[["import Check exposing (Claim, claim, true, that, is, for, quickCheck)",11],["| Check Int Bool",18],["Check id isCompleted ->",18],["# Check for Substrings",12],["import Check.Test",12],["Check.claim",23],["`Check.for`",24],["Check out the [learning resources](/Learn.elm) for",13],["import Check.Test exposing (evidenceToTest)",14]],"useCount":145},{"word":"Cmd","context":[[", Cmd.none",715],["update : Msg -> Model -> ( Model, Cmd Msg )",403],["( model, Cmd.none )",338],["update : Msg -> Model -> (Model, Cmd Msg)",267],["(model, Cmd.none)",187],["init : ( Model, Cmd Msg )",154],["Cmd.none",133],["init : (Model, Cmd Msg)",122],[", Cmd.batch",98],["port emit : ( String, Value ) -> Cmd msg",67]],"useCount":3209},{"word":"Collage","context":[["import Graphics.Collage as C",28],["import Native.Graphics.Collage",12],["form <- filled red <| Collage.square 20",14],["import Graphics.Collage as GC",20],["import Graphics.Collage",23],["import Graphics.Collage exposing (..)",236],["import Graphics.Collage as Collage",55],["import Graphics.Collage as Collage",55],["import Collage exposing (..)",52],["import Graphics.Collage (..)",50]],"useCount":556},{"word":"Color","context":[["import Color exposing (..)",296],["import Color",195],[", Color.text Color.accentContrast",19],["{ color : Color",20],["import Color exposing (rgb)",21],["import Material.Color as Color",46],["import Material.Color as Color",46],["import Color exposing (Color)",67],["import Color exposing (Color)",67],["import Color (..)",69]],"useCount":1323},{"word":"ColorScheme","context":[["import open Website.ColorScheme",27],["import Website.ColorScheme as C",23],["import ColorScheme as C",40]],"useCount":90},{"word":"Combine","context":[["import Combine.Char exposing (..)",12],["{-| Combine two lists, combining them with the given function.",13],["{-| Combine two dictionaries. If there is a collision, preference is given",21],["import Combine exposing (..)",22],["# Combine",43]],"useCount":111},{"word":"Common","context":[["# Common Helpers",22],["(Common.Initial Property.Value",36],["(Common.Inherit Property.Value",36],[", other_ val = Common.otherValue val",41],["import Css.Internal.Common as Common",45],["import Css.Internal.Common as Common",45],["(Common.Unset Property.Value",19],["(Common.Unset Property.Value {})))",12],["import Common.Model exposing (Todo)",17]],"useCount":273},{"word":"Compatible","context":[[", fontVariantLigatures = Compatible",32],[", listStyleType = Compatible",32],[", fontVariantNumeric = Compatible",32],[", listStyleTypeOrPositionOrImage = Compatible",34],[", lengthOrNumberOrAutoOrNoneOrContent = Compatible",43],[", color = Compatible",31],[", textDecorationStyle = Compatible",30],[", borderStyle = Compatible",51],[", fontVariant = Compatible",68],[", transform = Compatible",120]],"useCount":1021},{"word":"Component","context":[["{-| Component update.",18],["import Component.Update as Update",16],["import Component.TopBar as TopBar",19],["import Component.Header as Header",23]],"useCount":76},{"word":"Config","context":[["type alias Config m =",16],["type alias Config =",39],["import Config",25],["-> Config never modeltype actiontype viewtype",16],["Options.Property (Config m) m",17],["type alias Config model action =",16],["defaultConfig : Config",14],["start : Config model action -> App model",11],["defaultConfig : Config m",17],["@docs start, Config, App",11]],"useCount":182},{"word":"Content","context":[["|> withHeader \"Content-Type\" \"application/json\"",23],["[(\"Content-Type\", \"application/json\")]",44],["Content \"\" (Selection 0 0 Forward)",12],["Content",13]],"useCount":92},{"word":"Conversions","context":[["# Conversions",40],["# Number Conversions",18],["# Angle Conversions",18],["-- Conversions",18]],"useCount":94},{"word":"Convert","context":[["{-| Convert an association list into a dictionary. -}",18],["{-| Convert radians to standard Elm angles (radians). -}",18],["{-| Convert an integer into a float. -}",18],["{-| Convert turns to standard Elm angles (radians).",18],["{-| Convert degrees to standard Elm angles (radians). -}",18],["{-| Convert a list of characters into a String. Can be useful if you",17],["{-| Convert to a simpler `Maybe` if the actual error message is not needed or",11],["{-| Convert anything to its textual representation and make it displayable in",11],["{-| Convert a string to a list of characters.",12],["{-| Convert a dictionary into an association list of key-value pairs. -}",14]],"useCount":188},{"word":"Core","context":[["import Diagrams.Core exposing (..)",21],["import OpenSolid.Core.Types exposing (..)",77],["# Core functions",20],["import OpenSolid.Core.Fuzz as Fuzz",20],["import OpenSolid.Core.Expect as Expect",20],["import OpenSolid.Core.Encode as Encode",31],[", Core.fromTime aTestTime5",29],["import OpenSolid.Core.Decode as Decode",31],[", Core.fromTime aTestTime6",16],["import Date.Extra.Core as Core",14]],"useCount":315},{"word":"Counter","context":[["| Modify ID Counter.Action",20],["{ counters : List ( ID, Counter.Model )",23],["import Counter",57],[", bottomCounter = Counter.init bottom",18],["viewCounter : Signal.Address Action -> (ID, Counter.Model) -> Html",17],["then (counterID, Counter.update counterAction counterModel)",16],["{ topCounter = Counter.init top",15],["| Top Counter.Action",15],[", bottomCounter : Counter.Model",15],["| Bottom Counter.Action",15]],"useCount":262},{"word":"Create","context":[["{-| Create a textured shape. The texture is described by some url and is",13],["{-| Create two new sets; the first consisting of elements which satisfy a",15],["{-| Create a [constant function](http://en.wikipedia.org/wiki/Constant_function),",17],["{-| Create an empty dictionary. -}",18],["{-| Create a dictionary with one key-value pair. -}",18],["# Create",36],["{-| Create a filled in shape. -}",13],["{-| Create a dotted line style with a given color. Dashing equals `[3,3]`. -}",13],["{-| Create a sprite from a sprite sheet. It cuts out a rectangle",13],["{-| Create a path along a given line segment. -}",13]],"useCount":361},{"word":"Css","context":[["import Css exposing (..)",71],["import Css.TestUtils exposing (it)",11],["import Css.Internal.Utils as Utils",12],["import Css.Helpers exposing (toCssIdentifier, identifierToString)",12],["import Css.Internal.Geometry.Linear as Linear",16],["import Css.File exposing (..)",16],["import Css.Elements exposing (..)",33],["import Css.Namespace exposing (namespace)",35],["import Css.Internal.Common as Common",45],["import Css.Internal.Property as Property",57]],"useCount":319},{"word":"Date","context":[["import Date.Extra.Core as Core",14],["import Date.Format",16],["import Date exposing (..)",32],["import Date",102],["import Date exposing (Date)",107],["import Date exposing (Date)",107],["dateToString : Date -> String",11]],"useCount":389},{"word":"Debug","context":[["import Debug exposing (..)",61],["import Debug exposing (log)",77],["import Native.Debug",30],["Debug.crash \"impossible\"",27],["Native.Debug.crash <|",17],["Debug.crash \"not yet implemented\"",14],["Debug.crash \"TODO\"",12],["import Debug",448]],"useCount":686},{"word":"Decode","context":[["import Json.Decode exposing (..)",75],["import Json.Decode as Json",309],["import Json.Decode as Json exposing ((:=))",106],["import Json.Decode exposing ((:=))",96],["import Json.Decode",95],["import Json.Decode as Decode",86],["import Json.Decode as Decode",86],["import Json.Decode as Decode exposing ((:=))",45],["import Json.Decode as JD exposing ((:=))",50],["import Json.Decode as JD",55]],"useCount":1556},{"word":"Decoder","context":[["point : Decoder (Float,Float)",66],["string : Decoder String",20],["bool : Decoder Bool",20],["value : Decoder Value",22],["numbers : Decoder [Int]",23],["import Json.Decode exposing (Decoder, (:=))",26],["point3D : Decoder (Float,Float,Float)",36],["import Json.Decode exposing (Decoder)",36],["nullOr : Decoder a -> Decoder (Maybe a)",38],["nullOr : Decoder a -> Decoder (Maybe a)",38]],"useCount":1947},{"word":"Decrement","context":[["[ button [ onClick Decrement ] [ text \"-\" ]",23],["type Msg = Increment | Decrement",11],["type Action = Increment | Decrement",42],["Decrement ->",61],["Decrement -> model - 1",38],["| Decrement",38],["[ button [ onClick address Decrement ] [ text \"-\" ]",38]],"useCount":251},{"word":"Demo","context":[["import Demo.Page as Page",40],["import Demo.Code as Code",32]],"useCount":72},{"word":"Determine","context":[["{-| Determine if a key is in a dictionary. -}",18],["{-| Determine if a set is empty.",12],["{-| Determine if a list is empty.",12],["{-| Determine the length of a list.",12],["{-| Determine if a dictionary is empty.",15],["{-| Determine if all elements satisfy the predicate.",13],["{-| Determine if any elements satisfy the predicate.",13],["{-| Determine if a string is empty.",11],["{-| Determine whether *any* characters satisfy a predicate.",11],["{-| Determine the number of elements in a set.",11]],"useCount":161},{"word":"Diagrams","context":[["import Diagrams.Type exposing (..)",12],["import Diagrams.Geom exposing (..)",21],["import Diagrams.Core exposing (..)",21],["import Diagrams.FillStroke exposing (..)",17],["import Diagrams.Align exposing (..)",13]],"useCount":84},{"word":"Dict","context":[["|> Dict.fromList",45],["|> Dict.toList",29],["|> Dict.values",21],["import Dict",533],["import Dict exposing (Dict)",420],["Dict.empty",48],["import Dict exposing (Dict)",420],["import Dict exposing (..)",96],["Dict.fromList",63],["import Dict as D",50]],"useCount":2806},{"word":"EQ","context":[["EQ ->",39],["EQ -> EQ",21],["EQ -> EQ",21],["type Order = LT | EQ | GT",17],["EQ",15]],"useCount":113},{"word":"Effects","context":[["( model, Effects.none )",86],[", Effects.none",318],["init : (Model, Effects Action)",64],["update : Action -> Model -> (Model, Effects Action)",135],["(model, Effects.none)",90],["import Effects exposing (Effects, Never)",108],["import Effects exposing (Effects, Never)",108],["import Effects exposing (Effects)",157],["import Effects exposing (Effects)",157],["|> Effects.task",245]],"useCount":1963},{"word":"Element","context":[["import Graphics.Element exposing (..)",498],["import Graphics.Element (..)",194],["main : Element",179],["main : Signal Element",511],["import Graphics.Element (Element)",36],["import Graphics.Element exposing (Element)",134],["import Graphics.Element exposing (Element)",134],["import Graphics.Element exposing (show)",81],["import Graphics.Element (Element)",36],["import ElmTest.Runner.Element exposing (runDisplay)",36]],"useCount":2490},{"word":"Elm","context":[["All angle conversions result in &ldquo;standard Elm angles&rdquo;",18],["\"language\": \"Elm\",",30],[", span [ class \"tagline\" ] [ text \"Like GitHub, but for Elm things.\" ]",21],["This clean division of concerns is a core part of Elm. You can read more about",19],["{-| Convert radians to standard Elm angles (radians). -}",18],["{-| Convert degrees to standard Elm angles (radians). -}",18],["* [Sublime Text](https://github.com/deadfoxygrandpa/Elm.tmLanguage)",14],["{-| TodoMVC implemented in Elm, using plain HTML and CSS for rendering.",16],["{-| A way to turn Json values into Elm values. A `Decoder a` represents a",14],["{-| Convert turns to standard Elm angles (radians).",18]],"useCount":380},{"word":"ElmTest","context":[["import ElmTest.Test exposing (test, Test, suite)",31],["import ElmTest",22],["import ElmTest.Assertion exposing (assert, assertEqual)",30],["import ElmTest exposing (..)",246],["import ElmTest.Assertion (..)",35],["import ElmTest.Runner.Element exposing (runDisplay)",36],["import ElmTest.Test exposing (suite, test)",39],["import ElmTest.Test (..)",40],["import ElmTest.Test exposing (..)",76],["import ElmTest.Assertion exposing (..)",95]],"useCount":731},{"word":"Empty","context":[["Empty -> Empty",12],["Empty -> Empty",12],["| Empty",13],["Empty -> 0",14],["Empty",24],["= Empty",30],["type List = Empty | Node Int List",12],["Empty ->",44]],"useCount":161},{"word":"Encode","context":[["import Json.Encode exposing (Value)",107],["import Json.Encode as JE",104],["Encode.object",88],["import Json.Encode as Json",57],["import Json.Encode",115],["import Json.Encode as Encode",127],["import Json.Encode as Encode",127],["import OpenSolid.Core.Encode as Encode",31],["import OpenSolid.Core.Encode as Encode",31],["Json.Encode.object",53]],"useCount":1028},{"word":"Equal","context":[[", favorability = Vulnerability.Equal",150]],"useCount":150},{"word":"Err","context":[["Err errs ->",22],["Err msg -> Err msg",23],["Err msg -> Err msg",23],["if code == 13 then Ok () else Err \"not the right key code\"",27],["Err e ->",45],["Err _ ->",138],["Err error ->",97],["Err err ->",88],["Err msg ->",75],["Err _ -> Nothing",29]],"useCount":769},{"word":"Error","context":[["-> Task Error Subscription",12],["hats : Task Error (List String)",12],["type alias Error =",14],["= TexturesError Error",11],["promoteError : RawError -> Error",11],["Error",12],["promoteHttpError : Http.RawError -> Http.Error",15],["type Error",22],["| FetchFail Http.Error",35],["| Error String",26]],"useCount":170},{"word":"Event","context":[["type Event",20],["|> Event.click",22],[", Event.send <|",12],["[ Event.remove",17],["type alias Event =",16]],"useCount":87},{"word":"Events","context":[["# Events",22],["import Html.Events exposing (onClick)",353],["import Html.Events",66],["import Html.Events as Events",56],["import Html.Events as Events",56],["import Html.Events exposing (onClick, onInput)",38],["import Html.Events exposing (onInput)",36],["import Html.Events     exposing (..)",27],["import Html.Events exposing (on, targetValue)",25],["import Html.Events exposing (..)",741]],"useCount":1552},{"word":"Expect","context":[["import Expect",214],["Expect.equal",149],["import Expect exposing (..)",40],["|> Expect.equal (outdented output)",39],["Expect.pass",31],["import Expect exposing (Expectation)",23],["import OpenSolid.Core.Expect as Expect",20],["import OpenSolid.Core.Expect as Expect",20],["Expect.fail \"Nothing found\"",17],["Expect.equal []",16]],"useCount":636},{"word":"Extra","context":[["import Json.Decode.Extra exposing ((|:))",24],["import Date.Extra.Core as Core",14],["import List.Extra",31],["import Keyboard.Extra as Keyboard",14],["import Cmd.Extra exposing (mkCmd)",12],["import Html.Events.Extra exposing (onKeys)",11],["import List.Extra as LE",11]],"useCount":117},{"word":"Extract","context":[["{-| Extract a boolean.",18],["{-| Extract a string.",18],["{-| Extract an Array from a JS array.",18],["{-| Extract a List from a JS array.",14],["{-| Extract a Maybe value, wrapping successes with `Just` and turning any",14],["{-| Extract a float.",18],["{-| Extract an integer.",18]],"useCount":118},{"word":"False","context":[[", bold = False",27],["False",463],["_ -> False",152],["False ->",123],["Nothing -> False",108],[", editing = False",34],[", completed = False",33],[", italic = False",32],["( True, False ) ->",31],["( False, True ) ->",30]],"useCount":1666},{"word":"FetchFail","context":[["Task.perform FetchFail FetchSucceed (Http.get decodeGifUrl url)",11],["| FetchFail Http.Error",35],["FetchFail _ ->",16],["FetchFail ->",13],["| FetchFail",13]],"useCount":88},{"word":"Field","context":[["import Chess.Field (..)",15],["import Graphics.Input.Field as Field",53],["import Graphics.Input.Field as Field",53]],"useCount":121},{"word":"Find","context":[["{-| Find the minimum element in a non-empty list.",12],["{-| Find the maximum element in a non-empty list.",12],["{-| Find the larger of two comparables. -}",17],["{-| Find the remainder after dividing one number by another.",17],["{-| Find the smaller of two comparables. -}",17]],"useCount":75},{"word":"Flags","context":[["type alias Flags =",47],["main : Program Flags",15],["init : Flags -> ( Model, Cmd Msg )",15]],"useCount":77},{"word":"Float","context":[["= Rectangle Float Float",30],["= Rectangle Float Float",30],["| Circle Float",30],["point3D : Decoder (Float,Float,Float)",36],["point3D : Decoder (Float,Float,Float)",36],["point : Decoder (Float,Float)",66],["point : Decoder (Float,Float)",66],["point3D : Decoder (Float,Float,Float)",36],[", y : Float",90],["{ x : Float",67]],"useCount":2709},{"word":"Focus","context":[["import Focus exposing ((=>))",17],["import Focus exposing (Focus, (=>))",17],["import Focus exposing (Focus, (=>))",17],["|> Focus.set micro_mode_",11],["import Focus",14],["x : Focus { record | x:a } a",16]],"useCount":92},{"word":"Footer","context":[[", Footer.socialButton [Options.css \"margin-right\" \"6px\"] []",16],["import Footer",17],[", Footer.links []",18],["[ Footer.linkItem [ Footer.href \"#footers\" ] [ Footer.html <| text \"Link 1\"]",12],[", Footer.linkItem [ Footer.href \"#footers\" ] [ Footer.html <| text \"Link 2\"]",12],[", Footer.footer",14],[", Footer.dropdown []",13],["[ Footer.linkItem [ Footer.href \"#footers\" ] [ Footer.html <| text \"Link 1\"]",12],[", Footer.linkItem [ Footer.href \"#footers\" ] [ Footer.html <| text \"Link 2\"]",12],[", Footer.linkItem [ Footer.href \"#footers\" ] [ Footer.html <| text \"Link 2\"]",12]],"useCount":150},{"word":"For","context":[["{-| Function composition, passing results along in the suggested direction. For",34],["Notice that NaN is not infinite! For float `n` to be finite implies that",18],["`oneOf` but everything is supposed to work out at the end. For example,",18],["For more explanation of Elm&rsquo;s record system, see [this overview][exp],",13],["want. For example, to make a thicker line, you could say:",13],["This means we only continue with the callback if things are going well. For",20],["to improve error messages when things go wrong. For example, the following",18],["For `td` and `th`.",18],["handy more often than you might expect. For example, creating a zeroed out list",18],["formatted data. For example, this lets you create a parser for \"variadic\" lists",18]],"useCount":210},{"word":"Foreign","context":[["import Foreign.Pattern.Get as Get",12],["import Foreign.Types exposing (JSRaw)",28],["import Foreign.Marshall exposing (unsafeRequire)",15],["import Foreign.Pattern.Method as Method",15],["import Foreign.Pattern.Member as Member",11]],"useCount":81},{"word":"Form","context":[["import Form exposing (Form)",15],[", Attributes.disabled (status /= Form.Entering)",24],["toForm : Element -> Form",22],["scale : Float -> Form -> Form",22],["scale : Float -> Form -> Form",22],["rotate : Float -> Form -> Form",22],["rotate : Float -> Form -> Form",22],["import Form",17],["move : (Float,Float) -> Form -> Form",13],["import Form exposing (Form)",15]],"useCount":508},{"word":"Functions","context":[["# Functions",64],["### Functions",17],["### Applying Functions",14],["- [Applying Functions](#applying-functions)",14],["- [Functions](#functions)",13],["# Higher-Order Functions",12]],"useCount":134},{"word":"Fuzz","context":[["import Fuzz exposing (Fuzzer)",17],["import Fuzz exposing (..)",17],["import OpenSolid.Core.Fuzz as Fuzz",20],["import OpenSolid.Core.Fuzz as Fuzz",20]],"useCount":74},{"word":"GET","context":[["\"GET\"",35],["{ verb = \"GET\"",50]],"useCount":85},{"word":"GT","context":[["GT ->",39],["GT",31],["LT -> GT",22],["GT -> LT",22],["type Order = LT | EQ | GT",17]],"useCount":131},{"word":"Game","context":[["update : Input -> Game -> Game",11],["update : Input -> Game -> Game",11],["import Game",14],["import MassiveDecks.Models.Game as Game",14],["import MassiveDecks.Models.Game as Game",14],["stepGame : Input -> Game -> Game",16],["stepGame : Input -> Game -> Game",16],["gameState : Signal Game",25],["defaultGame : Game",28],["type alias Game =",41]],"useCount":201},{"word":"Generator","context":[["list : Int -> Generator a -> Generator (List a)",12],["list : Int -> Generator a -> Generator (List a)",12],["intPairs : Generator (List (Int, Int))",12],["floatList : Generator (List Float)",12],["bool : Generator Bool",15],["pair : Generator a -> Generator b -> Generator (a,b)",17],["pair : Generator a -> Generator b -> Generator (a,b)",17],["pair : Generator a -> Generator b -> Generator (a,b)",17],["Generator <| \\seed0 ->",27],["Generator <| \\seed ->",38]],"useCount":272},{"word":"Get","context":[["import Foreign.Pattern.Get as Get",12],["{-| Get rid of whitespace on the left of a string.",13],["{-| Get the difference between the first set and the second. Keeps values",15],["# Get and Set",17],["{-| Get the value associated with a key. If the key is not found, return",20],["import Foreign.Pattern.Get as Get",12],["{-| Get the length of a string.",12],["{-| Get the sum of the list elements.",12],["# Get Substrings",12],["{-| Get a sub-section of an array: `(slice start end array)`. The `start` is a",12]],"useCount":228},{"word":"Graphics","context":[["import Graphics.Element (Element)",36],["import Graphics.Collage (..)",50],["import Graphics.Input.Field as Field",53],["import Graphics.Element exposing (..)",498],["import Graphics.Collage exposing (..)",236],["import Graphics.Element (..)",194],["import Graphics.Element exposing (Element)",134],["import Graphics.Collage as Collage",55],["import Graphics.Input as Input",111],["import Graphics.Element exposing (show)",81]],"useCount":1780},{"word":"Grid","context":[["import Material.Grid as Grid",21],["[ Grid.size Grid.All 4",13],["import Material.Grid as Grid",21],["[ Grid.grid",11],["import Material.Grid exposing (grid, size, cell, Device(..))",13],["Grid.cell",13],["[ Grid.size Grid.All 4",13],[", Grid.cell",22],["[ Grid.cell",13]],"useCount":140},{"word":"HTML","context":[["{-| TodoMVC implemented in Elm, using plain HTML and CSS for rendering.",16],["would be in JavaScript, not `class` as it would appear in HTML.",12],["attribute can be used in HTML, but there is no corresponding property!",12],["3. View   - a way to visualize our application state with HTML",19],["be in HTML, not `className` as it would appear in JS.",12],["1. Attributes &mdash; You can set things in HTML itself. So the `class`",12]],"useCount":83},{"word":"Header","context":[["{ header : Header.Model",13],["import Component.Header as Header",23],["import Component.Header as Header",23],["import Header",23]],"useCount":82},{"word":"Helpers","context":[["import Material.Helpers as Helpers",12],["import Css.Helpers exposing (toCssIdentifier, identifierToString)",12],["import Helpers",30],["# Common Helpers",22],["-- Helpers",19],["# Higher-Order Helpers",18],["-- Function Helpers",18],["import Ui.Helpers.Emitter as Emitter",16],["# Helpers",15],["import Helpers exposing (..)",14]],"useCount":210},{"word":"Html","context":[["main : Signal Html",261],["import Html.App as Html",255],["import Html.Attributes exposing (..)",1307],["view : Model -> Html Msg",744],["import Html.Events exposing (..)",741],["import Html.Events exposing (onClick)",353],["view : Signal.Address Action -> Model -> Html",319],["import Html exposing (Html)",313],["import Html exposing (..)",1855],["import Html exposing (Html)",313]],"useCount":11484},{"word":"Http","context":[["import Http",535],["Http.send Http.defaultSettings",24],["Http.send Http.defaultSettings",24],["| FetchFail Http.Error",35],["import Http exposing (..)",37],["Http.empty",38],[", body = Http.empty",48],["Http.fromJson",48],["(Http.send Http.defaultSettings request)",55],["(Http.send Http.defaultSettings request)",55]],"useCount":1189},{"word":"I","context":[["I.tuple3 (testHashDictInvestigator, TU.personInvestigator, I.int)",11],["I.tuple3 (testHashDictInvestigator, TU.personInvestigator, I.int)",11],["readable versions I have come up have the following length",12],["I.tuple (testHashDictInvestigator, testHashDictInvestigator)",12],["(in quadrants I and IV). You probably want to use `atan2` instead.",18],["that has never helped me remember which one I should be writing.",11]],"useCount":75},{"word":"ID","context":[["| Remove ID",17],["type alias ID = Int",64],[", nextID : ID",39],["{ counters : List ( ID, Counter.Model )",23],["| Modify ID Counter.Action",20],["type alias ID =",15],["viewCounter : Signal.Address Action -> (ID, Counter.Model) -> Html",17]],"useCount":195},{"word":"IO","context":[["import IO.IO exposing (..)",18],["console : IO ()",24],["import IO.IO exposing (..)",18],["import IO.Runner as Run",16],["import IO.Runner exposing (Request, Response)",11]],"useCount":87},{"word":"Icon","context":[[", Icon.view \"info\" [ Color.text Color.primary ]",12],["import Material.Icon as Icon",51],["import Material.Icon as Icon",51]],"useCount":114},{"word":"If","context":[["{-| Using a certain decoder, attempt to parse a JSON string. If the decoder",12],["If this is annoying, please file an issue, so adding support for \"auto\"",12],["failure in `Nothing`. If you are expecting that a field can sometimes be `null`,",14],["If one list is longer, the extra elements are dropped.",15],["{-| Remove a value from a set. If the value is not found, no changes are made.",15],["{- The actual pattern match here is somewhat lax. If it is given invalid input,",16],["{-| Get the value associated with a key. If the key is not found, return",20],["v. 2.0. If a copy of the MPL was not distributed with this file, you can",77],["{-| Combine two dictionaries. If there is a collision, preference is given",21],["{-| Remove a key-value pair from a dictionary. If the key is not found,",21]],"useCount":338},{"word":"Increment","context":[[", button [ onClick Increment ] [ text \"+\" ]",24],["Increment ->",67],["type Action = Increment | Decrement",42],[", button [ onClick address Increment ] [ text \"+\" ]",42],["Increment -> model + 1",38],["= Increment",24],["| Increment",16],["type Msg = Increment | Decrement",11]],"useCount":264},{"word":"Input","context":[["= Input String",16],["import Graphics.Input.Field as Field",53],["import Graphics.Input as Input",111],["import Graphics.Input exposing (..)",19],["import Native.Graphics.Input",18],["Graphics.Input.hoverable",16],["input : Signal Input",45],["type alias Input =",32],["import Graphics.Input",26],["import Graphics.Input as Input",111]],"useCount":539},{"word":"Insert","context":[["type Flag = Insert | Remove | Same",17],["{-| Insert a value into a set.",11],["insert = button [ onClick address Insert ] [ text \"Add\" ]",13],["Insert -> \"Insert\"",11],["Insert -> \"Insert\"",11],["Insert, remove, and query operations all take *O(log n)* time. Dictionary",13],["Insert ->",65],["= Insert",35],["{-| Insert a key-value pair into a dictionary. Replaces value when there is",21]],"useCount":197},{"word":"Int","context":[["init : Int -> Model",43],["type alias ID = Int",64],["{ id : Int",97],["Int",171],["type alias Model = Int",63],[", height : Int",55],[", id : Int",46],[", y : Int",45],["{ x : Int",42],[", score : Int",39]],"useCount":3268},{"word":"Internal","context":[["[ \"Internal red-black tree invariant violated, expected \"",19],["Internal.Fuzzer",20],["{- Internal modules -}",14],["{ class = Internal.colOffset \"xs\" xs xsOffset",16],["import Css.Internal.Geometry.Linear as Linear",16],["import Material.Options.Internal as Internal",12],["import Css.Internal.Property as Property",57],["import Css.Internal.Common as Common",45],["import Material.Options.Internal as Internal",12],["++ ' ' `String.cons` Internal.colOffset \"sm\" sm smOffset",12]],"useCount":246},{"word":"It","context":[["{-| Just put plain text in the DOM. It will escape the string so that it appears",14],["Notice that `log` is not a pure function! It should *only* be used for",11],["These are identical to the *grey* versions. It seems the spelling is regional, but",11],["It totally ignores the second argument, so `always 42` is a function that always",18],["{-| This library is for investigating bugs or performance problems. It should",11],["`App`. It should pretty much always look like this:",11],["{-| Create a sprite from a sprite sheet. It cuts out a rectangle",13],["It is defined as",14],["It is defined as:",18],["{-| You probably do not want to use this. It takes `(y/x)` as the",18]],"useCount":205},{"word":"JD","context":[["import Json.Decode as JD",55],["import Json.Decode as JD exposing ((:=))",50],["[ JD.map Just decoder",11],["withDefault : a -> JD.Decoder a -> JD.Decoder a",11],["withDefault : a -> JD.Decoder a -> JD.Decoder a",11],[", JD.succeed default",11],[", JD.succeed Nothing",11],["JD.map",12],["JD.oneOf",32]],"useCount":204},{"word":"JE","context":[["JE.object",41],["JE.object <| List.filterMap identity <|",44],["import Json.Encode as JE",104]],"useCount":189},{"word":"JS","context":[["titles : Signal JS.JSString",11],["title : Signal JS.JSString",30],["From JS, you talk to these ports like this:",11],["import JavaScript as JS",55],["be in HTML, not `className` as it would appear in JS.",12],["2. Properties &mdash; You can also set things in JS. So the `className`",12],["{-| Use three different decoders on a JS value. This is nice for extracting",14],["{-| Extract an Array from a JS array.",18],["{-| Use two different decoders on a JS value. This is nice for extracting",22],["{-| Extract a List from a JS array.",14]],"useCount":199},{"word":"JSON","context":[["This is useful for holding JSON or other",14],["{-| Bring in an arbitrary JSON value. Useful if you need to work with crazily",18],["{-| Represents a way of decoding JSON values. If you have a `(Decoder (List String))`",12],["{-| Using a certain decoder, attempt to parse a JSON string. If the decoder",12],["it will attempt to take some JSON value and turn it into a list of strings.",12],["errors from ill-formed JSON.",11],["claim \"JSON conversion round-trips properly\"",11]],"useCount":90},{"word":"JavaScript","context":[["import JavaScript as JS",55],["{-| Represents a JavaScript value.",14],["### JavaScript FFI",11],["- [JavaScript FFI](#javascript-ffi)",11],["get values from JavaScript, they will come in through a port as a signal which",11],["would be in JavaScript, not `class` as it would appear in HTML.",12]],"useCount":114},{"word":"Json","context":[["import Json.Decode as Json",309],["import Json.Encode as Encode",127],["import Json.Encode",115],["import Json.Encode exposing (Value)",107],["import Json.Decode as Json exposing ((:=))",106],["import Json.Decode as Json exposing ((:=))",106],["import Json.Decode",95],["import Json.Decode exposing ((:=))",96],["import Json.Encode as JE",104],["import Json.Decode as Json",309]],"useCount":3377},{"word":"Just","context":[["Just _ ->",117],["Just",129],["Just x ->",88],["Just c ->",60],["Just id ->",51],["Just x -> x",42],[", caption = Just \"\"",41],[", map Just decoder",38],["|> Just",61],["Just v ->",31]],"useCount":1879},{"word":"Keep","context":[["{-| Keep only the characters that satisfy the predicate.",11],["{-| Keep a key-value pair when its key appears in the second dictionary.",20],["{-| Keep a key-value pair when its key does not appear in the second dictionary.",19],["{-| Keep a key-value pair when it satisfies a predicate. -}",17],["{-| Keep only elements that satisfy the predicate.",13],["{-| Get the union of two sets. Keep all values.",11],["{-| Keep only elements that satisfy the predicate:",13]],"useCount":104},{"word":"KeyCode","context":[["type alias KeyCode = Int",15],["import Char exposing (KeyCode)",22],["import Keyboard exposing (KeyCode)",33]],"useCount":70},{"word":"Keyboard","context":[["import Keyboard",292],["import Keyboard exposing (KeyCode)",33],["Keyboard.space",19],["import Keyboard.Extra as Keyboard",14],["import Keyboard.Extra as Keyboard",14],["(Signal.map .y Keyboard.wasd)",13],["(Signal.map .y Keyboard.arrows)",14]],"useCount":399},{"word":"L","context":[["import List as L               -- L.map, L.foldl",12],["import List as L               -- L.map, L.foldl",12],["import List as L               -- L.map, L.foldl",12],["'L' totalWidth",16],["import List as L",89]],"useCount":141},{"word":"LBlack","context":[["reportRemBug \"Black/LBlack/Red\" c (showLColor cl) (showNColor cr)",11],["RBEmpty_elm_builtin LBlack",38],["LBlack  -> \"LBlack\"",11],["LBlack  -> \"LBlack\"",11],["RBEmpty_elm_builtin LBlack ->",13],["RBEmpty LBlack -> acc",16],["(Black, Red, LBlack) ->",17],["(Black, LBlack, Red) ->",17],["= LBlack",19],["RBEmpty LBlack ->",35]],"useCount":199},{"word":"LT","context":[["type Order = LT | EQ | GT",17],["GT -> LT",22],["LT -> GT",22],["LT",24],["LT ->",38]],"useCount":123},{"word":"Layout","context":[[", Layout.onSelectTab SelectTab",11],["import Material.Layout as Layout",37],[", Layout.spacer",14],[", Layout.link",13],["import Material.Layout as Layout",37],["Layout.render Mdl",15],["[ Layout.fixedHeader",12],["# Layout",11]],"useCount":150},{"word":"Lazy","context":[["import Html.Lazy as Lazy",14],["import Html.Lazy as Lazy",14],["lazySum : Lazy Int",12],["Html.Lazy.lazy render model",15],["import Html.Lazy exposing (lazy, lazy2, lazy3)",18],["import Html.Lazy exposing (..)",26],["import Html.Lazy",45]],"useCount":144},{"word":"LineStyle","context":[["solid : Color -> LineStyle",13],["= Line LineStyle",12],["dotted : Color -> LineStyle",13],["defaultLine : LineStyle",13],["type alias LineStyle =",13],["traced : LineStyle -> Path -> Form",13],["outlined : LineStyle -> Shape -> Form",13],["dashed : Color -> LineStyle",13],["@docs solid, dashed, dotted, LineStyle, LineCap, LineJoin, defaultLine",13]],"useCount":116},{"word":"List","context":[["import List",683],["import List exposing (..)",209],["import List as L",89],["List.map",207],["|> List.head",115],["import List exposing (map)",63],["|> List.concat",82],["|> List.reverse",70],["List.foldl",64],["import List exposing ((::))",64]],"useCount":4897},{"word":"Lists","context":[["# Lists",49],["[ Lists.li []",38],[", Lists.li []",76],[", Lists.content2 []",39],["# Taking Lists Apart",14],["# Strings and Lists",17],["### Lists",22],["Lists.ul []",27],["Lists.ul [ css \"margin\" \"0\", css \"padding\" \"0\" ]",30],["[ Lists.content []",97]],"useCount":485},{"word":"Location","context":[["import Route exposing (Location(..))",17],["-> Location",16],["type alias Location =",20],["import Navigation exposing (Location)",20]],"useCount":73},{"word":"MODEL","context":[["-- MODEL --",11],["---- MODEL ----",25],["-- MODEL",809]],"useCount":845},{"word":"MPL","context":[["v. 2.0. If a copy of the MPL was not distributed with this file, you can",77]],"useCount":77},{"word":"Main","context":[["{-| Main entry point.",20],["module Main (main) where",25],["-- Main",26],["--Main",53],["module Main exposing (main)",54],["module Main (..) where",78],["port module Main exposing (..)",102],["module Main where",178],["module Main exposing (..)",324]],"useCount":860},{"word":"Markdown","context":[["import Utils.Markdown as Markdown",14],["[ Markdown.toHtml",12],["rest = Markdown.toElement \"\"\"",12],["import Utils.Markdown as Markdown",14],["pageTitle = Markdown.toElement \"\"\"",19],["content = Markdown.toElement \"\"\"",27],["intro = Markdown.toElement \"\"\"",61],["import Markdown",278]],"useCount":437},{"word":"Material","context":[["| Mdl (Material.Msg Msg)",41],["{ mdl : Material.Model",45],["import Material.Color as Color",46],["import Material.Icon as Icon",51],["import Material.Button as Button",66],["import Material",112],["{ mdl = Material.model",40],["import Material.Layout as Layout",37],["Material.update action' model",35],["import Material.Textfield as Textfield",33]],"useCount":892},{"word":"Math","context":[["import Math.Vector3 exposing (Vec3, vec3)",11],["import Math.Vector2 as V2 exposing (Vec2, vec2)",11],["import Math.Vector2 exposing (..)",19],["import Math.Matrix4 (..)",24],["import Math.Vector3 as V3",32],["import Math.Vector2 exposing (Vec2)",52],["import Math.Matrix4 exposing (..)",57],["import Math.Vector3 exposing (..)",78],["import Math.Vector3 (..)",24]],"useCount":308},{"word":"Matrix","context":[["import Matrix exposing (Matrix)",15],["( case Matrix.get col row newModel.cells of",12],["import Matrix exposing (Matrix)",15],["import Matrix",22],["case Matrix.get col row model.cells of",12]],"useCount":76},{"word":"Matrix4","context":[["import Math.Matrix4 (..)",24],["import Math.Matrix4 exposing (..)",57]],"useCount":81},{"word":"Maybe","context":[["import Maybe exposing (withDefault)",65],["import Maybe",291],["nullOr : Decoder a -> Decoder (Maybe a)",38],["|> Maybe.withDefault 0",41],["import Maybe exposing (..)",97],["import Maybe exposing (Maybe)",47],["|> Maybe.withDefault []",49],["|> Maybe.withDefault \"\"",66],["import Maybe exposing (Maybe)",47],["Maybe.map",40]],"useCount":1763},{"word":"Mdl","context":[["Button.render Mdl",30],["Layout.render Mdl",15],[", Button.render Mdl",12],["= Mdl (Material.Msg Msg)",26],["type alias Mdl =",21],["Mdl msg' ->",18],["[ Button.render Mdl",17],["Mdl action' ->",35],["| Mdl (Material.Msg Msg)",41],["Textfield.render Mdl",17]],"useCount":243},{"word":"Menu","context":[["{ mainMenu    : Utils.Menu",20],["[ Menu.item",20],["import Material.Menu as Menu",12],["import Material.Menu as Menu",12],[", Menu.item",53]],"useCount":117},{"word":"Message","context":[["send : Channel a -> a -> Message",11],["update : Message -> Model -> (Model, Cmd Message)",22],["subscriptions : Model -> Sub Message",18],["update : Message -> Model -> (Model, Cmd Message)",22],["import Models.Message exposing (Message(..))",11],["type alias Message =",18],["type Message",17],["view : Model -> Html Message",14],["import Models.Message exposing (Message(..))",11]],"useCount":144},{"word":"Messages","context":[["import Messages exposing (..)",27],["import Messages exposing (Msg(..))",31],["import Messages exposing (Msg)",21],["module Messages exposing (..)",16]],"useCount":95},{"word":"Model","context":[["update : Msg -> Model -> (Model, Cmd Msg)",267],["update : Msg -> Model -> ( Model, Cmd Msg )",403],["update : Msg -> Model -> ( Model, Cmd Msg )",403],["subscriptions : Model -> Sub Msg",363],["view : Signal.Address Action -> Model -> Html",319],["update : Msg -> Model -> (Model, Cmd Msg)",267],["update : Action -> Model -> Model",335],["update : Action -> Model -> Model",335],["type alias Model =",1589],["view : Model -> Html Msg",744]],"useCount":9535},{"word":"Models","context":[["import MassiveDecks.Models.Card as Card",13],["import Models.Route as Route",11],["import Models.Message exposing (Message(..))",11],["-- Models",11],["import Models exposing (..)",37],["import Models exposing (Model)",23],["import MassiveDecks.Models.Game as Game",14],["module Models exposing (..)",13],["import Models.ViewState exposing (View)",13]],"useCount":146},{"word":"Mouse","context":[["[ map MouseMove Mouse.position",14],["scene <~ Window.dimensions ~ Mouse.position",12],["(map MouseMove Mouse.position)",12],["create `(timestamp Mouse.x)`, an initial timestamp is produced. The timestamp",12],["get \"Jerry\" animals == Just Mouse",12],["import Mouse",334],["import Mouse exposing (Position)",26],["animals = fromList [ (\"Tom\", Cat), (\"Jerry\", Mouse) ]",18],[", map (always Click) Mouse.clicks",15],["foldp (\\click total -> total + 1) 0 Mouse.clicks",13]],"useCount":538},{"word":"Msg","context":[["init : (Model, Cmd Msg)",122],["init : ( Model, Cmd Msg )",154],["update : Msg -> Model -> Model",159],["update : Msg -> Model -> (Model, Cmd Msg)",267],["update : Msg -> Model -> (Model, Cmd Msg)",267],["subscriptions : Model -> Sub Msg",363],["update : Msg -> Model -> ( Model, Cmd Msg )",403],["update : Msg -> Model -> ( Model, Cmd Msg )",403],["view : Model -> Html Msg",744],["type Msg",927]],"useCount":4611},{"word":"NBlack","context":[["| NBlack  -- Negative Black, counts as -1 blacks for the invariant",17],["NBlack ->",19],["Red    -> NBlack",11],["NBlack -> Red",11],["NBlack -> \"NBlack\"",11],["-- BBlack and NBlack should only be used during the deletion",19],["NBlack -> \"NBlack\"",11]],"useCount":99},{"word":"NColor","context":[["lessBlack : NColor -> NColor",20],["lessBlack : NColor -> NColor",20],["reportRemBug : String -> NColor -> String -> String -> a",20],["moreBlack : NColor -> NColor",20],["moreBlack : NColor -> NColor",20],["type NColor",18],["bubble : NColor -> k -> v -> Dict k v -> Dict k v -> Dict k v",17],["rem : NColor -> Dict k v -> Dict k v -> Dict k v",17],["balance : NColor -> k -> v -> Dict k v -> Dict k v -> Dict k v",17],["showNColor : NColor -> String",12]],"useCount":181},{"word":"Name","context":[["import Docs.Name as Name",12],["type alias Name = String",24],["import Docs.Name as Name",12],["info : (Name,Age)",13],["Name name ->",17],["tuple2 Name string string",18],["= Name String",20],["type alias Name = { first : String, last : String }",18],[", th [] [ text \"Name\" ]",11],["name : Decoder Name",18]],"useCount":163},{"word":"Native","context":[["Native.Json.decodeKeyValuePairs",19],["import Native.Array",19],["Native.Json.decodeNull",19],["Native.Json.decodeObject1",36],["Native.Json.identity",32],["import Native.Debug",30],["import Native.Json",29],["import Native.Utils",20],["Native.Json.oneOf",19],["Native.Json.succeed",19]],"useCount":1446},{"word":"Navigation","context":[["import Navigation exposing (Location)",20],["import Navigation",143]],"useCount":163},{"word":"Never","context":[["main : Program Never Model Msg",38],["import Basics exposing (Never)",12],["init : Task Never (State msg)",19],["main : Program Never",335],["import Effects exposing (Effects, Never)",108],["port tasks : Signal (Task.Task Never ())",71],["import Effects exposing (Never)",51],["port tasks : Signal (Task.Task Effects.Never ())",31],["port tasks : Signal (Task Never ())",36]],"useCount":701},{"word":"NoOp","context":[["NoOp ->",295],["= NoOp",307],["| NoOp",128],["|> Task.map (always NoOp)",16],["actions = Signal.mailbox NoOp",16],[", onClickLimited address NoOp",20],["NoOp    -> model",45],["Signal.mailbox NoOp",52],["NoOp -> model",59],["NoOp",113]],"useCount":1064},{"word":"Node","context":[["Node y left right ->",12],["Node",12],["| Node a (Tree a) (Tree a)",12],["type List = Empty | Node Int List",12],["import Test.Runner.Node exposing (run, TestProgram)",16],["Node v left right ->",25],["import Test.Runner.Node exposing (run)",46]],"useCount":135},{"word":"None","context":[["= None",28],["None ->",48],["| None",32],["None",15]],"useCount":123},{"word":"Noop","context":[["| Noop",20],["= Noop",31],["Noop ->",41]],"useCount":92},{"word":"Nothing","context":[["Nothing",1048],["Nothing ->",2163],[", cfpStartDate = Nothing",383],["Nothing -> Nothing",189],[", cfpEndDate = Nothing",276],["Nothing -> Nothing",189],["_ -> Nothing",189],[", Nothing",189],["Nothing -> []",150],["Nothing -> False",108]],"useCount":6114},{"word":"Notice","context":[["Notice that you must give the *property* name, so we use `className` as it",12],["Notice that `repeat 3 x` is the same as `initialize 3 (always x)`.",12],["Notice that you must give the *attribute* name, so we use `class` as it would",12],["Notice that NaN is not infinite! For float `n` to be finite implies that",18],["Notice that `log` is not a pure function! It should *only* be used for",11],["Notice that we use different seeds on each line. This is important! If you use",11]],"useCount":76},{"word":"Ok","context":[["if code == 13 then Ok () else Err \"not the right key code\"",27],["Ok v ->",18],["Ok res ->",26],["Ok _ ->",59],["Ok",18],["Ok value ->",36],["Ok ()",19],["Ok results ->",17],["Ok i",16],["Ok value -> callback value",21]],"useCount":485},{"word":"OpenSolid","context":[["import OpenSolid.Core.Fuzz as Fuzz",20],["import OpenSolid.Core.Expect as Expect",20],["examples below, assume that all OpenSolid core types have been imported using",15],["import OpenSolid.Core.Decode as Decode",31],["import OpenSolid.Direction3d as Direction3d",11],["import OpenSolid.Core.Types exposing (..)",77],["import OpenSolid.Point3d as Point3d",13],["import OpenSolid.Point2d as Point2d",13],["import OpenSolid.Core.Encode as Encode",31],["import OpenSolid.Vector3d as Vector3d",12]],"useCount":265},{"word":"Options","context":[["import Material.Options as Options",27],["import Material.Options as Options",27],["# Options",28],["[ Options.div",35],["defaultOptions : Options",38],["type alias Options =",42],["Options.set",63],["Options.div",52],["Options.styled p",38],[", Options.div",48]],"useCount":591},{"word":"Order","context":[[", (<), (>), (<=), (>=), max, min, Order (..), compare",12],["sortWith : (a -> a -> Order) ->  List a -> List a",12],["type Order = LT | EQ | GT",17],["compare : comparable -> comparable -> Order",18],["@docs (<), (>), (<=), (>=), max, min, Order, compare",18],["# Higher-Order Helpers",18],["# Higher-Order Functions",12]],"useCount":107},{"word":"Page","context":[["import Demo.Page as Page",40],["import Demo.Page as Page",40],["type Page",26],["import Page.Context as Ctx",13]],"useCount":119},{"word":"Parser","context":[["Parser <| \\state stream ->",19],["import LangParser2 as Parser",17],["import Parser.Errors exposing (runtimeError)",14],["-> P.Parser b",12],["so module `Parser.Utils` needs to be in file `Parser/Utils.elm`.",12],["so module `Parser.Utils` needs to be in file `Parser/Utils.elm`.",12]],"useCount":86},{"word":"Pass","context":[[", expected = [Auction.Pass]",13],[", history = [ Auction.Pass, Auction.Bid 2 Nothing ]",18],[", history = [ Auction.Pass, Auction.Bid 1 Nothing ]",43]],"useCount":74},{"word":"Person","context":[["object3 Person",18],["import Model.Person exposing (Person)",13],["person : Decoder Person",19],["type alias Person =",47],["import Model.Person exposing (Person)",13]],"useCount":110},{"word":"Platform","context":[["import Platform.Cmd exposing (Cmd)",24],["import Platform.Sub as Sub exposing ( Sub )",14],["import Platform.Cmd as Cmd exposing ( Cmd )",14],["import Platform",11],["import Platform.Cmd exposing (Cmd, none)",38]],"useCount":101},{"word":"Player","context":[["player : Float -> Player",16],["type alias Player =",40],["import Player exposing (..)",14],[", player2 : Player",11],[", player1 : Player",11]],"useCount":92},{"word":"Point","context":[["origin : Point",17],["# Floating Point Checks",18],["type alias Point = { x:Float, y:Float }",21],["type alias Point =",39],["type Point = { x:Float, y:Float }",13]],"useCount":108},{"word":"Point2d","context":[["{ originPoint = Point2d ( 2, 3 )",12],["{ originPoint = Point2d.origin",18],["import OpenSolid.Point2d as Point2d",13],["import OpenSolid.Point2d as Point2d",13],["Point2d ( 2, 3 )",17]],"useCount":73},{"word":"Point3d","context":[["import OpenSolid.Point3d as Point3d",13],["import OpenSolid.Point3d as Point3d",13],["Point3d ( 1, 2, 3 )",13],["{ originPoint = Point3d ( 2, 1, 3 )",16],["{ originPoint = Point3d.origin",42]],"useCount":97},{"word":"Position","context":[["type alias Position =",30],["import Mouse exposing (Position)",26],["container : Int -> Int -> Position -> Element -> Element",23]],"useCount":79},{"word":"Program","context":[["main : Program Never",335],["main : Program Value",39],["main : Program Never Model Msg",38],["main : Program Flags",15]],"useCount":427},{"word":"Property","context":[["import Css.Internal.Property as Property",57],["import Css.Internal.Property as Property",57],["(Common.Inherit Property.Value",36],[", Property",18],[", other_ : Property.Value -> Property.Value",41],[", other_ : Property.Value -> Property.Value",41],["(Common.Initial Property.Value",36],["type alias Property m =",22],["@docs Property",20],["(Common.Unset Property.Value",19]],"useCount":405},{"word":"Pseudo","context":[["[pseudo-class](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes).",165],["[pseudo-element](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements).",25]],"useCount":190},{"word":"RBEmpty_elm_builtin","context":[["RBEmpty_elm_builtin _ _ ->",13],["RBEmpty_elm_builtin LBlack ->",13],["RBEmpty_elm_builtin _ ->",93],["RBEmpty_elm_builtin _ v ->",11],["RBEmpty_elm_builtin LBlack",38]],"useCount":168},{"word":"RBNode_elm_builtin","context":[["RBNode_elm_builtin Red key value left right ->",11],["RBNode_elm_builtin _ key value left right ->",33],["RBNode_elm_builtin clr key value left right ->",23],["RBNode_elm_builtin Black k' v' l' r'",18],["RBNode_elm_builtin c k v l r",15],["RBNode_elm_builtin col xk xv a (RBNode_elm_builtin Red yk yv b (RBNode_elm_builtin Red zk zv c d)) ->",11],["RBNode_elm_builtin clr key (f key value) (map f left) (map f right)",11],["RBNode_elm_builtin col xk xv a (RBNode_elm_builtin Red zk zv (RBNode_elm_builtin Red yk yv b c) d) ->",11],["RBNode_elm_builtin col xk xv a (RBNode_elm_builtin Red yk yv b (RBNode_elm_builtin Red zk zv c d)) ->",11],["RBNode_elm_builtin _ k v l r ->",16]],"useCount":336},{"word":"Random","context":[["import Random.Pcg as Random",25],["[System.Random](http://hackage.haskell.org/package/random-1.0.1.1/docs/System-Random.html)",13],["[System.Random](http://hackage.haskell.org/package/random-1.0.1.1/docs/System-Random.html)",13],["import Random.Array",13],["import Random exposing (Seed)",27],["import Random exposing (..)",45],["Random.frequency",13],["import Random",222],[", seed : Random.Seed",18],["import Random.Pcg as Random",25]],"useCount":436},{"word":"Red","context":[["RBNode_elm_builtin col xk xv a (RBNode_elm_builtin Red yk yv b (RBNode_elm_builtin Red zk zv c d)) ->",11],["Red",23],["= Red",27],["NBlack -> Red",11],["reportRemBug \"Black/Red/LBlack\" c (showNColor cl) (showLColor cr)",11],["reportRemBug \"Black/LBlack/Red\" c (showLColor cl) (showNColor cr)",11],["Red ->",47],["(Black, LBlack, Red) ->",17],["(Black, Red, LBlack) ->",17],["Red    -> Black",11]],"useCount":318},{"word":"Reduce","context":[["{-| Reduce a string from the right.",11],["{-| Reduce an array from the left. Read `foldl` as &ldquo;fold from the left&rdquo;.",11],["{-| Reduce a list from the right.",12],["{-| Reduce a list from the left, building up all of the intermediate results into a list.",15],["{-| Reduce a list from the left.",12],["{-| Reduce a string from the left.",11],["{-| Reduce an array from the right. Read `foldr` as &ldquo;fold from the right&rdquo;.",11]],"useCount":83},{"word":"Regex","context":[["import Regex exposing (Regex)",22],["import Regex exposing (..)",20],["import Regex",113],["import Regex exposing (Regex)",22]],"useCount":177},{"word":"Remove","context":[["remove = button [ onClick address Remove ] [ text \"Remove\" ]",12],["| Remove ID",17],["remove = button [ onClick address Remove ] [ text \"Remove\" ]",12],["Remove id ->",27],["| Remove",32],["Remove ->",54],["{-| Remove a value from a set. If the value is not found, no changes are made.",15],["type Flag = Insert | Remove | Same",17],["{-| Remove a key-value pair from a dictionary. If the key is not found,",21],["Remove -> \"Remove\"",11]],"useCount":240},{"word":"Reset","context":[[", button [ onClick address Reset ] [ text \"RESET\" ]",13],["Reset ->",57],["| Reset",36],["= Reset",27],["Reset -> init 0 0",13]],"useCount":146},{"word":"Result","context":[["import Result exposing (Result)",54],["import Result",85],["decodeValue : Decoder a -> Value -> Result String a",19],["parseInt : String -> Result ParseError Int",22],["|> Result.toMaybe",28],["import Result exposing (Result)",54],["is13 : Int -> Result String ()",39],["decodeString : Decoder a -> String -> Result String a",19],["Result.map3 f",18],["customDecoder : Decoder a -> (a -> Result String b) -> Decoder b",18]],"useCount":555},{"word":"Route","context":[["import Route",20],["type Route",39],["import Models.Route as Route",11],["import Route exposing (Location(..))",17],["import Models.Route as Route",11],["import Routing exposing (Route(..))",13]],"useCount":111},{"word":"Run","context":[["# Run a Decoder",18],["# Run",20],["import IO.Runner as Run",16],["import ElmTest.Run as Run",15],["import ElmTest.Run as Run",15],["import ElmTest.Run as R",14],["port requests = Run.run responses console",13]],"useCount":111},{"word":"Runner","context":[["import IO.Runner as Run",16],["import ElmTest.Runner.Console exposing (runDisplay)",17],["import Test.Runner.Html as Html",21],["import ElmTest.Runner.Element exposing (runDisplay)",36],["import Test.Runner.Node exposing (run)",46],["import IO.Runner exposing (Request, Response)",11],["import Test.Runner.Node exposing (run, TestProgram)",16]],"useCount":163},{"word":"SIGNALS","context":[["-- SIGNALS",103]],"useCount":103},{"word":"SUBSCRIPTIONS","context":[["-- SUBSCRIPTIONS",202]],"useCount":202},{"word":"Same","context":[["Same ->",29],["Same   -> \"Same\"",11],["Nothing -> (Same, empty)",11],["type Flag = Insert | Remove | Same",17],["{-| Same as `map` but the function is also applied to the index of each",12],["Same   -> \"Same\"",11]],"useCount":91},{"word":"SearchResult","context":[["decode SearchResult",15],["responseDecoder : Decoder (List SearchResult)",15],["searchResultDecoder : Decoder SearchResult",15],["viewSearchResult : SearchResult -> Html Msg",17],[", results : List SearchResult",21],["type alias SearchResult =",24]],"useCount":107},{"word":"See","context":[["{-| See if the second string contains the first one.",11],["-- See https://developer.github.com/v3/search/#example for how to customize!",11],["-- our application. See the following post for more info on this pattern and",11],["{-| See if the second string ends with the first one.",11],["{-| See if the second string starts with the first one.",11],["See if you can match or beat me! Don't forget about currying",12],["See also the",18],["{-| See `Skald.elm` for documentation.",50]],"useCount":135},{"word":"Seed","context":[[", seed : Seed",29],["import Random exposing (Seed)",27],[", seed : Random.Seed",18],["initialSeed : Int -> Seed",12],["shuffle : Array Card -> Int -> Seed -> Array Card",12],["( Generator, Seed",11]],"useCount":109},{"word":"Set","context":[["{-| Set the alpha of a `Form`. The default is 1, and 0 is totally transparent. -}",13],["import Set",180],["( Set",12],["Set.empty",16],["# Get and Set",17],["These are also the only values that work as `Dict` keys or `Set` members.",18],["|> Set.toList",18],["|> Set.fromList",26],["import Set exposing (Set)",125],["import Set exposing (Set)",125]],"useCount":760},{"word":"Sets","context":[["{-| Sets [`border-image-width`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-width)",20],["{-| Sets [`border-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-color)",20],["{-| Sets [`border-radius`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius)",20],["{-| Sets [`text-shadow`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-shadow).",20],["{-| Sets [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)",30],["{-| Sets [`border-image-outset`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-outset)",20],["{-| Sets [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin)",20],["{-| Sets [`padding`](https://developer.mozilla.org/en-US/docs/Web/CSS/padding)",20],["{-| Sets [`border-block-end`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end)",30],["{-| Sets [`border-block-start`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start)",30]],"useCount":346},{"word":"Shape","context":[["type Shape",36],["circle : Float -> Shape",23],["ngon : Int -> Float -> Shape",13],["rect : Float -> Float -> Shape",13],["shapeInfo : String -> Decoder Shape",19],["shape : Decoder Shape",18],["oval : Float -> Float -> Shape",13],["square : Float -> Shape",13],["filled : Color -> Shape -> Form",13],["textured : String -> Shape -> Form",13]],"useCount":236},{"word":"Signal","context":[["import Signal exposing (..)",128],["main : Signal Html",261],["import Signal exposing (Address)",141],["view : Signal.Address Action -> Model -> Html",319],["model : Signal Model",84],["import Signal exposing (Signal)",71],["import Signal exposing (Signal)",71],["port tasks : Signal (Task.Task Never ())",71],["main : Signal Element",511],["import Signal",384]],"useCount":4501},{"word":"Simple","context":[["let simpleTests = suite \"Simple Stuff\"",12],["import StartApp.Simple exposing (start)",57],["import StartApp.Simple as StartApp",96]],"useCount":165},{"word":"Skeleton","context":[["import Skeleton",29],["import Website.Skeleton exposing (skeleton)",54],["import Website.Skeleton (skeleton)",89]],"useCount":172},{"word":"So","context":[["So `atan2 y x` computes *atan(y/x)* but also keeps track of which",18],["So our example expands out to something like this:",19],["and turns things counterclockwise. So to turn `form` 30&deg; to the left",13],["So `clickCount` updates on each mouse click, incrementing by one. `timeSoFar`",13],["of sides and the second is the radius. So to create a pentagon with radius",13],["So the `class` attribute corresponds to the `className` property. At first",12],["1. Attributes &mdash; You can set things in HTML itself. So the `class`",12],["2. Properties &mdash; You can also set things in JS. So the `className`",12],["{-| A dictionary of keys and values. So a `(Dict String User)` is a dictionary",11]],"useCount":123},{"word":"Start","context":[["{-| Start an application. It requires a bit of wiring once you have created an",11],[", shapeType=Start",14],["# Start your Application",14],["| Start",15],["Start ->",18]],"useCount":72},{"word":"StartApp","context":[["app : StartApp.App Model",34],["import StartApp as StartApp",15],["import StartApp as StartApp",15],["app = StartApp.start",15],["StartApp.start { model = model, view = view, update = update }",15],["import StartApp.Simple as StartApp",96],["import StartApp.Simple exposing (start)",57],["StartApp.start",194],["import StartApp",174],["import StartApp.Simple as StartApp",96]],"useCount":723},{"word":"State","context":[["state : Signal State",12],["initialState : State",20],["init : Task Never (State msg)",19],[", state : State",16],["type alias State msg =",16],["type State = Play | Pause",14],["import State",11],["{ state : State",35],["type alias State =",40],["type State",42]],"useCount":225},{"word":"StepTree","context":[["(StepTree.Task (someStep \"task-a-id\" \"task-a\" StepTree.StepStatePending))",12],["(StepTree.Task (someStep \"task-b-id\" \"task-b\" StepTree.StepStatePending)))",12],["(StepTree.Task (someStep \"task-a-id\" \"task-a\" StepTree.StepStatePending))",12],["(StepTree.Task (someStep \"task-b-id\" \"task-b\" StepTree.StepStatePending)))",12],["(\\s -> { s | state = StepTree.StepStateSucceeded })",28],["StepTree.init emptyResources",22]],"useCount":98},{"word":"String","context":[["port title : String",244],[", url : String",62],["import String exposing (words, join, cons, uncons)",63],["port emit : ( String, Value ) -> Cmd msg",67],["-> String",76],[", title : String",90],["String",171],[", name : String",171],["{ name : String",276],["import String",1504]],"useCount":7112},{"word":"Style","context":[["type alias Style =",28],["|> Style.on model.style",33],["Style.animate",44],["|> Style.to",48],["|> Style.duration (0.4*second)",16],["defaultStyle : Style",25],["|> Style.andThen",22],["| style = Style.on widget.style act",18],["import Style",17],["import Style.Properties exposing (..)",16]],"useCount":349},{"word":"Styles","context":[["import View.Styles as Styles",18],["import View.Styles as Styles",18],["import View.Styles as S",14],["import Styles exposing (class, classList, id)",14],[", Html.div [ class [ Styles.Input, Styles.Label ] ]",13],[", Html.div [ class [ Styles.Input, Styles.Label ] ]",13],["# Line Styles",13],["{-| Styles for lines on text. This allows you to add an underline, an overline,",11]],"useCount":114},{"word":"Stylesheet","context":[["css : Stylesheet",21],["Stylesheet.PropertyRuleAppender",56],["import Css.Internal.Stylesheet as Stylesheet",11],["import Css.Internal.Stylesheet as Stylesheet",11]],"useCount":99},{"word":"Sub","context":[["(\\_ -> Sub.none)",24],["Sub.none",168],["subscriptions : Model -> Sub Action",24],["subscriptions : Model -> Sub Msg",363],[", subscriptions : model -> Sub msg",25],[", subscriptions = always Sub.none",42],[", subscriptions = \\_ -> Sub.none",85],["Sub.batch",153],["subscriptions : Model -> Sub Message",18],["subscriptions model = Sub.none",20]],"useCount":1025},{"word":"Submit","context":[["Submit ->",24],["| Submit",28],["[ text \"Submit\" ]",20]],"useCount":72},{"word":"Svg","context":[["import Svg exposing (..)",69],["flip Svg.rect [] <|",13],["import Svg.Attributes exposing (..)",83],["[ Svg.title",18],[", Svg.path",26],["import Svg.Attributes",21],["import Svg",34],["[ Svg.path",15],["flip Svg.circle [] <|",16],["Svg.svg",17]],"useCount":336},{"word":"T","context":[["import Text as T",28],["encode : T -> Json.Encode.Value",16],["empty : T",16],["decode : Json.Decode.Decoder T",16],["t x = case x of T y -> y",15],["import Transform2D as T",13]],"useCount":104},{"word":"TODO","context":[["-- TODO: make this a native function.",11],["Debug.crash \"TODO\"",12],["-- TODO",66],["{-- TODO: maybe reintroduce once there's a better way to disambiguate imports",18],["-- TODO - remove example inclusion once Problem sets are ready to go live or CI is set up.",14],["-- TODO give these more descriptive names",14],["{-| TODO: write docs -}",14]],"useCount":149},{"word":"Table","context":[["[ Table.tr []",17],["[ Table.thead []",21],[", Table.tbody []",21],["Table.tr []",15],["Table.table []",14],["import Material.Table as Table",13],[", Table.td [ Table.numeric ] [ text item.quantity ]",13],[", Table.td [ Table.numeric ] [ text item.quantity ]",13],[", Table.td [ Table.numeric ] [ text item.unitPrice ]",13],[", Table.td [ Table.numeric ] [ text item.unitPrice ]",13]],"useCount":188},{"word":"Task","context":[["port tasks : Signal (Task.Task Never ())",71],["port tasks : Signal (Task.Task Never ())",71],["import Task exposing (Task)",436],["import Task",586],["import Task exposing (Task)",436],["import Task exposing (..)",99],["|> Task.toMaybe",83],["|> Task.toResult",77],["import Task exposing (Task, andThen)",73],["import Task exposing (Task, andThen)",73]],"useCount":2742},{"word":"Test","context":[["tests : Test",334],["import ElmTest.Test exposing (suite, test)",39],["import ElmTest.Test (..)",40],["testSuite : Test",46],["import Test.Runner.Node exposing (run)",46],["import ElmTest.Test exposing (..)",76],["all : Test",151],["import Test exposing (..)",209],["suite : Test",33],["import Test exposing (Test)",32]],"useCount":1279},{"word":"TestHelpers","context":[["import TestHelpers exposing (..)",83]],"useCount":83},{"word":"Tests","context":[["module Tests where",15],["import Tests",37],["run emit Tests.all",11],["module Tests exposing (..)",65]],"useCount":128},{"word":"Text","context":[["import Text (asText)",35],["import Text exposing (fromString)",31],["import Text as T",28],["import Text exposing (Text)",23],["import Text (..)",25],["|> Text.monospace",26],["|> Text.fromString",42],["Text [",51],["import Text exposing (..)",37],["import Text",298]],"useCount":1008},{"word":"Textfield","context":[[", Textfield.textarea",26],[", Textfield.floatingLabel",56],["import Material.Textfield as Textfield",33],["import Material.Textfield as Textfield",33],[", Textfield.text'",21],["Textfield.render Mdl",17]],"useCount":186},{"word":"Thank","context":[["# Thank You",13],["## Thank you",34],["## Thank you!",47]],"useCount":94},{"word":"The","context":[["{-| Integer division. The remainder is discarded. -}",17],["{-| The `middle` [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) value.",30],["{-| Partition a dictionary according to a predicate. The first dictionary",21],["-- The full application state of our todo app.",19],["quadrant the angle should really be in. The result will be between",18],["The relations are less than, equal to, and greater than.",18],["{-| A dictionary mapping unique keys to values. The keys can be any comparable",18],["{-| The logical AND operator. `True` if both inputs are `True`.",17],["{-| The exclusive-or operator. `True` if exactly one input is `True`. -}",17],["{-| The logical OR operator. `True` if one or both inputs are `True`.",17]],"useCount":530},{"word":"These","context":[["These are identical to the *grey* versions. It seems the spelling is regional, but",11],["These colors come from the [Tango",11],["These colors are a compatible series of shades of grey, fitting nicely",11],["These decoders are easy to put together so you can create more and more complex",12],["These are also the only values that work as `Dict` keys or `Set` members.",18],["These functions only work on `comparable` types. This includes numbers,",18]],"useCount":81},{"word":"This","context":[["`Nothing`. This is useful when you are not sure if a key will be in the",20],["This combines two arguments into a single pair.",18],["These functions only work on `comparable` types. This includes numbers,",18],["This clean division of concerns is a core part of Elm. You can read more about",19],["This can also be written as:",36],["{-| Use two different decoders on a JS value. This is nice for extracting",22],["This means we only continue with the callback if things are going well. For",20],["This is a certification challenge.",20],["This just runs the tests.",20],["type. This includes `Int`, `Float`, `Time`, `Char`, `String`, and tuples or",19]],"useCount":735},{"word":"Tick","context":[["Tick t ->",12],["Tick dt ->",25],["Time.every second Tick",19],[", AnimationFrame.diffs Tick",18],["Tick ->",15],["= Tick Time",55],["| Tick Time",43],["Tick time ->",13],["| Tick Float",12],["Tick newTime ->",26]],"useCount":249},{"word":"Time","context":[["import Time exposing (Time)",326],["import Time exposing (Time)",326],["import Time",256],["import Time exposing (..)",176],["import Time exposing (Time, second)",59],["import Time exposing (Time, second)",59],["= Tick Time",55],["| Tick Time",43],["import Time exposing (second)",35],["import Time (..)",25]],"useCount":1766},{"word":"Toggles","context":[[", Toggles.group \"MyRadioGroup\"",13],["import Material.Toggles as Toggles",21],["import Material.Toggles as Toggles",21],[", Toggles.ripple",35]],"useCount":90},{"word":"Tom","context":[["animals = fromList [ (\"Tom\", Cat), (\"Jerry\", Mouse) ]",18],["-- { name: \"Tom\", age: 31, profession: \"plumber\" }",18],["get \"Tom\"   animals == Just Cat",19],["indexedMap (,) [\"Tom\",\"Sue\",\"Bob\"] == [ (0,\"Tom\"), (1,\"Sue\"), (2,\"Bob\") ]",12],["indexedMap (,) [\"Tom\",\"Sue\",\"Bob\"] == [ (0,\"Tom\"), (1,\"Sue\"), (2,\"Bob\") ]",12]],"useCount":79},{"word":"Transform","context":[["{-| Transform every character in a string",12],["# Transform",46],["{-| Transform the value returned by a decoder. Most useful when paired with",18]],"useCount":76},{"word":"True","context":[["True",373],["_ -> True",21],["Just _  -> True",21],["True ->",137],[", autofocus True",76],["( True, False ) ->",31],["( False, True ) ->",30],["Just _ -> True",29],["isEmpty empty == True",23],["Nothing -> True",23]],"useCount":1423},{"word":"Type","context":[["[(\"Content-Type\", \"application/json\")]",44],["import Diagrams.Type exposing (..)",12],["type Type",13],["### Type Aliases",23],["|> withHeader \"Content-Type\" \"application/json\"",23],["# Type and Constructors",15],["- [Type Annotations](#type-annotations)",14],["- [Type Aliases](#type-aliases)",14],["{-| Type alias to make it clearer when you are working with time values.",12],["### Type Annotations",14]],"useCount":184},{"word":"Types","context":[["import Elmer.Types exposing (..)",16],["### Union Types",19],["# Data Types",20],["import Types (..)",21],["module Types exposing (..)",25],["import Foreign.Types exposing (JSRaw)",28],["import Types",52],["# Types",58],["import OpenSolid.Core.Types exposing (..)",77],["import Types exposing (..)",196]],"useCount":619},{"word":"UPDATE","context":[["-- UPDATE",747],["-- ACTION, UPDATE",50],["---- UPDATE ----",24]],"useCount":821},{"word":"US","context":[["{-| Sets [`padding`](https://developer.mozilla.org/en-US/docs/Web/CSS/padding)",20],["[pseudo-class](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes).",165],["{-| Sets [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)",30],["{-| Sets [`border-block-start`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start)",30],["{-| https://developer.mozilla.org/en-US/docs/Web/CSS/length",30],["{-| The `middle` [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) value.",30],["{-| Sets [`border-block-end`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end)",30],["[pseudo-element](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements).",25],["{-| Sets [`border-image-width`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-width)",20],["{-| Sets [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin)",20]],"useCount":688},{"word":"Ui","context":[["import Ui.Helpers.Emitter as Emitter",16],["import Ui.Native.Uid as Uid",15],["Ui.enabledActions",16],["import Ui",24]],"useCount":71},{"word":"Update","context":[["{-| Update the value of a dictionary for a specific key with a given function. -}",18],["2. Update - a way to step the application state forward",20],["import Update",21],["type Update",21],["import Update exposing (..)",23],["import Update exposing (update)",25],["updates : Signal Update",27],["-- Update",191],["module Update exposing (update)",20],["import Component.Update as Update",16]],"useCount":490},{"word":"UpdateField","context":[["UpdateField str ->",29],[", on \"input\" targetValue (Signal.message address << UpdateField)",13],["| UpdateField String",30]],"useCount":72},{"word":"User","context":[["import User.Types",14],["profiles : List User -> Html",14],["userDecoder : Decoder User",17],["`User`.",13],["profile : User -> Html",14],["import Model.User as User exposing (User)",15],["import Model.User as User exposing (User)",15],["import Model.User as User exposing (User)",15],["type alias User =",47],["\"type\": \"User\",",28]],"useCount":216},{"word":"Util","context":[["import Util exposing (..)",35],["import Util",25],["import MassiveDecks.Util as Util",15],["import MassiveDecks.Util as Util",15],["module Util where",13],["import Util.HtmlUtil exposing (..)",11],["import GalacticWar.Util as Util",11],["import GalacticWar.Util as Util",11]],"useCount":136},{"word":"Utils","context":[["let (acc1,acc2) = Utils.reverse2 accs in",12],["import Utils",106],["so module `Parser.Utils` needs to be in file `Parser/Utils.elm`.",12],["import Utils exposing (mainMenu,",54],["import Utils exposing (..)",35],["import Native.Utils",20],["{ mainMenu    : Utils.Menu",20],["module Utils where",19],["import Utils.Markdown as Markdown",14],["so module `Parser.Utils` needs to be in file `Parser/Utils.elm`.",12]],"useCount":374},{"word":"VIEW","context":[["-- VIEW",873],["---- VIEW ----",23]],"useCount":896},{"word":"Value","context":[["port emit : ( String, Value ) -> Cmd msg",67],[", other_ : Property.Value -> Property.Value",41],["import Json.Encode exposing (Value)",107],[", other_ : Property.Value -> Property.Value",41],["main : Program Value",39],["(Common.Initial Property.Value",36],["(Common.Inherit Property.Value",36],["value : Decoder Value",22],["(Common.Unset Property.Value",19],["decodeValue : Decoder a -> Value -> Result String a",19]],"useCount":593},{"word":"Values","context":[["# \"Creative\" Values",18],["# Oddly Shaped Values",18],["[`max-width`]https://developer.mozilla.org/en-US/docs/Web/CSS/max-width#Values),",20],["[`max-height`]https://developer.mozilla.org/en-US/docs/Web/CSS/max-height#Values)",20],["[`min-height`]https://developer.mozilla.org/en-US/docs/Web/CSS/min-height#Values), and",20],["[`min-width`]https://developer.mozilla.org/en-US/docs/Web/CSS/min-width#Values),",20]],"useCount":116},{"word":"Vec2","context":[["import Data.Vec2 exposing (..)",11],["import Math.Vector2 as V2 exposing (Vec2, vec2)",11],["import Math.Vector2 exposing (Vec2)",52]],"useCount":74},{"word":"Vector2","context":[["import Math.Vector2 exposing (..)",19],["import Math.Vector2 exposing (Vec2)",52],["import Math.Vector2 as V2 exposing (Vec2, vec2)",11]],"useCount":82},{"word":"Vector3","context":[["import Math.Vector3 exposing (..)",78],["import Math.Vector3 as V3",32],["import Math.Vector3 (..)",24],["import Math.Vector3 exposing (Vec3, vec3)",11]],"useCount":145},{"word":"View","context":[["import View",50],["import View exposing (view)",38],["-- View",201],["import View.Styles as Styles",18],["3. View   - a way to visualize our application state with HTML",19],["module View where",22],[", view = View.view",24],["module View exposing (..)",27],["module View exposing (view)",32],["# View",45]],"useCount":547},{"word":"Vulnerability","context":[[", favorability = Vulnerability.Equal",150],["import Vulnerability",13]],"useCount":163},{"word":"Web","context":[["[pseudo-element](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements).",25],["[pseudo-class](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes).",165],["{-| Sets [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin)",20],["{-| Sets [`border-image-width`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-width)",20],["[`min-height`]https://developer.mozilla.org/en-US/docs/Web/CSS/min-height#Values), and",20],["{-| The `middle` [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) value.",30],["{-| https://developer.mozilla.org/en-US/docs/Web/CSS/length",30],["{-| Sets [`border-block-start`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start)",30],["{-| Sets [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)",30],["{-| Sets [`border-block-end`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end)",30]],"useCount":688},{"word":"WebGL","context":[["import WebGL exposing (..)",71],["[ WebGL.toHtml",17],["import Graphics.WebGL (..)",15]],"useCount":103},{"word":"Website","context":[["import open Website.ColorScheme",27],["import Website.Tiles as Tile",12],["import Website.ColorScheme as C",23],["import Website.Skeleton (skeleton)",89],["import Website.Skeleton exposing (skeleton)",54]],"useCount":205},{"word":"Window","context":[["map2 ratio Window.width Window.height",12],["Window.dimensions",22],["import Window exposing (..)",20],["map2 scene Window.dimensions Mouse.position",11],["scene <~ Window.dimensions ~ Mouse.position",12],["import Window exposing (Size)",23],["import Window",685],["| Resize Window.Size",12],["Signal.map view Window.dimensions",13],["map2 ratio Window.width Window.height",12]],"useCount":822},{"word":"You","context":[["You can think of this operator as equivalent to the following:",19],["however you want. You can also update existing line styles with record updates.",13],["Grouping forms makes it easier to write modular graphics code. You can create",13],["# Thank You",13],["You can use as many commas as you want.",14],["You will almost certainly want to use this instead of `atan`.",18],["(in quadrants I and IV). You probably want to use `atan2` instead.",18],["{-| You probably do not want to use this. It takes `(y/x)` as the",18],["This clean division of concerns is a core part of Elm. You can read more about",19],["You can specify multiple line decorations with `textDecorations`.",15]],"useCount":267},{"word":"_","context":[["_ _ _ | _ _ _ | _ _ _",71],["_ ->",2240],["_ -> cmd3",84],[", subscriptions = \\_ -> Sub.none",85],["RBEmpty_elm_builtin _ ->",93],["Just _ ->",117],["_ -> prop",283],["_ -> Nothing",189],["Err _ ->",138],["_ -> False",152]],"useCount":5307},{"word":"_blank","context":[[", target \"_blank\"]",15],[", target \"_blank\"",36],[", a [ href (\"https://github.com/\" ++ result.name), target \"_blank\" ]",21]],"useCount":72},{"word":"a","context":[["pred a",80],["case a of",55],["assemble col xk xv yk yv zk zv a b c d",48],["renderLength a unit",56],[", a",64],["v. 2.0. If a copy of the MPL was not distributed with this file, you can",77],["{ a",47],["a =",59],["[ a",100],["a",146]],"useCount":10592},{"word":"abs","context":[["abs =",11],[", (+), (-), (*), (/), (^), (//), rem, (%), negate, abs, sqrt, clamp, logBase, e",12],["| upperCollision -> 0 - abs v",13],["@docs (+), (-), (*), (/), (^), (//), rem, (%), negate, abs, sqrt, clamp, logBase, e",17],["abs : number -> number",18],["Native.Basics.abs",11]],"useCount":82},{"word":"absolute","context":[["[ (\"position\", \"absolute\")",47],[", (\"position\", \"absolute\")",36],["[ ( \"position\", \"absolute\" )",36],["style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"",21],["position: absolute;",22],["position absolute",20],["{-| Take the absolute value of a number. -}",18],["[ position absolute",16],[", position absolute",15],["absolute : Int -> Pos",14]],"useCount":271},{"word":"acc","context":[["foldr f (f key value (foldr f acc right)) left",19],["acc",94],["foldr f acc t =",21],["foldl f acc dict =",21],["case acc of",20],["foldl f (f key value (foldl f acc left)) right",19],["RBEmpty LBlack -> acc",16],["f n acc state =",13],["0 -> (acc, state)",13]],"useCount":236},{"word":"acos","context":[["@docs pi, cos, sin, tan, acos, asin, atan, atan2",18],["Native.Basics.acos",11],["acos =",11],[", pi, cos, sin, tan, acos, asin, atan, atan2",12],["acos : Float -> Float",18]],"useCount":70},{"word":"act","context":[["{ mc | tiledMenu = TiledMenu.update act tm }",12],["case act of",28],["Top act ->",19],["-- generalized tree balancing act",19],["| style = Style.on widget.style act",18],["Bottom act ->",17],["Right act ->",13],["TiledMenuAction act ->",13],["Left act ->",13],["|> (\\act ->",12]],"useCount":164},{"word":"action","context":[[", view : Signal.Address action -> model -> Html",12],["-- address : Signal.Address action",11],["case action of",1099],["start : Config model action -> App model",11],["update action model =",867],["Mdl action' ->",35],["Material.update action' model",35],["action =",19],["type alias Config model action =",16],[", inputs : List (Signal.Signal action)",13]],"useCount":2118},{"word":"actions","context":[["Signal.forwardTo actions.address Just",13],["{ actions : Signal.Address Action",15],["actions = Signal.mailbox NoOp",16],["actions.signal",16],[", Card.actions",18],["Signal.map (view actions.address) model",20],["-- A description of the kinds of actions that can be performed on the model of",21],["actions : Signal Action",27],["actions : Signal.Mailbox Action",40],["actions =",102]],"useCount":323},{"word":"actual","context":[["{-| Convert to a simpler `Maybe` if the actual error message is not needed or",11],["{- The actual pattern match here is somewhat lax. If it is given invalid input,",16],["in test name <| assertEqual expected actual",19],["actual =",31]],"useCount":77},{"word":"add","context":[["Native.Basics.add",11],["{-| Styles for lines on text. This allows you to add an underline, an overline,",11],["add key value dict =",12],["Just add or remove the `}` on the first line and you'll toggle between commented and uncommented!",14],[", add",17],["foldl add empty dictionary",18],["foldl add (empty, empty) dict",18],["add x y = x + y",34]],"useCount":135},{"word":"address","context":[[", onClickLimited address NoOp",20],["(\\_ -> Signal.message address value)",34],["Signal.map (view actions.address) model",20],["address",19],["viewCounter address (id, model) =",17],["view address model =",558],[", button [ onClick address Increment ] [ text \"+\" ]",42],["[ button [ onClick address Decrement ] [ text \"-\" ]",38],["address =",36],["onEnter address value =",35]],"useCount":981},{"word":"aes","context":[["visibility = lookup .visibility aes' defaults",26],["colour = lookup .colour aes' defaults",30],["linetype = lookup .linetype aes' defaults",20],["x = lookup .x aes' defaults",17]],"useCount":93},{"word":"age","context":[[", age : Int",34],["(\"age\" := int)",37],["age =",19],["-- { name: \"Sue\", age: 42 }",18],["\"age\" := int",18],["-- { name: \"Tom\", age: 31, profession: \"plumber\" }",18],["age : Decoder Int",18],["-- { name: \"Amy\", age: 27, profession: null }",14],["-- { name: \"Joe\", age: 36, profession: [\"something\", \"unexpected\"] }",14],["-- { ... age: 42 ... }",12]],"useCount":214},{"word":"alias","context":[["type alias Flags =",47],["type alias Person =",47],["type alias User =",47],["type alias Options =",42],["type alias Game =",41],["type alias State =",40],["type alias Model = {",56],["type alias Model = Int",63],["type alias ID = Int",64],["type alias Model =",1589]],"useCount":3150},{"word":"alice","context":[["sortBy .name   [chuck,alice,bob] == [alice,bob,chuck]",21],["sortBy .name   [chuck,alice,bob] == [alice,bob,chuck]",21],["sortBy .height [chuck,alice,bob] == [alice,chuck,bob]",21],["sortBy .height [chuck,alice,bob] == [alice,chuck,bob]",21],["alice = { name=\"Alice\", height=1.62 }",24]],"useCount":108},{"word":"align","context":[["text-align: justify;",20],[", \"text-align\" => \"center\"",22],["margin: 0; padding: 0; vertical-align: baseline; border: none; }",22],["text-align: center;",23],["<div style=\"color:#666;font-size:0.8em;text-align:left\">",28],[", (\"text-align\", \"center\")",104],[", css \"align-items\" \"center\"",29],[", ( \"text-align\", \"center\" )",34],["{-| The `middle` [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) value.",30],["{-| The `middle` [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) value.",30]],"useCount":428},{"word":"all","context":[["{-| Reduce a list from the left, building up all of the intermediate results into a list.",15],["all : Test",151],["contains all key-value pairs which satisfy the predicate, and the second",20],["all of your patterns.",14],["[ id \"toggle-all\"",17],["[ text \"Mark all as complete\" ]",19],["[ for \"toggle-all\" ]",20],["and all necessary modules have been imported using the following pattern:",23],["examples below, assume that all OpenSolid core types have been imported using",15],["all =",186]],"useCount":835},{"word":"alpha","context":[[", alpha = 1",18],["toRgb : Color -> { red:Int, green:Int, blue:Int, alpha:Float }",17],[", alpha : Float",17],["hsla hue saturation lightness alpha =",15],["alpha : Float -> Form -> Form",13],["{-| Set the alpha of a `Form`. The default is 1, and 0 is totally transparent. -}",13],["@docs move, moveX, moveY, scale, rotate, alpha",13],["{ hue=h, saturation=s, lightness=l, alpha=a }",12],["{ red, green, blue, alpha } =",11],["The alpha component is specified with numbers between 0 and 1. -}",11]],"useCount":151},{"word":"also","context":[["This is also the most general sort function, allowing you",13],["2. Properties &mdash; You can also set things in JS. So the `className`",12],["however you want. You can also update existing line styles with record updates.",13],["See also the",18],["These are also the only values that work as `Dict` keys or `Set` members.",18],["This can also be written as:",36],["{-| Same as `map` but the function is also applied to the index of each",12],["thing fails. It also runs in order so the first task will be completely",11],["which provides aesthetically reasonable defaults for colors. Each color also",11],["So `atan2 y x` computes *atan(y/x)* but also keeps track of which",18]],"useCount":173},{"word":"always","context":[["always",23],["update key (always Nothing) dict",20],["update key (always (Just value)) dict",20],[", subscriptions = always Sub.none",42],["a function that *always* returns the same value regardless of what input you give.",18],["always a b = a",18],["the `y` or `x`. Thus, the resulting angle is always between &pi;/2 and -&pi;/2",18],["{-| A decoder that always succeeds. Useful when paired with `andThen` or",18],["It totally ignores the second argument, so `always 42` is a function that always",18],["It totally ignores the second argument, so `always 42` is a function that always",18]],"useCount":447},{"word":"an","context":[["{-| Convert an integer into a float. -}",18],["maybe you have an optional field that can have a default value when it is",18],["{-| Extract an Array from a JS array.",18],["-- algorithm. Any other occurrence is a bug and should fail an assert.",19],["multiple fields from an object.",36],["{-| Create an empty dictionary. -}",18],["{-| Extract an integer.",18],["{-| Bring in an arbitrary JSON value. Useful if you need to work with crazily",18],["{-| Indicates that clicking an `a` and `area` will download the resource",18],["{-| Convert an association list into a dictionary. -}",18]],"useCount":799},{"word":"and","context":[["characters, strings, lists of comparable things, and tuples of comparable",18],["contains all key-value pairs which satisfy the predicate, and the second",20],["For `td` and `th`.",18],["[`min-height`]https://developer.mozilla.org/en-US/docs/Web/CSS/min-height#Values), and",20],["type. This includes `Int`, `Float`, `Time`, `Char`, `String`, and tuples or",19],["-- algorithm. Any other occurrence is a bug and should fail an assert.",19],["-- BBlack and NBlack should only be used during the deletion",19],["and all necessary modules have been imported using the following pattern:",23],["-- l and r are both RBNodes",18],["(in quadrants I and IV). You probably want to use `atan2` instead.",18]],"useCount":1364},{"word":"andThen","context":[["`Console.andThen` run1",22],["import Task exposing (Task, andThen)",73],["`andThen`",41],["@docs andThen",22],["andThen =",38],["|> Style.andThen",22],["import Maybe exposing (andThen)",23],["`Task.andThen`",25],["|> andThen",28],[", andThen",33]],"useCount":697},{"word":"angle","context":[["All angle conversions result in &ldquo;standard Elm angles&rdquo;",18],["angle =",51],["quadrant the angle should really be in. The result will be between",18],["the `y` or `x`. Thus, the resulting angle is always between &pi;/2 and -&pi;/2",18],["collage 50 50 [ rotate (degrees angle) (twoRects colr) ]",16],["cross (angle, colr) =",16],["rotateAround axis angle =",15],["{-| Rotate a form by a given angle. Rotate takes standard Elm angles (radians)",13],["toString (50 + 40 * cos angle)",12],["toString (50 + 40 * sin angle)",12]],"useCount":200},{"word":"angles","context":[["&pi; and -&pi;, giving you the full range of angles.",18],["{-| Convert radians to standard Elm angles (radians). -}",18],["{-| Rotate a form by a given angle. Rotate takes standard Elm angles (radians)",13],["{-| Convert turns to standard Elm angles (radians).",18],["{-| Convert degrees to standard Elm angles (radians). -}",18],["All angle conversions result in &ldquo;standard Elm angles&rdquo;",18]],"useCount":103},{"word":"any","context":[["{-| Turn any `Element` into a `Form`. This lets you use text, gifs, and video",13],["any isDigit \"R2-D2\" == True",12],["any : (Char -> Bool) -> String -> Bool",12],["any isDigit \"90210\" == True",12],["must (which can be done with any `objectN` function actually).",12],["to define any other: `sort == sortWith compare`",13],["{-| A dictionary mapping unique keys to values. The keys can be any comparable",18],["{-| Compare any two comparable values. Comparable values include `String`, `Char`,",18],["{-| Extract a Maybe value, wrapping successes with `Just` and turning any",14],["{-| Determine if any elements satisfy the predicate.",13]],"useCount":277},{"word":"app","context":[["app.tasks",125],["you can pipe into your app as one of the `inputs`.",11],["app = StartApp.start",15],["-- The full application state of our todo app.",19],["app : StartApp.App Model",34],["port tasks = app.tasks",49],["main = app.html",69],["app.html",120],["app =",169],["{-| The configuration of an app follows the basic model / update / view pattern",11]],"useCount":644},{"word":"append","context":[["c1 = (append xs) ys",14],["append : String -> String -> String",12],["List.append",13],["b1 = xs `append` ys",13],["append xs ys = xs ++ ys",13],["append : List a -> List a -> List a",13],["(append",66],["(List.append",22],["append =",20],["a1 = append xs ys",14]],"useCount":293},{"word":"appendable","context":[["{-| Put two appendable things together. This includes strings, lists, and text.",17],["(++) : appendable -> appendable -> appendable",18],["(++) : appendable -> appendable -> appendable",18],["(++) : appendable -> appendable -> appendable",18]],"useCount":71},{"word":"application","context":[["3. View   - a way to visualize our application state with HTML",19],["{-| Backward function application `f <| x == f x`. This function is useful for",17],["{-| Forward function application `x |> f == f x`. This function is useful",18],["-- wire the entire application together",19],["-- The full application state of our todo app.",19],["2. Update - a way to step the application state forward",20],["1. Model  - a full definition of the application's state",20],["|> withHeader \"Content-Type\" \"application/json\"",23],["Cooperate - the frontend for the cooperate.online application",24],["[(\"Content-Type\", \"application/json\")]",44]],"useCount":307},{"word":"are","context":[["{-| Change how arguments are passed to a function.",42],["This means we only continue with the callback if things are going well. For",20],["`Nothing`. This is useful when you are not sure if a key will be in the",20],["Examples use `==` to indicate that two expressions are equivalent, even if (due",23],["provided that the following conditions are met:",19],["are your tuples so big?",18],["The relations are less than, equal to, and greater than.",18],["no changes are made. -}",18],["returns 42. When you are dealing with higher-order functions, this comes in",18],["These are also the only values that work as `Dict` keys or `Set` members.",18]],"useCount":638},{"word":"argument","context":[["meets. `Sharp` takes an argument to limit the length of the joint. This",13],["{-| A regular polygon with N sides. The first argument specifies the number",13],["argument, so there is no way to know whether the negative signs comes from",18],["It totally ignores the second argument, so `always 42` is a function that always",18],["{-| Apply a function on every element with its index as first argument.",12],["This operator short-circuits to `False` if the first argument is `False`.",14],["which argument is which:",22]],"useCount":110},{"word":"arguments","context":[["{-| Flip the order of the first two arguments to a function. -}",17],["This splits paired arguments into two separate arguments.",18],["This splits paired arguments into two separate arguments.",18],["This combines two arguments into a single pair.",18],["{-| Change how arguments are passed to a function.",42],["you with optional arguments, error handling, and records with optional fields.",14],["{-| Produce the initial generator state. Distinct arguments should be likely",13]],"useCount":140},{"word":"array","context":[["{-| Extract an Array from a JS array.",18],["array =",29],["array : Decoder a -> Decoder (Array a)",19],["{-| Extract a List from a JS array.",14],["{-| Handle an array with exactly three elements.",14],["{-| Handle an array with exactly two elements. Useful for points and simple",14],["{-| Handle an array with exactly one element.",14],["array int",18],[", list, array",18],["@docs list, array,",18]],"useCount":436},{"word":"as","context":[["import Json.Decode as Decode",86],["import List as L",89],["import StartApp.Simple as StartApp",96],["import Json.Decode as Json",309],["import Html.App as Html",255],["import Html.App as App",228],["import Json.Encode as JE",104],["import Json.Decode as Json exposing ((:=))",106],["import Graphics.Input as Input",111],["import Json.Encode as Encode",127]],"useCount":4911},{"word":"asin","context":[["asin =",11],["@docs pi, cos, sin, tan, acos, asin, atan, atan2",18],["asin : Float -> Float",18],[", pi, cos, sin, tan, acos, asin, atan, atan2",12],["Native.Basics.asin",11]],"useCount":70},{"word":"assert","context":[["-- algorithm. Any other occurrence is a bug and should fail an assert.",19],["<| assert",16],["import ElmTest.Assertion exposing (assert, assertEqual)",30],["assert False",14],["assert <|",14]],"useCount":93},{"word":"assertEqual","context":[["<| assertEqual (outdented output) (outdented (prettyPrint input))",18],["assertEqual",103],["<| assertEqual",76],["import ElmTest.Assertion exposing (assert, assertEqual)",30],["(assertEqual",22],["in test name <| assertEqual expected actual",19],["|> recover (Task.succeed << assertEqual \"no error\")",18]],"useCount":286},{"word":"at","context":[["at fields decoder =",37],["{-| Return Just the element at the index or Nothing if the index is out of range.",13],["Json.Decode.at [ \"items\" ] (Json.Decode.list searchResultDecoder)",13],["at a given position.",13],[", (:=), at",14],["@docs (:=), at,",18],["`oneOf` but everything is supposed to work out at the end. For example,",18],["Json.at [\"data\", \"image_url\"] Json.string",18],["at : List String -> Decoder a -> Decoder a",19],["at [\"target\", \"value\"] string",23]],"useCount":246},{"word":"atan","context":[["You will almost certainly want to use this instead of `atan`.",18],["So `atan2 y x` computes *atan(y/x)* but also keeps track of which",18],["@docs pi, cos, sin, tan, acos, asin, atan, atan2",18],[", pi, cos, sin, tan, acos, asin, atan, atan2",12],["Native.Basics.atan",11],["atan =",11],["atan : Float -> Float",18]],"useCount":106},{"word":"atan2","context":[["So `atan2 y x` computes *atan(y/x)* but also keeps track of which",18],[", pi, cos, sin, tan, acos, asin, atan, atan2",12],["atan2 : Float -> Float -> Float",18],["(in quadrants I and IV). You probably want to use `atan2` instead.",18],["@docs pi, cos, sin, tan, acos, asin, atan, atan2",18],["atan2 =",11],["Native.Basics.atan2",11]],"useCount":106},{"word":"attribute","context":[[", attribute \"aria-expanded\" \"false\"",14],[", attribute \"role\" \"button\"",16],["attribute vec3 color;",21],["attribute vec3 position;",55],["Yes, that is a true fact. Sometimes an attribute exists, but there is no",12],["attribute vec3 pos;",13],[", attribute \"tabindex\" \"0\"",12],["corresponding property. Sometimes changing an attribute does not change the",12],["attribute =",22],["attribute vec3 coord;",37]],"useCount":285},{"word":"attributes","context":[["*There is not always a one-to-one mapping between attributes and properties!*",12],["attributes =",26],["{ attributes =",14],["attributes",14],["{-| All of the attributes of a line style. This lets you build up a line style",13]],"useCount":79},{"word":"author","context":[[", author : String",30],["[ tuple1 (\\author -> \"Author: \" ++ author) string",14],[", author = \"Sally Apples\"",15],["[ tuple1 (\\author -> \"Author: \" ++ author) string",14],[", author = \"Some Author\"",11]],"useCount":84},{"word":"auto","context":[[", div [ class \"flex-auto\" ] []",11],[", ( \"margin-right\", \"auto\" )",11],["borderImageWidth3 (n 3) (px 15) auto",12],["If this is annoying, please file an issue, so adding support for \"auto\"",12],["**Note:** `auto` is not currently supported here. If you need to set this property to `auto`,",12],["borderImageWidth4 (n 3) (px 15) auto (n 2)",12],["**Note:** `auto` is not currently supported here. If you need to set this property to `auto`,",12],["height: auto;",13],[", ( \"margin-left\", \"auto\" )",11]],"useCount":106},{"word":"autofocus","context":[[", autofocus True",76]],"useCount":76},{"word":"axis","context":[["mirrorAcross axis =",12],["axis =",37],["axis",22],["\\axis ->",18],["rotateAround axis angle =",15]],"useCount":104},{"word":"b","context":[["(=>) : a -> b -> ( a, b )",26],["(=>) : a -> b -> ( a, b )",26],["zip : List a -> List b -> List (a,b)",23],["case compare a b of",27],["RGBA r g b a ->",28],["balancedTree col xk xv yk yv zk zv a b c d",28],["b =",34],["case b of",36],["b",46],["assemble col xk xv yk yv zk zv a b c d",48]],"useCount":2934},{"word":"background","context":[["background-color: transparent;",21],["color C.background <|",19],["background-color: #ffffff;",19],["background-color: rgb(245,245,245);",18],["pre, code { background-color: #f8f8f8; }",15],["pre { background-color: white;",15],["table.sourceCode { width: 100%; background-color: #f8f8f8; }",15],[", (\"background-color\", \"#fff\")",14],["background-image: none;",12],["background =",25]],"useCount":206},{"word":"balance","context":[["balance c k v l r =",20],["RBNode_elm_builtin Black yk yv (RBNode_elm_builtin Black xk xv a b) (balance Black zk zv c (redden d))",11],["then balance (moreBlack c) k v (lessBlackTree l) (lessBlackTree r)",11],["RBNode_elm_builtin Black yk yv (balance Black xk xv (redden a) b) (RBNode_elm_builtin Black zk zv c d)",11],["balance : NColor -> k -> v -> Dict k v -> Dict k v -> Dict k v",17]],"useCount":70},{"word":"based","context":[["zero-based index where we will start our slice. The `end` is a zero-based index",12],["{-| Partition a list based on a predicate. The first list contains all values",12],["You can also have conditional behavior based on the structure of algebraic",11],["to do brief animations based on user input without major inefficiencies.",11],["{-| Produce a gray based on the input. 0 is white, 1 is black.",12],["zero-based index where we will start our slice. The `end` is a zero-based index",12]],"useCount":70},{"word":"batch","context":[["|> Sub.batch",15],["Cmd.batch",26],[", Cmd.batch",98],["Sub.batch",153],[", Effects.batch",33]],"useCount":325},{"word":"be","context":[["quadrant the angle should really be in. The result will be between",18],["of length ten would be:",18],["Notice that NaN is not infinite! For float `n` to be finite implies that",18],["{-| A dictionary mapping unique keys to values. The keys can be any comparable",18],["-- BBlack and NBlack should only be used during the deletion",19],["`Nothing`. This is useful when you are not sure if a key will be in the",20],["This can also be written as:",36],["to numerical roundoff) they might not be exactly equal.",23],["-- A description of the kinds of actions that can be performed on the model of",21],[", placeholder \"What needs to be done?\"",21]],"useCount":633},{"word":"beginnerProgram","context":[["App.beginnerProgram",21],["Html.beginnerProgram",46],["Html.App.beginnerProgram",17],["Html.beginnerProgram { model = model, view = view, update = update }",14],["import Html.App exposing (beginnerProgram)",14]],"useCount":112},{"word":"between","context":[["{-| Get the difference between the first set and the second. Keeps values",15],["the `y` or `x`. Thus, the resulting angle is always between &pi;/2 and -&pi;/2",18],["{-| Places the given value between all members of the given list.",14],["else Err \"months must be between 1 and 12\"",11],["int -5 5   -- an integer between -5 and 5",12],[", css \"justify-content\" \"space-between\"",21],["quadrant the angle should really be in. The result will be between",18],["int 0 10   -- an integer between zero and ten",12],["*There is not always a one-to-one mapping between attributes and properties!*",12],["Just add or remove the `}` on the first line and you'll toggle between commented and uncommented!",14]],"useCount":213},{"word":"black","context":[["-- make the top node black",19],[", color    = black",14],["|> filled black",12],["(let poly (\\\\pts (polygon 'black' 'none' 0 pts))",12],["{-| The default line style, which is solid black with flat caps and sharp joints.",13],["'black'",26],[", fill \"black\"",13],["[ stroke \"black\"",22],[", color = black",25],["[ \"Internal red-black tree invariant violated, expected \"",19]],"useCount":266},{"word":"block","context":[["{-| Sets [`border-block-start`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start)",30],[", (\"display\", \"inline-block\")",72],["display: block;",36],["{-| Sets [`border-block-end`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end)",30],["{-| Sets [`border-block-start`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start)",30],["{-| Sets [`border-block-end`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end)",30],["[ \"display\" => \"inline-block\"",24],["display: block !important;",23],["display: inline-block;",23],[", ( \"display\", \"inline-block\" )",20]],"useCount":383},{"word":"blog","context":[["Blog.blog",121],["[reactor]: /blog/Introducing-Elm-Reactor.elm",12]],"useCount":133},{"word":"blue","context":[["scale 2 (move (10,10) (filled blue (ngon 5 30)))",18],["blue =",21],["|> filled blue",33],["++ (toString blue)",11],["{ red, green, blue, alpha } =",11],["toRgb : Color -> { red:Int, green:Int, blue:Int, alpha:Float }",17],[", blue = blue",15],[", blue = blue",15],["blue : Color",12],["accent1 = rgb 96 181 204      -- #60B5CC  blue",11]],"useCount":175},{"word":"bob","context":[["sortBy .name   [chuck,alice,bob] == [alice,bob,chuck]",21],["sortBy .name   [chuck,alice,bob] == [alice,bob,chuck]",21],["sortBy .height [chuck,alice,bob] == [alice,chuck,bob]",21],["bob   = { name=\"Bob\"  , height=1.85 }",24],["sortBy .height [chuck,alice,bob] == [alice,chuck,bob]",21]],"useCount":108},{"word":"body","context":[[", body = body",37],[", body = body",37],[", body = empty",31],["body {",38],["[ body",27],["body",22],[", body : String",40],["body =",94],[", body =",66],[", body = Http.empty",48]],"useCount":507},{"word":"bold","context":[[", bold     = False",17],[", (\"font-weight\", \"bold\")",13],[", bold     : Bool",11],["bold : Text -> Text",11],["title = Html.span [style [(\"padding-left\", \"10px\"),(\"font-weight\", \"bold\"),(\"font-size\", \"large\")]]",11],["code > span.er { font-weight: bold; }",28],[", bold = False",27],["code > span.kw { color: #204a87; font-weight: bold; }",28]],"useCount":146},{"word":"bool","context":[["bool : Decoder Bool",20],["bool =",50],["@docs string, int, float, bool, null",26],["(\"completed\" := bool)",18],[", string, int, float, bool, null",18],["bool : Generator Bool",15],["bool",15],["if bool then",13]],"useCount":175},{"word":"border","context":[["{-| Sets [`border-image-width`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-width)",20],["{-| Sets [`border-block-start`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start)",30],["border-radius: 4px;",36],["{-| Sets [`border-block-start`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start)",30],[", (\"box-sizing\", \"border-box\")",39],["{-| Sets [`border-image-width`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-width)",20],["box-sizing: border-box;",21],["margin: 0; padding: 0; vertical-align: baseline; border: none; }",22],["{-| Sets [`border-block-end`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end)",30],["{-| Sets [`border-block-end`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end)",30]],"useCount":742},{"word":"both","context":[["clear: both;",28],["{-| Get rid of whitespace on both sides of a string.",12],["{-| Pad a string on both sides until it has a given length.",12],["-- l and r are both RBNodes",18],["{-| The logical AND operator. `True` if both inputs are `True`.",17],["{-| The logical OR operator. `True` if one or both inputs are `True`.",17],["{-| Get the intersection of two sets. Keeps values that appear in both sets.",12]],"useCount":116},{"word":"bottom","context":[["{-| Sets [`border-bottom`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom)",15],["margin-bottom: 0;",26],["init top bottom =",21],["<div style=\"position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;\">",21],["<div style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\">",20],["{-| Sets [`border-bottom`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom)",15],[", bottomCounter = Counter.init bottom",18],["margin-bottom: 20px;",14],["bottom: 0;",12],["--     `shouldEqual` \"border-bottom:should not compile\"",12]],"useCount":209},{"word":"bottomLeft","context":[[", ( bottomLeft, topRight, bottomRight )",12],["[ ( topLeft, topRight, bottomLeft )",12],["bottomLeft  = Vertex (vec3 -1 -1 1) (vec3 0 0 0)",12],[", (bottomLeft,topRight,bottomRight)",15],["bottomLeft =",18],["[ (topLeft,topRight,bottomLeft)",15]],"useCount":84},{"word":"box","context":[[", (\"box-sizing\", \"border-box\")",39],[", (\"box-sizing\", \"border-box\")",39],["box-sizing: border-box;",21],["box-sizing: border-box;",21],["box =",15]],"useCount":135},{"word":"br","context":[["<br/>",59],[", br [] []",153],[", br",11],["br,",13],[":: br [] []",24],["<br>",37]],"useCount":297},{"word":"but","context":[[", span [ class \"tagline\" ] [ text \"“Like GitHub, but for Elm things.”\" ]",11],["{-| Same as `map` but the function is also applied to the index of each",12],["attribute can be used in HTML, but there is no corresponding property!",12],["glance, perhaps this distinction is defensible, but it gets much crazier.",12],["`oneOf` but everything is supposed to work out at the end. For example,",18],[", span [ class \"tagline\" ] [ text \"Like GitHub, but for Elm things.\" ]",21],["Yes, that is a true fact. Sometimes an attribute exists, but there is no",12],["that indicates the end of the slice. The slice extracts up to but not including",12],["So `atan2 y x` computes *atan(y/x)* but also keeps track of which",18],["These are identical to the *grey* versions. It seems the spelling is regional, but",11]],"useCount":161},{"word":"button","context":[["[ button [ onClick address Decrement ] [ text \"-\" ]",38],["import Html exposing (Html, button, div, text)",29],[", Html.button",27],["Html.button",26],["import Html exposing (div, button, text)",24],["button =",29],[", button",217],["button",150],[", button [ onClick address Increment ] [ text \"+\" ]",42],["[ button",105]],"useCount":928},{"word":"by","context":[["where the first few types are different, followed by 0 or more of the same",18],["{-| Tons of useful functions that get imported by default.",18],["`form` upwards by 10 pixels.",13],["{-| Create an arbitrary polygon by specifying its corners in order.",13],["{-| Sort values by a derived property.",13],["{-| Rotate a form by a given angle. Rotate takes standard Elm angles (radians)",13],["{-| Transform the value returned by a decoder. Most useful when paired with",18],["{-| Find the remainder after dividing one number by another.",17],["[ text \"Written by \"",16],["So `clickCount` updates on each mouse click, incrementing by one. `timeSoFar`",13]],"useCount":199},{"word":"c","context":[["c =",31],["(>>) : (a -> b) -> (b -> c) -> (a -> c)",23],["(<<) : (b -> c) -> (a -> b) -> (a -> c)",23],["(<<) : (b -> c) -> (a -> b) -> (a -> c)",23],["balancedTree col xk xv yk yv zk zv a b c d",28],["c",33],["case (c, cl, cr) of",34],["assemble col xk xv yk yv zk zv a b c d",48],["Just c ->",60],["case c of",66]],"useCount":1367},{"word":"callback","context":[["andThen result callback =",20],["Just value -> callback value",11],["callback params =",12],["This means we only continue with the callback if things are going well. For",20],["Ok value -> callback value",21]],"useCount":84},{"word":"can","context":[["-- A description of the kinds of actions that can be performed on the model of",21],["Any CSS property can be set to this value.",15],["This can also be written as:",36],["Failures resemble code written in pipeline style, so you can tell",28],["maybe you have an optional field that can have a default value when it is",18],["narrow things down so you can be more targeted.",18],["{-| A dictionary mapping unique keys to values. The keys can be any comparable",18],["v. 2.0. If a copy of the MPL was not distributed with this file, you can",77],["You can think of this operator as equivalent to the following:",19],["This clean division of concerns is a core part of Elm. You can read more about",19]],"useCount":627},{"word":"case","context":[["case prop of",347],["case result of",242],["case tree of",107],["case list of",233],["case xs of",132],["case t of",136],["case msg of",944],["case action of",1099],["case prev of",137],["case dict of",179]],"useCount":7603},{"word":"cat","context":[["toIndexedList (fromList [\"cat\",\"dog\"]) == [(0,\"cat\"), (1,\"dog\")]",12],["repeat 3 \"cat\" == fromList [\"cat\",\"cat\",\"cat\"]",12],["sortBy String.length [\"mouse\",\"cat\"] == [\"cat\",\"mouse\"]",21],["sortBy String.length [\"mouse\",\"cat\"] == [\"cat\",\"mouse\"]",21],["cat : Element",20],["image 30 30 \"/cat.jpg\"",16],["toIndexedList (fromList [\"cat\",\"dog\"]) == [(0,\"cat\"), (1,\"dog\")]",12],["cat =",16],["split \",\" \"cat,dog,cow\"        == [\"cat\",\"dog\",\"cow\"]",12],["split \",\" \"cat,dog,cow\"        == [\"cat\",\"dog\",\"cow\"]",12]],"useCount":214},{"word":"ceiling","context":[["ceiling =",11],["Native.Basics.ceiling",11],[", round, floor, ceiling, truncate, toFloat",12],["@docs round, floor, ceiling, truncate, toFloat",18],["ceiling : Float -> Int",18]],"useCount":70},{"word":"cell","context":[["cell =",13],["[ cell",14],["[ Grid.cell",13],["Grid.cell",13],["import Material.Grid exposing (grid, size, cell, Device(..))",13],["span [ class \"cell-content\"]",12],[", cell",30],[", Grid.cell",22],["display: table-cell !important;",21],["case cell of",17]],"useCount":168},{"word":"center","context":[["[ Options.center ]",15],[", alignItems center",13],[", textAlign center",14],[", css \"justify-content\" \"center\"",16],["center =",20],[", \"text-align\" => \"center\"",22],["text-align: center;",23],[", ( \"text-align\", \"center\" )",34],[", (\"text-align\", \"center\")",104],[", css \"align-items\" \"center\"",29]],"useCount":335},{"word":"centered","context":[["<| centered",13],["|> centered",42],["centered : Text -> Element",16],["@docs leftAligned, rightAligned, centered, justified",11]],"useCount":82},{"word":"cfpEndDate","context":[[", cfpEndDate = Nothing",276]],"useCount":276},{"word":"cfpStartDate","context":[[", cfpStartDate = Nothing",383]],"useCount":383},{"word":"characters","context":[["{-| Convert a string to a list of characters.",12],["characters, strings, lists of comparable things, and tuples of comparable",18],["{-| Convert a list of characters into a String. Can be useful if you",17],["{-| Keep only the characters that satisfy the predicate.",11],["{-| Determine whether *all* characters satisfy a predicate.",11],["{-| Determine whether *any* characters satisfy a predicate.",11],["Cosmetic operations such as padding with extra characters or trimming whitespace.",12],["are enclosed in `\"double quotes\"`. Strings are *not* lists of characters.",12],["in characters including spaces and function name:",12]],"useCount":116},{"word":"checkbox","context":[["[ input [ type' \"checkbox\"",12],["checkbox =",12],[", type' \"checkbox\"",45],["[ type' \"checkbox\"",35]],"useCount":104},{"word":"checked","context":[["checked : Decoder Bool",18],["checked =",24],[", checked allCompleted",22],[", checked todo.completed",18],["-- { ... checked: true ... }",12]],"useCount":94},{"word":"children","context":[[", children",36],["children",32],["children =",27],[", children =",18],[", children = []",14],["[ children",17]],"useCount":144},{"word":"chuck","context":[["sortBy .height [chuck,alice,bob] == [alice,chuck,bob]",21],["sortBy .name   [chuck,alice,bob] == [alice,bob,chuck]",21],["sortBy .name   [chuck,alice,bob] == [alice,bob,chuck]",21],["chuck = { name=\"Chuck\", height=1.76 }",24],["sortBy .height [chuck,alice,bob] == [alice,chuck,bob]",21]],"useCount":108},{"word":"circle","context":[["{-| A circle with a given radius. -}",13],["(def bercirc (circle botcolor (- w r) (- (+ h depth) (* 2! r)) r))",12],["[ circle [ cx \"50\", cy \"50\", r \"45\", fill \"#0B79CE\" ] []",13],["flip Svg.circle [] <|",16],["\"circle\" ->",19],["circle : Float -> Shape",23],["circle 10",13],["dot colr = collage 50 50 [ filled colr (circle 15) ]",13],["(def belcirc (circle botcolor r (- (+ h depth) (* 2! r)) r))",12],["(circle 'black' xEnd y rPoint)",12]],"useCount":157},{"word":"claim","context":[["claim",12],["claim \"JSON conversion round-trips properly\"",11],["import Check exposing (Claim, claim, true, that, is, for, quickCheck)",11],["Check.claim",23],["C.claim",87]],"useCount":144},{"word":"clamp","context":[["@docs (+), (-), (*), (/), (^), (//), rem, (%), negate, abs, sqrt, clamp, logBase, e",17],["clamp : number -> number -> number -> number",18],["`clamp 100 200 x` the results are as follows:",18],[", (+), (-), (*), (/), (^), (//), rem, (%), negate, abs, sqrt, clamp, logBase, e",12],["(let xBall_ (clamp xStart xEnd xBall)",12],["clamp =",11],["Native.Basics.clamp",11]],"useCount":99},{"word":"class","context":[["[ class \"container\" ]",34],[", class \"form-control\"",34],["[ div [class \"column\"]",35],["div [ class \"row\" ]",41],["div [ class \"content\" ]",42],[", descr = div [class \"newsdescr\"]",51],["[pseudo-class](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes).",165],["import Html.Attributes exposing (class)",92],["[ class \"row\" ]",72],["{ class                  : ClassString",56]],"useCount":1520},{"word":"classList","context":[["[ classList",93],[", classList",16],["classList list =",11],["classList",13],["import Styles exposing (class, classList, id)",14],["import Html.Attributes exposing (classList)",15]],"useCount":162},{"word":"classes","context":[["[pseudo-class](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes).",165],["classes =",16]],"useCount":181},{"word":"clear","context":[["[ class \"clear-completed\"",18],["|>- clear",16],["clear: both;",28],[", id \"clear-completed\"",13]],"useCount":75},{"word":"click","context":[["|> Event.click",22],["[ p [] [ text \"Double-click to edit a todo\" ]",18],["So `clickCount` updates on each mouse click, incrementing by one. `timeSoFar`",13],["foldp (\\click total -> total + 1) 0 Mouse.clicks",13],["\"click\"",13]],"useCount":79},{"word":"clr","context":[["hand clr len time =",11],["|> Text.color clr",11],["RBNode_elm_builtin clr key (f key value) (map f left) (map f right)",11],["RBNode clr key value left right ->",14],["RBNode_elm_builtin clr key value left right ->",23]],"useCount":70},{"word":"cmd","context":[["cmd =",57],["case cmd of",23],[", cmd",23],["cmd",21]],"useCount":124},{"word":"cmd2","context":[["case cmd2 of",102],["_ -> cmd2",60]],"useCount":162},{"word":"cmd3","context":[["_ -> cmd3",84],["case cmd3 of",42]],"useCount":126},{"word":"code","context":[["code > span.kw { color: #204a87; font-weight: bold; }",28],["code > span.fu { color: #000000; }",28],["example, the following code checks if the square root of a number is odd:",34],["if code == 13 then",30],["code > span.st { color: #4e9a06; }",28],["is13 code =",41],["code > span.ch { color: #4e9a06; }",28],["code > span.dt { color: #204a87; }",28],["code > span.dv { color: #0000cf; }",28],["code > span.ot { color: #8f5902; }",28]],"useCount":772},{"word":"col","context":[["RBNode_elm_builtin col xk xv a (RBNode_elm_builtin Red zk zv (RBNode_elm_builtin Red yk yv b c) d) ->",11],["RBNode_elm_builtin col zk zv (RBNode_elm_builtin Red yk yv (RBNode_elm_builtin Red xk xv a b) c) d ->",11],["( case Matrix.get col row newModel.cells of",12],["( col, row, model ) =",12],["col =",18],["RBNode_elm_builtin col zk zv (RBNode_elm_builtin Red xk xv a (RBNode_elm_builtin Red yk yv b c)) d ->",11],["balancedTree col xk xv yk yv zk zv a b c d",28],["assemble col xk xv yk yv zk zv a b c d",48],["case Matrix.get col row model.cells of",12],["[ class \"col-sm-12\" ]",13]],"useCount":198},{"word":"collage","context":[["collage gameWidth gameHeight",17],["collage 400 400",23],["collage : Int -> Int -> List Form -> Element",12],["a point in a certain 2D space. Imagine we have a collage that is 400 pixels",12],["{-| The collage API is for freeform graphics. You can move, rotate, scale, etc.",13],["dot colr = collage 50 50 [ filled colr (circle 15) ]",13],["in your collage. This means you can move, rotate, and scale",13],["collage 300 300",14],["collage w h",15],["collage 50 50 [ rotate (degrees angle) (twoRects colr) ]",16]],"useCount":159},{"word":"color","context":[["code > span.al { color: #ef2929; }",28],["color =",41],["code > span.ch { color: #4e9a06; }",28],["code > span.kw { color: #204a87; font-weight: bold; }",28],["code > span.st { color: #4e9a06; }",28],["code > span.fu { color: #000000; }",28],["code > span.dt { color: #204a87; }",28],[", color = Compatible",31],["color: #ffffff;",32],["case color of",92]],"useCount":1181},{"word":"colr","context":[["twoRects colr =",16],["cross (angle, colr) =",16],["dot colr = collage 50 50 [ filled colr (circle 15) ]",13],["dot colr = collage 50 50 [ filled colr (circle 15) ]",13],["group (List.map (filled colr) [ rect 8 30, rect 30 8 ])",12],["collage 50 50 [ rotate (degrees angle) (twoRects colr) ]",16]],"useCount":86},{"word":"column","context":[["[ div [class \"one-third column\"]",11],["[ div [class \"column\"]",35],[", css \"flex-direction\" \"column\"",17],[", div [class \"one column row\"]",12],[", ( \"flex-direction\", \"column\" )",12],["[ div [class \"one column row\"]",11]],"useCount":98},{"word":"com","context":[["get \"https://example.com/api/items/1\"",15],["* [Emacs](https://github.com/jcollard/elm-mode)",16],["* [Vim](https://github.com/lambdatoast/elm.vim)",16],["[arch]: https://github.com/evancz/elm-architecture-tutorial/",16],[", a [ href \"https://github.com/evancz\" ] [ text \"Evan Czaplicki\" ]",17],[", a [ href \"http://todomvc.com\" ] [ text \"TodoMVC\" ]",17],[", a [ href (\"https://github.com/\" ++ result.name), target \"_blank\" ]",21],["[records]: http://research.microsoft.com/pubs/65409/scopedlabels.pdf \"Extensible Records\"",35],["ian.e.mackenzie@gmail.com",77],[", link = \"https://aws.amazon.com/summits/\"",29]],"useCount":373},{"word":"comment","context":[["comment =",11],["(\"comment\" := string)",12],["comment = Nothing",14],["{- a multiline comment",14],["(card, code, comment)",14],["-- a single line comment",14],["comment \"\" <|",15],[", comment : String",28]],"useCount":122},{"word":"comparable","context":[["(>=) : comparable -> comparable -> Bool",18],["lists of comparable types.",19],["(<=) : comparable -> comparable -> Bool",18],["things. Note that tuples with 7 or more elements are not comparable; why",18],["These functions only work on `comparable` types. This includes numbers,",18],["(>=) : comparable -> comparable -> Bool",18],["max : comparable -> comparable -> comparable",18],["max : comparable -> comparable -> comparable",18],["max : comparable -> comparable -> comparable",18],["min : comparable -> comparable -> comparable",18]],"useCount":1535},{"word":"compare","context":[["case compare a b of",27],["compare : comparable -> comparable -> Order",18],["@docs (<), (>), (<=), (>=), max, min, Order, compare",18],["case compare k key of",17],["Native.Basics.compare",11],[", (<), (>), (<=), (>=), max, min, Order (..), compare",12],["to define any other: `sort == sortWith compare`",13],["compare =",15],["case compare targetKey key of",17]],"useCount":148},{"word":"compile","context":[["--     `shouldEqual` \"color:should not compile\"",16],["-- Should not compile:",37],["--     `shouldEqual` \"border-top:should not compile\"",12],["--     `shouldEqual` \"text-decoration-line:should not compile\"",14],["--     `shouldEqual` \"text-decoration-style:should not compile\"",12],["--     `shouldEqual` \"padding:should not compile\"",12],["--     `shouldEqual` \"border:should not compile\"",12],["--     `shouldEqual` \"outline:should not compile\"",12],["--     `shouldEqual` \"border-bottom:should not compile\"",12],["--     `shouldEqual` \"border-right:should not compile\"",12]],"useCount":174},{"word":"completed","context":[[", completed = False",33],["\"Completed\" -> todo.completed",14],[", completed : Bool",29],[", checked todo.completed",18],["[ class \"clear-completed\"",18],["(\"completed\" := bool)",18],[", id \"clear-completed\"",13],["[ text (\"Clear completed (\" ++ toString tasksCompleted ++ \")\") ]",13],["\"Active\" -> not todo.completed",14],["type alias Job = { name : String, id : Int, completed : Bool }",14]],"useCount":195},{"word":"concat","context":[["concat [[1,2],[3],[4,5]] == [1,2,3,4,5]",13],["concat",27],["|> String.concat",21],["Text.concat",14],["concatMap f xs == concat (map f xs)",13],["concat : List String -> String",12],["concat : List (List a) -> List a",12],["List.concat",39],["String.concat",35],["|> List.concat",82]],"useCount":348},{"word":"concatMap","context":[["concatMap f list =",12],["|> List.concatMap unwrapSnippet",12],["concatMap : (a -> List b) -> List a -> List b",12],["@docs filterMap, concatMap, indexedMap",12],["concatMap f xs == concat (map f xs)",13],["List.concatMap",25]],"useCount":86},{"word":"config","context":[["summary.config",11],["[authorization config.token]",17],["start config =",20],["{ config",21],["config =",38]],"useCount":107},{"word":"cons","context":[["++ ' ' `String.cons` Internal.colOffset \"sm\" sm smOffset",12],["import String exposing (words, join, cons, uncons)",63],["`for` cons int",22],["c = cons 1 [2, 3]",19],["(cons (rect 'white' (- x0 10!) (- y0 10!) (+ w 20!) (+ h 20!))",17],["cons : Char -> String -> String",12],["@docs cons, uncons, fromChar, append, concat, split, join, words, lines",11],["foldl cons \"\" \"time\" == \"emit\"",12],["{-| Add an element to the front of a list. Pronounced *cons*.",12],["foldr cons \"\" \"time\" == \"time\"",12]],"useCount":203},{"word":"container","context":[["div [class \"container\"]",14],["container outer (heightOf elem) middle elem",11],["container : Int -> Int -> Position -> Element -> Element",23],["container w (heightOf words) middle words",23],["div [ id \"container\"]",53],["[ class \"container\" ]",34],["container w h middle <|",31],["div [ class \"container\" ]",25]],"useCount":214},{"word":"contains","context":[["{-| See if the second string contains the first one.",11],["@docs contains, startsWith, endsWith, indexes, indices",12],["that satisfy the predicate, and the second list contains all the value that do",12],["contains \"THE\" \"theory\" == False",12],["{-| Partition a list based on a predicate. The first list contains all values",12],["contains \"hat\" \"theory\" == False",12],["contains \"the\" \"theory\" == True",12],["contains : String -> String -> Bool",15],["contains the rest.",19],["contains all key-value pairs which satisfy the predicate, and the second",20]],"useCount":137},{"word":"content","context":[["content",28],["content = \"\"\"",132],["content: \" \";",31],["[ Center.markdown \"600px\" content ]",101],["[ Lists.content []",97],["content =",64],["div [ class \"content\" ]",42],[", css \"justify-content\" \"space-between\"",21],[", div [class \"content\"]",23],["content = Markdown.toElement \"\"\"",27]],"useCount":780},{"word":"context","context":[["\\context ->",24],[", context = emptyContext",21],["case context of",14],["context =",11]],"useCount":70},{"word":"copy","context":[["v. 2.0. If a copy of the MPL was not distributed with this file, you can",77]],"useCount":77},{"word":"core","context":[["examples below, assume that all OpenSolid core types have been imported using",15],["This clean division of concerns is a core part of Elm. You can read more about",19],["[array]: http://package.elm-lang.org/packages/elm-lang/core/latest/Array",12],["Use [`(<|)`](http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#<|)",12],["and [`(|>)`](http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#|>)",12]],"useCount":70},{"word":"cos","context":[["cos =",11],["Native.Basics.cos",11],["toString (50 + 40 * cos angle)",12],["f i = ( r * cos (t*i), r * sin (t*i) )",12],[", pi, cos, sin, tan, acos, asin, atan, atan2",12],["f i = (hw * cos (t*i), hh * sin (t*i))",12],["@docs pi, cos, sin, tan, acos, asin, atan, atan2",18],["cos : Float -> Float",18]],"useCount":106},{"word":"count","context":[["init count = count",24],["[ id \"todo-count\" ]",14],["init count = count",24],["[ span [ class \"star-count\" ] [ text (toString result.stars) ]",23],["{ count : Int",23],["{ count = 0",17]],"useCount":125},{"word":"countStyle","context":[["countStyle : Attribute",37],[", div [ countStyle ] [ text (toString model) ]",43],["countStyle =",47]],"useCount":127},{"word":"counters","context":[["{ counters = []",26],["div [] ([remove, insert] ++ counters)",16],["{ counters : List ( ID, Counter.Model )",23],["{ model | counters <- List.map updateCounter model.counters }",13],["{ model | counters <- List.map updateCounter model.counters }",13],["counters =",11],["newCounters = model.counters ++ [ newCounter ]",11]],"useCount":113},{"word":"cr","context":[["reportRemBug \"Black/Red/LBlack\" c (showNColor cl) (showLColor cr)",11],["bubble c k v l (remove_max cr kr vr lr rr)",11],["RBNode_elm_builtin cr kr vr lr rr ->",11],["case (c, cl, cr) of",34],["reportRemBug \"Black/LBlack/Red\" c (showLColor cl) (showNColor cr)",11]],"useCount":78},{"word":"crash","context":[["Debug.crash \"impossible\"",27],["Debug.crash \"TODO\"",12],["Debug.crash \"not yet implemented\"",14],["Native.Debug.crash <|",17]],"useCount":70},{"word":"create","context":[["These decoders are easy to put together so you can create more and more complex",12],["message. It is often best to create a custom type that explicitly represents",11],["The `init` transaction will give you an initial model and create any tasks that",11],["avoiding parenthesis. Consider the following code to create a text element:",12],["want to create a string primarly by consing, perhaps for decoding",12],["create `(timestamp Mouse.x)`, an initial timestamp is produced. The timestamp",12],["Grouping forms makes it easier to write modular graphics code. You can create",13],["Consider the following code to create a pentagon:",18],["formatted data. For example, this lets you create a parser for \"variadic\" lists",18],["of sides and the second is the radius. So to create a pentagon with radius",13]],"useCount":132},{"word":"css","context":[[", css \"width\" \"100%\"",20],["css : Stylesheet",21],[", css \"justify-content\" \"space-between\"",21],[", css \"flex-flow\" \"row wrap\"",22],[", css \"align-items\" \"center\"",29],["Lists.ul [ css \"margin\" \"0\", css \"padding\" \"0\" ]",30],["Lists.ul [ css \"margin\" \"0\", css \"padding\" \"0\" ]",30],["css =",38],["<style type=\"text/css\">",47],["[ css \"display\" \"flex\"",40]],"useCount":428},{"word":"current","context":[[", current = 0",11],["current",15],["current =",14],["{-| Drop updates that repeat the current value of the signal.",13],["be used to step the state forward. The outgoing signal represents the current",12],["The current sentiment is that it is already quite error prone once you get to",12],["* `model` &mdash; a signal representing the current model. Generally you",11]],"useCount":88},{"word":"cursor","context":[["cursor =",11],[", cursor pointer",13],["cursor: pointer;",15],[", ( \"cursor\", \"pointer\" )",15],[", (\"cursor\", \"pointer\")",42]],"useCount":96},{"word":"curve2To","context":[[", Animation.curve2To",70]],"useCount":70},{"word":"customDecoder","context":[[", value, customDecoder",14],["(Json.customDecoder keyCode is13)",23],["customDecoder : Decoder a -> (a -> Result String b) -> Decoder b",18],["customDecoder =",18],["@docs value, customDecoder",18],["Native.Json.customDecoder",15]],"useCount":106},{"word":"d","context":[["map5 : (a -> b -> c -> d -> e -> result) -> Signal a -> Signal b -> Signal c -> Signal d -> Signal e -> Signal result",13],["assemble col xk xv yk yv zk zv a b c d",48],["balancedTree col xk xv yk yv zk zv a b c d",28],["d =",19],["tuple4 : (a -> b -> c -> d -> value) -> Decoder a -> Decoder b -> Decoder c -> Decoder d -> Decoder value",18],["tuple4 : (a -> b -> c -> d -> value) -> Decoder a -> Decoder b -> Decoder c -> Decoder d -> Decoder value",18],["case d of",18],["object4 : (a -> b -> c -> d -> value) -> Decoder a -> Decoder b -> Decoder c -> Decoder d -> Decoder value",18],["object4 : (a -> b -> c -> d -> value) -> Decoder a -> Decoder b -> Decoder c -> Decoder d -> Decoder value",18],["map5 : (a -> b -> c -> d -> e -> result) -> Signal a -> Signal b -> Signal c -> Signal d -> Signal e -> Signal result",13]],"useCount":384},{"word":"dashed","context":[["borderBottom3 (px 5) dashed (rgb 11 14 17)",15],["borderInlineStart2 (px 5) dashed",15],["borderLeft2 (px 5) dashed",15],["borderTop2 (px 5) dashed",15],["borderInlineEnd2 (px 5) dashed",15],["border3 (px 10) dashed (rgb 11 14 17)",15],["borderBlockEnd2 (px 5) dashed",15],["borderRight2 (px 5) dashed",15],["borderBlockStart2 (px 5) dashed",15],["borderTop3 (px 5) dashed (rgb 11 14 17)",15]],"useCount":309},{"word":"data","context":[["data =",34],["formatted data. For example, this lets you create a parser for \"variadic\" lists",18],["data",18],["Json.at [\"data\", \"image_url\"] Json.string",18],["|> Task.map .data",13],["data types and literals",13],["a `Json.Value` into Elm through a port, so this can let you handle data with",12],[", attribute \"data-toggle\" \"dropdown\"",11],["{ data",23]],"useCount":160},{"word":"declaration","context":[["declaration :: (dropEmptyDeclarations rest)",30],["case declaration of",32],["declaration",49]],"useCount":111},{"word":"declarations","context":[["declarations",76],["case declarations of",40],["{ declarations, warnings } =",12]],"useCount":128},{"word":"decode","context":[["decode : Json.Decode.Decoder T",16],["decode SearchResult",15],["decode",14],["decode =",44]],"useCount":89},{"word":"decodeString","context":[["decodeString =",21],[", decodeString, decodeValue",14],["Native.Json.decodeString",15],["@docs decodeString, decodeValue",18],["decodeString : Decoder a -> String -> Result String a",19]],"useCount":87},{"word":"decodeValue","context":[["Native.Json.decodeValue",15],["decodeValue =",21],["decodeValue : Decoder a -> Value -> Result String a",19],["(decodeValue a one)",18],["(decodeValue b two)",18],["@docs decodeString, decodeValue",18],[", decodeString, decodeValue",14],["Signal.map (decodeValue shape) jsonValues",12],["import Json.Decode as Decode exposing (decodeValue)",11]],"useCount":146},{"word":"decoder","context":[["List.foldr (:=) decoder fields",36],["{-| A decoder that always fails. Useful when paired with `andThen` or `oneOf`",18],["at fields decoder =",37],[", map Just decoder",38],["nullOr decoder =",39],["{-| A decoder that always succeeds. Useful when paired with `andThen` or",18],["map Dict.fromList (keyValuePairs decoder)",19],["decoded with the given decoder.",20],["decoder =",60],["dict decoder =",19]],"useCount":447},{"word":"decoders","context":[["{-| Use two different decoders on a JS value. This is nice for extracting",22],["These decoders are easy to put together so you can create more and more complex",12],["{-| Use three different decoders on a JS value. This is nice for extracting",14],["{-| Try out multiple different decoders. This is helpful when you are dealing",14],["creating *other* decoders.",14],["decoders.",12]],"useCount":88},{"word":"decoration","context":[["--     `shouldEqual` \"text-decoration-line:should not compile\"",14],["--     `shouldEqual` \"text-decoration-style:should not compile\"",12],["text-decoration: none;",23],["{-| Sets [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)",30],["{-| Sets [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)",30],["text decoration line.",15]],"useCount":124},{"word":"def","context":[["(def belcirc (circle botcolor r (- (+ h depth) (* 2! r)) r))",12],["\"abc\" ++ \"def\"",13],["(def btbbox (rect botcolor r (- h r) (- w (* 2! r)) depth))",12],["(def bercirc (circle botcolor (- w r) (- (+ h depth) (* 2! r)) r))",12],["(def bbot    [btbbox blrbox belcirc bercirc] )",12],["(def blrbox (rect botcolor 0! (- h r) w (- depth r)))",12],["(def btop    [tbbox lrbox tlcirc trcirc blcirc brcirc] )",12]],"useCount":85},{"word":"defPic","context":[["{ defPic |",85]],"useCount":85},{"word":"default","context":[["updateAndParse default text",21],["{-| Tons of useful functions that get imported by default.",18],["default",16],["Nothing -> default",14],["{-| The default line style, which is solid black with flat caps and sharp joints.",13],["{-| Set the alpha of a `Form`. The default is 1, and 0 is totally transparent. -}",13],["{-| Creates an array with a given length, filled with a default element.",12],["{-| Plain black text. It uses the browsers default typeface and text height.",11],["no matches, it will use their default typeface. This works the same as the CSS",11],["maybe you have an optional field that can have a default value when it is",18]],"useCount":180},{"word":"defaultConfig","context":[["defaultConfig : Config",14],["Options.collect defaultConfig options",11],["defaultConfig : Config m",17],["defaultConfig =",37]],"useCount":79},{"word":"defaultGame","context":[["gameState = foldp stepGame defaultGame input",11],["defaultGame =",33],["defaultGame : Game",28]],"useCount":72},{"word":"defaultModel","context":[["defaultModel : Model",26],["initialState = Elmer.componentState App.defaultModel App.view App.update",21],["defaultModel = App.defaultModel",14],["defaultModel = App.defaultModel",14],["defaultModel =",30]],"useCount":105},{"word":"defaultOptions","context":[["defaultOptions =",46],["defaultOptions : Options",38],[", on, onWithOptions, Options, defaultOptions",11]],"useCount":95},{"word":"defaultSettings","context":[["defaultSettings =",11],["(Http.send Http.defaultSettings request)",55],["Http.send Http.defaultSettings",24],["|> Http.send Http.defaultSettings",17],["Http.defaultSettings",14],["fromJson decoder (send defaultSettings request)",12]],"useCount":133},{"word":"defaults","context":[["colour = lookup .colour aes' defaults",30],["which provides aesthetically reasonable defaults for colors. Each color also",11],["defaults to 10.",13],["x = lookup .x aes' defaults",17],["linetype = lookup .linetype aes' defaults",20],["visibility = lookup .visibility aes' defaults",26]],"useCount":117},{"word":"degrees","context":[["degrees : Float -> Float",18],["you would say, `(rotate (degrees 30) form)`.",13],["y = makeRotate (degrees angleYZ) i",13],["hsla (h + degrees 180) s l a",12],["collage 50 50 [ rotate (degrees angle) (twoRects colr) ]",16],[", degrees, radians, turns",12],["|> rotate (degrees 30)",11],["degrees =",11],["@docs degrees, radians, turns",18],["{-| Convert degrees to standard Elm angles (radians). -}",18]],"useCount":164},{"word":"delta","context":[["The first time delta after a pause is always zero, no matter how long",11],["Signal.sampleOn delta <|",13],["delta",19],[", delta : Time",20],["delta : Signal Time",22],["delta =",35]],"useCount":120},{"word":"depth","context":[["1 + max (depth left) (depth right)",11],["depth tree =",12],["(def belcirc (circle botcolor r (- (+ h depth) (* 2! r)) r))",12],["1 + max (depth left) (depth right)",11],["(def blrbox (rect botcolor 0! (- h r) w (- depth r)))",12],["(def bercirc (circle botcolor (- w r) (- (+ h depth) (* 2! r)) r))",12],["(def btbbox (rect botcolor r (- h r) (- w (* 2! r)) depth))",12],["tree: pre-order, in-order, post-order, depth-first, etc.",12]],"useCount":94},{"word":"description","context":[["description =",13],["[ text todo.description ]",16],[", value todo.description",18],["-- A description of the kinds of actions that can be performed on the model of",21],["{ description = desc",21],["{ description : String",25],[", description : String",53]],"useCount":167},{"word":"developer","context":[["{-| Sets [`border-image-width`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-width)",20],["[`max-width`]https://developer.mozilla.org/en-US/docs/Web/CSS/max-width#Values),",20],["[pseudo-class](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes).",165],["{-| Sets [`border-block-end`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end)",30],["{-| The `middle` [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) value.",30],["{-| https://developer.mozilla.org/en-US/docs/Web/CSS/length",30],["{-| Sets [`border-block-start`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start)",30],["{-| Sets [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)",30],["[pseudo-element](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements).",25],["[`min-width`]https://developer.mozilla.org/en-US/docs/Web/CSS/min-width#Values),",20]],"useCount":710},{"word":"dict","context":[["remove key dict =",21],["dict",64],["toList dict =",22],["case dict of",179],["partition predicate dict =",21],["member key dict =",21],["foldl f acc dict =",21],["map f dict =",21],["keys dict =",22],["values dict =",22]],"useCount":847},{"word":"dictionary","context":[["{-| Insert a key-value pair into a dictionary. Replaces value when there is",21],["{-| Fold over the key-value pairs in a dictionary, in order from highest",21],["{-| Fold over the key-value pairs in a dictionary, in order from lowest",21],["{-| Partition a dictionary according to a predicate. The first dictionary",21],["{-| Keep a key-value pair when its key does not appear in the second dictionary.",19],["dictionary.",19],["{-| Keep a key-value pair when its key appears in the second dictionary.",20],["filter predicate dictionary =",20],["{-| Remove a key-value pair from a dictionary. If the key is not found,",21],["{-| Partition a dictionary according to a predicate. The first dictionary",21]],"useCount":459},{"word":"diff","context":[["diff : Set comparable -> Set comparable -> Set comparable",11],[", union, intersect, diff",28],["diff t1 t2 =",20],["diff : Dict comparable v -> Dict comparable v -> Dict comparable v",17],["@docs union, intersect, diff",34]],"useCount":110},{"word":"different","context":[["Notice that we use different seeds on each line. This is important! If you use",11],["together lots of different signals to feed into a `foldp`.",12],["{-| Use three different decoders on a JS value. This is nice for extracting",14],["{-| Try out multiple different decoders. This is helpful when you are dealing",14],["where the first few types are different, followed by 0 or more of the same",18],["{-| Use two different decoders on a JS value. This is nice for extracting",22]],"useCount":91},{"word":"direction","context":[["flex-direction property.",20],[", css \"flex-direction\" \"column\"",17],["{-| Function composition, passing results along in the suggested direction. For",34],["case direction of",43],["direction =",59],[", direction : Direction",12],["{-| Move a shape in the y direction. This is relative so `(moveY 10 form)` moves",13],["This direction of function composition seems less pleasant than `(<<)` which",17],[", direction",12],["{-| Move a shape in the x direction. This is relative so `(moveX 10 form)` moves",13]],"useCount":287},{"word":"disabled","context":[[", disabled : Bool",25],[", disabled = False",26],["disabled =",25],[", Attributes.disabled (status /= Form.Entering)",24],["[ ( \"disabled\", model.disabled )",14],["[ ( \"disabled\", model.disabled )",14],[", disabled",13]],"useCount":141},{"word":"display","context":[["display: none !important;",28],["[ ( \"display\", \"flex\" )",23],[", display = Compatible",30],["[ \"display\" => \"inline-block\"",24],[", (\"display\", \"inline-block\")",72],["display: none;",33],["display: block;",36],["[ css \"display\" \"flex\"",40],["display: table;",50],["display: inline-block;",23]],"useCount":568},{"word":"distributed","context":[["-- or distributed except according to those terms.",13],["v. 2.0. If a copy of the MPL was not distributed with this file, you can",77]],"useCount":90},{"word":"div","context":[["div []",787],["div",1151],["div [] []",65],[", Html.div",66],["div [] [",82],["Html.div",124],["</div>",134],[", div []",146],[", div",406],["[ div",415]],"useCount":4890},{"word":"do","context":[["to do this.",12],["that satisfy the predicate, and the second list contains all the value that do",12],["to do brief animations based on user input without major inefficiencies.",11],["predicate, the second consisting of elements which do not.",11],["it will do the wrong thing. The expected behavior is:",16],["{-| You probably do not want to use this. It takes `(y/x)` as the",18],["really a helper function so you do not need to write `(:=)` so many times.",18]],"useCount":98},{"word":"docs","context":[["Blog.docs",29],["@docs map, map2, map3, map4, map5",36],["@docs union, intersect, diff",34],["{-| https://developer.mozilla.org/en-US/docs/Web/CSS/length",30],["{-| The `middle` [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) value.",30],["@docs map, foldl, foldr, filter, partition",36],["[pseudo-class](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes).",165],["{-| Sets [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)",30],["{-| Sets [`border-block-end`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end)",30],["{-| Sets [`border-block-start`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start)",30]],"useCount":1788},{"word":"does","context":[["corresponding property. Sometimes changing an attribute does not change the",12],["{-| Keep a key-value pair when its key does not appear in the second dictionary.",19],["with something with a very strange shape and when `andThen` does not help",18],["of points does not need to start and end with the same position.",13],["function does not need to guarantee a particular order of",12]],"useCount":74},{"word":"dog","context":[["join \" \" [\"cat\",\"dog\",\"cow\"]       == \"cat dog cow\"",12],["split \",\" \"cat,dog,cow\"        == [\"cat\",\"dog\",\"cow\"]",12],["join \" \" [\"cat\",\"dog\",\"cow\"]       == \"cat dog cow\"",12],["split \",\" \"cat,dog,cow\"        == [\"cat\",\"dog\",\"cow\"]",12],["toIndexedList (fromList [\"cat\",\"dog\"]) == [(0,\"cat\"), (1,\"dog\")]",12],["toIndexedList (fromList [\"cat\",\"dog\"]) == [(0,\"cat\"), (1,\"dog\")]",12]],"useCount":72},{"word":"down","context":[[", flow down [",17],["flow down",195],["flow down [",39],["down",33],["|> flow down",21],["in  flow down",19],["flow down <|",18],["{-| Floor function, rounding down. -}",18],["narrow things down so you can be more targeted.",18],["-- rounds down",13]],"useCount":417},{"word":"dt","context":[["code > span.dt { color: #204a87; }",28],["Tick dt ->",25],["|> gravity dt",19],["|> physics dt",18],["step (dt, keys) =",16],["dt =",15],["Animate dt ->",11]],"useCount":132},{"word":"e","context":[["{ element = e.element",43],["let p = e.props",37],["{-| An approximation of e. -}",18],["Err e ->",45],["case e of",45],["ian.e.mackenzie@gmail.com",77],["Err e -> Err e",21],["Just e ->",20],["e =",19],["Err e -> Err e",21]],"useCount":533},{"word":"element","context":[["[pseudo-element](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements).",25],["{-| Return Just the element at the index or Nothing if the index is out of range.",13],["case element of",13],["case e.element of",14],["{-| Handle an array with exactly one element.",14],["{-| Apply a function on every element in an array.",12],["{-| Add an element to the front of a list. Pronounced *cons*.",12],["{ element = e.element",43],["{ element = e.element",43],["in element",17]],"useCount":374},{"word":"elements","context":[["[pseudo-element](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements).",25],["{-| Stack elements vertically.",20],["things. Note that tuples with 7 or more elements are not comparable; why",18],["{-| Determine if any elements satisfy the predicate.",13],["{-| Keep only elements that satisfy the predicate:",13],["{-| Handle an array with exactly two elements. Useful for points and simple",14],["{-| Handle an array with exactly three elements.",14],["{-| Create two new sets; the first consisting of elements which satisfy a",15],["If one list is longer, the extra elements are dropped.",15],["{-| Keep only elements that satisfy the predicate.",13]],"useCount":268},{"word":"elm","context":[["[list]: https://groups.google.com/forum/?fromgroups#!forum/elm-discuss",14],[", \"\\nPlease report this bug to <https://github.com/elm-lang/Elm/issues>\"",13],["* [Atom](https://atom.io/packages/language-elm)",14],["[irc]: http://webchat.freenode.net/?channels=elm",13],["```elm",718],["{-| See `Skald.elm` for documentation.",50],["cabal update ; cabal install elm",17],["* [Emacs](https://github.com/jcollard/elm-mode)",16],["* [Vim](https://github.com/lambdatoast/elm.vim)",16],["[arch]: https://github.com/evancz/elm-architecture-tutorial/",16]],"useCount":1136},{"word":"else","context":[["else",5573],["else 0",19],["else Nothing",101],["else model",15],["else (counterID, counterModel)",16],["else []",82],["else \"\"",32],["else game",17],["if code == 13 then Ok () else Err \"not the right key code\"",27],["} else {",30]],"useCount":6062},{"word":"em","context":[["borderImageOutset4 (n 2) (px 15) (n 14) (em 3)",12],["borderRadius4 (em 4) (px 2) (pct 5) (px 3)",20],["borderRadius  (em 4)",20],["borderRadius3 (em 4) (px 2) (pct 5)",20],["borderRadius2 (em 4) (px 2)",20]],"useCount":92},{"word":"emit","context":[["port emit : ( String, Value ) -> Cmd msg",67],["run emit tests",36],["foldl cons \"\" \"time\" == \"emit\"",12],["run emit Tests.all",11]],"useCount":126},{"word":"empty","context":[["foldl add (empty, empty) dict",18],["isEmpty empty == True",23],["@docs empty, singleton, insert, update, remove",23],["empty =",120],[", body = Http.empty",48],["Dict.empty",48],["empty",41],["Http.empty",38],[", body = empty",31],[", empty",28]],"useCount":809},{"word":"emptyModel","context":[["emptyModel =",67],["emptyModel : Model",61],[", MG.emptyModel",12],["MG.emptyModel",13]],"useCount":153},{"word":"en","context":[["{-| Sets [`border-block-end`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end)",30],["{-| The `middle` [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) value.",30],["{-| https://developer.mozilla.org/en-US/docs/Web/CSS/length",30],["{-| Sets [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)",30],["{-| Sets [`border-block-start`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start)",30],["[pseudo-class](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes).",165],["[pseudo-element](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements).",25],["{-| Sets [`border-image-outset`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-outset)",20],["{-| Sets [`padding`](https://developer.mozilla.org/en-US/docs/Web/CSS/padding)",20],["{-| Sets [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin)",20]],"useCount":821},{"word":"end","context":[["`oneOf` but everything is supposed to work out at the end. For example,",18],["that indicates the end of the slice. The slice extracts up to but not including",12],["-- .end",15],["the end of the array.",12],["`end`.",12],["of points does not need to start and end with the same position.",13],["`andThen` end",13],["end =",20],["{-| Sets [`border-block-end`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end)",30],["{-| Sets [`border-block-end`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end)",30]],"useCount":269},{"word":"equal","context":[["to numerical roundoff) they might not be exactly equal.",23],["Expect.equal",149],["|> Expect.equal (outdented output)",39],["equal True",16],["\\() -> Expect.equal",11],["|> Expect.equal Expect.pass",13],["Expect.equal []",16],["One turn is equal to 360&deg;.",18],["The relations are less than, equal to, and greater than.",18]],"useCount":303},{"word":"equivalent","context":[["Examples use `==` to indicate that two expressions are equivalent, even if (due",23],["-- is equivalent to",22],["You can think of this operator as equivalent to the following:",19],["Here are four things that are equivalent:",12],["-- All of the following expressions are equivalent:",13]],"useCount":89},{"word":"err","context":[["TexturesError err ->",11],["fromMaybe err maybe =",11],["Nothing -> Err err",11],["`onError` \\err ->",12],["Failure err ->",14],["err ->",15],["Err err ->",88]],"useCount":162},{"word":"error","context":[["you with optional arguments, error handling, and records with optional fields.",14],["|> recover (Task.succeed << assertEqual \"no error\")",18],["to improve error messages when things go wrong. For example, the following",18],["decoder is able to provide a much more specific error message when `fail` is",18],[", error : String",19],["Just error ->",23],[", error : Maybe String",31],["case error of",49],[", error = Nothing",45],["Err error ->",97]],"useCount":402},{"word":"evan","context":[["split \"/\" \"home/evan/Desktop/\" == [\"home\",\"evan\",\"Desktop\", \"\"]",12],["join \"/\" [\"home\",\"evan\",\"Desktop\"] == \"home/evan/Desktop\"",12],["Blog.evan",117],["join \"/\" [\"home\",\"evan\",\"Desktop\"] == \"home/evan/Desktop\"",12],["split \"/\" \"home/evan/Desktop/\" == [\"home\",\"evan\",\"Desktop\", \"\"]",12]],"useCount":165},{"word":"evancz","context":[["[elm-effects]: http://package.elm-lang.org/packages/evancz/elm-effects/latest",11],["[elm-markdown]: http://package.elm-lang.org/packages/evancz/elm-markdown/latest",12],["\"evancz\"",12],["[arch]: https://github.com/evancz/elm-architecture-tutorial",13],["[arch]: https://github.com/evancz/elm-architecture-tutorial/",16],[", a [ href \"https://github.com/evancz\" ] [ text \"Evan Czaplicki\" ]",17]],"useCount":81},{"word":"event","context":[["case event of",46],["event",12],["{-| Sample from the second input every time an event occurs on the first input.",13],["responder event listener =",14]],"useCount":85},{"word":"every","context":[["that you see in every Elm program.",11],["Time.every second Tick",19],["{-| Apply a function on every element in an array.",12],["{-| Apply a function to every element of a list.",12],["{-| Sample from the second input every time an event occurs on the first input.",13],["Here's a handy trick that every Elm programmer should know:",14],["import Time exposing (every, second)",11],["Not every browser has access to the same typefaces, so rendering will use the",11],["{-| Apply a function on every element with its index as first argument.",12],["{-| Transform every character in a string",12]],"useCount":127},{"word":"everything","context":[["[elm-effects][]. From there it will wire everything up for you!",11],["[ everything",13],["`oneOf` but everything is supposed to work out at the end. For example,",18],["everything wid =",59],["everything : Int -> Element",17]],"useCount":118},{"word":"exactly","context":[["{-| The exclusive-or operator. `True` if exactly one input is `True`. -}",17],["{-| Given a value, returns exactly the same value. This is called",17],["{-| Handle an array with exactly two elements. Useful for points and simple",14],["{-| Handle an array with exactly one element.",14],["exactly as you specify.",14],["{-| Handle an array with exactly three elements.",14],["to numerical roundoff) they might not be exactly equal.",23],["pattern match on strings exactly as you would with lists.",12]],"useCount":125},{"word":"example","context":[[", example",36],["handy more often than you might expect. For example, creating a zeroed out list",18],["to improve error messages when things go wrong. For example, the following",18],["formatted data. For example, this lets you create a parser for \"variadic\" lists",18],["has a nice example of this with further explanation in the tutorial itself.",15],["get \"https://example.com/api/items/1\"",15],["So our example expands out to something like this:",19],["* Basic example",24],["example, the following code checks if the square root of a number is odd:",34],["`oneOf` but everything is supposed to work out at the end. For example,",18]],"useCount":310},{"word":"expect","context":[[", expect = expectNothing",13],["be used as a value as well. When being used as a value, we call it, expect",11],["expect",14],["handy more often than you might expect. For example, creating a zeroed out list",18],["<| expect",24]],"useCount":80},{"word":"expected","context":[[", expected = [Auction.Pass]",13],["[ test \"pretty prints the expected output\" <|",44],["it will do the wrong thing. The expected behavior is:",16],["expected =",30],["in test name <| assertEqual expected actual",19],[", expected = [Auction.Bid 4 (Just Card.Clubs)]",14],["expected",13],["[ test \"pretty prints the expected output\"",22],["[ \"Internal red-black tree invariant violated, expected \"",19]],"useCount":190},{"word":"exposing","context":[["import Time exposing (Time)",326],["import Html.Events exposing (onClick)",353],["import Dict exposing (Dict)",420],["import Task exposing (Task)",436],["module Main exposing (..)",324],["exposing",317],["import Graphics.Element exposing (..)",498],["import Html.Events exposing (..)",741],["import Html.Attributes exposing (..)",1307],["import Html exposing (..)",1855]],"useCount":17634},{"word":"f","context":[["foldl f (f key value (foldl f acc left)) right",19],["foldr f acc t =",21],["tests = List.map f inputs",20],["foldl f acc dict =",21],["map f dict =",21],["g (f x)",22],["f x",38],["f a b",23],["f <| x = f x",22],["f <| x = f x",22]],"useCount":844},{"word":"fail","context":[["fail : String -> Decoder a",19],["Native.Json.fail",19],["fail =",37],["-- algorithm. Any other occurrence is a bug and should fail an assert.",19],["decoder is able to provide a much more specific error message when `fail` is",18],["@docs maybe, oneOf, map, fail, succeed, andThen",18],[", fail \"expecting some kind of point\"",18],["fail (tag ++ \" is not a recognized tag for shapes\")",18],["Expect.fail \"Nothing found\"",17],["Task.fail (Http.BadResponse response.status response.statusText)",17]],"useCount":254},{"word":"false","context":[["\"private\": false,",31],["`C.false`",13],[", attribute \"aria-expanded\" \"false\"",14],["\"has_pages\": false,",27],["\"site_admin\": false",30],["\"fork\": false,",31]],"useCount":146},{"word":"family","context":[["font-family: futura,'century gothic','twentieth century',calibri,verdana,helvetica,arial;",11],["font-family property.",11],[", ( \"font-family\", \"monospace\" )",12],[", (\"font-family\", \"monospace\")",43]],"useCount":77},{"word":"favorability","context":[[", favorability = Vulnerability.Equal",150]],"useCount":150},{"word":"field","context":[["case field of",18],[", field : String",26],[", field = \"\"",39],["{-| Access a nested field, making it easy to dive into big structures. This is",18],["maybe you have an optional field that can have a default value when it is",18],["{-| Helpful when one field will determine the shape of a bunch of other fields.",16],["failure in `Nothing`. If you are expecting that a field can sometimes be `null`,",14],["{ model | field = str }",14],["if String.isEmpty model.field",12],["{-| Decode an object if it has a certain field.",12]],"useCount":220},{"word":"fields","context":[[", fields =",37],["you with optional arguments, error handling, and records with optional fields.",14],["{-| Helpful when one field will determine the shape of a bunch of other fields.",16],["List.foldr (:=) decoder fields",36],["at fields decoder =",37],["multiple fields from an object.",36]],"useCount":176},{"word":"file","context":[["Qualified imports are preferred. Module names must match their file name,",12],["If this is annoying, please file an issue, so adding support for \"auto\"",12],["so module `Parser.Utils` needs to be in file `Parser/Utils.elm`.",12],["This file is part of celestia.",14],["v. 2.0. If a copy of the MPL was not distributed with this file, you can",77]],"useCount":127},{"word":"filled","context":[["{-| Create a filled in shape. -}",13],["dot colr = collage 50 50 [ filled colr (circle 15) ]",13],["group (List.map (filled colr) [ rect 8 30, rect 30 8 ])",12],["|> filled blue",33],["scale 2 (move (10,10) (filled blue (ngon 5 30)))",18],["|> filled color",17],["|> filled white",14],["form <- filled red <| Collage.square 20",14],["filled : Color -> Shape -> Form",13],[", filled",13]],"useCount":206},{"word":"filter","context":[["|> List.filter snd",17],["List.filter",39],["filter predicate dictionary =",20],["reads nicely in expressions like: `filter (not << isRegistered) students`",17],["filter : (a -> Bool) -> List a -> List a",16],["filter : (comparable -> v -> Bool) -> Dict comparable v -> Dict comparable v",16],["filter =",15],["filter isEven [1..6] == [2,4,6]",12],[", filter",29],["@docs map, foldl, foldr, filter, partition",36]],"useCount":299},{"word":"filterMap","context":[["filterMap : (a -> Maybe b) -> List a -> List b",12],["|> List.filterMap",12],["@docs filterMap, concatMap, indexedMap",12],["List.filterMap",13],["|> List.filterMap identity",20],["let filterJust = List.filterMap identity",22],["JE.object <| List.filterMap identity <|",44]],"useCount":135},{"word":"first","context":[["where the first few types are different, followed by 0 or more of the same",18],["{-| Flip the order of the first two arguments to a function. -}",17],["{-| Given a 2-tuple, returns the first value. -}",17],["|> Tuple.first",15],["first :: rest ->",83],["first =",25],["{-| Create two new sets; the first consisting of elements which satisfy a",15],["import Tuple exposing (first, second)",18],["type alias Name = { first : String, last : String }",18],["{-| Partition a dictionary according to a predicate. The first dictionary",21]],"useCount":491},{"word":"flag","context":[["case flag of",57],["let (flag, newRight) = up right in",17],["let (flag, newLeft) = up left in",17]],"useCount":91},{"word":"flex","context":[["[ css \"display\" \"flex\"",40],["{-| Sets [`flex`](https://developer.mozilla.org/en-US/docs/Web/CSS/flex) property.}",15],[", css \"flex-direction\" \"column\"",17],[", css \"align-items\" \"flex-start\"",17],["{-| Sets [`flex`](https://developer.mozilla.org/en-US/docs/Web/CSS/flex) property.}",15],[", \"display\" => \"flex\"",14],[", ( \"flex-direction\", \"column\" )",12],["flex-direction property.",20],[", css \"flex-flow\" \"row wrap\"",22],["[ ( \"display\", \"flex\" )",23]],"useCount":229},{"word":"flip","context":[["flip Svg.circle [] <|",16],["flip : (a -> b -> c) -> (b -> a -> c)",19],["flip f b a =",11],["flip Svg.rect [] <|",13],["@docs identity, always, (<|), (|>), (<<), (>>), flip, curry, uncurry",13]],"useCount":72},{"word":"float","context":[["(\"y\" := float)",43],["precision mediump float;",114],["@docs string, int, float, bool, null",26],["(\"x\" := float)",43],["float =",38],["float: left;",22],[", object2 (,) (\"x\" := float) (\"y\" := float)",36],["[ tuple2 (,) float float",36],["[ tuple2 (,) float float",36],[", object2 (,) (\"x\" := float) (\"y\" := float)",36]],"useCount":808},{"word":"floor","context":[["Native.Basics.floor",11],["Just floor ->",11],[", round, floor, ceiling, truncate, toFloat",12],["|> floor",15],["model.floor",16],["floor = Just newFloor",18],["@docs round, floor, ceiling, truncate, toFloat",18],["floor : Float -> Int",18],["floor =",20],["case model.floor of",27]],"useCount":166},{"word":"flow","context":[["flow down",195],["flow right",75],[", flow right",40],["flow down [",39],["flow right <|",24],[", css \"flex-flow\" \"row wrap\"",22],["flow right [",22],["|> flow down",21],["in  flow down",19],["flow",41]],"useCount":571},{"word":"foldl","context":[["foldl add (empty, empty) dict",18],["List.foldl",64],["@docs map, foldl, foldr, filter, partition",36],[", foldl, foldr, map",28],["foldl f acc dict =",21],["Dict.foldl",21],["foldl f (f key value (foldl f acc left)) right",19],["foldl (\\k v t -> remove k t) t1 t2",20],["foldl insert t2 t1",19],["foldl f (f key value (foldl f acc left)) right",19]],"useCount":551},{"word":"foldp","context":[["together lots of different signals to feed into a `foldp`.",12],["gameState = foldp stepGame defaultGame input",11],["main = scene <~ foldp (+) 0 (fps 50)",12],["foldp (+) 0 (fps 40)",12],["Signal.foldp update initialModel actions.signal",12],["@docs foldp",12],["Signal.foldp",23],["foldp : (a -> state -> state) -> state -> Signal a -> Signal state",14],["foldp (\\click total -> total + 1) 0 Mouse.clicks",13]],"useCount":121},{"word":"foldr","context":[["foldr f (f key value (foldr f acc right)) left",19],["List.foldr",54],["foldr : (comparable -> v -> b -> b) -> b -> Dict comparable v -> b",17],["foldr f (f key value (foldr f acc right)) left",19],["foldr (\\key value valueList -> value :: valueList) [] dict",20],["foldr (\\key value keyList -> key :: keyList) [] dict",20],["foldr f acc t =",21],[", foldl, foldr, map",28],["List.foldr (:=) decoder fields",36],["@docs map, foldl, foldr, filter, partition",36]],"useCount":466},{"word":"following","context":[["You can think of this operator as equivalent to the following:",19],["readable versions I have come up have the following length",12],["-- All of the following expressions are equivalent:",13],["-- This creates the following record constructor:",16],["This program is not particularly large, so definitely see the following",16],["Consider the following code to create a pentagon:",18],["to improve error messages when things go wrong. For example, the following",18],["provided that the following conditions are met:",19],["and all necessary modules have been imported using the following pattern:",23],["example, the following code checks if the square root of a number is odd:",34]],"useCount":234},{"word":"font","context":[[", (\"font-weight\", \"bold\")",13],[", ( \"font-family\", \"monospace\" )",12],[", (\"font-family\", \"monospace\")",43],["[ (\"font-size\", \"20px\")",42],[", (\"font-size\", \"2em\")",35],["code > span.co { color: #8f5902; font-style: italic; }",28],["<div style=\"color:#666;font-size:0.8em;text-align:left\">",28],["code > span.kw { color: #204a87; font-weight: bold; }",28],["code > span.er { font-weight: bold; }",28],["font-size: 12px;",16]],"useCount":328},{"word":"fontVariant","context":[[", fontVariant = Compatible",68],[", fontVariant : Compatible",16]],"useCount":84},{"word":"footer","context":[["footer",35],[", Footer.footer",14],["footer [ id \"info\" ]",14],[", footer",14],["[ id \"footer\"",15],["footer =",30]],"useCount":122},{"word":"for","context":[["Cooperate - the frontend for the cooperate.online application",24],["[ for \"toggle-all\" ]",20],[", span [ class \"tagline\" ] [ text \"Like GitHub, but for Elm things.\" ]",21],["formatted data. For example, this lets you create a parser for \"variadic\" lists",18],["{-| Use two different decoders on a JS value. This is nice for extracting",22],["`for` cons int",22],["`Check.for`",24],["for a live demo.",33],["{-| See `Skald.elm` for documentation.",50],["`C.for`",87]],"useCount":886},{"word":"form","context":[["and turns things counterclockwise. So to turn `form` 30&deg; to the left",13],[", class \"form-control\"",34],["[ class \"form-control\"",23],["case form of",18],["form",17],["Html.form",15],["form <- filled red <| Collage.square 20",14],["{-| Rotate a form by a given angle. Rotate takes standard Elm angles (radians)",13],["{-| Move a shape in the x direction. This is relative so `(moveX 10 form)` moves",13],["you would say, `(rotate (degrees 30) form)`.",13]],"useCount":272},{"word":"found","context":[["first typeface in the list that is found on the user's computer. If there are",11],["{-| Remove a key-value pair from a dictionary. If the key is not found,",21],["{-| Remove a value from a set. If the value is not found, no changes are made.",15],["{-| Get the value associated with a key. If the key is not found, return",20],["Expect.fail \"Nothing found\"",17]],"useCount":84},{"word":"fps","context":[["foldp (+) 0 (fps 40)",12],["Signal.map inSeconds (fps 35)",12],["main = scene <~ foldp (+) 0 (fps 50)",12],[", map TimeDelta (fps 40)",14],["import Time exposing (fps)",15],["(map TimeDelta (fps 40))",16]],"useCount":81},{"word":"frame","context":[["frame",18],[", yDirection = yDirection frame",17],["\\frame ->",17],[", xDirection = xDirection frame",17],["relativeTo frame =",21],["Just frame ->",16],["placeIn frame =",25],["frame =",25],["{ originPoint = originPoint frame",30]],"useCount":186},{"word":"from","context":[["{-| Extract an Array from a JS array.",18],["{-| Create a sprite from a sprite sheet. It cuts out a rectangle",13],["{-| Extract a List from a JS array.",14],["{-| Reduce a list from the left, building up all of the intermediate results into a list.",15],["{-| Remove a value from a set. If the value is not found, no changes are made.",15],["argument, so there is no way to know whether the negative signs comes from",18],["{-| Remove a key-value pair from a dictionary. If the key is not found,",21],["{-| Fold over the key-value pairs in a dictionary, in order from lowest",21],["multiple fields from an object.",36],["{-| Fold over the key-value pairs in a dictionary, in order from highest",21]],"useCount":480},{"word":"fromList","context":[["Dict.fromList",63],["|> Dict.fromList",45],["|> Array.fromList",31],["fromList []",30],[", toList, fromList",29],["|> Set.fromList",26],["A.fromList[ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],",24],["Array.fromList",24],["@docs keys, values, toList, fromList",22],[", fromList",20]],"useCount":906},{"word":"fromPolar","context":[["fromPolar =",11],["Native.Basics.fromPolar",11],[", toPolar, fromPolar",12],["@docs toPolar, fromPolar",18],["fromPolar : (Float,Float) -> (Float,Float)",18]],"useCount":70},{"word":"fromString","context":[["|> fromString",13],["leftAligned (monospace (fromString \"code\"))",14],["fromString =",11],["Text.fromString",12],["line Through (fromString \"strike out\")",20],["import Text exposing (fromString)",31],["with `Text.fromString` it should look just like the value it came from.",13],["|> Text.fromString",42]],"useCount":156},{"word":"fst","context":[["|> fst",35],["|> List.map fst",22],["fst <|",20],["@docs fst, snd",17],["fst : (a,b) -> a",17],[", fst, snd",11],["Signal.map fst effectsAndModel",11]],"useCount":133},{"word":"function","context":[["{-| Update the value of a dictionary for a specific key with a given function. -}",18],["{-| Forward function application `x |> f == f x`. This function is useful",18],["the `oneOf` function.",18],["{-| Ceiling function, rounding up. -}",18],["a function that *always* returns the same value regardless of what input you give.",18],["{-| Change how arguments are passed to a function.",42],["function =",21],["It totally ignores the second argument, so `always 42` is a function that always",18],["{-| Forward function application `x |> f == f x`. This function is useful",18],["{-| Floor function, rounding down. -}",18]],"useCount":634},{"word":"functions","context":[["returns 42. When you are dealing with higher-order functions, this comes in",18],["Anonymous functions:",13],["Some useful functions for working with time (e.g. setting FPS) and combining",13],["- [Applying Functions](#applying-functions)",14],["These functions only work on `comparable` types. This includes numbers,",18],["- [Functions](#functions)",13],["# Core functions",20],["{-| Tons of useful functions that get imported by default.",18]],"useCount":127},{"word":"g","context":[["g = toFloat green / 255",12],["Some useful functions for working with time (e.g. setting FPS) and combining",13],["g =",14],["(h,s,l) = rgbToHsl r g b",12],[", g",23],["rgb r g b =",12],["(g << f)  ==  (\\x -> g (f x))",17],["(g << f)  ==  (\\x -> g (f x))",17],["g (f x)",22],["RGBA r g b a ->",28]],"useCount":203},{"word":"game","context":[["{ game",34],["game",20],["else game",17],["{ game |",17],["case model.game of",13]],"useCount":101},{"word":"generate","context":[["list n (Generator generate) =",11],["generate seed",20],["-- generate (int 0 100) seed0 ==> (42, seed1)",24],["{-| Create a pair of random values. A common use of this might be to generate",12],["listHelp [] n generate seed",11],["listHelp list n generate seed =",12]],"useCount":90},{"word":"generator","context":[["generator =",35],["{-| Produce the initial generator state. Distinct arguments should be likely",13],["to produce distinct generator states.",13],["generator seed",12]],"useCount":73},{"word":"generic","context":[[", it \"should render the generic properties properly\"",14],["linear viscoelastic generic,",14],[", it \"should render generic properties properly\"",37],[", it \"should render generic properties correctly\"",12]],"useCount":77},{"word":"get","context":[["get targetKey dict =",19],["get \"Tom\"   animals == Just Cat",19],["get \"Spike\" animals == Nothing",19],["ST.get >>= (\\state ->",18],["{-| Tons of useful functions that get imported by default.",18],[", get",23],["get =",34],["case get key dict of",20],["Lens get set",22],["let newContent = get s contentMap",24]],"useCount":483},{"word":"getRandomGif","context":[["getRandomGif : String -> Cmd Msg",15],["(model, getRandomGif model.topic)",15],[", getRandomGif topic",22],["getRandomGif topic =",28]],"useCount":80},{"word":"github","context":[[", a [ href \"https://github.com/evancz\" ] [ text \"Evan Czaplicki\" ]",17],["[arch]: https://github.com/evancz/elm-architecture-tutorial/",16],["* [Emacs](https://github.com/jcollard/elm-mode)",16],[", a [ href (\"https://github.com/\" ++ result.name), target \"_blank\" ]",21],["-- See https://developer.github.com/v3/search/#example for how to customize!",11],["* [Vim](https://github.com/lambdatoast/elm.vim)",16],["* [Sublime Text](https://github.com/deadfoxygrandpa/Elm.tmLanguage)",14],["[arch]: https://github.com/evancz/elm-architecture-tutorial",13],[", \"\\nPlease report this bug to <https://github.com/elm-lang/Elm/issues>\"",13],["[laszlo]: https://github.com/laszlopandy",12]],"useCount":149},{"word":"give","context":[["the pause was. This way summing the deltas will actually give the amount",11],["The `init` transaction will give you an initial model and create any tasks that",11],["Notice that you must give the *attribute* name, so we use `class` as it would",12],["Notice that you must give the *property* name, so we use `className` as it",12],["-- TODO give these more descriptive names",14],["a function that *always* returns the same value regardless of what input you give.",18]],"useCount":78},{"word":"given","context":[["{-| Places the given value between all members of the given list.",14],["{-| Decode null as the value given, and fail otherwise. Primarily useful for",14],["{-| Filter out some updates. The given function decides whether we should",16],["{-| Calculate the logarithm of a number with a given base.",17],["{-| Clamps a number within a given range. With the expression",18],["{-| Update the value of a dictionary for a specific key with a given function. -}",18],["decoded with the given decoder.",20],["{-| Combine two dictionaries. If there is a collision, preference is given",21],["{- The actual pattern match here is somewhat lax. If it is given invalid input,",16],["{-| Places the given value between all members of the given list.",14]],"useCount":493},{"word":"glsl","context":[["[glsl|",64],["vertexShader = [glsl|",35],["fragmentShader = [glsl|",35]],"useCount":134},{"word":"gmail","context":[["ian.e.mackenzie@gmail.com",77]],"useCount":77},{"word":"green","context":[["accent4 = rgb 127 209 59      -- #7FD13B  green",11],["green =",19],["toRgb : Color -> { red:Int, green:Int, blue:Int, alpha:Float }",17],["{ red, green, blue, alpha } =",11],[", green = green",15],[", green = green",15],["|> filled green",11],["@docs red, orange, yellow, green, blue, purple, brown",11],["++ (toString green)",11],["g = toFloat green / 255",12]],"useCount":133},{"word":"greeting","context":[["greeting =",45],["in `<div class=\"greeting\"></div>` is called an *attribute*.",12],["in `div.className = 'greeting'` is called a *property*.",12],["greeting : Html",30]],"useCount":99},{"word":"grid","context":[["grid []",13],["case grid of",22],["grid",19],["import Material.Grid exposing (grid, size, cell, Device(..))",13],["[ Grid.grid",11]],"useCount":78},{"word":"group","context":[["--    <div class=\"btn-group\" role=\"group\" aria-label=\"...\">...</div>",12],["--    <div class=\"btn-group\" role=\"group\" aria-label=\"...\">...</div>",12],["group (List.map (filled colr) [ rect 8 30, rect 30 8 ])",12],["group : List Form -> Form",12],["@docs group, groupTransform",13],[", Toggles.group \"MyRadioGroup\"",13],["group =",16],["|> group",24],["group",62]],"useCount":176},{"word":"h","context":[["(cons (rect 'white' (- x0 10!) (- y0 10!) (+ w 20!) (+ h 20!))",17],["case h of",18],["HSLA h s l a ->",22],["( w, h ) =",23],["h =",26],["|> move (0, 24 - h/2)",16],["Image _ w h _ ->",16],["collage w h",15],["container w h middle <|",31],["hh = h/2",26]],"useCount":401},{"word":"h1","context":[["h1 =",16],["[ h1 [] [ text \"todos\" ]",21],["</h1>",58],["[ h1",43],["[ h1 [] [ text \"ElmHub\" ]",34]],"useCount":172},{"word":"has","context":[["has",48],["content that has \"quotation marks\".",14],["of time that the output signal has been running.",11],["{-| Decode an object if it has a certain field.",12],["{-| Pad a string on both sides until it has a given length.",12],["is the time the program has been running, updated 40 times a second.",13],["has a nice example of this with further explanation in the tutorial itself.",15],["{-| Pad a string on the right until it has a given length.",12],["{-| Pad a string on the left until it has a given length.",12],["provided. The following example only keeps even numbers and has an initial",12]],"useCount":183},{"word":"haskell","context":[["[Making a fast Curry](http://community.haskell.org/~simonmar/papers/evalapplyjfp06.pdf)",18],["```haskell",1044],["[System.Random](http://hackage.haskell.org/package/random-1.0.1.1/docs/System-Random.html)",13]],"useCount":1075},{"word":"hats","context":[["trimRight \"  hats  \\n\" == \"  hats\"",12],["trimLeft \"  hats  \\n\" == \"hats  \\n\"",12],["hats : Task Error (List String)",12],["trimLeft \"  hats  \\n\" == \"hats  \\n\"",12],["trim \"  hats  \\n\" == \"hats\"",12],["trim \"  hats  \\n\" == \"hats\"",12],["trimRight \"  hats  \\n\" == \"  hats\"",12],["hats =",21]],"useCount":105},{"word":"have","context":[["examples below, assume that all OpenSolid core types have been imported using",15],["Each pattern is indentation sensitive, meaning that you have to align",14],["maybe you have an optional field that can have a default value when it is",18],["list must have the same type.",13],["maybe you have an optional field that can have a default value when it is",18],["The basic arithmetic infix operators all figure out what type they should have automatically.",13],["and all necessary modules have been imported using the following pattern:",23],["{-| Represents a way of decoding JSON values. If you have a `(Decoder (List String))`",12],["readable versions I have come up have the following length",12],["readable versions I have come up have the following length",12]],"useCount":195},{"word":"head","context":[["|> List.head",115],["head :: tail ->",27],["head : List a -> Maybe a",14],["head list =",11],["|> head",13],["case List.head model.frames of",12],["{-| Split a non-empty string into its head and tail. This lets you",12]],"useCount":204},{"word":"header","context":[["header",39],["[ header []",30],["[ header",19],["header model =",18],["header []",16],["header =",59],["[ id \"header\" ]",16],["[ Html.div [class \"header\"]",13],["{ header : Header.Model",13],[", header",11]],"useCount":234},{"word":"headers","context":[[", headers =",84],[", headers = []",69],["headers =",19]],"useCount":172},{"word":"height","context":[[", height : Int",55],[", height (pct 100)",36],["height: 100%;",37],["height =",50],["bob   = { name=\"Bob\"  , height=1.85 }",24],["chuck = { name=\"Chuck\", height=1.76 }",24],["<div style=\"height:0.5em\"></div>",24],[", (\"height\", \"40px\")",27],["alice = { name=\"Alice\", height=1.62 }",24],[", (\"height\", \"100%\")",24]],"useCount":866},{"word":"heightOf","context":[["(heightOf hi + heightOf lo)",20],["container outer (heightOf elem) middle elem",11],["heightOf : Element -> Int",19],["(heightOf hi + heightOf lo)",20],["container w (heightOf words) middle words",23],["hs = List.map heightOf es",20]],"useCount":113},{"word":"hi","context":[["toString \"he said, \\\"hi\\\"\" == \"\\\"he said, \\\\\\\"hi\\\\\\\"\\\"\"",13],["toString \"he said, \\\"hi\\\"\" == \"\\\"he said, \\\\\\\"hi\\\\\\\"\\\"\"",13],["(max (widthOf hi) (widthOf lo))",18],["(Flow DDown [hi,lo])",20],["(heightOf hi + heightOf lo)",20]],"useCount":84},{"word":"hidden","context":[[", hidden (tasksCompleted == 0)",14],[", ( \"overflow\", \"hidden\" )",12],[", style [ (\"visibility\", \"hidden\") ]",12],["overflow: hidden;",13],[", hidden (List.isEmpty tasks)",13],[", (\"overflow\", \"hidden\")",12],["<div style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\">",20],["<div style=\"position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;\">",21]],"useCount":117},{"word":"history","context":[[", history = [ Auction.Pass, Auction.Bid 1 Nothing ]",43],[", history = []",71],["history =",20],[", history = [ Auction.Pass, Auction.Bid 2 Nothing ]",18],[", history = history",16],[", history = history",16]],"useCount":184},{"word":"how","context":[["**Be sure to [read the Elm Architecture tutorial][arch] to learn how this all",11],["stops&rdquo; that indicate how to interpolate between the inner and outer",11],["&ldquo;color stops&rdquo; that indicate how to interpolate between the start and",11],["The first time delta after a pause is always zero, no matter how long",11],["-- See https://developer.github.com/v3/search/#example for how to customize!",11],["{-| Change how arguments are passed to a function.",42]],"useCount":97},{"word":"href","context":[[", a [ href \"http://todomvc.com\" ] [ text \"TodoMVC\" ]",17],[", Footer.linkItem [ Footer.href \"#footers\" ] [ Footer.html <| text \"Link 2\"]",12],["[ Footer.linkItem [ Footer.href \"#footers\" ] [ Footer.html <| text \"Link 1\"]",12],["[ href \"#\"",12],["import Html.Attributes exposing (class, href)",15],["import Html.Attributes exposing (class, target, href, property, defaultValue)",15],[", a [ href \"https://github.com/evancz\" ] [ text \"Evan Czaplicki\" ]",17],[", href \"#\"",25],[", a [ href (\"https://github.com/\" ++ result.name), target \"_blank\" ]",21],["import Html.Attributes exposing (href)",19]],"useCount":165},{"word":"html","context":[["[System.Random](http://hackage.haskell.org/package/random-1.0.1.1/docs/System-Random.html)",13],["html =",24],["main = app.html",69],["html",13],[", Footer.linkItem [ Footer.href \"#footers\" ] [ Footer.html <| text \"Link 2\"]",12],["app.html",120],["html, body {",12],["[ Footer.linkItem [ Footer.href \"#footers\" ] [ Footer.html <| text \"Link 1\"]",12],["{ html : Signal Html",11]],"useCount":286},{"word":"http","context":[["[irc]: http://webchat.freenode.net/?channels=elm",13],["{-| Perform [modular arithmetic](http://en.wikipedia.org/wiki/Modular_arithmetic).",17],["{-| Create a [constant function](http://en.wikipedia.org/wiki/Constant_function),",17],["[Making a fast Curry](http://community.haskell.org/~simonmar/papers/evalapplyjfp06.pdf)",18],["numbers](http://en.wikipedia.org/wiki/NaN).",18],["[the identity function](http://en.wikipedia.org/wiki/Identity_function).",17],["[repl]: http://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop",16],["[records]: http://research.microsoft.com/pubs/65409/scopedlabels.pdf \"Extensible Records\"",35],[", a [ href \"http://todomvc.com\" ] [ text \"TodoMVC\" ]",17],["[associativity](http://en.wikipedia.org/wiki/Operator_associativity)",13]],"useCount":313},{"word":"https","context":[[", a [ href (\"https://github.com/\" ++ result.name), target \"_blank\" ]",21],["[pseudo-element](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements).",25],["{-| Sets [`padding`](https://developer.mozilla.org/en-US/docs/Web/CSS/padding)",20],[", link = \"https://aws.amazon.com/summits/\"",29],["{-| https://developer.mozilla.org/en-US/docs/Web/CSS/length",30],["{-| The `middle` [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) value.",30],["{-| Sets [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)",30],["{-| Sets [`border-block-end`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end)",30],["{-| Sets [`border-block-start`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start)",30],["[pseudo-class](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes).",165]],"useCount":932},{"word":"i","context":[["iLogBase b i =",13],["i =",14],["y = makeRotate (degrees angleYZ) i",13],["Ok i ->",14],["[ i",15],["Html.i",15],["Ok i",16],["mapToIndex i",18],["(map (\\\\i",19],["case i of",20]],"useCount":323},{"word":"ian","context":[["ian.e.mackenzie@gmail.com",77]],"useCount":77},{"word":"id","context":[["div [ id \"container\"]",53],["Just id ->",51],[", div [ id \"subContainer\"]",54],["{ id : String",59],["{ id : Int",97],[", id : Int",46],[", id = id",40],[", id = id",40],["{ id = id",34],["{ id = id",34]],"useCount":1223},{"word":"identity","context":[["JE.object <| List.filterMap identity <|",44],["identity",43],["Native.Json.identity",32],["let filterJust = List.filterMap identity",22],["|> List.filterMap identity",20],["[the identity function](http://en.wikipedia.org/wiki/Identity_function).",17],["identity : a -> a",17],["@docs identity, always, (<|), (|>), (<<), (>>), flip, curry, uncurry",13],[", toForm (if state == Play then spacer 1 1 else txt identity msg)",12],["initialize 4 identity    == fromList [0,1,2,3]",12]],"useCount":254},{"word":"if","context":[["if n == 0",28],["if List.isEmpty properties then",22],["Examples use `==` to indicate that two expressions are equivalent, even if (due",23],["if code == 13 then Ok () else Err \"not the right key code\"",27],["if code == 13 then",30],["if 200 <= response.status && response.status < 300 then",32],["example, the following code checks if the square root of a number is odd:",34],["if random < 50 then",40],["if n <= 0 then",24],["if",85]],"useCount":1224},{"word":"iframe","context":[["allowfullscreen></iframe>",11],["width=\"853\" height=\"480\"></iframe>",13],[", iframe",19],["<iframe width=\"600\"",20],["<iframe",33]],"useCount":96},{"word":"image","context":[["image : Int -> Int -> String -> Element",11],[", \"background-image\" => (\"url('\" ++ url ++ \"')\")",11],["background-image: none;",12],["image 30 30 \"/cat.jpg\"",16],["{-| Sets [`border-image-outset`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-outset)",20],["{-| Sets [`border-image-outset`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-outset)",20],["{-| Sets [`border-image-width`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-width)",20],["{-| Sets [`border-image-width`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-width)",20]],"useCount":130},{"word":"img","context":[["[ img",40],["img",34],[", img",15]],"useCount":89},{"word":"import","context":[["import Html exposing (..)",1855],["import Dict",533],["import List",683],["import Window",685],["import Html.Events exposing (..)",741],["import Html.Attributes exposing (..)",1307],["import Task",586],["import String",1504],["import Http",535],["import Graphics.Element exposing (..)",498]],"useCount":34370},{"word":"important","context":[["display: block !important;",23],["display: table-row !important;",21],["display: table-cell !important;",21],["{-| This library fills a bunch of important niches in Elm. A `Maybe` can help",14],["display: none !important;",28],["> site's content or function. Their design and use is therefore an important",12],["Notice that we use different seeds on each line. This is important! If you use",11]],"useCount":130},{"word":"in","context":[["in model",23],["in",16801],["let transform = maybeTransformAttr l in",23],["{-| Fold over the key-value pairs in a dictionary, in order from highest",21],["let words = width w' txt in",23],["in case newContent of",24],["in let",25],["Failures resemble code written in pipeline style, so you can tell",28],["{-| Function composition, passing results along in the suggested direction. For",34],["{-| Fold over the key-value pairs in a dictionary, in order from highest",21]],"useCount":18218},{"word":"index","context":[["{-| Return Just the element at the index or Nothing if the index is out of range.",13],["If the index is out of range, the array is unaltered.",12],["{-| Apply a function on every element with its index as first argument.",12],["{-| Return Just the element at the index or Nothing if the index is out of range.",13],["(\\index ->",14],[", index : Int",21],["index",23],["index =",27],["{-| Same as `map` but the function is also applied to the index of each",12],[", (\"z-index\", \"1\")",12]],"useCount":242},{"word":"indexedMap","context":[["indexedMap f xs =",12],["List.indexedMap",31],["@docs filterMap, concatMap, indexedMap",12],["indexedMap (*) (fromList [5,5,5]) == fromList [0,5,10]",12],["indexedMap (,) [\"Tom\",\"Sue\",\"Bob\"] == [ (0,\"Tom\"), (1,\"Sue\"), (2,\"Bob\") ]",12],["indexedMap : (Int -> a -> b) -> List a -> List b",12],["indexedMap : (Int -> a -> b) -> Array a -> Array b",11]],"useCount":102},{"word":"indexes","context":[["indexes \"i\" \"Mississippi\"   == [1,4,7,10]",12],["Both the `start` and `end` indexes can be negative, indicating an offset from",12],["{-| Take a substring given a start and end index. Negative indexes",12],["indexes : String -> String -> List Int",11],["indexes \"ss\" \"Mississippi\"  == [2,5]",12],["@docs contains, startsWith, endsWith, indexes, indices",12],["indexes \"needle\" \"haystack\" == []",12],["{-| Get all of the indexes for a substring in another string.",11]],"useCount":94},{"word":"infix","context":[["infix 4 >",18],["The basic arithmetic infix operators all figure out what type they should have automatically.",13],["infix 4 <",18],["infix 4 /=",18],["infix 4 ==",18],["- [Infix Operators](#infix-operators)",14],["infix 4 <=",18],["infix 4 >=",18]],"useCount":135},{"word":"infixl","context":[["infixl 6 -",18],["infixl 7 `rem`",17],["infixl 7 %",17],["infixl 7 *",18],["infixl 6 +",18],["infixl 7 //",17],["infixl 7 /",18],["infixl 0 |>",18],["infixl 4 ~",20],["infixl 4 <~",22]],"useCount":200},{"word":"infixr","context":[["infixr 2 ||",27],["infixr 3 &&",18],["infixr 5 ++",18],["infixr 0 <|",22],["infixr 9 <<",17],["infixr 5 ::",13]],"useCount":115},{"word":"info","context":[["footer [ id \"info\" ]",14],["info : (Name,Age)",13],["info =",12],["More info at: http://en.wikipedia.org/wiki/Tree_traversal",12],["Live info ->",11],["-- our application. See the following post for more info on this pattern and",11],[", Icon.view \"info\" [ Color.text Color.primary ]",12]],"useCount":85},{"word":"init","context":[["init : (Model, Cmd Msg)",122],["init : Int -> Model",43],["init : (Model, Effects Action)",64],["{ model = init",35],[", init",72],["init : ( Model, Cmd Msg )",154],["init : Model",235],["{ init = init",394],["{ init = init",394],["init =",686]],"useCount":2838},{"word":"initModel","context":[["initModel : Model",39],["initModel =",43],["|> MG.initModel",23]],"useCount":105},{"word":"initial","context":[["the [initial announcement][v7], or [this academic paper][records].",13],["create `(timestamp Mouse.x)`, an initial timestamp is produced. The timestamp",12],["provided. The following example only keeps even numbers and has an initial",12],["The `init` transaction will give you an initial model and create any tasks that",11],["initial =",25],["{-| Produce the initial generator state. Distinct arguments should be likely",13]],"useCount":86},{"word":"initialContent","context":[["initialContent =",42],[", mainContent = initialContent",43]],"useCount":85},{"word":"initialModel","context":[["initialModel : Model",203],["initialModel = {",11],["{ model = initialModel",11],["Signal.foldp update initialModel actions.signal",12],[", model = initialModel",11],["{ model  = initialModel",46],["initialModel =",282]],"useCount":576},{"word":"initialState","context":[["initialState = Elmer.componentState App.defaultModel App.view App.update",21],["initialState =",36],["initialState : State",20],["initialState = Elmer.componentState testModel App.view App.update",12]],"useCount":89},{"word":"initialize","context":[["@docs empty, repeat, initialize, fromList",11],["initialize : Int -> (Int -> a) -> Array a",11],["Notice that `repeat 3 x` is the same as `initialize 3 (always x)`.",12],["{-| Initialize an array. `initialize n f` creates an array of length `n` with",12],["initialize 4 (always 0)  == fromList [0,0,0,0]",12],["initialize 4 (\\n -> n*n) == fromList [0,1,4,9]",12],["initialize 4 identity    == fromList [0,1,2,3]",12]],"useCount":82},{"word":"inline","context":[[", (\"display\", \"inline-block\")",72],["[ ( \"display\", \"inline-block\" )",11],["[ \"display\" => \"inline-block\"",24],["display: inline-block;",23],[", ( \"display\", \"inline-block\" )",20]],"useCount":150},{"word":"input","context":[["[ Html.input",20],["a function that *always* returns the same value regardless of what input you give.",18],[", Html.input",37],["outdented (prettyPrint input)",38],["[ input",218],["input",102],["input : Signal Input",45],[", input",207],["case input of",41],["input =",160]],"useCount":1097},{"word":"inputs","context":[[", inputs =",18],["{-| The logical OR operator. `True` if one or both inputs are `True`.",17],["{-| The logical AND operator. `True` if both inputs are `True`.",17],["tests = List.map f inputs",20],["inputs =",34],[", inputs = []",68],[", inputs : List (Signal.Signal action)",13],["you can pipe into your app as one of the `inputs`.",11],["start { init = init, view = view, update = update, inputs = [] }",11],["The `inputs` field is for any external signals you might need. If you need to",11]],"useCount":220},{"word":"insert","context":[["List.foldl (\\(key,value) dict -> insert key value dict) empty assocs",17],[", empty, singleton, insert, update",16],["insert =",15],["foldl insert t2 t1",19],["insert key value dict =",21],["@docs empty, singleton, insert, update, remove",23],["insert : comparable -> v -> Dict comparable v -> Dict comparable v",17],["insert key value empty",13],["@docs empty, singleton, insert, remove",16],["div [] ([remove, insert] ++ counters)",16]],"useCount":256},{"word":"int","context":[["list (oneOf [ int, null 0 ])",18],["array int",18],["list int",18],["int : Decoder Int",20],["(\"age\" := int)",37],["int =",42],["(\"id\" := int)",20],["`for` cons int",22],["-- generate (int 0 100) seed0 ==> (42, seed1)",24],["@docs string, int, float, bool, null",26]],"useCount":535},{"word":"integer","context":[["int -5 5   -- an integer between -5 and 5",12],["int 0 10   -- an integer between zero and ten",12],["int minInt maxInt  -- an integer in the widest range feasible",12],["{-| Extract an integer.",18],["{-| Round a number to the nearest integer. -}",18],["{-| Convert an integer into a float. -}",18]],"useCount":90},{"word":"intersect","context":[["@docs union, intersect, diff",34],[", union, intersect, diff",28],["intersect t1 t2 =",21],["intersect : Dict comparable v -> Dict comparable v -> Dict comparable v",17],["intersect : Set comparable -> Set comparable -> Set comparable",11]],"useCount":111},{"word":"into","context":[["This application is broken up into four distinct parts:",16],["{-| Insert a key-value pair into a dictionary. Replaces value when there is",21],["{-| Convert a list of characters into a String. Can be useful if you",17],["{-| A way to turn Json values into Elm values. A `Decoder a` represents a",14],["{-| Convert an integer into a float. -}",18],["{-| Access a nested field, making it easy to dive into big structures. This is",18],["This splits paired arguments into two separate arguments.",18],["{-| Convert an association list into a dictionary. -}",18],["This combines two arguments into a single pair.",18],["{-| Reduce a list from the left, building up all of the intermediate results into a list.",15]],"useCount":461},{"word":"intro","context":[["intro : Element",20],["in  width w intro",17],[", section intro",21],["intro = Markdown.toElement \"\"\"",61],["intro =",39],["[ width w intro",23],["intro : Html m",27],["intro = [markdown|",37]],"useCount":245},{"word":"is","context":[["{-| Insert a key-value pair into a dictionary. Replaces value when there is",21],["`C.is`",38],["{-| Remove a key-value pair from a dictionary. If the key is not found,",21],["example, the following code checks if the square root of a number is odd:",34],["{-| Use two different decoders on a JS value. This is nice for extracting",22],["which argument is which:",22],["-- is equivalent to",22],["This is a certification challenge.",20],["{-| Combine two dictionaries. If there is a collision, preference is given",21],["{-| Combine two dictionaries. If there is a collision, preference is given",21]],"useCount":1783},{"word":"is13","context":[["(Json.customDecoder keyCode is13)",23],["is13 : Int -> Result String ()",39],["is13 code =",41]],"useCount":103},{"word":"isDigit","context":[["any isDigit \"R2-D2\" == True",12],["all isDigit \"R2-D2\" == False",12],["any isDigit \"90210\" == True",12],["isDigit : Char -> Bool",12],["filter isDigit \"R2-D2\" == \"22\"",12],["all isDigit \"heart\" == False",12],["any isDigit \"heart\" == False",12],["all isDigit \"90210\" == True",12]],"useCount":96},{"word":"isEmpty","context":[["isEmpty [] == True",13],["isEmpty xs =",13],["@docs isEmpty, member, get, size",14],["if List.isEmpty list then",15],["@docs isEmpty, length, reverse, repeat",12],["isEmpty dict =",18],["if List.isEmpty properties then",22],["isEmpty empty == True",23],[", hidden (List.isEmpty tasks)",13],["@docs isEmpty, member, size",13]],"useCount":251},{"word":"isEven","context":[["all isEven [] == True",12],["any isEven [2,3] == True",12],["any isEven [1,3] == False",12],["any isEven [] == False",12],["partition isEven        [0..5] == ([0,2,4], [1,3,5])",12],["isEven n =",15],["isEven : Int -> Bool",28],["not << isEven << sqrt",17],["\\n -> not (isEven (sqrt n))",17],["sqrt >> isEven >> not",17]],"useCount":202},{"word":"isInfinite","context":[["@docs isNaN, isInfinite",18],["isInfinite 1         == False",18],["isInfinite : Float -> Bool",18],["isInfinite (sqrt -1) == False",18],[", isNaN, isInfinite",12],["Native.Basics.isInfinite",11],["isInfinite (0/0)     == False",18],["isInfinite =",11],["isInfinite (1/0)     == True",18],["`not (isInfinite n || isNaN n)` evaluates to `True`.",18]],"useCount":160},{"word":"isNaN","context":[["isNaN =",11],["isNaN (sqrt -1) == True",18],["`not (isInfinite n || isNaN n)` evaluates to `True`.",18],["isNaN 1         == False",18],["isNaN (1/0)     == False  -- infinity is a number",18],["Native.Basics.isNaN",11],["isNaN (0/0)     == True",18],["@docs isNaN, isInfinite",18],["isNaN : Float -> Bool",18],[", isNaN, isInfinite",12]],"useCount":160},{"word":"it","context":[["NaN stands for *not a number* and it is [a standardized part of floating point",18],["maybe you have an optional field that can have a default value when it is",18],["{-| Access a nested field, making it easy to dive into big structures. This is",18],["{-| Just put plain text in the DOM. It will escape the string so that it appears",14],[", it \"should render the generic properties properly\"",14],["{- The actual pattern match here is somewhat lax. If it is given invalid input,",16],["a form that is a composite of many subforms. From there it is easy to transform",13],[", it \"should render generic properties properly\"",37],["{-| Keep a key-value pair when it satisfies a predicate. -}",17],["it will do the wrong thing. The expected behavior is:",16]],"useCount":671},{"word":"italic","context":[["code > span.co { color: #8f5902; font-style: italic; }",28],[", italic   = False",22],[", italic   : Bool",11],["italic : Text -> Text",11],[", italic = False",32]],"useCount":104},{"word":"item","context":[[", Menu.item",53],["(\\item ->",11],[", Table.td [ Table.numeric ] [ text item.unitPrice ]",13],[", Table.td [ Table.numeric ] [ text item.quantity ]",13],["case item of",15],[", a [ class <| \"item\"",16],["Just item ->",17],["[ Menu.item",20]],"useCount":158},{"word":"items","context":[[", css \"align-items\" \"flex-start\"",17],[", \"align-items\" => \"center\"",12],[", css \"align-items\" \"center\"",29],["items =",24],["items",22],["align-items property.",12],["Json.Decode.at [ \"items\" ] (Json.Decode.list searchResultDecoder)",13],["get \"https://example.com/api/items/1\"",15]],"useCount":144},{"word":"its","context":[["{-| Convert anything to its textual representation and make it displayable in",11],["paired with its index.",12],["that it will return the desired String as its key, and use that as our value.",11],["to see its definition:",11],["{-| Split a non-empty string into its head and tail. This lets you",12],["{-| Apply a function on every element with its index as first argument.",12],["{-| Create an arbitrary polygon by specifying its corners in order.",13],["{-| Keep a key-value pair when its key does not appear in the second dictionary.",19],["{-| Keep a key-value pair when its key appears in the second dictionary.",20]],"useCount":121},{"word":"javascript","context":[["- [JavaScript FFI](#javascript-ffi)",11],["Function.javascript",11],["```javascript",65]],"useCount":87},{"word":"join","context":[["join : String -> List String -> String",13],["String.join \"\"",38],["|> String.join \", \"",25],["|> String.join \"\"",25],["String.join \"/\"",24],["|> String.join \"\\n\\n\"",20],[", list string |> map (\\authors -> \"Co-authors: \" ++ String.join \", \" authors)",14],["|> String.join \"\\n\"",48],["|> String.join \" \"",55],["import String exposing (words, join, cons, uncons)",63]],"useCount":407},{"word":"jsonRoundTrips","context":[["[ jsonRoundTrips",18],["jsonRoundTrips =",31],["jsonRoundTrips : Test",20],["jsonRoundTrips : Claim",11]],"useCount":80},{"word":"justify","context":[[", property \"justify-content\" \"center\"",11],[", css \"justify-content\" \"center\"",16],["p { text-align: justify }",20],["text-align: justify;",20],[", css \"justify-content\" \"space-between\"",21]],"useCount":88},{"word":"k","context":[["lessBlackTree : Dict k v -> Dict k v",17],["RBNode_elm_builtin Black k' v' l' r'",18],["bubble : NColor -> k -> v -> Dict k v -> Dict k v -> Dict k v",17],["bubble c k v l r =",19],["update k alter dict =",19],["balance c k v l r =",20],["balance : NColor -> k -> v -> Dict k v -> Dict k v -> Dict k v",17],["foldl (\\k v t -> remove k t) t1 t2",20],["foldl (\\k v t -> remove k t) t1 t2",20],["lessBlackTree : Dict k v -> Dict k v",17]],"useCount":649},{"word":"key","context":[["{-| Fold over the key-value pairs in a dictionary, in order from lowest",21],["member key dict =",21],["RBNode _ key value left right ->",21],["insert key value dict =",21],["{-| Remove a key-value pair from a dictionary. If the key is not found,",21],["if predicate key value",21],["{-| Insert a key-value pair into a dictionary. Replaces value when there is",21],["RBNode_elm_builtin clr key value left right ->",23],["if code == 13 then Ok () else Err \"not the right key code\"",27],["RBNode_elm_builtin _ key value left right ->",33]],"useCount":1072},{"word":"keyCode","context":[["case keyCode of",24],["(Json.customDecoder keyCode is13)",23],["{keyCode = 91",12],["KeyDown keyCode ->",11]],"useCount":70},{"word":"keyValuePairs","context":[["keyValuePairs int",18],["keyValuePairs, dict",18],["keyValuePairs =",19],["map Dict.fromList (keyValuePairs decoder)",19],["keyValuePairs : Decoder a -> Decoder (List (String, a))",19],[", keyValuePairs, dict",14]],"useCount":107},{"word":"keys","context":[["keys dict =",22],["|> jump keys",12],["|> Dict.keys",14],["step (dt, keys) =",16],[", keys, values",16],["keys : Dict comparable v -> List comparable",16],["{-| A dictionary mapping unique keys to values. The keys can be any comparable",18],["These are also the only values that work as `Dict` keys or `Set` members.",18],["{-| A dictionary mapping unique keys to values. The keys can be any comparable",18],["@docs keys, values, toList, fromList",22]],"useCount":206},{"word":"l","context":[["case (l, r) of",17],["case l of",65],["let transform = maybeTransformAttr l in",23],["HSLA h s l a ->",22],["balance c k v l r =",20],["bubble c k v l r =",19],["rem c l r",19],["rem c l r =",18],["-- l and r are both RBNodes",18],["RBNode_elm_builtin Black k' v' l' r'",18]],"useCount":435},{"word":"label","context":[[", label = FamillePlus",11],["--    <div class=\"btn-group\" role=\"group\" aria-label=\"...\">...</div>",12],["label =",14],["{ label : String",16],["label",18],["[ label []",19],["[ text label ]",25],[", label []",30],["[ label",35],[", label",59]],"useCount":239},{"word":"lang","context":[["Use [`(<|)`](http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#<|)",12],["Use [`(<|)`](http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#<|)",12],[", \"\\nPlease report this bug to <https://github.com/elm-lang/Elm/issues>\"",13],["case lang of",47],["and [`(|>)`](http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#|>)",12],["[array]: http://package.elm-lang.org/packages/elm-lang/core/latest/Array",12],["and [`(|>)`](http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#|>)",12],["[array]: http://package.elm-lang.org/packages/elm-lang/core/latest/Array",12],["lang =",13],["[elm-markdown]: http://package.elm-lang.org/packages/evancz/elm-markdown/latest",12]],"useCount":168},{"word":"last","context":[["This makes it pretty easy to `pop` the last element off of an array: `slice 0 -1 array`",12],["last : List a -> a",12],["( last, stateTail ) =",15],["type alias Name = { first : String, last : String }",18],["last =",18],["the last option.",18],["case last of",20]],"useCount":113},{"word":"lazy","context":[["lazy",12],["lazy =",12],["lazy : (a -> Html) -> a -> Html",12],["lazy thunk =",13],["Html.Lazy.lazy render model",15],["lazy <| \\() ->",15],["lazy (\\_ ->",17],["lazy <| \\_ ->",18],["import Html.Lazy exposing (lazy, lazy2, lazy3)",18]],"useCount":132},{"word":"ldquo","context":[["{-| Reduce an array from the left. Read `foldl` as &ldquo;fold from the left&rdquo;.",11],["&ldquo;color stops&rdquo; that indicate how to interpolate between the start and",11],["takes an end point and outer radius. It then takes a series of &ldquo;color",11],["{-| Reduce an array from the right. Read `foldr` as &ldquo;fold from the right&rdquo;.",11],["{-| The shape of the &ldquo;joints&rdquo; of a line, where each line segment",13],["All angle conversions result in &ldquo;standard Elm angles&rdquo;",18]],"useCount":75},{"word":"left","context":[["foldl f (f key value (foldl f acc left)) right",19],["td.sourceCode { padding-left: 5px; }",22],["style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"",21],["RBNode_elm_builtin clr key value left right ->",23],["left =",33],["RBNode_elm_builtin _ key value left right ->",33],["Node v left right ->",25],["<div style=\"color:#666;font-size:0.8em;text-align:left\">",28],["RBNode _ key value left right ->",21],["float: left;",22]],"useCount":727},{"word":"leftAligned","context":[["|> leftAligned",49],["leftAligned (monospace (fromString \"code\"))",14],["leftAligned : Text -> Element",16],[">> leftAligned",14],["|> Text.leftAligned",22],["@docs leftAligned, rightAligned, centered, justified",11]],"useCount":126},{"word":"length","context":[["sortBy String.length [\"mouse\",\"cat\"] == [\"cat\",\"mouse\"]",21],[", length : Compatible",19],["{-| https://developer.mozilla.org/en-US/docs/Web/CSS/length",30],["length list =",14],[", length = Compatible",15],["List.length []",16],["length =",32],["length : List a -> Int",32],["|> List.length",33],["of length ten would be:",18]],"useCount":530},{"word":"let","context":[["let request =",27],["let newContent = get s contentMap",24],["in let",25],["let w  = truncate (toFloat wid * 0.8)",23],["(let",23],["let",13880],["let words = width w' txt in",23],[", let",41],["let p = e.props",37],["let w = min 600 wid",37]],"useCount":14646},{"word":"li","context":[["Html.li",19],["p, li {",20],["[ li []",23],["[ li",26],[", li",38],["li []",72],["[ Lists.li []",38],[", li []",56],[", Lists.li []",76],["li",118]],"useCount":521},{"word":"like","context":[["like this:",19],["From JS, you talk to these ports like this:",11],["fall back on something like this:",11],["`App`. It should pretty much always look like this:",11],["So our example expands out to something like this:",19],["reads nicely in expressions like: `filter (not << isRegistered) students`",17],["with `Text.fromString` it should look just like the value it came from.",13],["it to text like this:",11],["{-| Units of time, making it easier to specify things like a half-second",12],["update wins, just like with `merge`.",12]],"useCount":136},{"word":"line","context":[["line-height: 1.5em;",20],["-- a single line comment",14],["line =",18],["line Through (fromString \"strike out\")",20],[", line = Nothing",32],["-- multi-line String",14],["line-height: 1.428571429;",16],["Just add or remove the `}` on the first line and you'll toggle between commented and uncommented!",14],["You can specify multiple line decorations with `textDecorations`.",15],["text decoration line.",15]],"useCount":477},{"word":"lines","context":[["lines \"How are you?\\nGood?\" == [\"How are you?\", \"Good?\"]",11],["{-| Styles for lines on text. This allows you to add an underline, an overline,",11],["@docs cons, uncons, fromChar, append, concat, split, join, words, lines",11],["all sorts of forms including lines, shapes, images, and elements.",13],["lines =",12],["lines : String -> List String",12],["{-| Break a string into lines, splitting on newlines.",12]],"useCount":82},{"word":"link","context":[[", link = \"https://aws.amazon.com/summits/\"",29],["node \"link\"",11],["\"link\"",11],["link : String -> Text -> Text",11],["-- Do the link.",12],[", Layout.link",13],["link =",17],["link)",49]],"useCount":153},{"word":"list","context":[[", list, array",18],["list",112],["list (oneOf [ int, null 0 ])",18],["@docs list, array,",18],["list =",50],["list : Decoder a -> Decoder (List a)",19],["list int",18],["`Int`, `Float`, `Time`, or a list or tuple containing comparable values.",18],["handy more often than you might expect. For example, creating a zeroed out list",18],["case list of",233]],"useCount":1323},{"word":"lists","context":[["-- alias for appending lists and two lists",13],["{-| Map a given function onto a list and flatten the resulting lists.",13],["{-| A library for manipulating lists of values. Every value in a",13],["lists of comparable types.",19],["formatted data. For example, this lets you create a parser for \"variadic\" lists",18],["characters, strings, lists of comparable things, and tuples of comparable",18],["{-| Put two appendable things together. This includes strings, lists, and text.",17],["# Sub-lists",14],["- [Lists](#lists)",14],["{-| Combine two lists, combining them with the given function.",13]],"useCount":261},{"word":"location","context":[["init location =",12],[", location = \"Remote\"",17],[", location = \"London, England\"",18],["location2messages location =",12],[", location = \"Berlin, Germany\"",12],[", location = \"New York, NY\"",12],["location",16],["hashParser location =",14],[", location = \"Nara, Japan\"",13],[", location = \"San Francisco, CA\"",28]],"useCount":187},{"word":"log","context":[["import Debug exposing (log)",77],["1 + log \"number\" 1        -- equals 2, logs \"number: 1\"",11],["Notice that `log` is not a pure function! It should *only* be used for",11],["length (log \"start\" [])   -- equals 0, logs \"start: []\"",11],["log : String -> a -> a",11],["Insert, remove, and query operations all take *O(log n)* time. Dictionary",13]],"useCount":134},{"word":"logBase","context":[["@docs (+), (-), (*), (/), (^), (//), rem, (%), negate, abs, sqrt, clamp, logBase, e",17],["Native.Basics.logBase",11],["logBase =",11],[", (+), (-), (*), (/), (^), (//), rem, (%), negate, abs, sqrt, clamp, logBase, e",12],["logBase : Float -> Float -> Float",17],["logBase 2 256 == 8",17],["logBase 10 100 == 2",17]],"useCount":102},{"word":"lookup","context":[["visibility = lookup .visibility aes' defaults",26],["x = lookup .x aes' defaults",17],["linetype = lookup .linetype aes' defaults",20],["colour = lookup .colour aes' defaults",30]],"useCount":93},{"word":"m","context":[["view m =",23],["Options.Property (Config m) m",17],["type alias Property m =",22],["m",25],["intro : Html m",27],["case m of",100],["Options.Property (Config m) m",17],["Just m ->",20],["m =",19],["-> Html m",19]],"useCount":430},{"word":"mackenzie","context":[["ian.e.mackenzie@gmail.com",77]],"useCount":77},{"word":"mailbox","context":[["Signal.mailbox ()",18],["mailbox =",15],["actions = Signal.mailbox NoOp",16],["Signal.mailbox []",23],["Signal.mailbox Nothing",34],["Signal.mailbox \"\"",42],["Signal.mailbox NoOp",52]],"useCount":200},{"word":"main","context":[["main : Element",179],["main : Signal Html",261],["main : Program Never",335],["main : Signal Element",511],["main = app.html",69],["module Main exposing (main)",54],["void main() {",45],["main : Program Value",39],["main =",2446],["void main () {",117]],"useCount":4363},{"word":"mainContent","context":[["tm = (.tiledMenu (.mainContent model))",12],[", mainContent = initialContent",43],["[ .mainContent model",30],["Just c  -> { model | mainContent = c }",23],["[ (.wrapper (.mainContent model))",12],["(TiledMenu.view (Signal.forwardTo address TiledMenuAction) (.tiledMenu (.mainContent model)))",12],["let mc = (.mainContent model)",12],[", mainContent : MainContent",12]],"useCount":156},{"word":"mainMenu","context":[["(.mainMenu model)",45],["{ mainMenu    = mainMenu",44],["{ mainMenu    = mainMenu",44],["import Utils exposing (mainMenu,",54],["{ mainMenu    : Utils.Menu",20]],"useCount":207},{"word":"make","context":[["a month and make sure it is between 1 and 12:",11],["-- make the top node black",19],["-- make the top node red",19],["want. For example, to make a thicker line, you could say:",13],["{-| Convert anything to its textual representation and make it displayable in",11],["{-| Type alias to make it clearer when you are working with time values.",12],["-- TODO: make this a native function.",11]],"useCount":96},{"word":"many","context":[["You can use this pattern for as many signals as you want by using `(~)` a bunch",11],["{-| Concatenate many strings into one.",12],["a form that is a composite of many subforms. From there it is easy to transform",13],["{-| Flatten many forms into a single `Form` and then apply a matrix",13],["{-| Merge many signals into one. This is useful when you are merging more than",12],["{-| Put many strings together with a given separator.",12],["{-| Flatten many forms into a single `Form`. This lets you move and rotate them",13],["really a helper function so you do not need to write `(:=)` so many times.",18],["You can use as many commas as you want.",14]],"useCount":118},{"word":"map","context":[["(List.map",47],["Signal.map",46],["|> List.map",44],[", map",43],["(map",48],["Maybe.map",40],["{ model | tasks = List.map updateTask model.tasks }",39],["import List exposing (map)",63],["map =",69],["List.map",207]],"useCount":1960},{"word":"map2","context":[["zip = map2 (,)",14],["map2 (,) [1,2,3] ['a','b'] == [ (1,'a'), (2,'b') ]",14],["map2 (+) [1,2,3] [1,2,3,4] == [2,4,6]",14],["map2 : (a -> b -> result) -> Signal a -> Signal b -> Signal result",13],["map2 : (a -> b -> result) -> List a -> List b -> List result",12],["map2 ratio Window.width Window.height",12],["map2 =",19],["List.map2",28],["@docs map, map2, map3, map4, map5",36],[", map, map2, map3, map4, map5",37]],"useCount":243},{"word":"map3","context":[[", map, map2, map3, map4, map5",37],["@docs map, map2, map3, map4, map5",36],["map3 : (a -> b -> c -> result) -> List a -> List b -> List c -> List result",12],["map3 : (a -> b -> c -> result) -> Signal a -> Signal b -> Signal c -> Signal result",13],["map3 =",18],["Result.map3 f",18]],"useCount":134},{"word":"map4","context":[["map4 =",18],["@docs map, map2, map3, map4, map5",36],[", map, map2, map3, map4, map5",37],["map4 : (a -> b -> c -> d -> result) -> Signal a -> Signal b -> Signal c -> Signal d -> Signal result",13],["map4 : (a -> b -> c -> d -> result) -> List a -> List b -> List c -> List d -> List result",12],["Signal.map4 Input",14]],"useCount":130},{"word":"map5","context":[["map5 : (a -> b -> c -> d -> e -> result) -> Signal a -> Signal b -> Signal c -> Signal d -> Signal e -> Signal result",13],["map5 : (a -> b -> c -> d -> e -> result) -> List a -> List b -> List c -> List d -> List e -> List result",12],["map5 =",18],["@docs map, map2, map3, map4, map5",36],[", map, map2, map3, map4, map5",37],["of times, so you can go higher than `map5` if you need to.",11]],"useCount":127},{"word":"margin","context":[["Lists.ul [ css \"margin\" \"0\", css \"padding\" \"0\" ]",30],["margin: 0;",28],["margin-bottom: 0;",26],["margin: 0; padding: 0; vertical-align: baseline; border: none; }",22],["margin: 0 30px;",25],["margin  (px 10)",20],["{-| Sets [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin)",20],["{-| Sets [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin)",20],[", margin zero",17],[", Footer.socialButton [Options.css \"margin-right\" \"6px\"] []",16]],"useCount":310},{"word":"markdown","context":[["main = [markdown|",15],["[ Center.markdown \"600px\" content1",15],["[ Center.markdown \"600px\" content",19],["intro = [markdown|",37],[", Center.markdown \"600px\" content2",15],["[elm-markdown]: http://package.elm-lang.org/packages/evancz/elm-markdown/latest",12],["[elm-markdown]: http://package.elm-lang.org/packages/evancz/elm-markdown/latest",12],["[ Center.markdown \"600px\" content ]",101],[", Center.markdown \"600px\" rest",11]],"useCount":237},{"word":"mat4","context":[["uniform mat4 camera;",19],["uniform mat4 perspective;",49],["uniform mat4 view;",15],["uniform mat4 normalMatrix;",12]],"useCount":95},{"word":"max","context":[["max : comparable -> comparable -> comparable",18],["@docs (<), (>), (<=), (>=), max, min, Order, compare",18],["(max (widthOf hi) (widthOf lo))",18],["max =",19],["@media (max-width: 767px) {",13],["[`max-width`]https://developer.mozilla.org/en-US/docs/Web/CSS/max-width#Values),",20],["[`max-height`]https://developer.mozilla.org/en-US/docs/Web/CSS/max-height#Values)",20],["[`max-width`]https://developer.mozilla.org/en-US/docs/Web/CSS/max-width#Values),",20],["in  zipWith max xs ys",14],["[`max-height`]https://developer.mozilla.org/en-US/docs/Web/CSS/max-height#Values)",20]],"useCount":214},{"word":"maybe","context":[["(maybe (\"profession\" := string))",18],["maybe you have an optional field that can have a default value when it is",18],["maybe : Decoder a -> Decoder (Maybe a)",19],["@docs maybe, oneOf, map, fail, succeed, andThen",18],["{-- TODO: maybe reintroduce once there's a better way to disambiguate imports",18],["maybe (\"profession\" := string)",18],["maybe =",16],["case maybe of",95],[", maybe, oneOf, map, fail, succeed, andThen",14],["fromMaybe err maybe =",11]],"useCount":256},{"word":"mdl","context":[[", mdl = Material.model",23],["Button.render Mdl [0] model.mdl",11],[", mdl : Material.Model",29],["model.mdl",114],["mdl",32],["{ mdl = Material.model",40],["{ mdl : Material.Model",45]],"useCount":294},{"word":"mediump","context":[["precision mediump float;",114]],"useCount":114},{"word":"member","context":[["member : comparable -> Dict comparable v -> Bool",17],["member key dict =",21],["@docs isEmpty, member, get, size",14],["@docs isEmpty, member, size",13],["member : a -> List a -> Bool",12],[", isEmpty, get, remove, member, size",11],["member : comparable -> Set comparable -> Bool",11],["@docs isEmpty, length, reverse, member",12]],"useCount":111},{"word":"merge","context":[["merge : Signal a -> Signal a -> Signal a",16],["Signal.merge",31],["merge",24],["@docs merge, mergeMany",13],["update wins, just like with `merge`.",12]],"useCount":96},{"word":"mergeMany","context":[["mergeMany : List (Signal a) -> Signal a",13],["Signal.mergeMany",33],["mergeMany",18],["@docs merge, mergeMany",13]],"useCount":77},{"word":"message","context":[["{ message : String",27],["decoder is able to provide a much more specific error message when `fail` is",18],["case message of",68],["message =",49],["update message model =",46],["(\\_ -> Signal.message address value)",34],["Err message ->",17],["Just message ->",15],[", message : String",15],[", on \"input\" targetValue (Signal.message address << UpdateField)",13]],"useCount":371},{"word":"middle","context":[[", textAnchor \"middle\"",12],["container outer (heightOf elem) middle elem",11],["vertical-align: middle;",11],["middle =",14],["container w (heightOf words) middle words",23],["{-| The `middle` [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) value.",30],["container w h middle <|",31]],"useCount":132},{"word":"min","context":[["min : comparable -> comparable -> comparable",18],["@docs (<), (>), (<=), (>=), max, min, Order, compare",18],["min =",20],["[`min-height`]https://developer.mozilla.org/en-US/docs/Web/CSS/min-height#Values), and",20],["[`min-height`]https://developer.mozilla.org/en-US/docs/Web/CSS/min-height#Values), and",20],["[`min-width`]https://developer.mozilla.org/en-US/docs/Web/CSS/min-width#Values),",20],["[`min-width`]https://developer.mozilla.org/en-US/docs/Web/CSS/min-width#Values),",20],["w' = min 600 w",23],["@media (min-width: 768px) {",24],["let w = min 600 wid",37]],"useCount":243},{"word":"mode","context":[["{- mode: Elm -}",13],["case model.mode of",33],["case mode of",31],[", mode : Mode",25],["case old.mode of",16],["* [Emacs](https://github.com/jcollard/elm-mode)",16],["mode =",11]],"useCount":145},{"word":"model","context":[["( model, Cmd.none )",338],["( { model",376],["{ model |",387],["subscriptions model =",405],["view address model =",558],["{ model",559],["model",580],["update msg model =",727],["update action model =",867],["view model =",982]],"useCount":10476},{"word":"module","context":[["module Main (..) where",78],["module View exposing (..)",27],["module Model where",31],["module Model exposing (..)",26],["port module Main exposing (..)",102],["module Main where",178],["module Main exposing (..)",324],["module Tests exposing (..)",65],["module View exposing (view)",32],["module Main exposing (main)",54]],"useCount":1339},{"word":"monospace","context":[["|> Text.monospace",26],["leftAligned (monospace (fromString \"code\"))",14],[", ( \"font-family\", \"monospace\" )",12],["monospace : Text -> Text",11],["{-| Switch to a monospace typeface. Good for code snippets.",11],[", (\"font-family\", \"monospace\")",43]],"useCount":117},{"word":"month","context":[["case month of",24],["month =",21],["if month >= 1 && month <= 12",14],["a month and make sure it is between 1 and 12:",11],["if month >= 1 && month <= 12",14],["then Ok month",11],["toValidMonth month =",19]],"useCount":114},{"word":"more","context":[["more visual explanation.",12],["-- TODO give these more descriptive names",14],["This clean division of concerns is a core part of Elm. You can read more about",19],["handy more often than you might expect. For example, creating a zeroed out list",18],["where the first few types are different, followed by 0 or more of the same",18],["decoder is able to provide a much more specific error message when `fail` is",18],["narrow things down so you can be more targeted.",18],["things. Note that tuples with 7 or more elements are not comparable; why",18],["For more explanation of Elm&rsquo;s record system, see [this overview][exp],",13],["for avoiding parenthesis and writing code in a more natural way.",13]],"useCount":231},{"word":"move","context":[["|> move (0, gameHeight/2 - 40)",14],["move : (Float,Float) -> Form -> Form",13],["|> move (10,10)",18],["scale 2 (move (10,10) (filled blue (ngon 5 30)))",18],["|> move (0, 40 - gameHeight/2)",17],["|> move (0, 24 - h/2)",16],["msg = \"SPACE to start, WS and &uarr;&darr; to move\"",15],["@docs move, moveX, moveY, scale, rotate, alpha",13],["{-| The collage API is for freeform graphics. You can move, rotate, scale, etc.",13],["{-| Flatten many forms into a single `Form`. This lets you move and rotate them",13]],"useCount":174},{"word":"mozilla","context":[["{-| Sets [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin)",20],["[pseudo-class](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes).",165],["{-| The `middle` [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) value.",30],["{-| Sets [`border-block-start`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start)",30],["{-| https://developer.mozilla.org/en-US/docs/Web/CSS/length",30],["{-| Sets [`border-block-end`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end)",30],["{-| Sets [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)",30],["[pseudo-element](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements).",25],["{-| Sets [`padding`](https://developer.mozilla.org/en-US/docs/Web/CSS/padding)",20],["[`max-width`]https://developer.mozilla.org/en-US/docs/Web/CSS/max-width#Values),",20]],"useCount":688},{"word":"msg","context":[["Err msg -> Err msg",23],["Just msg ->",27],["msg =",34],["msg",45],["port emit : ( String, Value ) -> Cmd msg",67],["Err msg ->",75],["update msg model =",727],["case msg of",944],[", subscriptions : model -> Sub msg",25],["Err msg -> Err msg",23]],"useCount":2364},{"word":"multiple","context":[["two signals. When multiple updates come in at the same time, the left-most",12],["{-| Try out multiple different decoders. This is helpful when you are dealing",14],["You can specify multiple line decorations with `textDecorations`.",15],["multiple fields from an object.",36]],"useCount":77},{"word":"must","context":[["must (which can be done with any `objectN` function actually).",12],["list must have the same type.",13],["Notice that you must give the *property* name, so we use `className` as it",12],["Notice that you must give the *attribute* name, so we use `class` as it would",12],["Qualified imports are preferred. Module names must match their file name,",12],["else Err \"months must be between 1 and 12\"",11],["-- toMonth \"0\" == Err \"months must be between 1 and 12\"",11]],"useCount":83},{"word":"myStyle","context":[["myStyle : Attribute",20],["myStyle =",40],[", myStyle",15]],"useCount":75},{"word":"n","context":[["n",26],["| otherwise -> n",26],["if n <= 0 then",24],["|> String.join \"\\n\\n\"",20],["|> String.join \"\\n\\n\"",20],["Notice that NaN is not infinite! For float `n` to be finite implies that",18],["if n == 0",28],["n =",27],["|> String.join \"\\n\"",48],["case n of",52]],"useCount":1050},{"word":"name","context":[["(\"name\" := string)",88],["{ name : String",276],[", name : String",171],["name =",87],["name",47],["{ name = name",35],["{ name = name",35],["(\"name\" := Json.string)",33],[", name                   : IdString",26],["{ name = \"\"",27]],"useCount":1607},{"word":"need","context":[["{-| Bring in an arbitrary JSON value. Useful if you need to work with crazily",18],["of points does not need to start and end with the same position.",13],["**Note:** `auto` is not currently supported here. If you need to set this property to `auto`,",12],["really a helper function so you do not need to write `(:=)` so many times.",18],["need this.",11],["will not need this one, but it is there just in case. You will know if you",11],["of times, so you can go higher than `map5` if you need to.",11],["function does not need to guarantee a particular order of",12],["example, say you need to use (`toInt : String -> Result String Int`) to parse",11],["you need to interact with some code that primarily uses maybes.",11]],"useCount":161},{"word":"negate","context":[["Native.Basics.negate",11],[", (+), (-), (*), (/), (^), (//), rem, (%), negate, abs, sqrt, clamp, logBase, e",12],[", negate",13],["negate =",15],["negate : number -> number",17],["negate -42 == 42",17],["@docs (+), (-), (*), (/), (^), (//), rem, (%), negate, abs, sqrt, clamp, logBase, e",17],["negate 42 == -42",17],["negate 0 == 0",17]],"useCount":136},{"word":"new","context":[["[ id \"new-todo\"",15],["{-| Create two new sets; the first consisting of elements which satisfy a",15],["{-| Shift bits to the right by a given offset, filling new bits with",11],["{-| Create a new set consisting only of elements which satisfy a predicate.",12],["{-| Append two arrays to a new one.",12],["{-| Map a function onto a set, creating a new set with no duplicates.",11],["new =",13]],"useCount":89},{"word":"newModel","context":[["newModel =",249],["( case Matrix.get col row newModel.cells of",12],["( newModel",25],["newModel",28],["newModel ! []",35],["( newModel, Cmd.none )",38]],"useCount":387},{"word":"newState","context":[["( midiMelody, newState )",12],["newState =",59]],"useCount":71},{"word":"nextID","context":[["nextID <- model.nextID + 1",19],["nextID = model.nextID + 1",12],["nextID = model.nextID + 1",12],["nextID <- model.nextID + 1",19],[", nextID = 0",35],[", nextID : ID",39]],"useCount":136},{"word":"ngon","context":[["ngon : Int -> Float -> Shape",13],["scale 2 (move (10,10) (filled blue (ngon 5 30)))",18],["ngon 5 30",28],["ngon n r =",13]],"useCount":72},{"word":"no","context":[["The first time delta after a pause is always zero, no matter how long",11],["no matches, it will use their default typeface. This works the same as the CSS",11],["{-| Map a function onto a set, creating a new set with no duplicates.",11],["attribute can be used in HTML, but there is no corresponding property!",12],["Yes, that is a true fact. Sometimes an attribute exists, but there is no",12],["{-| Remove a value from a set. If the value is not found, no changes are made.",15],["no changes are made. -}",18],["|> recover (Task.succeed << assertEqual \"no error\")",18],["argument, so there is no way to know whether the negative signs comes from",18]],"useCount":126},{"word":"node","context":[["node",60],["node \"div\"",15],["-- make the top node red",19],["-- make the top node black",19],["Just node ->",25],["node =",26],["[ node",27],[", node",31],["reference, node,",42],["case node of",67]],"useCount":401},{"word":"none","context":[[", Effects.none",318],[", Cmd.none",715],["( model, Cmd.none )",338],["(model, Cmd.none)",187],["Sub.none",168],["Cmd.none",133],["(model, Effects.none)",90],["( model, Effects.none )",86],[", subscriptions = \\_ -> Sub.none",85],[", Cmd.none )",65]],"useCount":2928},{"word":"not","context":[["{-| Remove a key-value pair from a dictionary. If the key is not found,",21],["fail (tag ++ \" is not a recognized tag for shapes\")",18],["{-| Keep a key-value pair when its key does not appear in the second dictionary.",19],["{-| Get the value associated with a key. If the key is not found, return",20],["`Nothing`. This is useful when you are not sure if a key will be in the",20],["to numerical roundoff) they might not be exactly equal.",23],["not : Bool -> Bool",24],["if code == 13 then Ok () else Err \"not the right key code\"",27],["-- Should not compile:",37],["v. 2.0. If a copy of the MPL was not distributed with this file, you can",77]],"useCount":1023},{"word":"null","context":[["list (oneOf [ int, null 0 ])",18],["{-| Decode null as the value given, and fail otherwise. Primarily useful for",14],["[ null Nothing",39],["\"mirror_url\": null,",30],["null =",29],["@docs string, int, float, bool, null",26],["failure in `Nothing`. If you are expecting that a field can sometimes be `null`,",14],["\"homepage\": null,",25],["null : a -> Decoder a",19],[", string, int, float, bool, null",18]],"useCount":260},{"word":"nullOr","context":[["nullOr : Decoder a -> Decoder (Maybe a)",38],["nullOr decoder =",39]],"useCount":77},{"word":"number","context":[[", number = Compatible",19],["{-| Take the absolute value of a number. -}",18],["(+) : number -> number -> number",18],["(+) : number -> number -> number",18],["(-) : number -> number -> number",18],["clamp : number -> number -> number -> number",18],["NaN stands for *not a number* and it is [a standardized part of floating point",18],["example, the following code checks if the square root of a number is odd:",34],["isNaN (1/0)     == False  -- infinity is a number",18],["(+) : number -> number -> number",18]],"useCount":771},{"word":"numbers","context":[["numbers : Signal Int",36],["numbers =",94],["numbers : Decoder (Array Int)",18],["numbers : Decoder (List Int)",13],["These functions only work on `comparable` types. This includes numbers,",18],["numbers : Decoder (List Float)",18],["numbers](http://en.wikipedia.org/wiki/NaN).",18],["numbers : Decoder [Int]",23],["sum numbers =",13],["-- Div always rounds down and so random numbers are biased",13]],"useCount":358},{"word":"numeric","context":[["( numeric, textual ) =",69],["( { model | ambientColour = numeric, ambientColourText = textual }, Cmd.none )",15],[", Table.th [ Table.numeric ] [ text \"Quantity\" ]",11],[", Table.td [ Table.numeric ] [ text item.unitPrice ]",13],[", Table.td [ Table.numeric ] [ text item.quantity ]",13]],"useCount":121},{"word":"object","context":[["JsonE.object",38],["Encode.object",88],["object =",18],["`object`, or `video`.",18],["|> Encode.object",20],["multiple fields from an object.",36],["object",37],["JE.object",41],["JE.object <| List.filterMap identity <|",44],["Json.Encode.object",53]],"useCount":460},{"word":"object1","context":[[", object1, object2, object3, object4, object5, object6, object7, object8",14],["object1 : (a -> value) -> Decoder a -> Decoder value",18],["object1, object2, object3, object4, object5, object6, object7, object8,",18],["object1 =",18],["object1 Circle",16],["object1 sqrt (\"x\" := float)",12]],"useCount":96},{"word":"object2","context":[["object2 : (a -> b -> value) -> Decoder a -> Decoder b -> Decoder value",18],["object1, object2, object3, object4, object5, object6, object7, object8,",18],["object2 =",18],["object2 Rectangle",16],[", object1, object2, object3, object4, object5, object6, object7, object8",14],[", object2 (,) (\"x\" := float) (\"y\" := float)",36],["object2 (,)",44]],"useCount":164},{"word":"object3","context":[["object3 Job",14],["object3 =",18],["object1, object2, object3, object4, object5, object6, object7, object8,",18],["object3 Person",18],["object3 : (a -> b -> c -> value) -> Decoder a -> Decoder b -> Decoder c -> Decoder value",18],[", object1, object2, object3, object4, object5, object6, object7, object8",14]],"useCount":100},{"word":"of","context":[["case xs of",132],["case result of",242],["case msg of",944],["case action of",1099],["case prop of",347],["case tree of",107],["case list of",233],["case dict of",179],["case prev of",137],["case t of",136]],"useCount":9676},{"word":"on","context":[["on \"keydown\"",41],["|> Style.on model.style",33],["import Html.Events exposing (on, targetValue)",25],["{-| Use two different decoders on a JS value. This is nice for extracting",22],["-- A description of the kinds of actions that can be performed on the model of",21],["import Html.Events exposing (on)",18],["These functions only work on `comparable` types. This includes numbers,",18],["| style = Style.on widget.style act",18],["import Html.Events exposing (onClick, on, targetValue)",15],[", on",15]],"useCount":809},{"word":"onClick","context":[["[ button [ onClick address Decrement ] [ text \"-\" ]",38],[", button [ onClick address Increment ] [ text \"+\" ]",42],["import Html.Events exposing (onClick)",353],[", button [ class \"hide-result\", onClick (DeleteById result.id) ]",15],["import Html.Events exposing (onClick, on, targetValue)",15],[", button [ class \"search-button\", onClick Search ] [ text \"Search\" ]",16],["import Html.Events exposing (onInput, onClick)",20],["[ button [ onClick Decrement ] [ text \"-\" ]",23],[", button [ onClick Increment ] [ text \"+\" ]",24],["import Html.Events exposing (onClick, onInput)",38]],"useCount":670},{"word":"onEnter","context":[["onEnter : Signal.Address a -> a -> Attribute",13],["onEnter address value =",35],["onEnter : Address a -> a -> Attribute",21],["onEnter : Msg -> Attribute Msg",11],["onEnter msg =",16]],"useCount":96},{"word":"onInput","context":[[", Events.onInput <|",11],[", input [ class \"search-query\", onInput SetQuery, defaultValue model.query ] []",15],["import Html.Events exposing (onInput, onClick)",20],["import Html.Events exposing (onClick, onInput)",38],["import Html.Events exposing (onInput)",36]],"useCount":120},{"word":"once","context":[["The current sentiment is that it is already quite error prone once you get to",12],["{-| Start an application. It requires a bit of wiring once you have created an",11],["{-- TODO: maybe reintroduce once there's a better way to disambiguate imports",18],["( once",15],["-- TODO - remove example inclusion once Problem sets are ready to go live or CI is set up.",14]],"useCount":70},{"word":"one","context":[["one =",15],["{-| Create a dictionary with one key-value pair. -}",18],["If one list is longer, the extra elements are dropped.",15],["{-| Helpful when one field will determine the shape of a bunch of other fields.",16],["{-| The logical OR operator. `True` if one or both inputs are `True`.",17],["one :: two :: rest ->",18],["(decodeValue a one)",18],["{-| Find the remainder after dividing one number by another.",17],["{-| The exclusive-or operator. `True` if exactly one input is `True`. -}",17],["[ facts 1 one",18]],"useCount":368},{"word":"oneOf","context":[["@docs maybe, oneOf, map, fail, succeed, andThen",18],["list (oneOf [ int, null 0 ])",18],["oneOf =",24],["the `oneOf` function.",18],["`oneOf` but everything is supposed to work out at the end. For example,",18],["Native.Json.oneOf",19],["oneOf : List (Decoder a) -> Decoder a",19],["oneOf",152],["(oneOf [ \"z\" := float, succeed 0 ])",18],["JD.oneOf",32]],"useCount":405},{"word":"only","context":[["{-| Keep only elements that satisfy the predicate.",13],["Notice that `log` is not a pure function! It should *only* be used for",11],["{-| Keep only the characters that satisfy the predicate.",11],["{-| Create a new set consisting only of elements which satisfy a predicate.",12],["These are also the only values that work as `Dict` keys or `Set` members.",18],["These functions only work on `comparable` types. This includes numbers,",18],["{-| Keep only elements that satisfy the predicate:",13],["provided. The following example only keeps even numbers and has an initial",12],["-- BBlack and NBlack should only be used during the deletion",19],["This means we only continue with the callback if things are going well. For",20]],"useCount":147},{"word":"opacity","context":[["opacity =",16],["<span style=\"opacity:0.3;\">",63]],"useCount":79},{"word":"operator","context":[["You can think of this operator as equivalent to the following:",19],["{-| The exclusive-or operator. `True` if exactly one input is `True`. -}",17],["{-| The logical OR operator. `True` if one or both inputs are `True`.",17],["{-| The logical AND operator. `True` if both inputs are `True`.",17],["operator =",15],["This operator short-circuits to `False` if the first argument is `False`.",14]],"useCount":99},{"word":"options","context":[["Options.collect defaultConfig options",11],["options =",44],["{ options",17],["options",18]],"useCount":90},{"word":"or","context":[["{-| A decoder that always succeeds. Useful when paired with `andThen` or",18],["{-| A decoder that always fails. Useful when paired with `andThen` or `oneOf`",18],["things. Note that tuples with 7 or more elements are not comparable; why",18],["the `y` or `x`. Thus, the resulting angle is always between &pi;/2 and -&pi;/2",18],["-- { x:3, y:4 } or { x:3, y:4, z:5 }",18],["These are also the only values that work as `Dict` keys or `Set` members.",18],["type. This includes `Int`, `Float`, `Time`, `Char`, `String`, and tuples or",19],["-- 1234 or \"1234abc\"",18],["-- [\"John\",\"Doe\"] or [\"Hermann\",\"Hesse\"]",18],["-- [3,4] or [0,0]",18]],"useCount":552},{"word":"order","context":[["{-| Flip the order of the first two arguments to a function. -}",17],["order =",14],["{-| Create an arbitrary polygon by specifying its corners in order.",13],["tree: pre-order, in-order, post-order, depth-first, etc.",12],["tree: pre-order, in-order, post-order, depth-first, etc.",12],["tree: pre-order, in-order, post-order, depth-first, etc.",12],["function does not need to guarantee a particular order of",12],["{-| Fold over the key-value pairs in a dictionary, in order from highest",21],["returns 42. When you are dealing with higher-order functions, this comes in",18],["{-| Fold over the key-value pairs in a dictionary, in order from lowest",21]],"useCount":197},{"word":"org","context":[["{-| https://developer.mozilla.org/en-US/docs/Web/CSS/length",30],["[pseudo-class](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes).",165],["{-| The `middle` [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) value.",30],["{-| Sets [`text-decoration`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)",30],["{-| Sets [`border-block-start`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start)",30],["{-| Sets [`border-block-end`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end)",30],["[pseudo-element](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements).",25],["{-| Sets [`border-radius`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius)",20],["[`min-height`]https://developer.mozilla.org/en-US/docs/Web/CSS/min-height#Values), and",20],["{-| Sets [`text-shadow`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-shadow).",20]],"useCount":922},{"word":"origin","context":[["origin =",20],["{ originPoint = Point3d.origin",42],["{ originPoint = Point2d.origin",18],["( updateStep origin.id setRunning model",12],["origin = { x=0, y=0 }",13],["origin : Point",17]],"useCount":122},{"word":"originPoint","context":[["{ originPoint = originPoint frame",30],["(Axis2d { originPoint, direction }) =",12],["properties.originPoint",12],["{ originPoint = originPoint",12],["{ originPoint = originPoint",12],["{ originPoint = Point3d ( 2, 1, 3 )",16],["vectorFrom originPoint",17],["{ originPoint = Point2d.origin",18],["{ originPoint = originPoint frame",30],["{ originPoint = Point3d.origin",42]],"useCount":225},{"word":"other","context":[["-- algorithm. Any other occurrence is a bug and should fail an assert.",19],["to define any other: `sort == sortWith compare`",13],["creating *other* decoders.",14],["This is useful for holding JSON or other",14],["{-| Helpful when one field will determine the shape of a bunch of other fields.",16]],"useCount":76},{"word":"other_","context":[[", other_ val = Common.otherValue val",41],[", other_ : Property.Value -> Property.Value",41]],"useCount":82},{"word":"otherwise","context":[["otherwise : Bool",11],["| otherwise ->",87],["otherwise ->",43],["| otherwise -> n",26],["@docs not, (&&), (||), xor, otherwise",11],["| otherwise -> Nothing",15],["{-| Decode null as the value given, and fail otherwise. Primarily useful for",14],["This decoder treats `null` as `Nothing`, and otherwise tries to produce a",14],["| otherwise      -> v",12],["| otherwise        -> state",12]],"useCount":256},{"word":"our","context":[["-- The full application state of our todo app.",19],["3. View   - a way to visualize our application state with HTML",19],["-- How we update our Model on a given Action?",13],["zero-based index where we will start our slice. The `end` is a zero-based index",12],["-- manage the model of our application over time",12],["that it will return the desired String as its key, and use that as our value.",11],["So our example expands out to something like this:",19],["-- our application. See the following post for more info on this pattern and",11]],"useCount":116},{"word":"out","context":[["So our example expands out to something like this:",19],["`oneOf` but everything is supposed to work out at the end. For example,",18],["handy more often than you might expect. For example, creating a zeroed out list",18],["{-| Filter out some updates. The given function decides whether we should",16],["{-| Try out multiple different decoders. This is helpful when you are dealing",14],["Check out the [learning resources](/Learn.elm) for",13],["The basic arithmetic infix operators all figure out what type they should have automatically.",13],["line Through (fromString \"strike out\")",20],["{-| Create a sprite from a sprite sheet. It cuts out a rectangle",13],["{-| Return Just the element at the index or Nothing if the index is out of range.",13]],"useCount":191},{"word":"outdented","context":[["<| assertEqual (outdented output) (outdented (prettyPrint input))",18],["<| assertEqual (outdented output) (outdented (prettyPrint input))",18],["outdented (prettyPrint input)",38],["|> Expect.equal (outdented output)",39]],"useCount":113},{"word":"output","context":[["of time that the output signal has been running.",11],["<| assertEqual (outdented output) (outdented (prettyPrint input))",18],["[ test \"pretty prints the expected output\"",22],["|> Expect.equal (outdented output)",39],["[ test \"pretty prints the expected output\" <|",44],["output =",90]],"useCount":224},{"word":"over","context":[["-- manage the model of our application over time",12],["{-| Fold over the values in a set, in order from highest to lowest.",11],["{-| Fold over the values in a set, in order from lowest to highest.",11],["{-| Fold over the key-value pairs in a dictionary, in order from highest",21],["{-| Fold over the key-value pairs in a dictionary, in order from lowest",21]],"useCount":76},{"word":"overflow","context":[[", ( \"overflow\", \"hidden\" )",12],[", overflow = Compatible",25],["<div style=\"position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;\">",21],["<div style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\">",20],["overflow: hidden;",13],[", (\"overflow\", \"hidden\")",12]],"useCount":103},{"word":"overline","context":[["textDecorations3 [ underline, overline ] wavy (rgb 128 64 32)",24],["textDecorations2 [ underline, overline ] wavy",24],["textDecorations  [ underline, overline ]",24],["{-| Styles for lines on text. This allows you to add an underline, an overline,",11]],"useCount":83},{"word":"p","context":[[", p []",155],["Just p ->",23],["case p of",26],["[ p []",32],["let p = e.props",37],["p []",38],["Options.styled p",38],["p",40],[", p",54],["{ p |",21]],"useCount":725},{"word":"package","context":[["[System.Random](http://hackage.haskell.org/package/random-1.0.1.1/docs/System-Random.html)",13],["Use [`(<|)`](http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#<|)",12],["[array]: http://package.elm-lang.org/packages/elm-lang/core/latest/Array",12],["and [`(|>)`](http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#|>)",12],["[elm-markdown]: http://package.elm-lang.org/packages/evancz/elm-markdown/latest",12],["[elm-effects]: http://package.elm-lang.org/packages/evancz/elm-effects/latest",11]],"useCount":72},{"word":"packages","context":[["and [`(|>)`](http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#|>)",12],["[array]: http://package.elm-lang.org/packages/elm-lang/core/latest/Array",12],["Use [`(<|)`](http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#<|)",12],["* [Atom](https://atom.io/packages/language-elm)",14],["[elm-markdown]: http://package.elm-lang.org/packages/evancz/elm-markdown/latest",12],["[elm-effects]: http://package.elm-lang.org/packages/evancz/elm-effects/latest",11]],"useCount":73},{"word":"padding","context":[["padding  (px 10)",20],["margin: 0; padding: 0; vertical-align: baseline; border: none; }",22],["padding: 0;",35],["Lists.ul [ css \"margin\" \"0\", css \"padding\" \"0\" ]",30],["<div style=\"position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;\">",21],["<div style=\"position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;\">",21],["td.sourceCode { padding-left: 5px; }",22],["padding: 10px;",22],[", (\"padding\", \"10px 0\")",28],["padding: 4px 10px;",25]],"useCount":402},{"word":"page","context":[["page : Model -> Html Msg",13],["`footerStyle` that is specifically for the bottom of your page, you could apply",11],["page model =",13],["Just page ->",14],["case model.page of",15],["case page of",22]],"useCount":88},{"word":"pageFooter","context":[["pageFooter =",11],["pageFooter,",54],[", pageFooter",57]],"useCount":122},{"word":"pair","context":[["{-| Create a dictionary with one key-value pair. -}",18],["pair (int -200 200) (int -100 100)",12],["{-| Create a pair of random values. A common use of this might be to generate",12],["pair : Generator a -> Generator b -> Generator (a,b)",17],["{-| Keep a key-value pair when it satisfies a predicate. -}",17],["{-| Remove a key-value pair from a dictionary. If the key is not found,",21],["This combines two arguments into a single pair.",18],["{-| Insert a key-value pair into a dictionary. Replaces value when there is",21],["{-| Keep a key-value pair when its key appears in the second dictionary.",20],["{-| Keep a key-value pair when its key does not appear in the second dictionary.",19]],"useCount":197},{"word":"paired","context":[["This splits paired arguments into two separate arguments.",18],["{-| A decoder that always fails. Useful when paired with `andThen` or `oneOf`",18],["{-| A decoder that always succeeds. Useful when paired with `andThen` or",18],["paired with its index.",12],["{-| Transform the value returned by a decoder. Most useful when paired with",18]],"useCount":84},{"word":"pairs","context":[["pairs.",18],["pairs : List a -> List b -> List (a,b)",11],["{-| Determine the number of key-value pairs in the dictionary. -}",11],["{-| Turn any object into a dictionary of key-value pairs.",12],["foldr step ([], []) pairs",12],["unzip pairs =",13],["{-| Convert a dictionary into an association list of key-value pairs. -}",14],["contains all key-value pairs which satisfy the predicate, and the second",20],["{-| Fold over the key-value pairs in a dictionary, in order from lowest",21],["{-| Fold over the key-value pairs in a dictionary, in order from highest",21]],"useCount":153},{"word":"partition","context":[[", filter, partition",12],["partition predicate dict =",21],[", partition",20],["partition : (comparable -> v -> Bool) -> Dict comparable v -> (Dict comparable v, Dict comparable v)",16],["@docs map, foldl, foldr, filter, partition",36],["partition (\\x -> x < 3) [0..5] == ([0,1,2], [3,4,5])",12],["partition pred list =",12],["partition isEven        [0..5] == ([0,2,4], [1,3,5])",12],["@docs partition, unzip",13],["partition : (a -> Bool) -> List a -> (List a, List a)",12]],"useCount":166},{"word":"pass","context":[["pass",33],["{-| Using a certain decoder, attempt to parse a raw `Json.Value`. You can pass",12],["|> Expect.equal Expect.pass",13],["Expect.pass",31]],"useCount":89},{"word":"password","context":[["PasswordAgain password ->",15],["password =",12],["{ model | passwordAgain = password }",13],["if model.password == model.passwordAgain then",13],["{ model | password = password }",14],["{ model | password = password }",14],["Password password ->",16],[", password = \"\"",21],[", password : String",46]],"useCount":164},{"word":"path","context":[["{ path : String",12],["path : List (Float,Float) -> Path",12],["{-| Create a path that follows a sequence of points. -}",13],["path =",30],["{-| Trace a path with a given line style. -}",13],["path",13],["{-| Create a path along a given line segment. -}",13],["[ Svg.path",15],[", Svg.path",26],["case path of",31]],"useCount":226},{"word":"pattern","context":[["and all necessary modules have been imported using the following pattern:",23],[", pattern     = Nothing",16],["{- The actual pattern match here is somewhat lax. If it is given invalid input,",16],["Each pattern is indentation sensitive, meaning that you have to align",14],["pattern match on strings exactly as you would with lists.",12],["pattern =",12],["{-| The configuration of an app follows the basic model / update / view pattern",11],["You can use this pattern for as many signals as you want by using `(~)` a bunch",11],["-- our application. See the following post for more info on this pattern and",11]],"useCount":126},{"word":"pct","context":[["[ width (pct 100)",30],["borderRadius3 (em 4) (px 2) (pct 5)",20],[", height (pct 100)",36],[", width (pct 100)",16],["borderRadius4 (em 4) (px 2) (pct 5) (px 3)",20]],"useCount":122},{"word":"person","context":[["person",12],["person : Decoder Person",19],["{ person |",21],["person =",32]],"useCount":84},{"word":"perspective","context":[["gl_Position = perspective * vec4(position, 1.0);",16],["uniform mat4 perspective;",49],[", perspective = makePerspective 45 1 0.01 100",11]],"useCount":76},{"word":"pi","context":[["&pi; and -&pi;, giving you the full range of angles.",18],["@docs pi, cos, sin, tan, acos, asin, atan, atan2",18],["{-| An approximation of pi. -}",18],["pi : Float",18],["&pi; and -&pi;, giving you the full range of angles.",18],["the `y` or `x`. Thus, the resulting angle is always between &pi;/2 and -&pi;/2",18],["the `y` or `x`. Thus, the resulting angle is always between &pi;/2 and -&pi;/2",18],["t = 2 * pi / m",14],["t = 2 * pi / n",13],[", pi, cos, sin, tan, acos, asin, atan, atan2",12]],"useCount":187},{"word":"placeholder","context":[[", placeholder = p.placeholder",16],[", placeholder \"What needs to be done?\"",21],[", placeholder            : Maybe String",18],[", placeholder = p.placeholder",16]],"useCount":71},{"word":"plane","context":[["slice -6 -1 \"snakes on a plane!\" == \"plane\"",11],["slice  0 -7 \"snakes on a plane!\" == \"snakes on a\"",11],["slice  7  9 \"snakes on a plane!\" == \"on\"",11],["slice  0  6 \"snakes on a plane!\" == \"snakes\"",11],["mirrorAcross plane =",15],["slice -6 -1 \"snakes on a plane!\" == \"plane\"",11]],"useCount":70},{"word":"player","context":[["case player of",27],["player =",21],["player : Float -> Player",16],["player x =",14],[", player1 = player (20-halfWidth)",13],[", player2 = player (halfWidth-20)",13],["player",13]],"useCount":117},{"word":"point","context":[["NaN stands for *not a number* and it is [a standardized part of floating point",18],[", fail \"expecting some kind of point\"",18],["point : Decoder (Float,Float)",66],["{-| Main entry point.",20],["point",13],["point =",144],["a point in a certain 2D space. Imagine we have a collage that is 400 pixels",12],[", point =",16],["list point",18],["{-| Floating point division. -}",18]],"useCount":376},{"word":"point3D","context":[["point3D : Decoder (Float,Float,Float)",36],["point3D =",38]],"useCount":74},{"word":"pointer","context":[[", cursor pointer",13],["cursor: pointer;",15],[", ( \"cursor\", \"pointer\" )",15],[", (\"cursor\", \"pointer\")",42]],"useCount":85},{"word":"points","context":[["case points of",15],["points : Decoder (List (Float,Float))",18],["points =",60],["{-| Handle an array with exactly two elements. Useful for points and simple",14],["{-| Create a path that follows a sequence of points. -}",13],["of points does not need to start and end with the same position.",13],["points",11]],"useCount":144},{"word":"polygon","context":[[", polygon",13],["(polygon",20],["{-| A regular polygon with N sides. The first argument specifies the number",13],["{-| Create an arbitrary polygon by specifying its corners in order.",13],["`polygon` will automatically close all shapes, so the given list",13],["polygon : List (Float,Float) -> Shape",12],["(let poly (\\\\pts (polygon 'black' 'none' 0 pts))",12]],"useCount":96},{"word":"port","context":[["port tasks : Signal (Task Never ())",36],["port module Main exposing (..)",102],["port runner : Signal (Task.Task x ())",36],["port title =",49],["port tasks = app.tasks",49],["port emit : ( String, Value ) -> Cmd msg",67],["port tasks : Signal (Task.Task Never ())",71],["port runner =",48],["port tasks =",118],["port title : String",244]],"useCount":1115},{"word":"pos","context":[["case pos of",12],[", pos = pos",13],[", pos = pos",13],["pos =",34],["attribute vec3 pos;",13]],"useCount":85},{"word":"position","context":[["attribute vec3 position;",55],["[ (\"position\", \"absolute\")",47],["position =",36],[", (\"position\", \"absolute\")",36],["[ ( \"position\", \"absolute\" )",36],["position: relative;",31],["position",31],[", position = Compatible",25],["position: absolute;",22],["style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"",21]],"useCount":730},{"word":"pre","context":[["pre, code { background-color: #f8f8f8; }",15],["pre {",29],["pre { background-color: white;",15],["tree: pre-order, in-order, post-order, depth-first, etc.",12]],"useCount":71},{"word":"precision","context":[["precision mediump float;",114]],"useCount":114},{"word":"pred","context":[["if pred x then",11],["pred a",80],["partition pred list =",12],["if pred x",11]],"useCount":114},{"word":"predicate","context":[["contains all key-value pairs which satisfy the predicate, and the second",20],["{-| Keep only elements that satisfy the predicate.",13],["{-| Determine if any elements satisfy the predicate.",13],["{-| Partition a dictionary according to a predicate. The first dictionary",21],["partition predicate dict =",21],["if predicate key value",21],["if predicate key value then",20],["filter predicate dictionary =",20],["{-| Keep a key-value pair when it satisfies a predicate. -}",17],["{-| Determine if all elements satisfy the predicate.",13]],"useCount":272},{"word":"pretty","context":[["This makes it pretty easy to `pop` the last element off of an array: `slice 0 -1 array`",12],["`App`. It should pretty much always look like this:",11],["[ test \"pretty prints the expected output\" <|",44],["[ test \"pretty prints the expected output\"",22]],"useCount":89},{"word":"prev","context":[["case prev of",137]],"useCount":137},{"word":"preventDefault","context":[[", preventDefault=True",19],[", preventDefault : Bool",11],["{ stopPropagation = True, preventDefault = True }",14],[", preventDefault = False",18],[", preventDefault = True",13]],"useCount":75},{"word":"profession","context":[[", profession : Maybe String",18],["maybe (\"profession\" := string)",18],["-- { name: \"Tom\", age: 31, profession: \"plumber\" }",18],["-- { name: \"Joe\", age: 36, profession: [\"something\", \"unexpected\"] }",14],["-- profession: Just \"plumber\"",14],["-- profession: Nothing",14],["-- { name: \"Amy\", age: 27, profession: null }",14],["(maybe (\"profession\" := string))",18]],"useCount":128},{"word":"program","context":[["Html.App.program {",11],["that you see in every Elm program.",11],["import Html exposing (program)",12],["is the time the program has been running, updated 40 times a second.",13],["This program is not particularly large, so definitely see the following",16],["import Html.App exposing (program)",39],["Html.App.program",51],["program",61],["App.program",112],["Html.program",222]],"useCount":548},{"word":"prop","context":[["case prop of",347],["prop",185],["_ -> prop",283]],"useCount":815},{"word":"properly","context":[[", it \"should render generic properties properly\"",37],[", it \"should render the generic properties properly\"",14],["claim \"JSON conversion round-trips properly\"",11],["[ it \"should render specific values properly\"",11]],"useCount":73},{"word":"properties","context":[[", it \"should render generic properties properly\"",37],["*There is not always a one-to-one mapping between attributes and properties!*",12],[", it \"should render generic properties correctly\"",12],["{-| Create arbitrary *properties*.",12],["properties.originPoint",12],[", it \"should render the generic properties properly\"",14],["( warnings, properties ) =",15],["if List.isEmpty properties then",22]],"useCount":136},{"word":"property","context":[["{-| Sort values by a derived property.",13],["align-items property.",12],["attribute can be used in HTML, but there is no corresponding property!",12],["So the `class` attribute corresponds to the `className` property. At first",12],["**Note:** `auto` is not currently supported here. If you need to set this property to `auto`,",12],["property =",23],["flex-direction property.",20],["{-| Sets [`flex`](https://developer.mozilla.org/en-US/docs/Web/CSS/flex) property.}",15],["Any CSS property can be set to this value.",15],["import Html.Attributes exposing (class, target, href, property, defaultValue)",15]],"useCount":207},{"word":"pseudo","context":[["[pseudo-class](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes).",165],["[pseudo-element](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements).",25]],"useCount":190},{"word":"px","context":[["margin2 (px 10) (px 10)",20],["margin3 (px 10) (px 10) (px 10)",20],["padding2 (px 10) (px 10)",20],["padding4 (px 10) (px 10) (px 10) (px 10)",20],["borderRadius2 (em 4) (px 2)",20],["padding2 (px 10) (px 10)",20],["borderRadius4 (em 4) (px 2) (pct 5) (px 3)",20],["margin  (px 10)",20],["borderRadius4 (em 4) (px 2) (pct 5) (px 3)",20],["margin2 (px 10) (px 10)",20]],"useCount":1141},{"word":"query","context":[[", input [ class \"search-query\", onInput SetQuery, defaultValue model.query ] []",15],[", input [ class \"search-query\", onInput SetQuery, defaultValue model.query ] []",15],["( { model | query = query }, Cmd.none )",16],["( { model | query = query }, Cmd.none )",16],["SetQuery query ->",21],[", query = []",22],["{ query = \"tutorial\"",28],["{ query : String",29],["Insert, remove, and query operations all take *O(log n)* time. Dictionary",13],["query =",13]],"useCount":212},{"word":"r","context":[["RBNode_elm_builtin Black k' v' l' r'",18],["-- l and r are both RBNodes",18],["rem c l r",19],["bubble c k v l r =",19],["balance c k v l r =",20],["RGBA r g b a ->",28],["r =",31],["case r of",77],["rem c l r =",18],["case (l, r) of",17]],"useCount":617},{"word":"radians","context":[["{-| Convert radians to standard Elm angles (radians). -}",18],["radians : Float -> Float",18],["@docs degrees, radians, turns",18],["which happen to be radians.",18],["{-| Convert degrees to standard Elm angles (radians). -}",18],["{-| Convert turns to standard Elm angles (radians).",18],["{-| Convert radians to standard Elm angles (radians). -}",18],["radians t =",11],[", degrees, radians, turns",12],["{-| Rotate a form by a given angle. Rotate takes standard Elm angles (radians)",13]],"useCount":162},{"word":"radius","context":[["++ toString arc.radius.position",12],["of sides and the second is the radius. So to create a pentagon with radius",13],["of sides and the second is the radius. So to create a pentagon with radius",13],["{-| A circle with a given radius. -}",13],["border-radius: 4px;",36],["{-| Sets [`border-radius`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius)",20],["radius =",14],["(\"radius\" := float)",16],[", radius : Float",17],["{-| Sets [`border-radius`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius)",20]],"useCount":196},{"word":"random","context":[["-- Div always rounds down and so random numbers are biased",13],["{-| Create a pair of random values. A common use of this might be to generate",12],["Http.url \"http://api.giphy.com/v1/gifs/random\"",12],["[System.Random](http://hackage.haskell.org/package/random-1.0.1.1/docs/System-Random.html)",13],["if random < 50 then",40]],"useCount":90},{"word":"range","context":[["{-| Clamps a number within a given range. With the expression",18],["int minInt maxInt  -- an integer in the widest range feasible",12],[", range",16],["{-| Return Just the element at the index or Nothing if the index is out of range.",13],["toFloat range",12],["If the index is out of range, the array is unaltered.",12],["range =",22],["&pi; and -&pi;, giving you the full range of angles.",18]],"useCount":123},{"word":"rawError","context":[["case rawError of",36],["promoteError rawError =",22],["promoteHttpError rawError =",15]],"useCount":73},{"word":"rdquo","context":[["{-| Reduce an array from the right. Read `foldr` as &ldquo;fold from the right&rdquo;.",11],["stops&rdquo; that indicate how to interpolate between the inner and outer",11],["All angle conversions result in &ldquo;standard Elm angles&rdquo;",18],["&ldquo;color stops&rdquo; that indicate how to interpolate between the start and",11],["{-| Reduce an array from the left. Read `foldl` as &ldquo;fold from the left&rdquo;.",11],["{-| The shape of the &ldquo;joints&rdquo; of a line, where each line segment",13]],"useCount":75},{"word":"readonly","context":[[", ( \"readonly\", model.readonly )",17],[", ( \"readonly\", model.readonly )",17],[", readonly : Bool",20],[", readonly = False",24]],"useCount":78},{"word":"record","context":[["record _ =",11],["|> cmd_enter_micro_mode_navigate record",17],["x : Focus { record | x:a } a",16],["-- This creates the following record constructor:",16],["however you want. You can also update existing line styles with record updates.",13],["For more explanation of Elm&rsquo;s record system, see [this overview][exp],",13],["You can use record updates to build the line style you",13]],"useCount":99},{"word":"records","context":[["[records]: http://research.microsoft.com/pubs/65409/scopedlabels.pdf \"Extensible records with scoped labels\"",13],["[records]: http://research.microsoft.com/pubs/65409/scopedlabels.pdf \"Extensible records with scoped labels\"",13],["the [initial announcement][v7], or [this academic paper][records].",13],["you with optional arguments, error handling, and records with optional fields.",14],["- [Records](#records)",14],["[records]: http://research.microsoft.com/pubs/65409/scopedlabels.pdf \"Extensible Records\"",35]],"useCount":102},{"word":"rect","context":[["(cons (rect 'white' (- x0 10!) (- y0 10!) (+ w 20!) (+ h 20!))",17],["[ rect",20],["rect",19],["flip Svg.rect [] <|",13],["rect : Float -> Float -> Shape",13],["(def btbbox (rect botcolor r (- h r) (- w (* 2! r)) depth))",12],[", rect 10 40",12],["group (List.map (filled colr) [ rect 8 30, rect 30 8 ])",12],["group (List.map (filled colr) [ rect 8 30, rect 30 8 ])",12],["(def blrbox (rect botcolor 0! (- h r) w (- depth r)))",12]],"useCount":142},{"word":"red","context":[["red =",22],["-- make the top node red",19],["[ \"Internal red-black tree invariant violated, expected \"",19],["toRgb : Color -> { red:Int, green:Int, blue:Int, alpha:Float }",17],["{ red, green, blue, alpha } =",11],["@docs red, orange, yellow, green, blue, purple, brown",11],["++ (toString red)",11],["form <- filled red <| Collage.square 20",14],[", red = red",15],[", red = red",15]],"useCount":165},{"word":"reference","context":[["reference, CURR_ROTOR + CURR_BLADE + BLADE_PITCH,",148],["reference, node,",42],["This syntax reference is a minimal introduction to:",14]],"useCount":204},{"word":"references","context":[["references =",42],["references : List (String, String)",36]],"useCount":78},{"word":"relative","context":[["{-| Represents the relative ordering of two things.",18],["[ position relative",17],["[ ( \"position\", \"relative\" )",19],["relative : Float -> Pos",14],[", (\"position\", \"relative\")",20],["<div style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\">",20],["<div style=\"position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;\">",21],["position: relative;",31],[", ( \"position\", \"relative\" )",13],["[ (\"position\", \"relative\")",13]],"useCount":212},{"word":"rem","context":[["rem : Int -> Int -> Int",18],["-1 `rem` 4 == -1",16],["@docs (+), (-), (*), (/), (^), (//), rem, (%), negate, abs, sqrt, clamp, logBase, e",17],["rem c l r",19],["infixl 7 `rem`",17],["rem c l r =",18],["7 `rem` 2 == 1",16],[", (+), (-), (*), (/), (^), (//), rem, (%), negate, abs, sqrt, clamp, logBase, e",12],["rem : NColor -> Dict k v -> Dict k v -> Dict k v",17],["rem =",17]],"useCount":178},{"word":"remove","context":[["-- TODO - remove example inclusion once Problem sets are ready to go live or CI is set up.",14],["@docs empty, singleton, insert, update, remove",23],["remove key dict =",21],["foldl (\\k v t -> remove k t) t1 t2",20],[", remove",17],["[ Event.remove",17],["remove : comparable -> Dict comparable v -> Dict comparable v",17],["@docs empty, singleton, insert, remove",16],["div [] ([remove, insert] ++ counters)",16],["remove =",15]],"useCount":261},{"word":"render","context":[["@docs view, render",23],["render model =",25],["render",15],["Layout.render Mdl",15],["Html.Lazy.lazy render model",15],["Textfield.render Mdl",17],["[ Button.render Mdl",17],["render =",20],[", it \"should render generic properties properly\"",37],["Button.render Mdl",30]],"useCount":312},{"word":"repeat","context":[["@docs isEmpty, length, reverse, repeat",12],["Notice that `repeat 3 x` is the same as `initialize 3 (always x)`.",12],["foldr (+) 0 (repeat 3 5) == 15",12],["repeat 3 (0,0) == [(0,0),(0,0),(0,0)]",12],["{-| Drop updates that repeat the current value of the signal.",13],["repeat 3 \"ha\" == \"hahaha\"",12],["append (repeat 2 42) (repeat 3 81) == fromList [42,42,81,81,81]",12],["append (repeat 2 42) (repeat 3 81) == fromList [42,42,81,81,81]",12],["repeat 5 0     == fromList [0,0,0,0,0]",12],["repeat 3 \"cat\" == fromList [\"cat\",\"cat\",\"cat\"]",12]],"useCount":167},{"word":"request","context":[["request =",90],["fromJson decoder (send defaultSettings request)",12],["request",15],["let request =",27],["(Http.send Http.defaultSettings request)",55]],"useCount":199},{"word":"res","context":[["case res of",66],["res",46],["Ok res ->",26]],"useCount":138},{"word":"response","context":[["to be producing tasks in response to all sorts of events, so this needs to",11],["handleResponse handle response =",14],["case response of",44],["if 200 <= response.status && response.status < 300 then",32],["if 200 <= response.status && response.status < 300 then",32],["case response.value of",32],["Task.fail (Http.BadResponse response.status response.statusText)",17],["handleResponse response =",17],["Task.fail (Http.BadResponse response.status response.statusText)",17]],"useCount":216},{"word":"rest","context":[["dropEmptyDeclarations rest",27],["_ :: rest ->",17],["Cons first rest ->",15],["rest =",14],["1 + length rest",12],["first :: rest ->",83],["rest = Markdown.toElement \"\"\"",12],["one :: two :: rest ->",18],["contains the rest.",19],["declaration :: (dropEmptyDeclarations rest)",30]],"useCount":304},{"word":"result","context":[["viewSearchResult result =",26],["result",41],["case result of",242],["result =",66],["All angle conversions result in &ldquo;standard Elm angles&rdquo;",18],["andThen result callback =",20],[", a [ href (\"https://github.com/\" ++ result.name), target \"_blank\" ]",21],["urlUpdate result model =",22],["[ span [ class \"star-count\" ] [ text (toString result.stars) ]",23],["[ text result.name ]",26]],"useCount":877},{"word":"results","context":[["results =",37],["{ model | results = newResults }",14],["{-| Reduce a list from the left, building up all of the intermediate results into a list.",15],[", ul [ class \"results\" ] (List.map viewSearchResult model.results)",16],[", ul [ class \"results\" ] (List.map viewSearchResult model.results)",16],["Ok results ->",17],["`clamp 100 200 x` the results are as follows:",18],[", results : List SearchResult",21],["results",22],["{-| Function composition, passing results along in the suggested direction. For",34]],"useCount":259},{"word":"return","context":[["return {",11],["return (",19],["{-| Get the value associated with a key. If the key is not found, return",20],["{-| Log a tagged value on the developer console, and then return the value.",11],["return;",13],["that it will return the desired String as its key, and use that as our value.",11]],"useCount":85},{"word":"returns","context":[["{-| Given a 2-tuple, returns the second value. -}",17],["returns 42. When you are dealing with higher-order functions, this comes in",18],["a function that *always* returns the same value regardless of what input you give.",18],["{-| Given a 2-tuple, returns the first value. -}",17],["{-| Given a value, returns exactly the same value. This is called",17]],"useCount":87},{"word":"reverse","context":[["reverse \"stressed\" == \"desserts\"",12],["reverse [1..4] == [4,3,2,1]",12],["@docs isEmpty, length, reverse, repeat",12],["reverse : String -> String",12],["@docs isEmpty, length, reverse, member",12],["List.reverse <|",13],["reverse : List a -> List a",13],["|> List.reverse",70],["|> String.reverse",14]],"useCount":170},{"word":"rgb","context":[["border-left: solid 2px rgb(96,181,204);",18],["background-color: rgb(245,245,245);",18],["borderColor2 (rgb 12 11 10) (hex \"FFBBCC\")",20],["textShadow3 (px 1) (px 2) (rgb 211 121 112)",16],["borderColor  (rgb 12 11 10)",20],["borderColor3 (rgb 12 11 10) (hex \"FFBBCC\") inherit",20],["borderColor4 (rgb 12 11 10) (hex \"FFBBCC\") inherit (rgb 1 2 3)",20],["import Color exposing (rgb)",21],["textDecorations3 [ underline, overline ] wavy (rgb 128 64 32)",24],["borderColor4 (rgb 12 11 10) (hex \"FFBBCC\") inherit (rgb 1 2 3)",20]],"useCount":474},{"word":"right","context":[["flow right",75],["right =",26],["Node v left right ->",25],["flow right <|",24],["RBNode_elm_builtin clr key value left right ->",23],["flow right [",22],["RBNode _ key value left right ->",21],[", flow right",40],["RBNode_elm_builtin _ key value left right ->",33],["if code == 13 then Ok () else Err \"not the right key code\"",27]],"useCount":794},{"word":"ripple","context":[[", Button.ripple",43],[", Toggles.ripple",35],["[ Button.ripple",16],["[ Tabs.ripple",11],["[ Button.icon, Button.ripple ]",16]],"useCount":121},{"word":"rotate","context":[["|> rotate (degrees 30)",11],["you would say, `(rotate (degrees 30) form)`.",13],["in your collage. This means you can move, rotate, and scale",13],["{-| The collage API is for freeform graphics. You can move, rotate, scale, etc.",13],["{-| Flatten many forms into a single `Form`. This lets you move and rotate them",13],["@docs move, moveX, moveY, scale, rotate, alpha",13],["collage 50 50 [ rotate (degrees angle) (twoRects colr) ]",16],["rotate : Float -> Form -> Form",22]],"useCount":114},{"word":"round","context":[["Native.Basics.round",11],["claim \"JSON conversion round-trips properly\"",11],["|> round",20],["round : Float -> Int",20],["@docs round, floor, ceiling, truncate, toFloat",18],[", round, floor, ceiling, truncate, toFloat",12],["round =",12]],"useCount":104},{"word":"rounds","context":[["-- ideally we would use division that rounds towards zero so",13],["-- it rounds down. Thus half the time it rounds up and half the time it",13],["-- it rounds down. Thus half the time it rounds up and half the time it",13],["-- rounds down",13],["-- that in the negative case it rounds up and in the positive case",13],["-- Div always rounds down and so random numbers are biased",13]],"useCount":78},{"word":"route","context":[[", route = route",12],["case route of",52],["case model.route of",37],["route",30],[", route = route",12],["Ok route ->",14]],"useCount":157},{"word":"row","context":[[", div [ class \"row\" ]",22],["[ div [class \"row\"]",25],["row",30],["div [ class \"row\" ]",41],["[ class \"row\" ]",72],[", css \"flex-flow\" \"row wrap\"",22],["row =",18],["display: table-row !important;",21],["[ div [ class \"row\" ]",19],[", div [class \"row\"]",14]],"useCount":343},{"word":"run","context":[["run emit tests",36],["* `tasks` &mdash; a signal of tasks that need to get run. Your app is going",11],["be hooked up to a `port` to ensure they get run.",11],["Html.run suite",21],["run =",18],["import Test.Runner.Node exposing (run, TestProgram)",16],["import Test.Runner.Node exposing (run)",46],["port requests = Run.run responses console",13],["tasks into a `port` that will run them all.",11],["run emit Tests.all",11]],"useCount":194},{"word":"runDisplay","context":[["main = runDisplay tests -- CI_DISABLE",13],["import ElmTest.Runner.Console exposing (runDisplay)",17],["main = runDisplay tests",18],["import ElmTest.Runner.Element exposing (runDisplay)",36],["console = runDisplay tests",12]],"useCount":96},{"word":"runner","context":[["port runner =",48],["port runner : Signal (Task.Task x ())",36]],"useCount":84},{"word":"s","context":[["case s of",51],["s",30],["s =",29],["(\\s -> { s | state = StepTree.StepStateSucceeded })",28],["(\\s -> { s | state = StepTree.StepStateSucceeded })",28],["let newContent = get s contentMap",24],["changeMain model s =",24],["Entry s -> changeMain model s",24],["Entry s -> changeMain model s",24],["Just s ->",24]],"useCount":578},{"word":"s1","context":[["s1'' = if s1' < 0 then s1' + magicNum6 else s1'",12],["EOption s1 s2 e1 ->",11],["s1 = s %  (magicNum6-1)",11],["z = s1'' - s2''",12],["s1' = magicNum0 * (s1 - k * magicNum1) - k * magicNum2",12],["s1'' = if s1' < 0 then s1' + magicNum6 else s1'",12],["s1'' = if s1' < 0 then s1' + magicNum6 else s1'",12],["s1'' = if s1' < 0 then s1' + magicNum6 else s1'",12],["s1' = magicNum0 * (s1 - k * magicNum1) - k * magicNum2",12]],"useCount":106},{"word":"s2","context":[["s2'' = if s2' < 0 then s2' + magicNum7 else s2'",12],["s2' = magicNum4 * (s2 - k' * magicNum3) - k' * magicNum5",12],["s2' = magicNum4 * (s2 - k' * magicNum3) - k' * magicNum5",12],["z = s1'' - s2''",12],["EOption s1 s2 e1 ->",11],["s2 = q %  (magicNum7-1)",11],["s2'' = if s2' < 0 then s2' + magicNum7 else s2'",12],["s2'' = if s2' < 0 then s2' + magicNum7 else s2'",12],["s2'' = if s2' < 0 then s2' + magicNum7 else s2'",12]],"useCount":106},{"word":"same","context":[["Not every browser has access to the same typefaces, so rendering will use the",11],["Notice that `repeat 3 x` is the same as `initialize 3 (always x)`.",12],["the same seed, you get the same results.",12],["the same seed, you get the same results.",12],["two signals. When multiple updates come in at the same time, the left-most",12],["of points does not need to start and end with the same position.",13],["list must have the same type.",13],["{-| Given a value, returns exactly the same value. This is called",17],["where the first few types are different, followed by 0 or more of the same",18],["a function that *always* returns the same value regardless of what input you give.",18]],"useCount":149},{"word":"satisfy","context":[["{-| Determine whether *all* characters satisfy a predicate.",11],["{-| Determine whether *any* characters satisfy a predicate.",11],["{-| Create a new set consisting only of elements which satisfy a predicate.",12],["that satisfy the predicate, and the second list contains all the value that do",12],["{-| Keep only elements that satisfy the predicate.",13],["{-| Keep only elements that satisfy the predicate:",13],["{-| Determine if any elements satisfy the predicate.",13],["{-| Determine if all elements satisfy the predicate.",13],["{-| Create two new sets; the first consisting of elements which satisfy a",15],["contains all key-value pairs which satisfy the predicate, and the second",20]],"useCount":144},{"word":"scale","context":[["|> scale 2",39],["scale : Float -> Form -> Form",22],["scale =",18],["scale 2 (move (10,10) (filled blue (ngon 5 30)))",18],[", scale : Float",17],["@docs move, moveX, moveY, scale, rotate, alpha",13],["{-| The collage API is for freeform graphics. You can move, rotate, scale, etc.",13],["in your collage. This means you can move, rotate, and scale",13]],"useCount":153},{"word":"score","context":[[", score : Int",39],[", score = 0",41]],"useCount":80},{"word":"searchWords","context":[[", searchWords = []",162]],"useCount":162},{"word":"second","context":[["{-| Given a 2-tuple, returns the second value. -}",17],["import Time exposing (Time, second)",59],["import Time exposing (second)",35],["It totally ignores the second argument, so `always 42` is a function that always",18],["second =",26],["{-| Keep a key-value pair when its key appears in the second dictionary.",20],["contains all key-value pairs which satisfy the predicate, and the second",20],["Time.every second Tick",19],["{-| Keep a key-value pair when its key does not appear in the second dictionary.",19],["import Tuple exposing (first, second)",18]],"useCount":423},{"word":"section","context":[[", section preface",13],[", section intro",21],["section",55],["[ section",27],["section []",24],["section txt =",23],["section =",11],["{-| Get a sub-section of an array: `(slice start end array)`. The `start` is a",12]],"useCount":186},{"word":"seed","context":[["seed",14],["((left,right), seed'')",12],["generator seed",12],[", seed : Seed",29],["Generator <| \\seed ->",38],["generate seed",20],["seed =",22],[", seed = seed",22],[", seed : Random.Seed",18],[", seed = seed",22]],"useCount":268},{"word":"seed0","context":[["Generator <| \\seed0 ->",27],["-- generate (int 0 100) seed0 ==> (42, seed1)",24],["-- step (int 0 100) seed0 ==> (42, seed1)",12],["(a, seed1) = genA seed0",25]],"useCount":88},{"word":"seed1","context":[["(a, seed1) = genA seed0",25],["-- generate (int 0 100) seed0 ==> (42, seed1)",24],["-- step (int 0 100) seed0 ==> (42, seed1)",12],["(b, seed2) = genB seed1",20]],"useCount":81},{"word":"send","context":[["send : Address a -> a -> Task x ()",14],[", Event.send <|",12],["Http.send Http.defaultSettings",24],["fromJson decoder (send defaultSettings request)",12],["send =",17],["|> Http.send Http.defaultSettings",17],["Http.send",18],["send : Channel a -> a -> Message",11],["(Http.send Http.defaultSettings request)",55]],"useCount":180},{"word":"set","context":[["Options.set",63],["Any CSS property can be set to this value.",15],["{-| Remove a value from a set. If the value is not found, no changes are made.",15],["{-| Get the difference between the first set and the second. Keeps values",15],["set =",20],["set 1 7 (fromList [1,2,3]) == fromList [1,7,3]",12],["{-| Create a new set consisting only of elements which satisfy a predicate.",12],["-- TODO - remove example inclusion once Problem sets are ready to go live or CI is set up.",14],["set : Int -> a -> Array a -> Array a",13],["Lens get set",22]],"useCount":383},{"word":"shape","context":[["with something with a very strange shape and when `andThen` does not help",18],["shape =",22],["shape : Decoder Shape",18],["{-| Helpful when one field will determine the shape of a bunch of other fields.",16],["case shape of",14],["{-| Create a textured shape. The texture is described by some url and is",13],["{-| The shape of the ends of a line. -}",13],["tiled to fill the entire shape.",13],["{-| Move a shape in the y direction. This is relative so `(moveY 10 form)` moves",13],["{-| The shape of the &ldquo;joints&rdquo; of a line, where each line segment",13]],"useCount":228},{"word":"shapes","context":[["`polygon` will automatically close all shapes, so the given list",13],["shapes : Signal (Result String Shape)",12],["extra weird shapes or stuff that currently is not allowed through ports",12],["(let shapes",11],["all sorts of forms including lines, shapes, images, and elements.",13],["shapes =",14],["fail (tag ++ \" is not a recognized tag for shapes\")",18]],"useCount":93},{"word":"should","context":[["--     `shouldEqual` \"color:should not compile\"",16],["{-| Filter out some updates. The given function decides whether we should",16],["equality with `(==)` is unreliable and should not be used.",14],["quadrant the angle should really be in. The result will be between",18],["--     `shouldEqual` \"text-decoration-line:should not compile\"",14],[", it \"should render generic properties properly\"",37],[", it \"should render the generic properties properly\"",14],["Here's a handy trick that every Elm programmer should know:",14],["-- algorithm. Any other occurrence is a bug and should fail an assert.",19],["-- BBlack and NBlack should only be used during the deletion",19]],"useCount":406},{"word":"shouldEqual","context":[["--     `shouldEqual` \"border-top:should not compile\"",12],["--     `shouldEqual` \"border-right:should not compile\"",12],["--     `shouldEqual` \"text-decoration-line:should not compile\"",14],["--     `shouldEqual` \"border:should not compile\"",12],["--     `shouldEqual` \"outline:should not compile\"",12],["--     `shouldEqual` \"border-bottom:should not compile\"",12],["--     `shouldEqual` \"color:should not compile\"",16],["--     `shouldEqual` \"text-decoration-style:should not compile\"",12],["--     `shouldEqual` \"border-left:should not compile\"",12],["--     `shouldEqual` \"padding:should not compile\"",12]],"useCount":137},{"word":"show","context":[["{-| Convert a string into text which can be styled and displayed. To show the",11],["import Graphics.Element exposing (Element, show)",26],["import Graphics.Element exposing (show)",81]],"useCount":118},{"word":"signal","context":[[">>- sample signal",12],["get values from JavaScript, they will come in through a port as a signal which",11],["of time that the output signal has been running.",11],["Signal.foldp update initialModel actions.signal",12],["signal =",20],["actions.signal",16],[", signal : Signal a",14],["{-| Drop updates that repeat the current value of the signal.",13],["|> andAlways (sample mbox.signal)",13],["be used to step the state forward. The outgoing signal represents the current",12]],"useCount":167},{"word":"signals","context":[["together lots of different signals to feed into a `foldp`.",12],["4. Inputs - the signals necessary to manage events",17],["two signals. When multiple updates come in at the same time, the left-most",12],["{-| Merge many signals into one. This is useful when you are merging more than",12],["{-| Merge two signals into one. This function is extremely useful for bringing",12],["If an update comes from either of the incoming signals, it updates the outgoing",12],["{-| An `App` is made up of a couple signals:",11],["The `inputs` field is for any external signals you might need. If you need to",11],["You can use this pattern for as many signals as you want by using `(~)` a bunch",11]],"useCount":110},{"word":"sin","context":[[", pi, cos, sin, tan, acos, asin, atan, atan2",12],["@docs pi, cos, sin, tan, acos, asin, atan, atan2",18],["sin : Float -> Float",18],["f i = (hw * cos (t*i), hh * sin (t*i))",12],["toString (50 + 40 * sin angle)",12],["f i = ( r * cos (t*i), r * sin (t*i) )",12],["sin =",11],["Native.Basics.sin",11]],"useCount":106},{"word":"single","context":[["{-| Concatenate a bunch of lists into a single list:",12],["as a single unit, making it possible to build small, modular components.",13],["it as a single unit.",13],["{-| Flatten many forms into a single `Form`. This lets you move and rotate them",13],["{-| Flatten many forms into a single `Form` and then apply a matrix",13],["-- a single line comment",14],["This combines two arguments into a single pair.",18]],"useCount":96},{"word":"singleton","context":[[", empty, singleton, insert, update",16],["singleton : comparable -> v -> Dict comparable v",17],["@docs empty, singleton, insert, remove",16],["singleton : a -> List a",13],[", empty, singleton, insert, remove",12],["@docs empty, singleton, insert, update, remove",23],["singleton key value =",19],["singleton x",11],["singleton : comparable -> Set comparable",11]],"useCount":138},{"word":"size","context":[[", size Tablet 8",23],["[ size Desktop 12",20],[", size : Int",19],["size dict =",17],["font-size: 12px;",16],["size =",24],["<div style=\"color:#666;font-size:0.8em;text-align:left\">",28],[", size Phone 4",29],[", (\"font-size\", \"2em\")",35],["[ (\"font-size\", \"20px\")",42]],"useCount":399},{"word":"skeleton","context":[["import Website.Skeleton exposing (skeleton)",54],["import Website.Skeleton (skeleton)",89]],"useCount":143},{"word":"slice","context":[["that indicates the end of the slice. The slice extracts up to but not including",12],["This makes it pretty easy to `pop` the last element off of an array: `slice 0 -1 array`",12],["slice  1  4 (fromList [0,1,2,3,4]) == fromList [1,2,3]",12],["zero-based index where we will start our slice. The `end` is a zero-based index",12],["slice : Int -> Int -> Array a -> Array a",12],["slice -2  5 (fromList [0,1,2,3,4]) == fromList [3,4]",12],["that indicates the end of the slice. The slice extracts up to but not including",12],["slice  0  3 (fromList [0,1,2,3,4]) == fromList [0,1,2]",12],["slice  1 -1 (fromList [0,1,2,3,4]) == fromList [1,2,3]",12],["{-| Get a sub-section of an array: `(slice start end array)`. The `start` is a",12]],"useCount":186},{"word":"snd","context":[["snd : (a,b) -> b",17],["|> List.filter snd",17],["let (Just (LangSvg.SvgNode _ nodeAttrs _)) = Dict.get objid (snd old.slate) in",15],[", fst, snd",11],["|> snd",13],["@docs fst, snd",17]],"useCount":90},{"word":"so","context":[["{-| Move a shape in the x direction. This is relative so `(moveX 10 form)` moves",13],["{-| Just put plain text in the DOM. It will escape the string so that it appears",14],["This program is not particularly large, so definitely see the following",16],["argument, so there is no way to know whether the negative signs comes from",18],["narrow things down so you can be more targeted.",18],["It totally ignores the second argument, so `always 42` is a function that always",18],["Failures resemble code written in pipeline style, so you can tell",28],["are your tuples so big?",18],["really a helper function so you do not need to write `(:=)` so many times.",18],["really a helper function so you do not need to write `(:=)` so many times.",18]],"useCount":347},{"word":"solid","context":[["{-| Create a solid line style with a given color. -}",13],["border-left: solid 2px rgb(96,181,204);",18],["border: 1px solid rgb(216, 221, 225);",15],["@docs solid, dashed, dotted, LineStyle, LineCap, LineJoin, defaultLine",13],["{-| The default line style, which is solid black with flat caps and sharp joints.",13],["solid : Color -> LineStyle",13],["border: 1px solid #dddddd;",11],[", (\"border-style\", \"solid\")",11]],"useCount":107},{"word":"some","context":[["you need to interact with some code that primarily uses maybes.",11],["it will attempt to take some JSON value and turn it into a list of strings.",12],["{-| Convert from a simple `Maybe` to interact with some code that primarily",11],["{-| Set the style of some text. For example, if you design a `Style` called",11],[", fail \"expecting some kind of point\"",18],["{-| Filter out some updates. The given function decides whether we should",16],["{-| Create a textured shape. The texture is described by some url and is",13],["`Err` meaning that there was some failure.",11]],"useCount":103},{"word":"something","context":[["fall back on something like this:",11],["-- { name: \"Joe\", age: 36, profession: [\"something\", \"unexpected\"] }",14],["something.",17],["with something with a very strange shape and when `andThen` does not help",18],["So our example expands out to something like this:",19]],"useCount":79},{"word":"sort","context":[["sort [3,1,5] == [1,3,5]",12],["++ \"+language:elm&sort=stars&order=desc\"",12],["to define any other: `sort == sortWith compare`",13],["sort : List comparable -> List comparable",13],["@docs sort, sortBy, sortWith",19],["This is also the most general sort function, allowing you",13]],"useCount":82},{"word":"sortBy","context":[["sortBy String.length [\"mouse\",\"cat\"] == [\"cat\",\"mouse\"]",21],["sortBy .height [chuck,alice,bob] == [alice,chuck,bob]",21],["sortBy .name   [chuck,alice,bob] == [alice,bob,chuck]",21],["sortBy : (a -> comparable) ->  List a -> List a",12],["@docs sort, sortBy, sortWith",19]],"useCount":94},{"word":"sourceCode","context":[["table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {",22],["table.sourceCode { width: 100%; background-color: #f8f8f8; }",15],["td.sourceCode { padding-left: 5px; }",22],["table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {",22],["table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {",22]],"useCount":103},{"word":"space","context":[[", space",24],[", css \"justify-content\" \"space-between\"",21],["Keyboard.space",19],["space =",17],["{ space : Bool",14],["a point in a certain 2D space. Imagine we have a collage that is 400 pixels",12]],"useCount":107},{"word":"span","context":[["span",77],["code > span.dt { color: #204a87; }",28],["code > span.al { color: #ef2929; }",28],["code > span.er { font-weight: bold; }",28],["code > span.dv { color: #0000cf; }",28],["span [] []",34],["<span style=\"opacity:0.3;\">",63],["</span>",72],[", span",76],["[ span",79]],"useCount":946},{"word":"sqrt","context":[[", (+), (-), (*), (/), (^), (//), rem, (%), negate, abs, sqrt, clamp, logBase, e",12],["not << isEven << sqrt",17],["@docs (+), (-), (*), (/), (^), (//), rem, (%), negate, abs, sqrt, clamp, logBase, e",17],["\\n -> not (isEven (sqrt n))",17],["sqrt >> isEven >> not",17],["sqrt : Float -> Float",17],["isNaN (sqrt -1) == True",18],["object1 sqrt (\"x\" := float)",12],["isInfinite (sqrt -1) == False",18],["sqrt (x^2 + y^2)",18]],"useCount":243},{"word":"square","context":[["square =",16],["square : Float -> Shape",13],["{-| A square with a given edge length. -}",13],["square = { defaultRenderable |",12],["{-| Take the square root of a number. -}",18],["form <- filled red <| Collage.square 20",14],["square : Renderable",12],["square n =",16],["example, the following code checks if the square root of a number is odd:",34]],"useCount":148},{"word":"srcUrl","context":[["srcUrl =",39],["srcUrl : String",39]],"useCount":78},{"word":"standard","context":[["All angle conversions result in &ldquo;standard Elm angles&rdquo;",18],["{-| Convert radians to standard Elm angles (radians). -}",18],["{-| Convert degrees to standard Elm angles (radians). -}",18],["{-| Convert turns to standard Elm angles (radians).",18],["{-| Rotate a form by a given angle. Rotate takes standard Elm angles (radians)",13]],"useCount":85},{"word":"stars","context":[[", stars : Int",27],["[ span [ class \"star-count\" ] [ text (toString result.stars) ]",23],["stars = Just 2",13],["++ \"+language:elm&sort=stars&order=desc\"",12],[", stars = 66",12]],"useCount":87},{"word":"start","context":[[", css \"align-items\" \"flex-start\"",17],["import StartApp.Simple exposing (start)",57],["start",56],["{-| Sets [`border-block-start`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start)",30],["{-| Sets [`border-block-start`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start)",30],["start =",26],["start config =",20],["app = StartApp.start",15],["msg = \"SPACE to start, WS and &uarr;&darr; to move\"",15],["StartApp.start",194]],"useCount":670},{"word":"state","context":[["{ state",83],["state =",48],["{ state |",41],["{ state : State",35],["(\\s -> { s | state = StepTree.StepStateSucceeded })",28],["Task.succeed state",26],["2. Update - a way to step the application state forward",20],["state",113],["case state of",101],["case model.state of",53]],"useCount":981},{"word":"status","context":[["if 200 <= response.status && response.status < 300 then",32],[", Attributes.disabled (status /= Form.Entering)",24],["case model.status of",20],["if 200 <= response.status && response.status < 300 then",32],["case status of",66],[", status : String",14],[", status = Enabled",16],["Task.fail (Http.BadResponse response.status response.statusText)",17],[", status : Status",19]],"useCount":240},{"word":"step","context":[["Html.div [class \"build-step\"]",11],["foldr step ([],[]) list",12],["foldr step ([], []) pairs",12],["be used to step the state forward. The outgoing signal represents the current",12],["stepIsActive step",12],["-- step (int 0 100) seed0 ==> (42, seed1)",12],["step",16],[", step =",16],["step (dt, keys) =",16],["2. Update - a way to step the application state forward",20]],"useCount":139},{"word":"stopPropagation","context":[["{ stopPropagation : Bool",11],["{ stopPropagation = True, preventDefault = True }",14],["{ stopPropagation = False",26],["{ stopPropagation=False",19]],"useCount":70},{"word":"str","context":[["{ model | field = str }",14],["Http.Text str ->",11],["handle str",13],["NewMessage str ->",13],["case String.uncons str of",14],["str",44],["UpdateField str ->",29],["str =",22],["case str of",18]],"useCount":178},{"word":"string","context":[["|: (\"name\" := Json.Decode.string)",20],["(\"name\" := string)",88],["(\"name\" := Json.Decode.string)",26],["@docs string, int, float, bool, null",26],["string =",58],["string : Decoder String",20],["import Json.Encode exposing (string)",21],["(\"name\" := Json.string)",33],["at [\"target\", \"value\"] string",23],["string",38]],"useCount":1133},{"word":"strings","context":[["{-| Try to convert a string into a float, failing on improperly formatted strings.",12],["{-| Concatenate many strings into one.",12],["pattern match on strings exactly as you would with lists.",12],["{-| Try to convert a string into an int, failing on improperly formatted strings.",12],["{-| Put many strings together with a given separator.",12],["characters, strings, lists of comparable things, and tuples of comparable",18],["it will attempt to take some JSON value and turn it into a list of strings.",12],["{-| Put two appendable things together. This includes strings, lists, and text.",17]],"useCount":107},{"word":"style","context":[["style",357],["<span style=\"opacity:0.3;\">",63],["<style type=\"text/css\">",47],[", style",104],["Failures resemble code written in pipeline style, so you can tell",28],["|> Style.on model.style",33],["style =",40],["</style>",61],["[ style",229],["import Html.Attributes exposing (style)",138]],"useCount":1691},{"word":"stylesheet","context":[["stylesheet",69],["stylesheet =",17]],"useCount":86},{"word":"subMenu","context":[[", subMenu     = subMenu",32],["subMenu = []",24],[", subMenu     = subMenu",32]],"useCount":88},{"word":"subscriptions","context":[[", subscriptions : model -> Sub msg",25],["subscriptions : Model -> Sub Action",24],["subscriptions : Model -> Sub Msg",363],["subscriptions =",32],[", subscriptions = subscriptions",316],[", subscriptions",35],[", subscriptions = always Sub.none",42],[", subscriptions = \\_ -> Sub.none",85],["subscriptions model =",405],[", subscriptions = subscriptions",316]],"useCount":1789},{"word":"succeed","context":[["succeed =",29],["Task.succeed state",26],["@docs maybe, oneOf, map, fail, succeed, andThen",18],["import Task exposing (Task, andThen, succeed)",15],["Task.succeed ()",27],["Task.succeed Nothing",20],["Native.Json.succeed",19],["succeed : a -> Decoder a",19],["(oneOf [ \"z\" := float, succeed 0 ])",18],["|> recover (Task.succeed << assertEqual \"no error\")",18]],"useCount":307},{"word":"suite","context":[["import ElmTest.Test exposing (suite, test)",39],["let simpleTests = suite \"Simple Stuff\"",12],["suite : Spec",14],["suite",146],["ElmTest.runSuiteHtml suite",12],["suite =",43],["Html.run suite",21],["import ElmTest.Test exposing (test, Test, suite)",31],["suite : Test",33]],"useCount":351},{"word":"sum","context":[["{-| Get the sum of the list elements.",12],["sum : List number -> number",12],["sum [1..4] == 10",12],["|> List.sum",26],["sum numbers =",13]],"useCount":75},{"word":"svg","context":[["(svg",46],["svg",28],["(svg [",27],["Svg.svg",17],["svg [ viewBox \"0 0 100 100\", width \"300px\" ]",13]],"useCount":131},{"word":"t","context":[["_ -> t",35],["blacken t =",19],["blackish t =",19],["**Don't:**",20],["foldl (\\k v t -> remove k t) t1 t2",20],["foldl (\\k v t -> remove k t) t1 t2",20],["foldr f acc t =",21],["t =",25],["case t of",136],["t",60]],"useCount":690},{"word":"t1","context":[["diff t1 t2 =",20],["foldl (\\k v t -> remove k t) t1 t2",20],["union t1 t2 =",20],["(setMotionTarget m1 t1)",14],["foldl insert t2 t1",19],["intersect t1 t2 =",21]],"useCount":114},{"word":"t2","context":[["foldl (\\k v t -> remove k t) t1 t2",20],["intersect t1 t2 =",21],["foldl insert t2 t1",19],["union t1 t2 =",20],["diff t1 t2 =",20]],"useCount":100},{"word":"table","context":[["display: table-row !important;",21],[", table",15],["table =",20],["table []",14],["Table.table []",14],["table",13],["display: table-cell !important;",21],["table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {",22],["display: table;",50],["table.sourceCode { width: 100%; background-color: #f8f8f8; }",15]],"useCount":217},{"word":"tag","context":[["view tag model =",11],[", \"tag\" => topic",11],["{ tag : String",13],["(\"tag\" := string) `andThen` shapeInfo",18],["fail (tag ++ \" is not a recognized tag for shapes\")",18],["fail (tag ++ \" is not a recognized tag for shapes\")",18],["case tag of",27],["shapeInfo tag =",19]],"useCount":135},{"word":"takes","context":[["takes an end point and outer radius. It then takes a series of &ldquo;color",11],["{-| You probably do not want to use this. It takes `(y/x)` as the",18],["{-| Create a radial gradient. First takes a start point and inner radius.  Then",11],["takes an end point and outer radius. It then takes a series of &ldquo;color",11],["{-| Rotate a form by a given angle. Rotate takes standard Elm angles (radians)",13],["meets. `Sharp` takes an argument to limit the length of the joint. This",13]],"useCount":77},{"word":"tan","context":[["Native.Basics.tan",11],["tan =",11],["tan : Float -> Float",18],[", pi, cos, sin, tan, acos, asin, atan, atan2",12],["@docs pi, cos, sin, tan, acos, asin, atan, atan2",18]],"useCount":70},{"word":"target","context":[["-- object.target.value = 'hello'",18],["target =",20],[", target \"_blank\"",36],["at [\"target\", \"value\"] string",23],[", a [ href (\"https://github.com/\" ++ result.name), target \"_blank\" ]",21],[", target \"_blank\"]",15],["import Html.Attributes exposing (class, target, href, property, defaultValue)",15]],"useCount":148},{"word":"targetValue","context":[[", on \"input\" targetValue (Signal.message address << UpdateField)",13],["targetValue",13],["import Html.Events exposing (onClick, on, targetValue)",15],["import Html.Events exposing (on, targetValue)",25],["import Html.Events exposing (on, onClick, targetValue)",11]],"useCount":77},{"word":"task","context":[["(StepTree.Task (someStep \"task-b-id\" \"task-b\" StepTree.StepStatePending)))",12],["|> Effects.task",245],["task =",29],["task",29],[", value task",17],["UpdateTask id task ->",13],["assertFocus \"task-a-id\" foci tree",12],["(StepTree.Task (someStep \"task-a-id\" \"task-a\" StepTree.StepStatePending))",12],["(StepTree.Task (someStep \"task-a-id\" \"task-a\" StepTree.StepStatePending))",12],["(StepTree.Task (someStep \"task-b-id\" \"task-b\" StepTree.StepStatePending)))",12]],"useCount":426},{"word":"tasks","context":[["port tasks = app.tasks",49],["{ model | tasks <- List.map updateTask model.tasks }",24],["port tasks = app.tasks",49],["port tasks : Signal (Task.Task Never ())",71],["port tasks =",118],["app.tasks",125],["{ model | tasks = List.map updateTask model.tasks }",39],["{ model | tasks = List.map updateTask model.tasks }",39],["port tasks : Signal (Task Never ())",36],["port tasks : Signal (Task.Task Effects.Never ())",31]],"useCount":770},{"word":"td","context":[["td",15],["table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {",22],["For `td` and `th`.",18],["[ td []",14],["td.sourceCode { padding-left: 5px; }",22],[", td [class \"win\"] [text \"\"]",14],[", td",14],[", td []",23],["table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {",22],["td []",14]],"useCount":240},{"word":"test","context":[["import ElmTest.Test exposing (suite, test)",39],["[ test",33],["import ElmTest.Test exposing (test, Test, suite)",31],["[ test \"pretty prints the expected output\" <|",44],[", test",259],["case test of",27],["[ test \"the tree\" <|",22],["[ test \"pretty prints the expected output\"",22],["import Test exposing (describe, test)",21],["test",20]],"useCount":578},{"word":"testSuite","context":[["testSuite =",102],["testSuite : Test",46],["main = elementRunner testSuite",20]],"useCount":168},{"word":"tests","context":[["tests : Test",334],["tests =",327],["run emit tests",36],["runSuite tests",22],["console = runDisplay tests",12],["main = runDisplay tests -- CI_DISABLE",13],["tests : List Test",13],["tests = List.map f inputs",20],["This just runs the tests.",20],["main = runDisplay tests",18]],"useCount":815},{"word":"text","context":[["<style type=\"text/css\">",47],["text \"\"",161],[", (\"text-align\", \"center\")",104],[", text \" \"",79],["import Html exposing (text)",75],[", type' \"text\"",53],["text =",51],["[ text",44],["[ type' \"text\"",46],["|> text",48]],"useCount":2484},{"word":"textarea","context":[[", Textfield.textarea",26],["`textarea`.",25],["textarea",19],["[ textarea",18],["Html.textarea",15]],"useCount":103},{"word":"textual","context":[["( { model | ambientColour = numeric, ambientColourText = textual }, Cmd.none )",15],["( numeric, textual ) =",69],["{-| Convert anything to its textual representation and make it displayable in",11]],"useCount":95},{"word":"texture","context":[["{ texture = texture",11],["{ texture = texture",11],["case texture of",12],["{-| Create a textured shape. The texture is described by some url and is",13],["uniform sampler2D texture;",24]],"useCount":71},{"word":"than","context":[["of times, so you can go higher than `map5` if you need to.",11],["{-| Merge many signals into one. This is useful when you are merging more than",12],["This direction of function composition seems less pleasant than `(<<)` which",17],["handy more often than you might expect. For example, creating a zeroed out list",18],["The relations are less than, equal to, and greater than.",18],["The relations are less than, equal to, and greater than.",18]],"useCount":94},{"word":"that","context":[["-- A description of the kinds of actions that can be performed on the model of",21],["provided that the following conditions are met:",19],["things. Note that tuples with 7 or more elements are not comparable; why",18],["Examples use `==` to indicate that two expressions are equivalent, even if (due",23],["`C.that`",38],["{-| A decoder that always fails. Useful when paired with `andThen` or `oneOf`",18],["maybe you have an optional field that can have a default value when it is",18],["{-| A decoder that always succeeds. Useful when paired with `andThen` or",18],["Notice that NaN is not infinite! For float `n` to be finite implies that",18],["Notice that NaN is not infinite! For float `n` to be finite implies that",18]],"useCount":865},{"word":"the","context":[["example, the following code checks if the square root of a number is odd:",34],["and all necessary modules have been imported using the following pattern:",23],["example, the following code checks if the square root of a number is odd:",34],["[ test \"pretty prints the expected output\" <|",44],["if code == 13 then Ok () else Err \"not the right key code\"",27],["Cooperate - the frontend for the cooperate.online application",24],["Cooperate - the frontend for the cooperate.online application",24],["{-| Function composition, passing results along in the suggested direction. For",34],["v. 2.0. If a copy of the MPL was not distributed with this file, you can",77],["[ test \"the tree\" <|",22]],"useCount":4039},{"word":"then","context":[["if random < 50 then",40],["then []",37],["if 200 <= response.status && response.status < 300 then",32],["if code == 13 then",30],["then Nothing",28],["if code == 13 then Ok () else Err \"not the right key code\"",27],["then",316],["if predicate key value then",20],["if List.isEmpty properties then",22],["if n <= 0 then",24]],"useCount":1021},{"word":"theory","context":[["contains \"the\" \"theory\" == True",12],["endsWith \"the\" \"theory\" == False",12],["startsWith \"ory\" \"theory\" == False",12],["contains \"THE\" \"theory\" == False",12],["contains \"hat\" \"theory\" == False",12],["startsWith \"the\" \"theory\" == True",12],["endsWith \"ory\" \"theory\" == True",12]],"useCount":84},{"word":"there","context":[["attribute can be used in HTML, but there is no corresponding property!",12],["a form that is a composite of many subforms. From there it is easy to transform",13],["argument, so there is no way to know whether the negative signs comes from",18],["{-- TODO: maybe reintroduce once there's a better way to disambiguate imports",18],["{-| Insert a key-value pair into a dictionary. Replaces value when there is",21],["{-| Combine two dictionaries. If there is a collision, preference is given",21],["will not need this one, but it is there just in case. You will know if you",11],["`Err` meaning that there was some failure.",11],["[elm-effects][]. From there it will wire everything up for you!",11],["Yes, that is a true fact. Sometimes an attribute exists, but there is no",12]],"useCount":159},{"word":"things","context":[["1. Attributes &mdash; You can set things in HTML itself. So the `class`",12],["and turns things counterclockwise. So to turn `form` 30&deg; to the left",13],["{-| Put two appendable things together. This includes strings, lists, and text.",17],["narrow things down so you can be more targeted.",18],["to improve error messages when things go wrong. For example, the following",18],["things. Note that tuples with 7 or more elements are not comparable; why",18],["characters, strings, lists of comparable things, and tuples of comparable",18],["{-| Represents the relative ordering of two things.",18],["This means we only continue with the callback if things are going well. For",20],[", span [ class \"tagline\" ] [ text \"Like GitHub, but for Elm things.\" ]",21]],"useCount":220},{"word":"this","context":[["has a nice example of this with further explanation in the tutorial itself.",15],["Any CSS property can be set to this value.",15],["returns 42. When you are dealing with higher-order functions, this comes in",18],["{-| You probably do not want to use this. It takes `(y/x)` as the",18],["formatted data. For example, this lets you create a parser for \"variadic\" lists",18],["You will almost certainly want to use this instead of `atan`.",18],["You can think of this operator as equivalent to the following:",19],["So our example expands out to something like this:",19],["like this:",19],["v. 2.0. If a copy of the MPL was not distributed with this file, you can",77]],"useCount":521},{"word":"time","context":[["Some useful functions for working with time (e.g. setting FPS) and combining",13],["Animate time ->",19],["time =",18],["time",16],["Insert, remove, and query operations all take *O(log n)* time. Dictionary",13],["is the time the program has been running, updated 40 times a second.",13],["-- it rounds down. Thus half the time it rounds up and half the time it",13],["-- it rounds down. Thus half the time it rounds up and half the time it",13],["{-| Sample from the second input every time an event occurs on the first input.",13],[", time = 0",13]],"useCount":320},{"word":"title","context":[[", title=\"title\"",29],[", title : String",90],["[ Card.title",21],["title =",27],["{ title : String",54],["port title =",49],["foreign export jsevent \"title\"",40],["title : Signal JS.JSString",30],[", title=\"title\"",29],["port title : String",244]],"useCount":739},{"word":"to","context":[["2. Update - a way to step the application state forward",20],["3. View   - a way to visualize our application state with HTML",19],["So our example expands out to something like this:",19],[", placeholder \"What needs to be done?\"",21],["{-| Partition a dictionary according to a predicate. The first dictionary",21],["-- is equivalent to",22],["Examples use `==` to indicate that two expressions are equivalent, even if (due",23],["to numerical roundoff) they might not be exactly equal.",23],["{-| Change how arguments are passed to a function.",42],["|> Style.to",48]],"useCount":1935},{"word":"toElement","context":[["Html.toElement w h <|",13],["content = Markdown.toElement \"\"\"",27],["pageTitle = Markdown.toElement \"\"\"",19],["intro = Markdown.toElement \"\"\"",61],["rest = Markdown.toElement \"\"\"",12]],"useCount":132},{"word":"toFloat","context":[["toFloat width / toFloat height",12],["|> toFloat",20],["@docs round, floor, ceiling, truncate, toFloat",18],["toFloat : Int -> Float",18],["toFloat =",15],["let m = toFloat n",14],[", round, floor, ceiling, truncate, toFloat",12],["let w  = truncate (toFloat wid * 0.8)",23],["g = toFloat green / 255",12],["( x + toFloat dx, y - toFloat dy )",12]],"useCount":247},{"word":"toForm","context":[["|> Collage.toForm",11],[", toForm (if state == Play then spacer 1 1 else txt identity msg)",12],[", toForm scores",16],["toForm : Element -> Form",22],["|> toForm",70]],"useCount":131},{"word":"toInt","context":[["toInt rawString `andThen` toValidMonth",12],["import String exposing (toInt)",38],["String.toInt : String -> Maybe Int",15],["|> String.toInt",14],["example, say you need to use (`toInt : String -> Result String Int`) to parse",11],["@docs toInt, toFloat, toList, fromList",11],["toInt : String -> Result String Int",11]],"useCount":112},{"word":"toList","context":[["@docs keys, values, toList, fromList",22],["|> String.toList",16],["toList : Dict comparable v -> List (comparable,v)",16],["@docs toList, fromList",17],[", toList",17],["|> Set.toList",18],["toList dict =",22],["|> Dict.toList",29],[", toList, fromList",29],["|> Array.toList",47]],"useCount":331},{"word":"toMaybe","context":[["toMaybe (parseInt string)",11],["toMaybe result =",11],["|> Result.toMaybe",28],["|> Task.toMaybe",83]],"useCount":133},{"word":"toMonth","context":[["toMonth rawString =",17],["-- toMonth \"9\" == Ok 9",11],["-- toMonth \"a\" == Err \"cannot parse to an Int\"",11],["-- toMonth \"0\" == Err \"months must be between 1 and 12\"",11],["-- toMonth \"4\" == Ok 4",11],["toMonth : String -> Result String Int",11]],"useCount":72},{"word":"toResult","context":[["|> Task.toResult",77]],"useCount":77},{"word":"toString","context":[["toString [1,2] == \"[1,2]\"",17],["|> Task.mapError toString",16],["@docs toString, (++)",17],["toString : a -> String",17],["toString =",14],[", id (\"todo-\" ++ toString todo.id)",14],["|> toString",49],[", div [ countStyle ] [ text (toString model) ]",43],[", div [] [ text (toString model) ]",30],["[ span [ class \"star-count\" ] [ text (toString result.stars) ]",23]],"useCount":445},{"word":"todo","context":[[", checked todo.completed",18],[", value todo.description",18],["-- The full application state of our todo app.",19],["[ p [] [ text \"Double-click to edit a todo\" ]",18],["[ text todo.description ]",16],["[ id \"new-todo\"",15],[", id (\"todo-\" ++ toString todo.id)",14],["\"Active\" -> not todo.completed",14],[", id (\"todo-\" ++ toString todo.id)",14],["[ id \"todo-count\" ]",14]],"useCount":187},{"word":"together","context":[["together lots of different signals to feed into a `foldp`.",12],["-- wire the entire application together",19],["{-| Put two appendable things together. This includes strings, lists, and text.",17],["{-| Put many strings together with a given separator.",12],["{-| Put two lists together.",12],["These decoders are easy to put together so you can create more and more complex",12],["{-| Put the results of two tasks together. If either task fails, the whole",11]],"useCount":95},{"word":"toggle","context":[["Just add or remove the `}` on the first line and you'll toggle between commented and uncommented!",14],["[ for \"toggle-all\" ]",20],["[ class \"toggle\"",23],[", name \"toggle\"",19],["[ id \"toggle-all\"",17],[", attribute \"data-toggle\" \"dropdown\"",11]],"useCount":104},{"word":"token","context":[[", token : String",12],["++ Auth.token",16],["[authorization config.token]",17],[", token = Just token",21],[", token = Just token",21]],"useCount":87},{"word":"top","context":[["-- make the top node black",19],["{-| Sets [`border-top`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-top)",15],["<div style=\"position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;\">",21],["style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"",21],["init top bottom =",21],["top =",22],["-- make the top node red",19],["{-| Sets [`border-top`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-top)",15],["{ topCounter = Counter.init top",15],[", ( \"top\", \"0px\" )",17]],"useCount":249},{"word":"topRight","context":[["topRight =",18],["[ (topLeft,topRight,bottomLeft)",15],[", (bottomLeft,topRight,bottomRight)",15],["topRight    = Vertex (vec3  1  1 1) (vec3 1 1 0)",12],[", ( bottomLeft, topRight, bottomRight )",12],["[ ( topLeft, topRight, bottomLeft )",12]],"useCount":84},{"word":"topic","context":[["(model, getRandomGif model.topic)",15],[", \"tag\" => topic",11],["randomUrl topic =",13],[", getRandomGif topic",22],["init topic =",30],["{ topic : String",30],["getRandomGif topic =",28]],"useCount":149},{"word":"tr","context":[[",tr []",30],["</tr>",57],[", tr []",40],["tr []",63],["[ tr []",57],["[ Table.tr []",17],["tr",17],["Table.tr []",15],["table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {",22],["<tr>",49]],"useCount":415},{"word":"transform","context":[["] ++ transform",15],["let transform = maybeTransformAttr l in",23],["a form that is a composite of many subforms. From there it is easy to transform",13],["\"transform\"",38],[", transform = Compatible",120]],"useCount":209},{"word":"tree","context":[["map f tree =",15],["case tree of",107],["tree",57],["{tree, foci} =",22],["[ test \"the tree\" <|",22],["-- generalized tree balancing act",19],["[ \"Internal red-black tree invariant violated, expected \"",19],["insert x tree =",12],["(1) Sum all of the elements of a tree.",12],["tree =",14]],"useCount":347},{"word":"trim","context":[["trim \"  hats  \\n\" == \"hats\"",12],["trim, trimLeft, trimRight",12],["trim : String -> String",13],["|> List.map String.trim",16],["|> String.trim",22]],"useCount":75},{"word":"true","context":[["-- { ... checked: true ... }",12],["|> Expect.true \"Should be True\"",15],["\"has_wiki\": true,",27],["import Check exposing (Claim, claim, true, that, is, for, quickCheck)",11],["Yes, that is a true fact. Sometimes an attribute exists, but there is no",12],["`C.true`",36],["\"has_issues\": true,",30],["\"has_downloads\": true,",30],["Expect.true \"\" <|",15]],"useCount":188},{"word":"truncate","context":[["Native.Basics.truncate",11],["truncate =",11],[", round, floor, ceiling, truncate, toFloat",12],["@docs round, floor, ceiling, truncate, toFloat",18],["truncate : Float -> Int",18],["let w  = truncate (toFloat wid * 0.8)",23]],"useCount":93},{"word":"tuple","context":[["`Int`, `Float`, `Time`, or a list or tuple containing comparable values.",18],["tuple =",12],["{-| Decompose a list of tuples into a tuple of lists.",12],["I.tuple (testHashDictInvestigator, testHashDictInvestigator)",12],["{-| Given a 2-tuple, returns the first value. -}",17],["{-| Given a 2-tuple, returns the second value. -}",17]],"useCount":88},{"word":"tuple1","context":[["tuple1, tuple2, tuple3, tuple4, tuple5, tuple6, tuple7, tuple8",18],[", tuple1, tuple2, tuple3, tuple4, tuple5, tuple6, tuple7, tuple8",14],["[ tuple1 (\\author -> \"Author: \" ++ author) string",14],["tuple1 =",18],["tuple1 : (a -> value) -> Decoder a -> Decoder value",18]],"useCount":82},{"word":"tuple2","context":[["tuple1, tuple2, tuple3, tuple4, tuple5, tuple6, tuple7, tuple8",18],["tuple2 =",19],["tuple2 (,) string string",18],["tuple2 (,) float float",18],["tuple2 : (a -> b -> value) -> Decoder a -> Decoder b -> Decoder value",18],["[ tuple2 (,) float float",36],["tuple2 Name string string",18],[", tuple1, tuple2, tuple3, tuple4, tuple5, tuple6, tuple7, tuple8",14]],"useCount":159},{"word":"tuple3","context":[["I.tuple3 (testHashDictInvestigator, TU.personInvestigator, I.int)",11],["tuple3 =",19],["tuple3 (,,) float float float",18],["tuple3 : (a -> b -> c -> value) -> Decoder a -> Decoder b -> Decoder c -> Decoder value",18],["tuple1, tuple2, tuple3, tuple4, tuple5, tuple6, tuple7, tuple8",18],[", tuple1, tuple2, tuple3, tuple4, tuple5, tuple6, tuple7, tuple8",14]],"useCount":98},{"word":"tuples","context":[["things. Note that tuples with 7 or more elements are not comparable; why",18],["type. This includes `Int`, `Float`, `Time`, `Char`, `String`, and tuples or",19],["characters, strings, lists of comparable things, and tuples of comparable",18],["are your tuples so big?",18],["There is a special function for creating tuples:",14],["includes `Int`, `Float`, `Time`, `Char`, `String`, and tuples or lists",12],["{-| Decompose a list of tuples into a tuple of lists.",12]],"useCount":111},{"word":"turns","context":[["turns =",13],[", degrees, radians, turns",12],["Native.Basics.turns",11],["turns (Time.inMinutes model)",11],["and turns things counterclockwise. So to turn `form` 30&deg; to the left",13],["@docs degrees, radians, turns",18],["{-| Convert turns to standard Elm angles (radians).",18],["turns : Float -> Float",18]],"useCount":114},{"word":"turtles","context":[["intersperse \"on\" [\"turtles\",\"turtles\",\"turtles\"] == [\"turtles\",\"on\",\"turtles\",\"on\",\"turtles\"]",13],["intersperse \"on\" [\"turtles\",\"turtles\",\"turtles\"] == [\"turtles\",\"on\",\"turtles\",\"on\",\"turtles\"]",13],["intersperse \"on\" [\"turtles\",\"turtles\",\"turtles\"] == [\"turtles\",\"on\",\"turtles\",\"on\",\"turtles\"]",13],["intersperse \"on\" [\"turtles\",\"turtles\",\"turtles\"] == [\"turtles\",\"on\",\"turtles\",\"on\",\"turtles\"]",13],["intersperse \"on\" [\"turtles\",\"turtles\",\"turtles\"] == [\"turtles\",\"on\",\"turtles\",\"on\",\"turtles\"]",13],["intersperse \"on\" [\"turtles\",\"turtles\",\"turtles\"] == [\"turtles\",\"on\",\"turtles\",\"on\",\"turtles\"]",13]],"useCount":78},{"word":"tutorial","context":[["[arch]: https://github.com/evancz/elm-architecture-tutorial",13],["{ query = \"tutorial\"",28],["[arch]: https://github.com/evancz/elm-architecture-tutorial/",16],["has a nice example of this with further explanation in the tutorial itself.",15],[", name = \"TheSeamau5/elm-checkerboardgrid-tutorial\"",12],["**Be sure to [read the Elm Architecture tutorial][arch] to learn how this all",11]],"useCount":95},{"word":"two","context":[["Examples use `==` to indicate that two expressions are equivalent, even if (due",23],["{-| Find the larger of two comparables. -}",17],["{-| Represents the relative ordering of two things.",18],["This combines two arguments into a single pair.",18],["(decodeValue b two)",18],["This splits paired arguments into two separate arguments.",18],["one :: two :: rest ->",18],["{-| Compare any two comparable values. Comparable values include `String`, `Char`,",18],["{-| Combine two dictionaries. If there is a collision, preference is given",21],["{-| Use two different decoders on a JS value. This is nice for extracting",22]],"useCount":379},{"word":"type","context":[["type Action",557],["type Msg",927],["type alias Model =",1589],["type alias ID = Int",64],["type alias Model = Int",63],["type Action =",63],["type Msg =",60],["type alias Model = {",56],[", type' \"text\"",53],["<style type=\"text/css\">",47]],"useCount":6097},{"word":"typeface","context":[["{ typeface = []",22],["{ typeface = [ \"Times New Roman\", \"serif\" ]",14],["no matches, it will use their default typeface. This works the same as the CSS",11],["first typeface in the list that is found on the user's computer. If there are",11],["{-| Switch to a monospace typeface. Good for code snippets.",11],["{-| Plain black text. It uses the browsers default typeface and text height.",11]],"useCount":80},{"word":"types","context":[["lists of comparable types.",19],["where the first few types are different, followed by 0 or more of the same",18],["These functions only work on `comparable` types. This includes numbers,",18],["examples below, assume that all OpenSolid core types have been imported using",15],["data types and literals",13],["of comparable types.",12],["- [Union Types](#union-types)",12]],"useCount":107},{"word":"uid","context":[["else model.tasks ++ [newTask model.field model.uid]",11],[", uid : String",15],[", uid = 0",27],[", uid : Int",30]],"useCount":83},{"word":"ul","context":[["ul =",12],["Lists.ul [ css \"margin\" \"0\", css \"padding\" \"0\" ]",30],[", ul",72],["ul",28],["Lists.ul []",27],["[ ul",21],[", ul [ class \"results\" ] (List.map viewSearchResult model.results)",16],[", ul []",75]],"useCount":281},{"word":"uncons","context":[["@docs cons, uncons, fromChar, append, concat, split, join, words, lines",11],["uncons \"\"    == Nothing",12],["uncons : String -> Maybe (Char, String)",12],["uncons \"abc\" == Just ('a',\"bc\")",12],["case String.uncons str of",14],["import String exposing (words, join, cons, uncons)",63]],"useCount":124},{"word":"underline","context":[["textDecorations3 [ underline, overline ] wavy (rgb 128 64 32)",24],["textDecoration2 underline wavy",12],["{-| Styles for lines on text. This allows you to add an underline, an overline,",11],["textDecorations2 [ underline, overline ] wavy",24],["textDecoration  underline",12],["textDecorations  [ underline, overline ]",24],["textDecoration3 underline wavy (rgb 128 64 32)",12]],"useCount":119},{"word":"uniform","context":[["uniform mat4 view;",15],["uniform mat4 camera;",19],["uniform vec3 iResolution;",13],["uniform float iGlobalTime;",12],["uniform sampler2D texture;",24],["uniform mat4 normalMatrix;",12],["uniform mat4 perspective;",49]],"useCount":144},{"word":"union","context":[["union : Dict comparable v -> Dict comparable v -> Dict comparable v",17],[", union.name",16],["- [Union Types](#union-types)",12],["{-| Get the union of two sets. Keep all values.",11],["@docs union, intersect, diff",34],[", union, intersect, diff",28],["union t1 t2 =",20],["union : Set comparable -> Set comparable -> Set comparable",11]],"useCount":149},{"word":"unit","context":[["it as a single unit.",13],["renderLength a unit",56],["unit =",24],["as a single unit, making it possible to build small, modular components.",13]],"useCount":106},{"word":"up","context":[["{-| Ceiling function, rounding up. -}",18],["let (flag, newRight) = up right in",17],["let (flag, newLeft) = up left in",17],["This application is broken up into four distinct parts:",16],["{-| Reduce a list from the left, building up all of the intermediate results into a list.",15],["-- TODO - remove example inclusion once Problem sets are ready to go live or CI is set up.",14],["-- that in the negative case it rounds up and in the positive case",13],["{-| All of the attributes of a line style. This lets you build up a line style",13],["-- it rounds down. Thus half the time it rounds up and half the time it",13],["readable versions I have come up have the following length",12]],"useCount":204},{"word":"update","context":[["update : Msg -> Model -> Model",159],["update : Action -> Model -> (Model, Effects Action)",135],[", update",124],["update action model =",867],["update msg model =",727],["update : Msg -> Model -> (Model, Cmd Msg)",267],[", update = update",771],[", update = update",771],["update : Msg -> Model -> ( Model, Cmd Msg )",403],["update : Action -> Model -> Model",335]],"useCount":5511},{"word":"updateTask","context":[["{ model | tasks = List.map updateTask model.tasks }",39],["{ model | tasks <- List.map updateTask model.tasks }",24],["updateTask t =",19]],"useCount":82},{"word":"updates","context":[["{-| Filter out some updates. The given function decides whether we should",16],["updates : Signal Update",27],["{-| Drop updates that repeat the current value of the signal.",13],["So `clickCount` updates on each mouse click, incrementing by one. `timeSoFar`",13],["two signals. When multiple updates come in at the same time, the left-most",12],["updates =",35],["however you want. You can also update existing line styles with record updates.",13],["updates whenever `Mouse.x` updates.",12],["updates whenever `Mouse.x` updates.",12],["You can use record updates to build the line style you",13]],"useCount":178},{"word":"url","context":[[", url =",54],[", url : String",62],["{ url : String",21],["url",19],["(\"url\" := Json.string)",15],["imgStyle url =",15],["init url =",14],[", url = url",94],[", url = url",94],["url =",106]],"useCount":565},{"word":"urlUpdate","context":[[", urlUpdate = urlUpdate",27],[", urlUpdate = urlUpdate",27],["urlUpdate result model =",22]],"useCount":76},{"word":"use","context":[["{-| Turn any `Element` into a `Form`. This lets you use text, gifs, and video",13],["-- ideally we would use division that rounds towards zero so",13],["Notice that you must give the *attribute* name, so we use `class` as it would",12],["(in quadrants I and IV). You probably want to use `atan2` instead.",18],["You can use record updates to build the line style you",13],["You can use as many commas as you want.",14],["You will almost certainly want to use this instead of `atan`.",18],["Examples use `==` to indicate that two expressions are equivalent, even if (due",23],["use this workaround:",14],["{-| You probably do not want to use this. It takes `(y/x)` as the",18]],"useCount":293},{"word":"used","context":[["Notice that `log` is not a pure function! It should *only* be used for",11],["*not* be used in production code.",11],["be used as a value as well. When being used as a value, we call it, expect",11],["be used to step the state forward. The outgoing signal represents the current",12],["attribute can be used in HTML, but there is no corresponding property!",12],["equality with `(==)` is unreliable and should not be used.",14],["-- BBlack and NBlack should only be used during the deletion",19],["be used as a value as well. When being used as a value, we call it, expect",11]],"useCount":101},{"word":"useful","context":[["{-| Forward function application `x |> f == f x`. This function is useful",18],["This is useful for holding JSON or other",14],["{-| Backward function application `f <| x == f x`. This function is useful for",17],["Some useful functions for working with time (e.g. setting FPS) and combining",13],["{-| Convert a list of characters into a String. Can be useful if you",17],["{-| Transform the value returned by a decoder. Most useful when paired with",18],["{-| Tons of useful functions that get imported by default.",18],["`Nothing`. This is useful when you are not sure if a key will be in the",20],["{-| Decode null as the value given, and fail otherwise. Primarily useful for",14],["{-| Merge two signals into one. This function is extremely useful for bringing",12]],"useCount":173},{"word":"user","context":[["to do brief animations based on user input without major inefficiencies.",11],["first typeface in the list that is found on the user's computer. If there are",11],["case model.user of",12],["{ user : String",12],["profile user =",14],["user =",20],["case user of",21],["Just user ->",27]],"useCount":128},{"word":"using","context":[["tutorials and examples on actually *using* this syntax.",13],["and all necessary modules have been imported using the following pattern:",23],["{-| TodoMVC implemented in Elm, using plain HTML and CSS for rendering.",16],["You can use this pattern for as many signals as you want by using `(~)` a bunch",11],["It assumes you are following [the Elm Architecture][arch] and using",11],["{-| Split a string using a given separator.",12],["examples below, assume that all OpenSolid core types have been imported using",15]],"useCount":101},{"word":"v","context":[["stepV v lowerCollision upperCollision =",20],["RBNode_elm_builtin Black k' v' l' r'",18],["bubble c k v l r =",19],["balance c k v l r =",20],["foldl (\\k v t -> remove k t) t1 t2",20],["v",24],["Node v left right ->",25],["Just v ->",31],["case v of",48],["v. 2.0. If a copy of the MPL was not distributed with this file, you can",77]],"useCount":1596},{"word":"val","context":[["case val of",27],[", other_ val = Common.otherValue val",41],["val",11],["let match eNext = case eNext.val.e__ of",13],[", other_ val = Common.otherValue val",41],["case e.val.e__ of",13],["`andThen` \\val ->",13],["Just val ->",16]],"useCount":175},{"word":"value","context":[["value =",119],["value",60],["case value of",47],[", value : String",41],["Ok value ->",36],["onEnter address value =",35],["(\\_ -> Signal.message address value)",34],["RBNode_elm_builtin _ key value left right ->",33],["case response.value of",32],["Just value ->",31]],"useCount":2406},{"word":"values","context":[["|> Dict.values",21],["@docs keys, values, toList, fromList",22],["values dict =",22],[", keys, values",16],["values =",17],["`Int`, `Float`, `Time`, or a list or tuple containing comparable values.",18],["{-| Compare any two comparable values. Comparable values include `String`, `Char`,",18],["{-| Compare any two comparable values. Comparable values include `String`, `Char`,",18],["These are also the only values that work as `Dict` keys or `Set` members.",18],["{-| A dictionary mapping unique keys to values. The keys can be any comparable",18]],"useCount":514},{"word":"varying","context":[["varying vec3 vcolor;",43],["varying vec2 vcoord;",68],["varying vec2 elm_FragCoord;",20],["varying vec3 elm_FragColor;",11]],"useCount":142},{"word":"vcolor","context":[["gl_FragColor = vec4(vcolor, 1.0);",16],["fragmentShader : Shader {} u { vcolor:Vec3 }",11],["vcolor = color;",18],["varying vec3 vcolor;",43]],"useCount":88},{"word":"vcoord","context":[["varying vec2 vcoord;",68],["vcoord = coord.xy;",32]],"useCount":100},{"word":"vec2","context":[["varying vec2 elm_FragCoord;",20],["varying vec2 vcoord;",68],["vec2",15],["import Math.Vector2 as V2 exposing (Vec2, vec2)",11]],"useCount":114},{"word":"vec3","context":[["attribute vec3 position;",55],["topRight    = Vertex (vec3  1  1 1) (vec3 1 1 0)",12],["topRight    = Vertex (vec3  1  1 1) (vec3 1 1 0)",12],["bottomLeft  = Vertex (vec3 -1 -1 1) (vec3 0 0 0)",12],["uniform vec3 iResolution;",13],["attribute vec3 pos;",13],["attribute vec3 color;",21],["attribute vec3 coord;",37],["varying vec3 vcolor;",43],["bottomLeft  = Vertex (vec3 -1 -1 1) (vec3 0 0 0)",12]],"useCount":287},{"word":"verb","context":[["{ verb = \"POST\"",46],["{ verb = \"GET\"",50],["{ verb =",53],["{ verb = \"PUT\"",16]],"useCount":165},{"word":"vertical","context":[["{-| The `middle` [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) value.",30],["{-| The `middle` [`vertical-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align) value.",30],["margin: 0; padding: 0; vertical-align: baseline; border: none; }",22],["vertical-align: middle;",11]],"useCount":93},{"word":"view","context":[["view : Model -> Html",66],["view =",67],["view : Model -> Html Msg",744],["view : Address Action -> Model -> Html",113],[", view",101],["view address model =",558],[", view = view",691],[", view = view",691],["view model =",982],["view : Signal.Address Action -> Model -> Html",319]],"useCount":5448},{"word":"visibility","context":[[", visibility = \"All\"",22],["case visibility of",25],["visibility = lookup .visibility aes' defaults",26],["visibility = lookup .visibility aes' defaults",26],[", visibility : String",22],["ChangeVisibility visibility ->",22],[", style [ (\"visibility\", cssVisibility) ]",14],["{ model | visibility = visibility }",13],["{ model | visibility = visibility }",13],[", style [ (\"visibility\", \"hidden\") ]",12]],"useCount":195},{"word":"void","context":[["void main () {",117],["void main() {",45]],"useCount":162},{"word":"w","context":[["( w, h ) =",23],["let w  = truncate (toFloat wid * 0.8)",23],["let w = min 600 wid",37],["container w h middle <|",31],["let words = width w' txt in",23],["container w (heightOf words) middle words",23],["[ width w intro",23],["w' = min 600 w",23],["w' = min 600 w",23],["w =",22]],"useCount":520},{"word":"want","context":[["You can use as many commas as you want.",14],["You can use this pattern for as many signals as you want by using `(~)` a bunch",11],["want to create a string primarly by consing, perhaps for decoding",12],["an `Element` however you want.",13],["want. For example, to make a thicker line, you could say:",13],["however you want. You can also update existing line styles with record updates.",13],["(in quadrants I and IV). You probably want to use `atan2` instead.",18],["You will almost certainly want to use this instead of `atan`.",18],["{-| You probably do not want to use this. It takes `(y/x)` as the",18]],"useCount":130},{"word":"warnings","context":[[", warnings = warnings",44],[", warnings = warnings",44],["warnings =",40],[", warnings = []",23],["( warnings, properties ) =",15],["{ declarations, warnings } =",12]],"useCount":178},{"word":"was","context":[["`Err` meaning that there was some failure.",11],["v. 2.0. If a copy of the MPL was not distributed with this file, you can",77],["the pause was. This way summing the deltas will actually give the amount",11]],"useCount":99},{"word":"wavy","context":[["textDecorations3 [ underline, overline ] wavy (rgb 128 64 32)",24],["textDecoration3 underline wavy (rgb 128 64 32)",12],["textDecorations2 [ underline, overline ] wavy",24],["textDecoration2 underline wavy",12]],"useCount":72},{"word":"way","context":[["{-- TODO: maybe reintroduce once there's a better way to disambiguate imports",18],["the pause was. This way summing the deltas will actually give the amount",11],["way to manage errors in Elm.",11],["4 and possibly should be approached another way.",12],["{-| Represents a way of decoding JSON values. If you have a `(Decoder (List String))`",12],["for avoiding parenthesis and writing code in a more natural way.",13],["{-| A way to turn Json values into Elm values. A `Decoder a` represents a",14],["2. Update - a way to step the application state forward",20],["3. View   - a way to visualize our application state with HTML",19],["argument, so there is no way to know whether the negative signs comes from",18]],"useCount":148},{"word":"we","context":[["a point in a certain 2D space. Imagine we have a collage that is 400 pixels",12],["{-| Filter out some updates. The given function decides whether we should",16],["-- How we update our Model on a given Action?",13],["-- ideally we would use division that rounds towards zero so",13],["zero-based index where we will start our slice. The `end` is a zero-based index",12],["Notice that you must give the *attribute* name, so we use `class` as it would",12],["Notice that you must give the *property* name, so we use `className` as it",12],["be used as a value as well. When being used as a value, we call it, expect",11],["Notice that we use different seeds on each line. This is important! If you use",11],["This means we only continue with the callback if things are going well. For",20]],"useCount":132},{"word":"weight","context":[[", (\"font-weight\", \"bold\")",13],["title = Html.span [style [(\"padding-left\", \"10px\"),(\"font-weight\", \"bold\"),(\"font-size\", \"large\")]]",11],["code > span.kw { color: #204a87; font-weight: bold; }",28],["code > span.er { font-weight: bold; }",28]],"useCount":80},{"word":"when","context":[["maybe you have an optional field that can have a default value when it is",18],["{-| Insert a key-value pair into a dictionary. Replaces value when there is",21],["{-| Keep a key-value pair when its key appears in the second dictionary.",20],["`Nothing`. This is useful when you are not sure if a key will be in the",20],["{-| Keep a key-value pair when its key does not appear in the second dictionary.",19],["to improve error messages when things go wrong. For example, the following",18],["{-| A decoder that always succeeds. Useful when paired with `andThen` or",18],["{-| Transform the value returned by a decoder. Most useful when paired with",18],["with something with a very strange shape and when `andThen` does not help",18],["{-| A decoder that always fails. Useful when paired with `andThen` or `oneOf`",18]],"useCount":277},{"word":"where","context":[["module Utils where",19],["module Test where",21],["module View where",22],["module App where",22],["module Main (main) where",25],["module Model where",31],["module Main (..) where",78],["where",92],["module Main where",178],[") where",575]],"useCount":1254},{"word":"which","context":[["So `atan2 y x` computes *atan(y/x)* but also keeps track of which",18],["must (which can be done with any `objectN` function actually).",12],["which argument is which:",22],["which argument is which:",22],["contains all key-value pairs which satisfy the predicate, and the second",20],["{-| Create a new set consisting only of elements which satisfy a predicate.",12],["{-| The default line style, which is solid black with flat caps and sharp joints.",13],["{-| Create two new sets; the first consisting of elements which satisfy a",15],["This direction of function composition seems less pleasant than `(<<)` which",17],["which happen to be radians.",18]],"useCount":224},{"word":"white","context":[["(cons (rect 'white' (- x0 10!) (- y0 10!) (+ w 20!) (+ h 20!))",17],[", ( \"color\", \"white\" )",22],["pre { background-color: white;",15],["|> filled white",14],["{-| Produce a gray based on the input. 0 is white, 1 is black.",12],["white : Color",11],["white =",19],["@docs white, lightGrey, grey, darkGrey, lightCharcoal, charcoal, darkCharcoal, black",11]],"useCount":121},{"word":"whitespace","context":[["{-| Get rid of whitespace on the right of a string.",11],["whitespace >>= \\ws1 ->",21],["Cosmetic operations such as padding with extra characters or trimming whitespace.",12],["{-| Get rid of whitespace on both sides of a string.",12],["{-| Get rid of whitespace on the left of a string.",13],["{-| Break a string into words, splitting on chunks of whitespace.",12]],"useCount":81},{"word":"wid","context":[["everything wid =",59],["let w = min 600 wid",37],["let w  = truncate (toFloat wid * 0.8)",23]],"useCount":119},{"word":"widgets","context":[["model.widgets",26],["( { model | widgets = widgets }",22],["( { model | widgets = widgets }",22],["widgets =",22]],"useCount":92},{"word":"width","context":[[", width : Float",25],["width: 100%;",56],[", (\"width\", \"100%\")",45],["width =",43],[", (\"width\", \"50px\")",42],["[ (\"width\", \"100%\")",34],["[ width (pct 100)",30],["@media (min-width: 768px) {",24],[", ( \"width\", \"100%\" )",24],["[ width w intro",23]],"useCount":914},{"word":"wiki","context":[["[RGB](https://en.wikipedia.org/wiki/RGB_color_model) and",11],["More info at: http://en.wikipedia.org/wiki/Tree_traversal",12],["[st]: http://en.wikipedia.org/wiki/Structural_type_system \"Structural Types\"",12],["[associativity](http://en.wikipedia.org/wiki/Operator_associativity)",13],["[repl]: http://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop",16],["{-| Create a [constant function](http://en.wikipedia.org/wiki/Constant_function),",17],["[the identity function](http://en.wikipedia.org/wiki/Identity_function).",17],["{-| Perform [modular arithmetic](http://en.wikipedia.org/wiki/Modular_arithmetic).",17],["numbers](http://en.wikipedia.org/wiki/NaN).",18]],"useCount":133},{"word":"wikipedia","context":[["{-| Perform [modular arithmetic](http://en.wikipedia.org/wiki/Modular_arithmetic).",17],["numbers](http://en.wikipedia.org/wiki/NaN).",18],["[the identity function](http://en.wikipedia.org/wiki/Identity_function).",17],["{-| Create a [constant function](http://en.wikipedia.org/wiki/Constant_function),",17],["[repl]: http://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop",16],["[associativity](http://en.wikipedia.org/wiki/Operator_associativity)",13],["[st]: http://en.wikipedia.org/wiki/Structural_type_system \"Structural Types\"",12],["[RGB](https://en.wikipedia.org/wiki/RGB_color_model) and",11],["More info at: http://en.wikipedia.org/wiki/Tree_traversal",12]],"useCount":133},{"word":"will","context":[["`Nothing`. This is useful when you are not sure if a key will be in the",20],["{-| Indicates that clicking an `a` and `area` will download the resource",18],["quadrant the angle should really be in. The result will be between",18],["You will almost certainly want to use this instead of `atan`.",18],["{-| Helpful when one field will determine the shape of a bunch of other fields.",16],["it will do the wrong thing. The expected behavior is:",16],["{-| Just put plain text in the DOM. It will escape the string so that it appears",14],["decoding operation that will either produce a value of type `a`, or fail.",14],["`polygon` will automatically close all shapes, so the given list",13],["fails, you will get a string message telling you why.",12]],"useCount":327},{"word":"with","context":[["v. 2.0. If a copy of the MPL was not distributed with this file, you can",77],["{-| Get the value associated with a key. If the key is not found, return",20],["{-| Transform the value returned by a decoder. Most useful when paired with",18],["{-| A decoder that always succeeds. Useful when paired with `andThen` or",18],["{-| Update the value of a dictionary for a specific key with a given function. -}",18],["things. Note that tuples with 7 or more elements are not comparable; why",18],["{-| A decoder that always fails. Useful when paired with `andThen` or `oneOf`",18],["3. View   - a way to visualize our application state with HTML",19],["This means we only continue with the callback if things are going well. For",20],["decoded with the given decoder.",20]],"useCount":1039},{"word":"withDefault","context":[["|> Maybe.withDefault False",13],["|> Maybe.withDefault Cmd.none",16],["Maybe.withDefault",17],["|> Maybe.withDefault 0",41],["|> Maybe.withDefault []",49],["import Maybe exposing (withDefault)",65],["|> Maybe.withDefault \"\"",66],["|> withDefault []",14],["|> Maybe.withDefault Ripple.model",12],["withDefault default decoder =",11]],"useCount":326},{"word":"words","context":[["@docs cons, uncons, fromChar, append, concat, split, join, words, lines",11],["words : String -> List String",11],["words \"How are \\t you? \\n Good?\" == [\"How\",\"are\",\"you?\",\"Good?\"]",12],["import String exposing (words, join, cons, uncons)",63],["container w (heightOf words) middle words",23],["container w (heightOf words) middle words",23],["let words = width w' txt in",23],["{-| Break a string into words, splitting on chunks of whitespace.",12]],"useCount":178},{"word":"work","context":[["These are also the only values that work as `Dict` keys or `Set` members.",18],["{-| Bring in an arbitrary JSON value. Useful if you need to work with crazily",18],["These functions only work on `comparable` types. This includes numbers,",18],["`oneOf` but everything is supposed to work out at the end. For example,",18]],"useCount":72},{"word":"would","context":[["you would say, `(rotate (degrees 30) form)`.",13],["pattern match on strings exactly as you would with lists.",12],["-- ideally we would use division that rounds towards zero so",13],["30 you would say:",13],["of length ten would be:",18],["Notice that you must give the *attribute* name, so we use `class` as it would",12],["be in HTML, not `className` as it would appear in JS.",12],["would be in JavaScript, not `class` as it would appear in HTML.",12],["would be in JavaScript, not `class` as it would appear in HTML.",12]],"useCount":117},{"word":"x","context":[["x",146],["Just x -> x",42],["(\"x\" := float)",43],["( x, y ) =",47],["{ x : Float",67],["case x of",73],["Just x ->",88],["x =",91],["x :: xs ->",101],["{ x : Int",42]],"useCount":2378},{"word":"xk","context":[["RBNode_elm_builtin col xk xv a (RBNode_elm_builtin Red yk yv b (RBNode_elm_builtin Red zk zv c d)) ->",11],["assemble col xk xv yk yv zk zv a b c d",48],["balancedTree col xk xv yk yv zk zv a b c d",28],["let assemble col xk xv yk yv zk zv a b c d =",11],["RBNode_elm_builtin col zk zv (RBNode_elm_builtin Red xk xv a (RBNode_elm_builtin Red yk yv b c)) d ->",11],["RBNode_elm_builtin Black yk yv (RBNode_elm_builtin Black xk xv a b) (balance Black zk zv c (redden d))",11],["RBNode_elm_builtin col xk xv a (RBNode_elm_builtin Red zk zv (RBNode_elm_builtin Red yk yv b c) d) ->",11],["RBNode_elm_builtin col zk zv (RBNode_elm_builtin Red yk yv (RBNode_elm_builtin Red xk xv a b) c) d ->",11],["RBNode_elm_builtin Black yk yv (balance Black xk xv (redden a) b) (RBNode_elm_builtin Black zk zv c d)",11]],"useCount":153},{"word":"xs","context":[["{ class = Internal.colOffset \"xs\" xs xsOffset",16],["NE.Nonempty x xs",19],["x::xs ->",20],["\\( x, xs ) ->",23],["{ class = Internal.colOffset \"xs\" xs xsOffset",16],["case xs' of",24],["(x::xs) ->",32],["xs",34],["x :: xs ->",101],["case xs of",132]],"useCount":771},{"word":"xv","context":[["RBNode_elm_builtin Black yk yv (balance Black xk xv (redden a) b) (RBNode_elm_builtin Black zk zv c d)",11],["let assemble col xk xv yk yv zk zv a b c d =",11],["RBNode_elm_builtin col zk zv (RBNode_elm_builtin Red yk yv (RBNode_elm_builtin Red xk xv a b) c) d ->",11],["RBNode_elm_builtin col zk zv (RBNode_elm_builtin Red xk xv a (RBNode_elm_builtin Red yk yv b c)) d ->",11],["RBNode_elm_builtin Black yk yv (RBNode_elm_builtin Black xk xv a b) (balance Black zk zv c (redden d))",11],["RBNode_elm_builtin col xk xv a (RBNode_elm_builtin Red yk yv b (RBNode_elm_builtin Red zk zv c d)) ->",11],["RBNode_elm_builtin col xk xv a (RBNode_elm_builtin Red zk zv (RBNode_elm_builtin Red yk yv b c) d) ->",11],["assemble col xk xv yk yv zk zv a b c d",48],["balancedTree col xk xv yk yv zk zv a b c d",28]],"useCount":153},{"word":"y","context":[["add x y = x + y",34],[", y : Float",90],["y =",71],["( x, y ) =",47],[", y : Int",45],["(\"y\" := float)",43],[", y = 0",38],[", object2 (,) (\"x\" := float) (\"y\" := float)",36],["add x y = x + y",34],["y",38]],"useCount":1198},{"word":"yk","context":[["let assemble col xk xv yk yv zk zv a b c d =",11],["RBNode_elm_builtin col xk xv a (RBNode_elm_builtin Red zk zv (RBNode_elm_builtin Red yk yv b c) d) ->",11],["RBNode_elm_builtin col zk zv (RBNode_elm_builtin Red xk xv a (RBNode_elm_builtin Red yk yv b c)) d ->",11],["RBNode_elm_builtin Black yk yv (RBNode_elm_builtin Black xk xv a b) (balance Black zk zv c (redden d))",11],["RBNode_elm_builtin col xk xv a (RBNode_elm_builtin Red yk yv b (RBNode_elm_builtin Red zk zv c d)) ->",11],["balancedTree col xk xv yk yv zk zv a b c d",28],["assemble col xk xv yk yv zk zv a b c d",48],["RBNode_elm_builtin col zk zv (RBNode_elm_builtin Red yk yv (RBNode_elm_builtin Red xk xv a b) c) d ->",11],["RBNode_elm_builtin Black yk yv (balance Black xk xv (redden a) b) (RBNode_elm_builtin Black zk zv c d)",11]],"useCount":153},{"word":"you","context":[["a function that *always* returns the same value regardless of what input you give.",18],["v. 2.0. If a copy of the MPL was not distributed with this file, you can",77],["## Thank you!",47],["## Thank you",34],["Failures resemble code written in pipeline style, so you can tell",28],["`Nothing`. This is useful when you are not sure if a key will be in the",20],["maybe you have an optional field that can have a default value when it is",18],["returns 42. When you are dealing with higher-order functions, this comes in",18],["narrow things down so you can be more targeted.",18],["{-| Bring in an arbitrary JSON value. Useful if you need to work with crazily",18]],"useCount":1129},{"word":"your","context":[["# Start your Application",14],["are your tuples so big?",18],["all of your patterns.",14],["in your collage. This means you can move, rotate, and scale",13],["{-| This module helps you start your application in a typical Elm workflow.",11],["`footerStyle` that is specifically for the bottom of your page, you could apply",11],["you can pipe into your app as one of the `inputs`.",11]],"useCount":92},{"word":"ys","context":[["append xs ys = xs ++ ys",13],["c1 = (append xs) ys",14],["c2 = ((++) xs) ys",14],["ys = [4,5,6]",14],["case ys of",18],["in  zipWith max xs ys",14],["a1 = append xs ys",14],["append xs ys = xs ++ ys",13],["a2 = (++) xs ys",13],["b2 = xs ++ ys",13]],"useCount":189},{"word":"yv","context":[["RBNode_elm_builtin col zk zv (RBNode_elm_builtin Red yk yv (RBNode_elm_builtin Red xk xv a b) c) d ->",11],["assemble col xk xv yk yv zk zv a b c d",48],["balancedTree col xk xv yk yv zk zv a b c d",28],["RBNode_elm_builtin col xk xv a (RBNode_elm_builtin Red yk yv b (RBNode_elm_builtin Red zk zv c d)) ->",11],["RBNode_elm_builtin Black yk yv (RBNode_elm_builtin Black xk xv a b) (balance Black zk zv c (redden d))",11],["RBNode_elm_builtin col xk xv a (RBNode_elm_builtin Red zk zv (RBNode_elm_builtin Red yk yv b c) d) ->",11],["RBNode_elm_builtin col zk zv (RBNode_elm_builtin Red xk xv a (RBNode_elm_builtin Red yk yv b c)) d ->",11],["RBNode_elm_builtin Black yk yv (balance Black xk xv (redden a) b) (RBNode_elm_builtin Black zk zv c d)",11],["let assemble col xk xv yk yv zk zv a b c d =",11]],"useCount":153},{"word":"z","context":[["( x, y, z ) =",26],["z' = if z < 1 then z + magicNum8 else z",12],["z' = if z < 1 then z + magicNum8 else z",12],["z' = if z < 1 then z + magicNum8 else z",12],[", normalDirection = Direction3d.z",13],["z",14],["(w + x, y + z)",14],["x + y + z",15],["-- { x:3, y:4 } or { x:3, y:4, z:5 }",18],["(oneOf [ \"z\" := float, succeed 0 ])",18]],"useCount":202},{"word":"zero","context":[["zero =",18],["element (starting at zero).",12],[", margin zero",17],["{-| Truncate a number, rounding towards zero. -}",17],[", padding zero",14],["-- ideally we would use division that rounds towards zero so",13],["int 0 10   -- an integer between zero and ten",12],["zero-based index where we will start our slice. The `end` is a zero-based index",12],["zero-based index where we will start our slice. The `end` is a zero-based index",12],["value of zero.",12]],"useCount":150},{"word":"zk","context":[["let assemble col xk xv yk yv zk zv a b c d =",11],["assemble col xk xv yk yv zk zv a b c d",48],["balancedTree col xk xv yk yv zk zv a b c d",28],["RBNode_elm_builtin col zk zv (RBNode_elm_builtin Red yk yv (RBNode_elm_builtin Red xk xv a b) c) d ->",11],["RBNode_elm_builtin Black yk yv (balance Black xk xv (redden a) b) (RBNode_elm_builtin Black zk zv c d)",11],["RBNode_elm_builtin col xk xv a (RBNode_elm_builtin Red zk zv (RBNode_elm_builtin Red yk yv b c) d) ->",11],["RBNode_elm_builtin col xk xv a (RBNode_elm_builtin Red yk yv b (RBNode_elm_builtin Red zk zv c d)) ->",11],["RBNode_elm_builtin col zk zv (RBNode_elm_builtin Red xk xv a (RBNode_elm_builtin Red yk yv b c)) d ->",11],["RBNode_elm_builtin Black yk yv (RBNode_elm_builtin Black xk xv a b) (balance Black zk zv c (redden d))",11]],"useCount":153},{"word":"zv","context":[["RBNode_elm_builtin col zk zv (RBNode_elm_builtin Red xk xv a (RBNode_elm_builtin Red yk yv b c)) d ->",11],["balancedTree col xk xv yk yv zk zv a b c d",28],["RBNode_elm_builtin col xk xv a (RBNode_elm_builtin Red zk zv (RBNode_elm_builtin Red yk yv b c) d) ->",11],["RBNode_elm_builtin col xk xv a (RBNode_elm_builtin Red yk yv b (RBNode_elm_builtin Red zk zv c d)) ->",11],["let assemble col xk xv yk yv zk zv a b c d =",11],["RBNode_elm_builtin col zk zv (RBNode_elm_builtin Red yk yv (RBNode_elm_builtin Red xk xv a b) c) d ->",11],["RBNode_elm_builtin Black yk yv (RBNode_elm_builtin Black xk xv a b) (balance Black zk zv c (redden d))",11],["RBNode_elm_builtin Black yk yv (balance Black xk xv (redden a) b) (RBNode_elm_builtin Black zk zv c d)",11],["assemble col xk xv yk yv zk zv a b c d",48]],"useCount":153},{"word":"~","context":[["main = scene <~ foldp (+) 0 (fps 50)",12],["~ sampleOn Mouse.clicks Mouse.position",12],["scene <~ Window.dimensions ~ Mouse.position",12],["scene <~ Window.dimensions ~ Mouse.position",12],["infixl 4 ~",20],["(~) : Signal (a -> b) -> Signal a -> Signal b",21],["(<~) : (a -> b) -> Signal a -> Signal b",21],["infixl 4 <~",22],["import Signal exposing ((<~))",25],["import Signal (Signal, (<~))",43]],"useCount":233}]